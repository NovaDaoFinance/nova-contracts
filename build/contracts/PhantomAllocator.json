{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "storageFactoryAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "PhantomStorageMixin__ContractNotFoundByAddressOrIsOutdated",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "contractName",
          "type": "bytes32"
        }
      ],
      "name": "PhantomStorageMixin__ContractNotFoundByNameOrIsOutdated",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "PhantomStorageMixin__UserIsNotGuardian",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "allocateAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "13": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/security/ReentrancyGuard.sol",
    "15": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/IERC20.sol",
    "20": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/utils/SafeERC20.sol",
    "21": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/Address.sol",
    "32": "/Users/admin/.brownie/packages/hifi-finance/prb-math@2.4.1/contracts/PRBMath.sol",
    "34": "/Users/admin/.brownie/packages/hifi-finance/prb-math@2.4.1/contracts/PRBMathUD60x18.sol",
    "49": "contracts/level0/finance/PhantomAllocator.sol",
    "61": "contracts/mixins/PhantomStorageMixin.sol",
    "66": "contracts/storage/PhantomStorageKeys.sol",
    "75": "interfaces/external/ISpiritSwapGauge.sol",
    "76": "interfaces/external/IyVault.sol",
    "88": "interfaces/mixins/IPhantomStorageMixin.sol"
  },
  "ast": {
    "absolutePath": "contracts/level0/finance/PhantomAllocator.sol",
    "exportedSymbols": {
      "IERC20": [
        11160
      ],
      "IPhantomAllocator": [
        13711
      ],
      "IPhantomERC20": [
        11702
      ],
      "IPhantomTreasury": [
        11674
      ],
      "ISpiritSwapGauge": [
        13707
      ],
      "IyVault": [
        11730
      ],
      "PRBMathUD60x18": [
        11082
      ],
      "PhantomAllocator": [
        5945
      ],
      "PhantomStorageMixin": [
        8981
      ],
      "SafeERC20": [
        11384
      ]
    },
    "id": 5946,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5608,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:24:49"
      },
      {
        "absolutePath": "/Users/admin/.brownie/packages/hifi-finance/prb-math@2.4.1/contracts/PRBMathUD60x18.sol",
        "file": "@hifi-finance/prb-math/contracts/PRBMathUD60x18.sol",
        "id": 5610,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5946,
        "sourceUnit": 11083,
        "src": "83:83:49",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5609,
              "name": "PRBMathUD60x18",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "91:14:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 5612,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5946,
        "sourceUnit": 11385,
        "src": "167:82:49",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5611,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "175:9:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 5614,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5946,
        "sourceUnit": 11161,
        "src": "283:70:49",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5613,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "291:6:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/mixins/PhantomStorageMixin.sol",
        "file": "../../mixins/PhantomStorageMixin.sol",
        "id": 5616,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5946,
        "sourceUnit": 8982,
        "src": "378:73:49",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5615,
              "name": "PhantomStorageMixin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "386:19:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/core/erc20/IPhantomERC20.sol",
        "file": "../../../interfaces/core/erc20/IPhantomERC20.sol",
        "id": 5618,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5946,
        "sourceUnit": 11703,
        "src": "486:79:49",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5617,
              "name": "IPhantomERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "494:13:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/core/IPhantomTreasury.sol",
        "file": "../../../interfaces/core/IPhantomTreasury.sol",
        "id": 5620,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5946,
        "sourceUnit": 11675,
        "src": "566:79:49",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5619,
              "name": "IPhantomTreasury",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "574:16:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/level0/finance/IPhantomAllocator.sol",
        "file": "../../../interfaces/level0/finance/IPhantomAllocator.sol",
        "id": 5622,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5946,
        "sourceUnit": 13712,
        "src": "646:91:49",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5621,
              "name": "IPhantomAllocator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "654:17:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/external/ISpiritSwapGauge.sol",
        "file": "../../../interfaces/external/ISpiritSwapGauge.sol",
        "id": 5624,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5946,
        "sourceUnit": 13708,
        "src": "739:83:49",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5623,
              "name": "ISpiritSwapGauge",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "747:16:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/external/IyVault.sol",
        "file": "../../../interfaces/external/IyVault.sol",
        "id": 5626,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5946,
        "sourceUnit": 11731,
        "src": "823:65:49",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5625,
              "name": "IyVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "831:7:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5628,
              "name": "PhantomStorageMixin",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8981,
              "src": "1046:19:49"
            },
            "id": 5629,
            "nodeType": "InheritanceSpecifier",
            "src": "1046:19:49"
          }
        ],
        "canonicalName": "PhantomAllocator",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5627,
          "nodeType": "StructuredDocumentation",
          "src": "890:126:49",
          "text": " @title PhantomAllocator\n @author PhantomDao Team\n @notice The contract responsible for holding all ERC20 assets"
        },
        "fullyImplemented": true,
        "id": 5945,
        "linearizedBaseContracts": [
          5945,
          8981,
          17394,
          17378,
          10472
        ],
        "name": "PhantomAllocator",
        "nameLocation": "1026:16:49",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5632,
            "libraryName": {
              "id": 5630,
              "name": "PRBMathUD60x18",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11082,
              "src": "1078:14:49"
            },
            "nodeType": "UsingForDirective",
            "src": "1072:33:49",
            "typeName": {
              "id": 5631,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1097:7:49",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 5636,
            "libraryName": {
              "id": 5633,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11384,
              "src": "1116:9:49"
            },
            "nodeType": "UsingForDirective",
            "src": "1110:27:49",
            "typeName": {
              "id": 5635,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5634,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11160,
                "src": "1130:6:49"
              },
              "referencedDeclaration": 11160,
              "src": "1130:6:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$11160",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "body": {
              "id": 5645,
              "nodeType": "Block",
              "src": "1229:23:49",
              "statements": [
                {
                  "functionReturnParameters": 5643,
                  "id": 5644,
                  "nodeType": "Return",
                  "src": "1239:7:49"
                }
              ]
            },
            "id": 5646,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5641,
                    "name": "storageFactoryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5638,
                    "src": "1206:21:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5642,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5640,
                  "name": "PhantomStorageMixin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8981,
                  "src": "1186:19:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "1186:42:49"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5638,
                  "mutability": "mutable",
                  "name": "storageFactoryAddress",
                  "nameLocation": "1163:21:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 5646,
                  "src": "1155:29:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5637,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1154:31:49"
            },
            "returnParameters": {
              "id": 5643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1229:0:49"
            },
            "scope": 5945,
            "src": "1143:109:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5805,
              "nodeType": "Block",
              "src": "1293:1539:49",
              "statements": [
                {
                  "assignments": [
                    5650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5650,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "1311:5:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 5805,
                      "src": "1303:13:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5649,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1303:7:49",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5651,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1303:13:49"
                },
                {
                  "assignments": [
                    5653
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5653,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "1334:7:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 5805,
                      "src": "1326:15:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5652,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1326:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5654,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1326:15:49"
                },
                {
                  "assignments": [
                    5656
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5656,
                      "mutability": "mutable",
                      "name": "percentage",
                      "nameLocation": "1359:10:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 5805,
                      "src": "1351:18:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5655,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1351:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5657,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1351:18:49"
                },
                {
                  "assignments": [
                    5659
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5659,
                      "mutability": "mutable",
                      "name": "toSend",
                      "nameLocation": "1387:6:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 5805,
                      "src": "1379:14:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5658,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1379:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5660,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1379:14:49"
                },
                {
                  "assignments": [
                    5663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5663,
                      "mutability": "mutable",
                      "name": "yearnVault",
                      "nameLocation": "1411:10:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 5805,
                      "src": "1403:18:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IyVault_$11730",
                        "typeString": "contract IyVault"
                      },
                      "typeName": {
                        "id": 5662,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5661,
                          "name": "IyVault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11730,
                          "src": "1403:7:49"
                        },
                        "referencedDeclaration": 11730,
                        "src": "1403:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IyVault_$11730",
                          "typeString": "contract IyVault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5664,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1403:18:49"
                },
                {
                  "assignments": [
                    5669
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5669,
                      "mutability": "mutable",
                      "name": "destinations",
                      "nameLocation": "1448:12:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 5805,
                      "src": "1431:29:49",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 5667,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1431:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 5668,
                        "nodeType": "ArrayTypeName",
                        "src": "1431:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5670,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1431:29:49"
                },
                {
                  "assignments": [
                    5675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5675,
                      "mutability": "mutable",
                      "name": "lpTokens",
                      "nameLocation": "1487:8:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 5805,
                      "src": "1470:25:49",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 5673,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1470:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 5674,
                        "nodeType": "ArrayTypeName",
                        "src": "1470:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5678,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5676,
                      "name": "getLPTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5827,
                      "src": "1498:11:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view returns (address[] memory)"
                      }
                    },
                    "id": 5677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1498:13:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1470:41:49"
                },
                {
                  "assignments": [
                    5683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5683,
                      "mutability": "mutable",
                      "name": "singleTokens",
                      "nameLocation": "1538:12:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 5805,
                      "src": "1521:29:49",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 5681,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1521:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 5682,
                        "nodeType": "ArrayTypeName",
                        "src": "1521:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5686,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5684,
                      "name": "getSingleTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5848,
                      "src": "1553:15:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view returns (address[] memory)"
                      }
                    },
                    "id": 5685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1553:17:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1521:49:49"
                },
                {
                  "body": {
                    "id": 5803,
                    "nodeType": "Block",
                    "src": "1630:1196:49",
                    "statements": [
                      {
                        "expression": {
                          "id": 5703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5699,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5650,
                            "src": "1644:5:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 5700,
                              "name": "lpTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5675,
                              "src": "1652:8:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 5702,
                            "indexExpression": {
                              "id": 5701,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5688,
                              "src": "1661:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1652:11:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1644:19:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 5704,
                        "nodeType": "ExpressionStatement",
                        "src": "1644:19:49"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$11160",
                            "typeString": "contract IERC20"
                          },
                          "id": 5713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 5706,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5650,
                                "src": "1688:5:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 5705,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11160,
                              "src": "1681:6:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$11160_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 5707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1681:13:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$11160",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 5709,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5650,
                                    "src": "1717:5:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 5708,
                                  "name": "SpiritSwapGaugeFor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5923,
                                  "src": "1698:18:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_ISpiritSwapGauge_$13707_$",
                                    "typeString": "function (address) view returns (contract ISpiritSwapGauge)"
                                  }
                                },
                                "id": 5710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1698:25:49",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISpiritSwapGauge_$13707",
                                  "typeString": "contract ISpiritSwapGauge"
                                }
                              },
                              "id": 5711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "TOKEN",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13698,
                              "src": "1698:31:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_contract$_IERC20_$11160_$",
                                "typeString": "function () external returns (contract IERC20)"
                              }
                            },
                            "id": 5712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1698:33:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$11160",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "1681:50:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5718,
                        "nodeType": "IfStatement",
                        "src": "1677:67:49",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "46",
                                "id": 5715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1740:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_e61d9a3d3848fb2cdd9a2ab61e2f21a10ea431275aed628a0557f9dee697c37a",
                                  "typeString": "literal_string \"F\""
                                },
                                "value": "F"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_e61d9a3d3848fb2cdd9a2ab61e2f21a10ea431275aed628a0557f9dee697c37a",
                                  "typeString": "literal_string \"F\""
                                }
                              ],
                              "id": 5714,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -19,
                                -19
                              ],
                              "referencedDeclaration": -19,
                              "src": "1733:6:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 5716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1733:11:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 5717,
                          "nodeType": "ExpressionStatement",
                          "src": "1733:11:49"
                        }
                      },
                      {
                        "expression": {
                          "id": 5730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5719,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5653,
                            "src": "1758:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 5726,
                                      "name": "PhantomVault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8698,
                                      "src": "1800:12:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPhantomVault_$11768_$",
                                        "typeString": "function () view returns (contract IPhantomVault)"
                                      }
                                    },
                                    "id": 5727,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1800:14:49",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IPhantomVault_$11768",
                                      "typeString": "contract IPhantomVault"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IPhantomVault_$11768",
                                      "typeString": "contract IPhantomVault"
                                    }
                                  ],
                                  "id": 5725,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1792:7:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 5724,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1792:7:49",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 5728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1792:23:49",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 5721,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5650,
                                    "src": "1775:5:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 5720,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11160,
                                  "src": "1768:6:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$11160_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 5722,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1768:13:49",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$11160",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 5723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11099,
                              "src": "1768:23:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 5729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1768:48:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1758:58:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5731,
                        "nodeType": "ExpressionStatement",
                        "src": "1758:58:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 5737,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1878:4:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PhantomAllocator_$5945",
                                    "typeString": "contract PhantomAllocator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PhantomAllocator_$5945",
                                    "typeString": "contract PhantomAllocator"
                                  }
                                ],
                                "id": 5736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1870:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5735,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1870:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1870:13:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 5739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1901:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 5742,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1928:1:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 5741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1920:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5740,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1920:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1920:10:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5744,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5653,
                              "src": "1948:7:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 5747,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5650,
                                  "src": "1981:5:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5746,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1973:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5745,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1973:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1973:14:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 5749,
                                "name": "standardAccountKeys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8740,
                                "src": "2005:19:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                                  "typeString": "function () view returns (bytes32[] memory)"
                                }
                              },
                              "id": 5750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2005:21:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 5751,
                                "name": "standardAccountPercentages",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8776,
                                "src": "2044:26:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                  "typeString": "function () pure returns (uint256[] memory)"
                                }
                              },
                              "id": 5752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2044:28:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 5732,
                                "name": "PhantomTreasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8584,
                                "src": "1830:15:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPhantomTreasury_$11674_$",
                                  "typeString": "function () view returns (contract IPhantomTreasury)"
                                }
                              },
                              "id": 5733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1830:17:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPhantomTreasury_$11674",
                                "typeString": "contract IPhantomTreasury"
                              }
                            },
                            "id": 5734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11581,
                            "src": "1830:22:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,address,uint256,address,bytes32[] memory,uint256[] memory) external"
                            }
                          },
                          "id": 5753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1830:256:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5754,
                        "nodeType": "ExpressionStatement",
                        "src": "1830:256:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5759,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5653,
                              "src": "2134:7:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5756,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5650,
                                  "src": "2119:5:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5755,
                                "name": "SpiritSwapGaugeFor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5923,
                                "src": "2100:18:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_ISpiritSwapGauge_$13707_$",
                                  "typeString": "function (address) view returns (contract ISpiritSwapGauge)"
                                }
                              },
                              "id": 5757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2100:25:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISpiritSwapGauge_$13707",
                                "typeString": "contract ISpiritSwapGauge"
                              }
                            },
                            "id": 5758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13703,
                            "src": "2100:33:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 5760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2100:42:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5761,
                        "nodeType": "ExpressionStatement",
                        "src": "2100:42:49"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5763,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5650,
                                  "src": "2239:5:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5762,
                                "name": "SpiritSwapGaugeFor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5923,
                                "src": "2220:18:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_ISpiritSwapGauge_$13707_$",
                                  "typeString": "function (address) view returns (contract ISpiritSwapGauge)"
                                }
                              },
                              "id": 5764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2220:25:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISpiritSwapGauge_$13707",
                                "typeString": "contract ISpiritSwapGauge"
                              }
                            },
                            "id": 5765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13706,
                            "src": "2220:37:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 5766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2220:39:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5767,
                        "nodeType": "ExpressionStatement",
                        "src": "2220:39:49"
                      },
                      {
                        "expression": {
                          "id": 5777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5768,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5653,
                            "src": "2485:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 5774,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2529:4:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PhantomAllocator_$5945",
                                      "typeString": "contract PhantomAllocator"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PhantomAllocator_$5945",
                                      "typeString": "contract PhantomAllocator"
                                    }
                                  ],
                                  "id": 5773,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2521:7:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 5772,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2521:7:49",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 5775,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2521:13:49",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 5769,
                                  "name": "inSpiritToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5944,
                                  "src": "2495:13:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$11160_$",
                                    "typeString": "function () view returns (contract IERC20)"
                                  }
                                },
                                "id": 5770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2495:15:49",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$11160",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 5771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11099,
                              "src": "2495:25:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 5776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2495:40:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2485:50:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5778,
                        "nodeType": "ExpressionStatement",
                        "src": "2485:50:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 5784,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2597:4:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PhantomAllocator_$5945",
                                    "typeString": "contract PhantomAllocator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PhantomAllocator_$5945",
                                    "typeString": "contract PhantomAllocator"
                                  }
                                ],
                                "id": 5783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2589:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5782,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2589:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2589:13:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5786,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5653,
                              "src": "2620:7:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 5789,
                                    "name": "inSpiritToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5944,
                                    "src": "2653:13:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$11160_$",
                                      "typeString": "function () view returns (contract IERC20)"
                                    }
                                  },
                                  "id": 5790,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2653:15:49",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$11160",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$11160",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 5788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2645:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5787,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2645:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2645:24:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 5792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2687:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 5795,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2714:1:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 5794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2706:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5793,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2706:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2706:10:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 5797,
                                "name": "standardAccountKeys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8740,
                                "src": "2734:19:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                                  "typeString": "function () view returns (bytes32[] memory)"
                                }
                              },
                              "id": 5798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2734:21:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 5799,
                                "name": "standardAccountPercentages",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8776,
                                "src": "2773:26:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                  "typeString": "function () pure returns (uint256[] memory)"
                                }
                              },
                              "id": 5800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2773:28:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 5779,
                                "name": "PhantomTreasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8584,
                                "src": "2549:15:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPhantomTreasury_$11674_$",
                                  "typeString": "function () view returns (contract IPhantomTreasury)"
                                }
                              },
                              "id": 5780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2549:17:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPhantomTreasury_$11674",
                                "typeString": "contract IPhantomTreasury"
                              }
                            },
                            "id": 5781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11581,
                            "src": "2549:22:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,address,uint256,address,bytes32[] memory,uint256[] memory) external"
                            }
                          },
                          "id": 5801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2549:266:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5802,
                        "nodeType": "ExpressionStatement",
                        "src": "2549:266:49"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5691,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5688,
                      "src": "1601:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 5692,
                        "name": "lpTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5675,
                        "src": "1605:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 5693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1605:15:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1601:19:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5804,
                  "initializationExpression": {
                    "assignments": [
                      5688
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 5688,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1594:1:49",
                        "nodeType": "VariableDeclaration",
                        "scope": 5804,
                        "src": "1586:9:49",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5687,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1586:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 5690,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 5689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1598:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1586:13:49"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 5697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 5695,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5688,
                        "src": "1622:1:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 5696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1627:1:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1622:6:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5698,
                    "nodeType": "ExpressionStatement",
                    "src": "1622:6:49"
                  },
                  "nodeType": "ForStatement",
                  "src": "1581:1245:49"
                }
              ]
            },
            "functionSelector": "402c155b",
            "id": 5806,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allocateAssets",
            "nameLocation": "1267:14:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1281:2:49"
            },
            "returnParameters": {
              "id": 5648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1293:0:49"
            },
            "scope": 5945,
            "src": "1258:1574:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5826,
              "nodeType": "Block",
              "src": "2902:114:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "expression": {
                                      "id": 5818,
                                      "name": "phantom",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10288,
                                      "src": "2979:7:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$__phantom_$10320_storage",
                                        "typeString": "struct PhantomStorageKeys._phantom storage ref"
                                      }
                                    },
                                    "id": 5819,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "allocator",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10304,
                                    "src": "2979:17:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$__allocator_$10332_storage",
                                      "typeString": "struct PhantomStorageKeys._allocator storage ref"
                                    }
                                  },
                                  "id": 5820,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokens",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10331,
                                  "src": "2979:24:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$__tokens_$10344_storage",
                                    "typeString": "struct PhantomStorageKeys._tokens storage ref"
                                  }
                                },
                                "id": 5821,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10341,
                                "src": "2979:27:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              ],
                              "expression": {
                                "id": 5816,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2962:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 5817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2962:16:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 5822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2962:45:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 5815,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2952:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 5823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2952:56:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5812,
                          "name": "PhantomStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8421,
                          "src": "2919:14:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPhantomStorage_$17744_$",
                            "typeString": "function () view returns (contract IPhantomStorage)"
                          }
                        },
                        "id": 5813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2919:16:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPhantomStorage_$17744",
                          "typeString": "contract IPhantomStorage"
                        }
                      },
                      "id": 5814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAddressArray",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17506,
                      "src": "2919:32:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (address[] memory)"
                      }
                    },
                    "id": 5824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2919:90:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 5811,
                  "id": 5825,
                  "nodeType": "Return",
                  "src": "2912:97:49"
                }
              ]
            },
            "id": 5827,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLPTokens",
            "nameLocation": "2847:11:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2858:2:49"
            },
            "returnParameters": {
              "id": 5811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5810,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5827,
                  "src": "2884:16:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5808,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2884:7:49",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5809,
                    "nodeType": "ArrayTypeName",
                    "src": "2884:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2883:18:49"
            },
            "scope": 5945,
            "src": "2838:178:49",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5847,
              "nodeType": "Block",
              "src": "3090:118:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "expression": {
                                      "id": 5839,
                                      "name": "phantom",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10288,
                                      "src": "3167:7:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$__phantom_$10320_storage",
                                        "typeString": "struct PhantomStorageKeys._phantom storage ref"
                                      }
                                    },
                                    "id": 5840,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "allocator",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10304,
                                    "src": "3167:17:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$__allocator_$10332_storage",
                                      "typeString": "struct PhantomStorageKeys._allocator storage ref"
                                    }
                                  },
                                  "id": 5841,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokens",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10331,
                                  "src": "3167:24:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$__tokens_$10344_storage",
                                    "typeString": "struct PhantomStorageKeys._tokens storage ref"
                                  }
                                },
                                "id": 5842,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "single",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10343,
                                "src": "3167:31:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              ],
                              "expression": {
                                "id": 5837,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3150:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 5838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3150:16:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 5843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3150:49:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 5836,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3140:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 5844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3140:60:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5833,
                          "name": "PhantomStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8421,
                          "src": "3107:14:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPhantomStorage_$17744_$",
                            "typeString": "function () view returns (contract IPhantomStorage)"
                          }
                        },
                        "id": 5834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3107:16:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPhantomStorage_$17744",
                          "typeString": "contract IPhantomStorage"
                        }
                      },
                      "id": 5835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAddressArray",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17506,
                      "src": "3107:32:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (address[] memory)"
                      }
                    },
                    "id": 5845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3107:94:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 5832,
                  "id": 5846,
                  "nodeType": "Return",
                  "src": "3100:101:49"
                }
              ]
            },
            "id": 5848,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSingleTokens",
            "nameLocation": "3031:15:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3046:2:49"
            },
            "returnParameters": {
              "id": 5832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5831,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5848,
                  "src": "3072:16:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5829,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3072:7:49",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5830,
                    "nodeType": "ArrayTypeName",
                    "src": "3072:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3071:18:49"
            },
            "scope": 5945,
            "src": "3022:186:49",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5873,
              "nodeType": "Block",
              "src": "3360:185:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "expression": {
                                      "id": 5863,
                                      "name": "phantom",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10288,
                                      "src": "3458:7:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$__phantom_$10320_storage",
                                        "typeString": "struct PhantomStorageKeys._phantom storage ref"
                                      }
                                    },
                                    "id": 5864,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "allocator",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10304,
                                    "src": "3458:17:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$__allocator_$10332_storage",
                                      "typeString": "struct PhantomStorageKeys._allocator storage ref"
                                    }
                                  },
                                  "id": 5865,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokens",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10331,
                                  "src": "3458:24:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$__tokens_$10344_storage",
                                    "typeString": "struct PhantomStorageKeys._tokens storage ref"
                                  }
                                },
                                "id": 5866,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "dest_percentage",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10339,
                                "src": "3458:40:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 5867,
                                "name": "inToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5850,
                                "src": "3500:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 5868,
                                "name": "inDestination",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5852,
                                "src": "3509:13:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 5861,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3441:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 5862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3441:16:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 5869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3441:82:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 5860,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3431:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 5870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3431:93:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5857,
                          "name": "PhantomStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8421,
                          "src": "3389:14:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPhantomStorage_$17744_$",
                            "typeString": "function () view returns (contract IPhantomStorage)"
                          }
                        },
                        "id": 5858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3389:16:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPhantomStorage_$17744",
                          "typeString": "contract IPhantomStorage"
                        }
                      },
                      "id": 5859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17463,
                      "src": "3389:24:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) view external returns (uint256)"
                      }
                    },
                    "id": 5871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3389:149:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5856,
                  "id": 5872,
                  "nodeType": "Return",
                  "src": "3370:168:49"
                }
              ]
            },
            "id": 5874,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPercentageForTokenWithDestination",
            "nameLocation": "3223:36:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5850,
                  "mutability": "mutable",
                  "name": "inToken",
                  "nameLocation": "3268:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 5874,
                  "src": "3260:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3260:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5852,
                  "mutability": "mutable",
                  "name": "inDestination",
                  "nameLocation": "3285:13:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 5874,
                  "src": "3277:21:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3277:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3259:40:49"
            },
            "returnParameters": {
              "id": 5856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5855,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5874,
                  "src": "3347:7:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3347:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3346:9:49"
            },
            "scope": 5945,
            "src": "3214:331:49",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5897,
              "nodeType": "Block",
              "src": "3637:175:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "expression": {
                                      "id": 5888,
                                      "name": "phantom",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10288,
                                      "src": "3743:7:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$__phantom_$10320_storage",
                                        "typeString": "struct PhantomStorageKeys._phantom storage ref"
                                      }
                                    },
                                    "id": 5889,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "allocator",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10304,
                                    "src": "3743:17:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$__allocator_$10332_storage",
                                      "typeString": "struct PhantomStorageKeys._allocator storage ref"
                                    }
                                  },
                                  "id": 5890,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokens",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10331,
                                  "src": "3743:24:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$__tokens_$10344_storage",
                                    "typeString": "struct PhantomStorageKeys._tokens storage ref"
                                  }
                                },
                                "id": 5891,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "destinations",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10337,
                                "src": "3743:37:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 5892,
                                "name": "inToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5876,
                                "src": "3782:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 5886,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3726:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 5887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3726:16:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 5893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3726:64:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 5885,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3716:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 5894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3716:75:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5882,
                          "name": "PhantomStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8421,
                          "src": "3666:14:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPhantomStorage_$17744_$",
                            "typeString": "function () view returns (contract IPhantomStorage)"
                          }
                        },
                        "id": 5883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3666:16:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPhantomStorage_$17744",
                          "typeString": "contract IPhantomStorage"
                        }
                      },
                      "id": 5884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAddressArray",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17506,
                      "src": "3666:32:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (address[] memory)"
                      }
                    },
                    "id": 5895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3666:139:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 5881,
                  "id": 5896,
                  "nodeType": "Return",
                  "src": "3647:158:49"
                }
              ]
            },
            "id": 5898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDestinationsFor",
            "nameLocation": "3560:18:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5876,
                  "mutability": "mutable",
                  "name": "inToken",
                  "nameLocation": "3587:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 5898,
                  "src": "3579:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3579:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3578:17:49"
            },
            "returnParameters": {
              "id": 5881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5880,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5898,
                  "src": "3619:16:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5878,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3619:7:49",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5879,
                    "nodeType": "ArrayTypeName",
                    "src": "3619:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3618:18:49"
            },
            "scope": 5945,
            "src": "3551:261:49",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5922,
              "nodeType": "Block",
              "src": "3904:187:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "id": 5913,
                                        "name": "phantom",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10288,
                                        "src": "4022:7:49",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$__phantom_$10320_storage",
                                          "typeString": "struct PhantomStorageKeys._phantom storage ref"
                                        }
                                      },
                                      "id": 5914,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "routing",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 10316,
                                      "src": "4022:15:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$__routing_$10382_storage",
                                        "typeString": "struct PhantomStorageKeys._routing storage ref"
                                      }
                                    },
                                    "id": 5915,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "spirit_gauge_address",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10379,
                                    "src": "4022:36:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage",
                                      "typeString": "bytes storage ref"
                                    }
                                  },
                                  {
                                    "id": 5916,
                                    "name": "inToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5900,
                                    "src": "4060:7:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_storage",
                                      "typeString": "bytes storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 5911,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "4005:3:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 5912,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "4005:16:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 5917,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4005:63:49",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 5910,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3995:9:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 5918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3995:74:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5907,
                              "name": "PhantomStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8421,
                              "src": "3967:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPhantomStorage_$17744_$",
                                "typeString": "function () view returns (contract IPhantomStorage)"
                              }
                            },
                            "id": 5908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3967:16:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPhantomStorage_$17744",
                              "typeString": "contract IPhantomStorage"
                            }
                          },
                          "id": 5909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17456,
                          "src": "3967:27:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 5919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3967:103:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5906,
                      "name": "ISpiritSwapGauge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13707,
                      "src": "3933:16:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISpiritSwapGauge_$13707_$",
                        "typeString": "type(contract ISpiritSwapGauge)"
                      }
                    },
                    "id": 5920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3933:151:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISpiritSwapGauge_$13707",
                      "typeString": "contract ISpiritSwapGauge"
                    }
                  },
                  "functionReturnParameters": 5905,
                  "id": 5921,
                  "nodeType": "Return",
                  "src": "3914:170:49"
                }
              ]
            },
            "id": 5923,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SpiritSwapGaugeFor",
            "nameLocation": "3827:18:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5900,
                  "mutability": "mutable",
                  "name": "inToken",
                  "nameLocation": "3854:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 5923,
                  "src": "3846:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3846:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3845:17:49"
            },
            "returnParameters": {
              "id": 5905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5904,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5923,
                  "src": "3886:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISpiritSwapGauge_$13707",
                    "typeString": "contract ISpiritSwapGauge"
                  },
                  "typeName": {
                    "id": 5903,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5902,
                      "name": "ISpiritSwapGauge",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13707,
                      "src": "3886:16:49"
                    },
                    "referencedDeclaration": 13707,
                    "src": "3886:16:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISpiritSwapGauge_$13707",
                      "typeString": "contract ISpiritSwapGauge"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3885:18:49"
            },
            "scope": 5945,
            "src": "3818:273:49",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5943,
              "nodeType": "Block",
              "src": "4153:106:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "expression": {
                                      "expression": {
                                        "id": 5934,
                                        "name": "phantom",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10288,
                                        "src": "4208:7:49",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$__phantom_$10320_storage",
                                          "typeString": "struct PhantomStorageKeys._phantom storage ref"
                                        }
                                      },
                                      "id": 5935,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "allocator",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 10304,
                                      "src": "4208:17:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$__allocator_$10332_storage",
                                        "typeString": "struct PhantomStorageKeys._allocator storage ref"
                                      }
                                    },
                                    "id": 5936,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokens",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10331,
                                    "src": "4208:24:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$__tokens_$10344_storage",
                                      "typeString": "struct PhantomStorageKeys._tokens storage ref"
                                    }
                                  },
                                  "id": 5937,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "addresses",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10335,
                                  "src": "4208:34:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$__token_addresses_$10355_storage",
                                    "typeString": "struct PhantomStorageKeys._token_addresses storage ref"
                                  }
                                },
                                "id": 5938,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "spirit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10354,
                                "src": "4208:41:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              ],
                              "id": 5933,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "4198:9:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 5939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4198:52:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5930,
                              "name": "PhantomStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8421,
                              "src": "4170:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPhantomStorage_$17744_$",
                                "typeString": "function () view returns (contract IPhantomStorage)"
                              }
                            },
                            "id": 5931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4170:16:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPhantomStorage_$17744",
                              "typeString": "contract IPhantomStorage"
                            }
                          },
                          "id": 5932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17456,
                          "src": "4170:27:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 5940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4170:81:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5929,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11160,
                      "src": "4163:6:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$11160_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 5941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4163:89:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$11160",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 5942,
                  "nodeType": "ExpressionStatement",
                  "src": "4163:89:49"
                }
              ]
            },
            "id": 5944,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "inSpiritToken",
            "nameLocation": "4106:13:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4119:2:49"
            },
            "returnParameters": {
              "id": 5928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5927,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5944,
                  "src": "4145:6:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$11160",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 5926,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5925,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11160,
                      "src": "4145:6:49"
                    },
                    "referencedDeclaration": 11160,
                    "src": "4145:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$11160",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4144:8:49"
            },
            "scope": 5945,
            "src": "4097:162:49",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 5946,
        "src": "1017:3244:49",
        "usedErrors": [
          17385,
          17389,
          17393
        ]
      }
    ],
    "src": "35:4227:49"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "PhantomAllocator",
  "coverageMap": {
    "branches": {
      "13": {},
      "15": {},
      "20": {},
      "21": {},
      "32": {},
      "34": {},
      "49": {
        "PhantomAllocator.allocateAssets": {
          "21": [
            1681,
            1731,
            false
          ]
        }
      },
      "61": {},
      "66": {},
      "75": {},
      "76": {},
      "88": {}
    },
    "statements": {
      "13": {},
      "15": {},
      "20": {},
      "21": {},
      "32": {},
      "34": {},
      "49": {
        "PhantomAllocator.SpiritSwapGaugeFor": {
          "12": [
            3914,
            4084
          ]
        },
        "PhantomAllocator.allocateAssets": {
          "0": [
            1644,
            1663
          ],
          "1": [
            1733,
            1744
          ],
          "2": [
            1758,
            1816
          ],
          "3": [
            1830,
            2086
          ],
          "4": [
            2100,
            2142
          ],
          "5": [
            2220,
            2259
          ],
          "6": [
            2485,
            2535
          ],
          "7": [
            2549,
            2815
          ],
          "8": [
            1622,
            1628
          ]
        },
        "PhantomAllocator.getLPTokens": {
          "9": [
            2912,
            3009
          ]
        },
        "PhantomAllocator.getSingleTokens": {
          "11": [
            3100,
            3201
          ]
        },
        "PhantomAllocator.inSpiritToken": {
          "20": [
            4163,
            4252
          ]
        }
      },
      "61": {
        "PhantomStorageMixin.PhantomStorage": {
          "10": [
            2169,
            2208
          ]
        },
        "PhantomStorageMixin.PhantomTreasury": {
          "14": [
            4169,
            4260
          ]
        },
        "PhantomStorageMixin.PhantomVault": {
          "13": [
            5256,
            5341
          ]
        },
        "PhantomStorageMixin.standardAccountKeys": {
          "15": [
            5486,
            5545
          ],
          "16": [
            5555,
            5620
          ],
          "17": [
            5630,
            5641
          ]
        },
        "PhantomStorageMixin.standardAccountPercentages": {
          "18": [
            5800,
            5827
          ],
          "19": [
            5849,
            5877
          ]
        }
      },
      "66": {},
      "75": {},
      "76": {},
      "88": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Address",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/IERC20",
    "IPhantomStorageMixin",
    "ISpiritSwapGauge",
    "IyVault",
    "hifi-finance/prb-math@2.4.1/PRBMath",
    "hifi-finance/prb-math@2.4.1/PRBMathUD60x18",
    "PhantomStorageKeys",
    "PhantomStorageMixin",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063402c155b14610030575b600080fd5b61003861003a565b005b60008060008060006060600061004e610416565b9050600061005a6104cd565b905060005b825181101561040b5782818151811061007a5761007a610828565b6020026020010151985061008d89610506565b6001600160a01b03166382bfefc86040518163ffffffff1660e01b81526004016020604051808303816000875af11580156100cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f09190610856565b6001600160a01b0316896001600160a01b0316146101385760405162461bcd60e51b81526020600482015260016024820152602360f91b604482015260640160405180910390fd5b886001600160a01b03166370a0823161014f6105bd565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b7919061087a565b97506101c1610657565b6001600160a01b031663a3971047306000808c8e6101dd61068e565b6101e5610722565b6040518863ffffffff1660e01b815260040161020797969594939291906108ce565b600060405180830381600087803b15801561022157600080fd5b505af1158015610235573d6000803e3d6000fd5b5050505061024289610506565b6001600160a01b031663b6b55f25896040518263ffffffff1660e01b815260040161026f91815260200190565b600060405180830381600087803b15801561028957600080fd5b505af115801561029d573d6000803e3d6000fd5b505050506102aa89610506565b6001600160a01b031663853828b66040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b5050505061030461078b565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801561034a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036e919061087a565b9750610378610657565b6001600160a01b031663a3971047308a61039061078b565b60008061039b61068e565b6103a3610722565b6040518863ffffffff1660e01b81526004016103c597969594939291906108ce565b600060405180830381600087803b1580156103df57600080fd5b505af11580156103f3573d6000803e3d6000fd5b505050506001816104049190610930565b905061005f565b505050505050505050565b606061042a603e546001600160a01b031690565b6040516001600160a01b039190911690635948f7339061044f90601e906020016109f0565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161048391815260200190565b600060405180830381865afa1580156104a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104c89190810190610a22565b905090565b60606104e1603e546001600160a01b031690565b6040516001600160a01b039190911690635948f7339061044f90601f906020016109f0565b600061051a603e546001600160a01b031690565b6001600160a01b03166321f8a7216003602e0160060184604051602001610542929190610ae7565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161057691815260200190565b602060405180830381865afa158015610593573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b79190610856565b92915050565b60006105d1603e546001600160a01b031690565b6001600160a01b03166321f8a7216003600001600a016040516105f491906109f0565b60405190819003812060e083901b6001600160e01b03191682526004820152602401602060405180830381865afa158015610633573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c89190610856565b600061066b603e546001600160a01b031690565b6001600160a01b03166321f8a7216003600001600b016040516105f491906109f0565b6040805160028082526060808301845292600092919060208301908036833750506040519192506106c291601591506109f0565b6040518091039020816000815181106106dd576106dd610828565b60209081029190910101526040516106f7906013906109f0565b60405180910390208160018151811061071257610712610828565b6020908102919091010152919050565b60408051600280825260608083018452926000929190602083019080368337019050509050670c7d713b49da00008160008151811061076357610763610828565b60200260200101818152505067016345785d8a00008160018151811061071257610712610828565b600061079f603e546001600160a01b031690565b6040516001600160a01b0391909116906321f8a721906107c190601b906109f0565b60405190819003812060e083901b6001600160e01b03191682526004820152602401602060405180830381865afa158015610800573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108249190610856565b5090565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461085357600080fd5b50565b60006020828403121561086857600080fd5b81516108738161083e565b9392505050565b60006020828403121561088c57600080fd5b5051919050565b600081518084526020808501945080840160005b838110156108c3578151875295820195908201906001016108a7565b509495945050505050565b6001600160a01b038881168252602082018890528681166040830152606082018690528416608082015260e060a0820181905260009061091090830185610893565b82810360c08401526109228185610893565b9a9950505050505050505050565b6000821982111561095157634e487b7160e01b600052601160045260246000fd5b500190565b8054600090600181811c908083168061097057607f831692505b602080841082141561099257634e487b7160e01b600052602260045260246000fd5b8180156109a657600181146109b7576109e4565b60ff198616895284890196506109e4565b60008881526020902060005b868110156109dc5781548b8201529085019083016109c3565b505084890196505b50505050505092915050565b60006108738284610956565b634e487b7160e01b600052604160045260246000fd5b8051610a1d8161083e565b919050565b60006020808385031215610a3557600080fd5b825167ffffffffffffffff80821115610a4d57600080fd5b818501915085601f830112610a6157600080fd5b815181811115610a7357610a736109fc565b8060051b604051601f19603f83011681018181108582111715610a9857610a986109fc565b604052918252848201925083810185019188831115610ab657600080fd5b938501935b82851015610adb57610acc85610a12565b84529385019392850192610abb565b98975050505050505050565b6000610af38285610956565b60609390931b6bffffffffffffffffffffffff19168352505060140191905056fea264697066735822122023cdce47af76fb2230d4d40ca8fd06a27972b0607810b63c3a46b363eead522064736f6c634300080a0033",
  "deployedSourceMap": "1017:3244:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1258:1574;;;:::i;:::-;;;1303:13;1326:15;1351:18;1379:14;1403:18;1431:29;1470:25;1498:13;:11;:13::i;:::-;1470:41;;1521:29;1553:17;:15;:17::i;:::-;1521:49;;1586:9;1581:1245;1605:8;:15;1601:1;:19;1581:1245;;;1652:8;1661:1;1652:11;;;;;;;;:::i;:::-;;;;;;;1644:19;;1698:25;1717:5;1698:18;:25::i;:::-;-1:-1:-1;;;;;1698:31:49;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1681:50:49;1688:5;-1:-1:-1;;;;;1681:50:49;;1677:67;;1733:11;;-1:-1:-1;;;1733:11:49;;772:2:91;1733:11:49;;;754:21:91;811:1;791:18;;;784:29;-1:-1:-1;;;829:18:91;;;822:31;870:18;;1733:11:49;;;;;;;1677:67;1775:5;-1:-1:-1;;;;;1768:23:49;;1800:14;:12;:14::i;:::-;1768:48;;-1:-1:-1;;;;;;1768:48:49;;;;;;;-1:-1:-1;;;;;1063:32:91;;;1768:48:49;;;1045:51:91;1018:18;;1768:48:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1758:58;;1830:17;:15;:17::i;:::-;-1:-1:-1;;;;;1830:22:49;;1878:4;1901:1;1928;1948:7;1981:5;2005:21;:19;:21::i;:::-;2044:28;:26;:28::i;:::-;1830:256;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2100:25;2119:5;2100:18;:25::i;:::-;-1:-1:-1;;;;;2100:33:49;;2134:7;2100:42;;;;;;;;;;;;;3225:25:91;;3213:2;3198:18;;3079:177;2100:42:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2220:25;2239:5;2220:18;:25::i;:::-;-1:-1:-1;;;;;2220:37:49;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:15;:13;:15::i;:::-;:40;;-1:-1:-1;;;2495:40:49;;2529:4;2495:40;;;1045:51:91;-1:-1:-1;;;;;2495:25:49;;;;;;;1018:18:91;;2495:40:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2485:50;;2549:17;:15;:17::i;:::-;-1:-1:-1;;;;;2549:22:49;;2597:4;2620:7;2653:15;:13;:15::i;:::-;2687:1;2714;2734:21;:19;:21::i;:::-;2773:28;:26;:28::i;:::-;2549:266;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1627:1;1622:6;;;;;:::i;:::-;;;1581:1245;;;;1293:1539;;;;;;;;1258:1574::o;2838:178::-;2884:16;2919;2192:15:61;;-1:-1:-1;;;;;2192:15:61;;2093:122;2919:16:49;2962:45;;-1:-1:-1;;;;;2919:32:49;;;;;;;2962:45;;2979:27;;2962:45;;;:::i;:::-;;;;;;;;;;;;;2952:56;;;;;;2919:90;;;;;;;;;;;;;3225:25:91;;3213:2;3198:18;;3079:177;2919:90:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2919:90:49;;;;;;;;;;;;:::i;:::-;2912:97;;2838:178;:::o;3022:186::-;3072:16;3107;2192:15:61;;-1:-1:-1;;;;;2192:15:61;;2093:122;3107:16:49;3150:49;;-1:-1:-1;;;;;3107:32:49;;;;;;;3150:49;;3167:31;;3150:49;;;:::i;3818:273::-;3886:16;3967;2192:15:61;;-1:-1:-1;;;;;2192:15:61;;2093:122;3967:16:49;-1:-1:-1;;;;;3967:27:49;;4022:7;:15;;:36;;4060:7;4005:63;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3995:74;;;;;;3967:103;;;;;;;;;;;;;3225:25:91;;3213:2;3198:18;;3079:177;3967:103:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3914:170;3818:273;-1:-1:-1;;3818:273:49:o;5184:164:61:-;5231:13;5277:16;2192:15;;-1:-1:-1;;;;;2192:15:61;;2093:122;5277:16;-1:-1:-1;;;;;5277:27:61;;5315:7;:17;;:23;;5305:34;;;;;;:::i;:::-;;;;;;;;;5277:63;;;;-1:-1:-1;;;;;;5277:63:61;;;;;;3225:25:91;3198:18;;5277:63:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4091:176::-;4141:16;4193;2192:15;;-1:-1:-1;;;;;2192:15:61;;2093:122;4193:16;-1:-1:-1;;;;;4193:27:61;;4231:7;:17;;:26;;4221:37;;;;;;:::i;5354:294::-;5460:16;;;5474:1;5460:16;;;5408;5460;;;;;5408;5436:21;;5460:16;5474:1;5460:16;;;;;;;;-1:-1:-1;;5496:49:61;;5436:40;;-1:-1:-1;5496:49:61;;5506:38;;-1:-1:-1;5496:49:61;:::i;:::-;;;;;;;;5486:4;5491:1;5486:7;;;;;;;;:::i;:::-;;;;;;;;;;:59;5565:55;;;;5575:29;;5565:55;:::i;:::-;;;;;;;;5555:4;5560:1;5555:7;;;;;;;;:::i;:::-;;;;;;;;;;:65;5637:4;5354:294;-1:-1:-1;5354:294:61:o;5654:276::-;5774:16;;;5788:1;5774:16;;;5715;5774;;;;;5715;5743:28;;5774:16;5788:1;5774:16;;;;;;;;;;-1:-1:-1;5774:16:61;5743:47;;5819:6;5800:11;5812:1;5800:14;;;;;;;;:::i;:::-;;;;;;:27;;;;;5868:7;5849:11;5861:1;5849:14;;;;;;;;:::i;4097:162:49:-;4145:6;4170:16;2192:15:61;;-1:-1:-1;;;;;2192:15:61;;2093:122;4170:16:49;4198:52;;-1:-1:-1;;;;;4170:27:49;;;;;;;4198:52;;4208:41;;4198:52;:::i;:::-;;;;;;;;;4170:81;;;;-1:-1:-1;;;;;;4170:81:49;;;;;;3225:25:91;3198:18;;4170:81:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4163:89;4097:162;:::o;14:127:91:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:139;-1:-1:-1;;;;;229:31:91;;219:42;;209:70;;275:1;272;265:12;209:70;146:139;:::o;290:275::-;376:6;429:2;417:9;408:7;404:23;400:32;397:52;;;445:1;442;435:12;397:52;477:9;471:16;496:39;529:5;496:39;:::i;:::-;554:5;290:275;-1:-1:-1;;;290:275:91:o;1107:184::-;1177:6;1230:2;1218:9;1209:7;1205:23;1201:32;1198:52;;;1246:1;1243;1236:12;1198:52;-1:-1:-1;1269:16:91;;1107:184;-1:-1:-1;1107:184:91:o;1296:435::-;1349:3;1387:5;1381:12;1414:6;1409:3;1402:19;1440:4;1469:2;1464:3;1460:12;1453:19;;1506:2;1499:5;1495:14;1527:1;1537:169;1551:6;1548:1;1545:13;1537:169;;;1612:13;;1600:26;;1646:12;;;;1681:15;;;;1573:1;1566:9;1537:169;;;-1:-1:-1;1722:3:91;;1296:435;-1:-1:-1;;;;;1296:435:91:o;2176:898::-;-1:-1:-1;;;;;2619:15:91;;;2601:34;;2666:2;2651:18;;2644:34;;;2714:15;;;2709:2;2694:18;;2687:43;2761:2;2746:18;;2739:34;;;2810:15;;2804:3;2789:19;;2782:44;2863:3;2581;2842:19;;2835:32;;;2544:4;;2890:57;;2927:19;;2919:6;2890:57;:::i;:::-;2996:9;2988:6;2984:22;2978:3;2967:9;2963:19;2956:51;3024:44;3061:6;3053;3024:44;:::i;:::-;3016:52;2176:898;-1:-1:-1;;;;;;;;;;2176:898:91:o;4164:225::-;4204:3;4235:1;4231:6;4228:1;4225:13;4222:136;;;4280:10;4275:3;4271:20;4268:1;4261:31;4315:4;4312:1;4305:15;4343:4;4340:1;4333:15;4222:136;-1:-1:-1;4374:9:91;;4164:225::o;4519:971::-;4603:12;;4568:3;;4658:1;4678:18;;;;4731;;;;4758:61;;4812:4;4804:6;4800:17;4790:27;;4758:61;4838:2;4886;4878:6;4875:14;4855:18;4852:38;4849:161;;;4932:10;4927:3;4923:20;4920:1;4913:31;4967:4;4964:1;4957:15;4995:4;4992:1;4985:15;4849:161;5026:18;5053:104;;;;5171:1;5166:318;;;;5019:465;;5053:104;-1:-1:-1;;5086:24:91;;5074:37;;5131:16;;;;-1:-1:-1;5053:104:91;;5166:318;4466:1;4459:14;;;4503:4;4490:18;;5259:1;5273:165;5287:6;5284:1;5281:13;5273:165;;;5365:14;;5352:11;;;5345:35;5408:16;;;;5302:10;;5273:165;;;5277:3;;5467:6;5462:3;5458:16;5451:23;;5019:465;;;;;;;4519:971;;;;:::o;5495:194::-;5621:3;5646:37;5679:3;5671:6;5646:37;:::i;5876:127::-;5937:10;5932:3;5928:20;5925:1;5918:31;5968:4;5965:1;5958:15;5992:4;5989:1;5982:15;6008:146;6087:13;;6109:39;6087:13;6109:39;:::i;:::-;6008:146;;;:::o;6159:1129::-;6254:6;6285:2;6328;6316:9;6307:7;6303:23;6299:32;6296:52;;;6344:1;6341;6334:12;6296:52;6377:9;6371:16;6406:18;6447:2;6439:6;6436:14;6433:34;;;6463:1;6460;6453:12;6433:34;6501:6;6490:9;6486:22;6476:32;;6546:7;6539:4;6535:2;6531:13;6527:27;6517:55;;6568:1;6565;6558:12;6517:55;6597:2;6591:9;6619:2;6615;6612:10;6609:36;;;6625:18;;:::i;:::-;6671:2;6668:1;6664:10;6703:2;6697:9;6766:2;6762:7;6757:2;6753;6749:11;6745:25;6737:6;6733:38;6821:6;6809:10;6806:22;6801:2;6789:10;6786:18;6783:46;6780:72;;;6832:18;;:::i;:::-;6868:2;6861:22;6918:18;;;6952:15;;;;-1:-1:-1;6994:11:91;;;6990:20;;;7022:19;;;7019:39;;;7054:1;7051;7044:12;7019:39;7078:11;;;;7098:159;7114:6;7109:3;7106:15;7098:159;;;7180:34;7210:3;7180:34;:::i;:::-;7168:47;;7131:12;;;;7235;;;;7098:159;;;7276:6;6159:1129;-1:-1:-1;;;;;;;;6159:1129:91:o;7293:335::-;7447:3;7478:37;7511:3;7503:6;7478:37;:::i;:::-;7546:2;7542:15;;;;-1:-1:-1;;7538:53:91;7524:68;;-1:-1:-1;;7619:2:91;7608:14;;7293:335;-1:-1:-1;7293:335:91:o",
  "language": "Solidity",
  "natspec": {
    "author": "PhantomDao Team",
    "kind": "dev",
    "methods": {},
    "notice": "The contract responsible for holding all ERC20 assets",
    "title": "PhantomAllocator",
    "version": 1
  },
  "offset": [
    1017,
    4261
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x402C155B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x4E PUSH2 0x416 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5A PUSH2 0x4CD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x40B JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7A JUMPI PUSH2 0x7A PUSH2 0x828 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP9 POP PUSH2 0x8D DUP10 PUSH2 0x506 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x82BFEFC8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x856 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x138 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0xF9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 PUSH2 0x14F PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x193 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x87A JUMP JUMPDEST SWAP8 POP PUSH2 0x1C1 PUSH2 0x657 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA3971047 ADDRESS PUSH1 0x0 DUP1 DUP13 DUP15 PUSH2 0x1DD PUSH2 0x68E JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x207 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x235 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x242 DUP10 PUSH2 0x506 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB6B55F25 DUP10 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2AA DUP10 PUSH2 0x506 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x853828B6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x304 PUSH2 0x78B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x87A JUMP JUMPDEST SWAP8 POP PUSH2 0x378 PUSH2 0x657 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA3971047 ADDRESS DUP11 PUSH2 0x390 PUSH2 0x78B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x39B PUSH2 0x68E JUMP JUMPDEST PUSH2 0x3A3 PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C5 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP2 PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x930 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x42A PUSH1 0x3E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x5948F733 SWAP1 PUSH2 0x44F SWAP1 PUSH1 0x1E SWAP1 PUSH1 0x20 ADD PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x4C8 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xA22 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E1 PUSH1 0x3E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x5948F733 SWAP1 PUSH2 0x44F SWAP1 PUSH1 0x1F SWAP1 PUSH1 0x20 ADD PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51A PUSH1 0x3E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x21F8A721 PUSH1 0x3 PUSH1 0x2E ADD PUSH1 0x6 ADD DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x542 SWAP3 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x593 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x856 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D1 PUSH1 0x3E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x21F8A721 PUSH1 0x3 PUSH1 0x0 ADD PUSH1 0xA ADD PUSH1 0x40 MLOAD PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH1 0xE0 DUP4 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x633 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x856 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66B PUSH1 0x3E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x21F8A721 PUSH1 0x3 PUSH1 0x0 ADD PUSH1 0xB ADD PUSH1 0x40 MLOAD PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH2 0x6C2 SWAP2 PUSH1 0x15 SWAP2 POP PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x6DD JUMPI PUSH2 0x6DD PUSH2 0x828 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x6F7 SWAP1 PUSH1 0x13 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x712 JUMPI PUSH2 0x712 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH8 0xC7D713B49DA0000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x763 JUMPI PUSH2 0x763 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH8 0x16345785D8A0000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x712 JUMPI PUSH2 0x712 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79F PUSH1 0x3E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH2 0x7C1 SWAP1 PUSH1 0x1B SWAP1 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH1 0xE0 DUP4 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x800 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x824 SWAP2 SWAP1 PUSH2 0x856 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x873 DUP2 PUSH2 0x83E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x88C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8C3 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x8A7 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP9 SWAP1 MSTORE DUP7 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x910 SWAP1 DUP4 ADD DUP6 PUSH2 0x893 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x922 DUP2 DUP6 PUSH2 0x893 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x951 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x970 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x992 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x9A6 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x9B7 JUMPI PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x9DC JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x9C3 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x873 DUP3 DUP5 PUSH2 0x956 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH2 0xA1D DUP2 PUSH2 0x83E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xA73 JUMPI PUSH2 0xA73 PUSH2 0x9FC JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xA98 JUMPI PUSH2 0xA98 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0xAB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xADB JUMPI PUSH2 0xACC DUP6 PUSH2 0xA12 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xABB JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF3 DUP3 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP4 MSTORE POP POP PUSH1 0x14 ADD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0xCD 0xCE SELFBALANCE 0xAF PUSH23 0xFB2230D4D40CA8FD06A27972B0607810B63C3A46B363EE 0xAD MSTORE KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1017,
        4261
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "5": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "CALLVALUE",
      "path": "49"
    },
    "6": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "DUP1",
      "path": "49"
    },
    "7": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "8": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "12": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "DUP1",
      "path": "49"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "REVERT",
      "path": "49"
    },
    "16": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "17": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "POP",
      "path": "49"
    },
    "18": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "CALLDATASIZE",
      "path": "49"
    },
    "21": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "LT",
      "path": "49"
    },
    "22": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x2B"
    },
    "25": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "26": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "CALLDATALOAD",
      "path": "49"
    },
    "29": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "SHR",
      "path": "49"
    },
    "32": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "DUP1",
      "path": "49"
    },
    "33": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x402C155B"
    },
    "38": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "EQ",
      "path": "49"
    },
    "39": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x30"
    },
    "42": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "43": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "44": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "46": {
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "DUP1",
      "path": "49"
    },
    "47": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1017,
        4261
      ],
      "op": "REVERT",
      "path": "49"
    },
    "48": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1258,
        2832
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "49": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1258,
        2832
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x38"
    },
    "52": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1258,
        2832
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x3A"
    },
    "55": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        1258,
        2832
      ],
      "op": "JUMP",
      "path": "49"
    },
    "56": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1258,
        2832
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "57": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1258,
        2832
      ],
      "op": "STOP",
      "path": "49"
    },
    "58": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1258,
        2832
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "59": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1303,
        1316
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "61": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1326,
        1341
      ],
      "op": "DUP1",
      "path": "49"
    },
    "62": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1351,
        1369
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "64": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1379,
        1393
      ],
      "op": "DUP1",
      "path": "49"
    },
    "65": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1403,
        1421
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "67": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1431,
        1460
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x60"
    },
    "69": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1470,
        1495
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "71": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1498,
        1511
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x4E"
    },
    "74": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1498,
        1509
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x416"
    },
    "77": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        1498,
        1511
      ],
      "op": "JUMP",
      "path": "49"
    },
    "78": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1498,
        1511
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "79": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1470,
        1511
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "80": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1470,
        1511
      ],
      "op": "POP",
      "path": "49"
    },
    "81": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1521,
        1550
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "83": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1553,
        1570
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x5A"
    },
    "86": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1553,
        1568
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x4CD"
    },
    "89": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        1553,
        1570
      ],
      "op": "JUMP",
      "path": "49"
    },
    "90": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1553,
        1570
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "91": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1521,
        1570
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "92": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1521,
        1570
      ],
      "op": "POP",
      "path": "49"
    },
    "93": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1586,
        1595
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "95": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1581,
        2826
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "96": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1605,
        1613
      ],
      "op": "DUP3",
      "path": "49"
    },
    "97": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1605,
        1620
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "98": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1601,
        1602
      ],
      "op": "DUP2",
      "path": "49"
    },
    "99": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1601,
        1620
      ],
      "op": "LT",
      "path": "49"
    },
    "100": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1581,
        2826
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "101": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1581,
        2826
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x40B"
    },
    "104": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1581,
        2826
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "105": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1652,
        1660
      ],
      "op": "DUP3",
      "path": "49",
      "statement": 0
    },
    "106": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1661,
        1662
      ],
      "op": "DUP2",
      "path": "49"
    },
    "107": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1652,
        1663
      ],
      "op": "DUP2",
      "path": "49"
    },
    "108": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1652,
        1663
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "109": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1652,
        1663
      ],
      "op": "DUP2",
      "path": "49"
    },
    "110": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1652,
        1663
      ],
      "op": "LT",
      "path": "49"
    },
    "111": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1652,
        1663
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x7A"
    },
    "114": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1652,
        1663
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "115": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1652,
        1663
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x7A"
    },
    "118": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1652,
        1663
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x828"
    },
    "121": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        1652,
        1663
      ],
      "op": "JUMP",
      "path": "49"
    },
    "122": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1652,
        1663
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "123": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1652,
        1663
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "125": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1652,
        1663
      ],
      "op": "MUL",
      "path": "49"
    },
    "126": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1652,
        1663
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "128": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1652,
        1663
      ],
      "op": "ADD",
      "path": "49"
    },
    "129": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1652,
        1663
      ],
      "op": "ADD",
      "path": "49"
    },
    "130": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1652,
        1663
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "131": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1644,
        1663
      ],
      "op": "SWAP9",
      "path": "49"
    },
    "132": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1644,
        1663
      ],
      "op": "POP",
      "path": "49"
    },
    "133": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1723
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x8D"
    },
    "136": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1717,
        1722
      ],
      "op": "DUP10",
      "path": "49"
    },
    "137": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1716
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x506"
    },
    "140": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        1698,
        1723
      ],
      "op": "JUMP",
      "path": "49"
    },
    "141": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1723
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "148": {
      "op": "SHL"
    },
    "149": {
      "op": "SUB"
    },
    "150": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1729
      ],
      "op": "AND",
      "path": "49"
    },
    "151": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1729
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x82BFEFC8"
    },
    "156": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "158": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "159": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "DUP2",
      "path": "49"
    },
    "160": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xFFFFFFFF"
    },
    "165": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "AND",
      "path": "49"
    },
    "166": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "168": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "SHL",
      "path": "49"
    },
    "169": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "DUP2",
      "path": "49"
    },
    "170": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "171": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "173": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "ADD",
      "path": "49"
    },
    "174": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "176": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "178": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "179": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "DUP1",
      "path": "49"
    },
    "180": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "DUP4",
      "path": "49"
    },
    "181": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "SUB",
      "path": "49"
    },
    "182": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "DUP2",
      "path": "49"
    },
    "183": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "185": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "DUP8",
      "path": "49"
    },
    "186": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "GAS",
      "path": "49"
    },
    "187": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "CALL",
      "path": "49"
    },
    "188": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "189": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "DUP1",
      "path": "49"
    },
    "190": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "191": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xCC"
    },
    "194": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "195": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "196": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "198": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "DUP1",
      "path": "49"
    },
    "199": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "200": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "201": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "203": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "REVERT",
      "path": "49"
    },
    "204": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "205": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "POP",
      "path": "49"
    },
    "206": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "POP",
      "path": "49"
    },
    "207": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "POP",
      "path": "49"
    },
    "208": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "POP",
      "path": "49"
    },
    "209": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "211": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "212": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "213": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "215": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "NOT",
      "path": "49"
    },
    "216": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "218": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "DUP3",
      "path": "49"
    },
    "219": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "ADD",
      "path": "49"
    },
    "220": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "AND",
      "path": "49"
    },
    "221": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "DUP3",
      "path": "49"
    },
    "222": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "ADD",
      "path": "49"
    },
    "223": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "DUP1",
      "path": "49"
    },
    "224": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "226": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "227": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "POP",
      "path": "49"
    },
    "228": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "DUP2",
      "path": "49"
    },
    "229": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "ADD",
      "path": "49"
    },
    "230": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "231": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xF0"
    },
    "234": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "235": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "236": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x856"
    },
    "239": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        1698,
        1731
      ],
      "op": "JUMP",
      "path": "49"
    },
    "240": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1698,
        1731
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "247": {
      "op": "SHL"
    },
    "248": {
      "op": "SUB"
    },
    "249": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1681,
        1731
      ],
      "op": "AND",
      "path": "49"
    },
    "250": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1688,
        1693
      ],
      "op": "DUP10",
      "path": "49"
    },
    "251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "257": {
      "op": "SHL"
    },
    "258": {
      "op": "SUB"
    },
    "259": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1681,
        1731
      ],
      "op": "AND",
      "path": "49"
    },
    "260": {
      "branch": 21,
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1681,
        1731
      ],
      "op": "EQ",
      "path": "49"
    },
    "261": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1677,
        1744
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x138"
    },
    "264": {
      "branch": 21,
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1677,
        1744
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "265": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1733,
        1744
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 1,
      "value": "0x40"
    },
    "267": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1733,
        1744
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "268": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "272": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "274": {
      "op": "SHL"
    },
    "275": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1733,
        1744
      ],
      "op": "DUP2",
      "path": "49"
    },
    "276": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1733,
        1744
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "279": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1733,
        1744
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "281": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1733,
        1744
      ],
      "op": "DUP3",
      "path": "49"
    },
    "282": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1733,
        1744
      ],
      "op": "ADD",
      "path": "49"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "288": {
      "op": "DUP3"
    },
    "289": {
      "op": "ADD"
    },
    "290": {
      "op": "MSTORE"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "293": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "295": {
      "op": "SHL"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "298": {
      "op": "DUP3"
    },
    "299": {
      "op": "ADD"
    },
    "300": {
      "op": "MSTORE"
    },
    "301": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "303": {
      "op": "ADD"
    },
    "304": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1733,
        1744
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "306": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1733,
        1744
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "307": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1733,
        1744
      ],
      "op": "DUP1",
      "path": "49"
    },
    "308": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1733,
        1744
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "309": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1733,
        1744
      ],
      "op": "SUB",
      "path": "49"
    },
    "310": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1733,
        1744
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "311": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1733,
        1744
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "49"
    },
    "312": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1677,
        1744
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "313": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1775,
        1780
      ],
      "op": "DUP9",
      "path": "49",
      "statement": 2
    },
    "314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "320": {
      "op": "SHL"
    },
    "321": {
      "op": "SUB"
    },
    "322": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1791
      ],
      "op": "AND",
      "path": "49"
    },
    "323": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1791
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x70A08231"
    },
    "328": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1800,
        1814
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x14F"
    },
    "331": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1800,
        1812
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x5BD"
    },
    "334": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        1800,
        1814
      ],
      "op": "JUMP",
      "path": "49"
    },
    "335": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1800,
        1814
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "336": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "338": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "343": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "345": {
      "op": "SHL"
    },
    "346": {
      "op": "SUB"
    },
    "347": {
      "op": "NOT"
    },
    "348": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "350": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "DUP5",
      "path": "49"
    },
    "351": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "352": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "SHL",
      "path": "49"
    },
    "353": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "AND",
      "path": "49"
    },
    "354": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "DUP2",
      "path": "49"
    },
    "355": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "362": {
      "op": "SHL"
    },
    "363": {
      "op": "SUB"
    },
    "364": {
      "op": "SWAP1"
    },
    "365": {
      "op": "SWAP2"
    },
    "366": {
      "op": "AND"
    },
    "367": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "369": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "DUP3",
      "path": "49"
    },
    "370": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "ADD",
      "path": "49"
    },
    "371": {
      "op": "MSTORE"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "374": {
      "op": "ADD"
    },
    "375": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "377": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "379": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "380": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "DUP1",
      "path": "49"
    },
    "381": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "DUP4",
      "path": "49"
    },
    "382": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "SUB",
      "path": "49"
    },
    "383": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "DUP2",
      "path": "49"
    },
    "384": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "DUP7",
      "path": "49"
    },
    "385": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "GAS",
      "path": "49"
    },
    "386": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "STATICCALL",
      "path": "49"
    },
    "387": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "388": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "DUP1",
      "path": "49"
    },
    "389": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "390": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x193"
    },
    "393": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "394": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "395": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "397": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "DUP1",
      "path": "49"
    },
    "398": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "399": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "400": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "402": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "REVERT",
      "path": "49"
    },
    "403": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "404": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "POP",
      "path": "49"
    },
    "405": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "POP",
      "path": "49"
    },
    "406": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "POP",
      "path": "49"
    },
    "407": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "POP",
      "path": "49"
    },
    "408": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "410": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "411": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "412": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "414": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "NOT",
      "path": "49"
    },
    "415": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "417": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "DUP3",
      "path": "49"
    },
    "418": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "ADD",
      "path": "49"
    },
    "419": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "AND",
      "path": "49"
    },
    "420": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "DUP3",
      "path": "49"
    },
    "421": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "ADD",
      "path": "49"
    },
    "422": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "DUP1",
      "path": "49"
    },
    "423": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "425": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "426": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "POP",
      "path": "49"
    },
    "427": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "DUP2",
      "path": "49"
    },
    "428": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "ADD",
      "path": "49"
    },
    "429": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "430": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x1B7"
    },
    "433": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "434": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "435": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x87A"
    },
    "438": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        1768,
        1816
      ],
      "op": "JUMP",
      "path": "49"
    },
    "439": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1768,
        1816
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "440": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1758,
        1816
      ],
      "op": "SWAP8",
      "path": "49"
    },
    "441": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1758,
        1816
      ],
      "op": "POP",
      "path": "49"
    },
    "442": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        1847
      ],
      "op": "PUSH2",
      "path": "49",
      "statement": 3,
      "value": "0x1C1"
    },
    "445": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        1845
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x657"
    },
    "448": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        1830,
        1847
      ],
      "op": "JUMP",
      "path": "49"
    },
    "449": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        1847
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "456": {
      "op": "SHL"
    },
    "457": {
      "op": "SUB"
    },
    "458": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        1852
      ],
      "op": "AND",
      "path": "49"
    },
    "459": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        1852
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xA3971047"
    },
    "464": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1878,
        1882
      ],
      "op": "ADDRESS",
      "path": "49"
    },
    "465": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1901,
        1902
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "467": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1928,
        1929
      ],
      "op": "DUP1",
      "path": "49"
    },
    "468": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1948,
        1955
      ],
      "op": "DUP13",
      "path": "49"
    },
    "469": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1981,
        1986
      ],
      "op": "DUP15",
      "path": "49"
    },
    "470": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2005,
        2026
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x1DD"
    },
    "473": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2005,
        2024
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x68E"
    },
    "476": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        2005,
        2026
      ],
      "op": "JUMP",
      "path": "49"
    },
    "477": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2005,
        2026
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "478": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2044,
        2072
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x1E5"
    },
    "481": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2044,
        2070
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x722"
    },
    "484": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        2044,
        2072
      ],
      "op": "JUMP",
      "path": "49"
    },
    "485": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2044,
        2072
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "486": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "488": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "489": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "DUP9",
      "path": "49"
    },
    "490": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xFFFFFFFF"
    },
    "495": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "AND",
      "path": "49"
    },
    "496": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "498": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "SHL",
      "path": "49"
    },
    "499": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "DUP2",
      "path": "49"
    },
    "500": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "501": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "503": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "ADD",
      "path": "49"
    },
    "504": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x207"
    },
    "507": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "SWAP8",
      "path": "49"
    },
    "508": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "SWAP7",
      "path": "49"
    },
    "509": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "SWAP6",
      "path": "49"
    },
    "510": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "SWAP5",
      "path": "49"
    },
    "511": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "SWAP4",
      "path": "49"
    },
    "512": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "513": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "514": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "515": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x8CE"
    },
    "518": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        1830,
        2086
      ],
      "op": "JUMP",
      "path": "49"
    },
    "519": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "520": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "522": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "524": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "525": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "DUP1",
      "path": "49"
    },
    "526": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "DUP4",
      "path": "49"
    },
    "527": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "SUB",
      "path": "49"
    },
    "528": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "DUP2",
      "path": "49"
    },
    "529": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "531": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "DUP8",
      "path": "49"
    },
    "532": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "DUP1",
      "path": "49"
    },
    "533": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "EXTCODESIZE",
      "path": "49"
    },
    "534": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "535": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "DUP1",
      "path": "49"
    },
    "536": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "537": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x221"
    },
    "540": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "541": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "543": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "DUP1",
      "path": "49"
    },
    "544": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "REVERT",
      "path": "49"
    },
    "545": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "546": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "POP",
      "path": "49"
    },
    "547": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "GAS",
      "path": "49"
    },
    "548": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "CALL",
      "path": "49"
    },
    "549": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "550": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "DUP1",
      "path": "49"
    },
    "551": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "552": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x235"
    },
    "555": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "556": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "557": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "559": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "DUP1",
      "path": "49"
    },
    "560": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "561": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "562": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "564": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "REVERT",
      "path": "49"
    },
    "565": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "566": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "POP",
      "path": "49"
    },
    "567": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "POP",
      "path": "49"
    },
    "568": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "POP",
      "path": "49"
    },
    "569": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1830,
        2086
      ],
      "op": "POP",
      "path": "49"
    },
    "570": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2125
      ],
      "op": "PUSH2",
      "path": "49",
      "statement": 4,
      "value": "0x242"
    },
    "573": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2119,
        2124
      ],
      "op": "DUP10",
      "path": "49"
    },
    "574": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2118
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x506"
    },
    "577": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        2100,
        2125
      ],
      "op": "JUMP",
      "path": "49"
    },
    "578": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2125
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "585": {
      "op": "SHL"
    },
    "586": {
      "op": "SUB"
    },
    "587": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2133
      ],
      "op": "AND",
      "path": "49"
    },
    "588": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2133
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xB6B55F25"
    },
    "593": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2134,
        2141
      ],
      "op": "DUP10",
      "path": "49"
    },
    "594": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "596": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "597": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "DUP3",
      "path": "49"
    },
    "598": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xFFFFFFFF"
    },
    "603": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "AND",
      "path": "49"
    },
    "604": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "606": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "SHL",
      "path": "49"
    },
    "607": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "DUP2",
      "path": "49"
    },
    "608": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "609": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "611": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "ADD",
      "path": "49"
    },
    "612": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x26F"
    },
    "615": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "616": {
      "op": "DUP2"
    },
    "617": {
      "op": "MSTORE"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "620": {
      "op": "ADD"
    },
    "621": {
      "op": "SWAP1"
    },
    "622": {
      "op": "JUMP"
    },
    "623": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "624": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "626": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "628": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "629": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "DUP1",
      "path": "49"
    },
    "630": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "DUP4",
      "path": "49"
    },
    "631": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "SUB",
      "path": "49"
    },
    "632": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "DUP2",
      "path": "49"
    },
    "633": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "635": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "DUP8",
      "path": "49"
    },
    "636": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "DUP1",
      "path": "49"
    },
    "637": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "EXTCODESIZE",
      "path": "49"
    },
    "638": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "639": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "DUP1",
      "path": "49"
    },
    "640": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "641": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x289"
    },
    "644": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "645": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "647": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "DUP1",
      "path": "49"
    },
    "648": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "REVERT",
      "path": "49"
    },
    "649": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "650": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "POP",
      "path": "49"
    },
    "651": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "GAS",
      "path": "49"
    },
    "652": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "CALL",
      "path": "49"
    },
    "653": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "654": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "DUP1",
      "path": "49"
    },
    "655": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "656": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x29D"
    },
    "659": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "660": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "661": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "663": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "DUP1",
      "path": "49"
    },
    "664": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "665": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "666": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "668": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "REVERT",
      "path": "49"
    },
    "669": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "670": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "POP",
      "path": "49"
    },
    "671": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "POP",
      "path": "49"
    },
    "672": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "POP",
      "path": "49"
    },
    "673": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2100,
        2142
      ],
      "op": "POP",
      "path": "49"
    },
    "674": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2245
      ],
      "op": "PUSH2",
      "path": "49",
      "statement": 5,
      "value": "0x2AA"
    },
    "677": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2239,
        2244
      ],
      "op": "DUP10",
      "path": "49"
    },
    "678": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2238
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x506"
    },
    "681": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        2220,
        2245
      ],
      "op": "JUMP",
      "path": "49"
    },
    "682": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2245
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "689": {
      "op": "SHL"
    },
    "690": {
      "op": "SUB"
    },
    "691": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2257
      ],
      "op": "AND",
      "path": "49"
    },
    "692": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2257
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x853828B6"
    },
    "697": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "699": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "700": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "DUP2",
      "path": "49"
    },
    "701": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xFFFFFFFF"
    },
    "706": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "AND",
      "path": "49"
    },
    "707": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "709": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "SHL",
      "path": "49"
    },
    "710": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "DUP2",
      "path": "49"
    },
    "711": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "712": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "714": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "ADD",
      "path": "49"
    },
    "715": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "717": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "719": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "720": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "DUP1",
      "path": "49"
    },
    "721": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "DUP4",
      "path": "49"
    },
    "722": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "SUB",
      "path": "49"
    },
    "723": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "DUP2",
      "path": "49"
    },
    "724": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "726": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "DUP8",
      "path": "49"
    },
    "727": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "DUP1",
      "path": "49"
    },
    "728": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "EXTCODESIZE",
      "path": "49"
    },
    "729": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "730": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "DUP1",
      "path": "49"
    },
    "731": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "732": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x2E4"
    },
    "735": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "736": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "738": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "DUP1",
      "path": "49"
    },
    "739": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "REVERT",
      "path": "49"
    },
    "740": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "741": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "POP",
      "path": "49"
    },
    "742": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "GAS",
      "path": "49"
    },
    "743": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "CALL",
      "path": "49"
    },
    "744": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "745": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "DUP1",
      "path": "49"
    },
    "746": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "747": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x2F8"
    },
    "750": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "751": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "752": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "754": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "DUP1",
      "path": "49"
    },
    "755": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "756": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "757": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "759": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "REVERT",
      "path": "49"
    },
    "760": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "761": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "POP",
      "path": "49"
    },
    "762": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "POP",
      "path": "49"
    },
    "763": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "POP",
      "path": "49"
    },
    "764": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2220,
        2259
      ],
      "op": "POP",
      "path": "49"
    },
    "765": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2510
      ],
      "op": "PUSH2",
      "path": "49",
      "statement": 6,
      "value": "0x304"
    },
    "768": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2508
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x78B"
    },
    "771": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        2495,
        2510
      ],
      "op": "JUMP",
      "path": "49"
    },
    "772": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2510
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "773": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "775": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "776": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "781": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "783": {
      "op": "SHL"
    },
    "784": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "DUP2",
      "path": "49"
    },
    "785": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "786": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2529,
        2533
      ],
      "op": "ADDRESS",
      "path": "49"
    },
    "787": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "789": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "DUP3",
      "path": "49"
    },
    "790": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "ADD",
      "path": "49"
    },
    "791": {
      "op": "MSTORE"
    },
    "792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "798": {
      "op": "SHL"
    },
    "799": {
      "op": "SUB"
    },
    "800": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2520
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "801": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2520
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "802": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2520
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "803": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2520
      ],
      "op": "AND",
      "path": "49"
    },
    "804": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2520
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "805": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2520
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x70A08231"
    },
    "810": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2520
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "813": {
      "op": "ADD"
    },
    "814": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "816": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "818": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "819": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "DUP1",
      "path": "49"
    },
    "820": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "DUP4",
      "path": "49"
    },
    "821": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "SUB",
      "path": "49"
    },
    "822": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "DUP2",
      "path": "49"
    },
    "823": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "DUP7",
      "path": "49"
    },
    "824": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "GAS",
      "path": "49"
    },
    "825": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "STATICCALL",
      "path": "49"
    },
    "826": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "827": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "DUP1",
      "path": "49"
    },
    "828": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "829": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x34A"
    },
    "832": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "833": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "834": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "836": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "DUP1",
      "path": "49"
    },
    "837": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "838": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "839": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "841": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "REVERT",
      "path": "49"
    },
    "842": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "843": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "POP",
      "path": "49"
    },
    "844": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "POP",
      "path": "49"
    },
    "845": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "POP",
      "path": "49"
    },
    "846": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "POP",
      "path": "49"
    },
    "847": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "849": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "850": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "851": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "853": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "NOT",
      "path": "49"
    },
    "854": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "856": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "DUP3",
      "path": "49"
    },
    "857": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "ADD",
      "path": "49"
    },
    "858": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "AND",
      "path": "49"
    },
    "859": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "DUP3",
      "path": "49"
    },
    "860": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "ADD",
      "path": "49"
    },
    "861": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "DUP1",
      "path": "49"
    },
    "862": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "864": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "865": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "POP",
      "path": "49"
    },
    "866": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "DUP2",
      "path": "49"
    },
    "867": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "ADD",
      "path": "49"
    },
    "868": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "869": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x36E"
    },
    "872": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "873": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "874": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x87A"
    },
    "877": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        2495,
        2535
      ],
      "op": "JUMP",
      "path": "49"
    },
    "878": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2495,
        2535
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "879": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2485,
        2535
      ],
      "op": "SWAP8",
      "path": "49"
    },
    "880": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2485,
        2535
      ],
      "op": "POP",
      "path": "49"
    },
    "881": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2566
      ],
      "op": "PUSH2",
      "path": "49",
      "statement": 7,
      "value": "0x378"
    },
    "884": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2564
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x657"
    },
    "887": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        2549,
        2566
      ],
      "op": "JUMP",
      "path": "49"
    },
    "888": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2566
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "895": {
      "op": "SHL"
    },
    "896": {
      "op": "SUB"
    },
    "897": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2571
      ],
      "op": "AND",
      "path": "49"
    },
    "898": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2571
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xA3971047"
    },
    "903": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2597,
        2601
      ],
      "op": "ADDRESS",
      "path": "49"
    },
    "904": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2620,
        2627
      ],
      "op": "DUP11",
      "path": "49"
    },
    "905": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2653,
        2668
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x390"
    },
    "908": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2653,
        2666
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x78B"
    },
    "911": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        2653,
        2668
      ],
      "op": "JUMP",
      "path": "49"
    },
    "912": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2653,
        2668
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "913": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2687,
        2688
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "915": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2714,
        2715
      ],
      "op": "DUP1",
      "path": "49"
    },
    "916": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2734,
        2755
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x39B"
    },
    "919": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2734,
        2753
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x68E"
    },
    "922": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        2734,
        2755
      ],
      "op": "JUMP",
      "path": "49"
    },
    "923": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2734,
        2755
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "924": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2773,
        2801
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x3A3"
    },
    "927": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2773,
        2799
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x722"
    },
    "930": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        2773,
        2801
      ],
      "op": "JUMP",
      "path": "49"
    },
    "931": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2773,
        2801
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "932": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "934": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "935": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "DUP9",
      "path": "49"
    },
    "936": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xFFFFFFFF"
    },
    "941": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "AND",
      "path": "49"
    },
    "942": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "944": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "SHL",
      "path": "49"
    },
    "945": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "DUP2",
      "path": "49"
    },
    "946": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "947": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "949": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "ADD",
      "path": "49"
    },
    "950": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x3C5"
    },
    "953": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "SWAP8",
      "path": "49"
    },
    "954": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "SWAP7",
      "path": "49"
    },
    "955": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "SWAP6",
      "path": "49"
    },
    "956": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "SWAP5",
      "path": "49"
    },
    "957": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "SWAP4",
      "path": "49"
    },
    "958": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "959": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "960": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "961": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x8CE"
    },
    "964": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        2549,
        2815
      ],
      "op": "JUMP",
      "path": "49"
    },
    "965": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "966": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "968": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "970": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "971": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "DUP1",
      "path": "49"
    },
    "972": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "DUP4",
      "path": "49"
    },
    "973": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "SUB",
      "path": "49"
    },
    "974": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "DUP2",
      "path": "49"
    },
    "975": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "977": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "DUP8",
      "path": "49"
    },
    "978": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "DUP1",
      "path": "49"
    },
    "979": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "EXTCODESIZE",
      "path": "49"
    },
    "980": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "981": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "DUP1",
      "path": "49"
    },
    "982": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "983": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x3DF"
    },
    "986": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "987": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "989": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "DUP1",
      "path": "49"
    },
    "990": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "REVERT",
      "path": "49"
    },
    "991": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "992": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "POP",
      "path": "49"
    },
    "993": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "GAS",
      "path": "49"
    },
    "994": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "CALL",
      "path": "49"
    },
    "995": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "996": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "DUP1",
      "path": "49"
    },
    "997": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "998": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x3F3"
    },
    "1001": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "1002": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1003": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1005": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1006": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "1007": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1008": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1010": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "REVERT",
      "path": "49"
    },
    "1011": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1012": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "POP",
      "path": "49"
    },
    "1013": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "POP",
      "path": "49"
    },
    "1014": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "POP",
      "path": "49"
    },
    "1015": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        2549,
        2815
      ],
      "op": "POP",
      "path": "49"
    },
    "1016": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1627,
        1628
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 8,
      "value": "0x1"
    },
    "1018": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1622,
        1628
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1019": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1622,
        1628
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x404"
    },
    "1022": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1622,
        1628
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1023": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1622,
        1628
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1024": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1622,
        1628
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x930"
    },
    "1027": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "i",
      "offset": [
        1622,
        1628
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1028": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1622,
        1628
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1029": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1622,
        1628
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1030": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1622,
        1628
      ],
      "op": "POP",
      "path": "49"
    },
    "1031": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1581,
        2826
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x5F"
    },
    "1034": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1581,
        2826
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1035": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1581,
        2826
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1036": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1581,
        2826
      ],
      "op": "POP",
      "path": "49"
    },
    "1037": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1293,
        2832
      ],
      "op": "POP",
      "path": "49"
    },
    "1038": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1293,
        2832
      ],
      "op": "POP",
      "path": "49"
    },
    "1039": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1293,
        2832
      ],
      "op": "POP",
      "path": "49"
    },
    "1040": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1293,
        2832
      ],
      "op": "POP",
      "path": "49"
    },
    "1041": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1293,
        2832
      ],
      "op": "POP",
      "path": "49"
    },
    "1042": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1293,
        2832
      ],
      "op": "POP",
      "path": "49"
    },
    "1043": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1293,
        2832
      ],
      "op": "POP",
      "path": "49"
    },
    "1044": {
      "fn": "PhantomAllocator.allocateAssets",
      "offset": [
        1293,
        2832
      ],
      "op": "POP",
      "path": "49"
    },
    "1045": {
      "fn": "PhantomAllocator.allocateAssets",
      "jump": "o",
      "offset": [
        1258,
        2832
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1046": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2838,
        3016
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1047": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2884,
        2900
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x60"
    },
    "1049": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        2935
      ],
      "op": "PUSH2",
      "path": "49",
      "statement": 9,
      "value": "0x42A"
    },
    "1052": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "PUSH1",
      "path": "61",
      "statement": 10,
      "value": "0x3E"
    },
    "1054": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1061": {
      "op": "SHL"
    },
    "1062": {
      "op": "SUB"
    },
    "1063": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "AND",
      "path": "61"
    },
    "1064": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1065": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2093,
        2215
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1066": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        2935
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1067": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1069": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1076": {
      "op": "SHL"
    },
    "1077": {
      "op": "SUB"
    },
    "1078": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        2951
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1079": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        2951
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1080": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        2951
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1081": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        2951
      ],
      "op": "AND",
      "path": "49"
    },
    "1082": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        2951
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1083": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        2951
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x5948F733"
    },
    "1088": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        2951
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1089": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x44F"
    },
    "1092": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1093": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2979,
        3006
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1E"
    },
    "1095": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2979,
        3006
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1096": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1098": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "ADD",
      "path": "49"
    },
    "1099": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x9F0"
    },
    "1102": {
      "fn": "PhantomAllocator.getLPTokens",
      "jump": "i",
      "offset": [
        2962,
        3007
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1103": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1104": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1106": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1107": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1109": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1110": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "DUP4",
      "path": "49"
    },
    "1111": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "SUB",
      "path": "49"
    },
    "1112": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "SUB",
      "path": "49"
    },
    "1113": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1114": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1115": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1116": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1118": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2962,
        3007
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1119": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2952,
        3008
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1120": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2952,
        3008
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1121": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2952,
        3008
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1122": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2952,
        3008
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1124": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2952,
        3008
      ],
      "op": "ADD",
      "path": "49"
    },
    "1125": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2952,
        3008
      ],
      "op": "KECCAK256",
      "path": "49"
    },
    "1126": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1128": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1129": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "DUP3",
      "path": "49"
    },
    "1130": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xFFFFFFFF"
    },
    "1135": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "AND",
      "path": "49"
    },
    "1136": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "1138": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "SHL",
      "path": "49"
    },
    "1139": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1140": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1141": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "1143": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "ADD",
      "path": "49"
    },
    "1144": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x483"
    },
    "1147": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1148": {
      "op": "DUP2"
    },
    "1149": {
      "op": "MSTORE"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1152": {
      "op": "ADD"
    },
    "1153": {
      "op": "SWAP1"
    },
    "1154": {
      "op": "JUMP"
    },
    "1155": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1156": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1158": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1160": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1161": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1162": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "DUP4",
      "path": "49"
    },
    "1163": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "SUB",
      "path": "49"
    },
    "1164": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1165": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "DUP7",
      "path": "49"
    },
    "1166": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "GAS",
      "path": "49"
    },
    "1167": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "STATICCALL",
      "path": "49"
    },
    "1168": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "1169": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1170": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "1171": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x4A0"
    },
    "1174": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "1175": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1176": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1178": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1179": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "1180": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1181": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1183": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "REVERT",
      "path": "49"
    },
    "1184": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1185": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "POP",
      "path": "49"
    },
    "1186": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "POP",
      "path": "49"
    },
    "1187": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "POP",
      "path": "49"
    },
    "1188": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "POP",
      "path": "49"
    },
    "1189": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1191": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1192": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1193": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1195": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "DUP3",
      "path": "49"
    },
    "1196": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "1197": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "1199": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1200": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1201": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1202": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "ADD",
      "path": "49"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1205": {
      "op": "NOT"
    },
    "1206": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "AND",
      "path": "49"
    },
    "1207": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "DUP3",
      "path": "49"
    },
    "1208": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "ADD",
      "path": "49"
    },
    "1209": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1211": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1212": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x4C8"
    },
    "1215": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1216": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1217": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1218": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "ADD",
      "path": "49"
    },
    "1219": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1220": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xA22"
    },
    "1223": {
      "fn": "PhantomAllocator.getLPTokens",
      "jump": "i",
      "offset": [
        2919,
        3009
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1224": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2919,
        3009
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1225": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2912,
        3009
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1226": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2912,
        3009
      ],
      "op": "POP",
      "path": "49"
    },
    "1227": {
      "fn": "PhantomAllocator.getLPTokens",
      "offset": [
        2838,
        3016
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1228": {
      "fn": "PhantomAllocator.getLPTokens",
      "jump": "o",
      "offset": [
        2838,
        3016
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1229": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3022,
        3208
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1230": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3072,
        3088
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x60"
    },
    "1232": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3107,
        3123
      ],
      "op": "PUSH2",
      "path": "49",
      "statement": 11,
      "value": "0x4E1"
    },
    "1235": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x3E"
    },
    "1237": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1244": {
      "op": "SHL"
    },
    "1245": {
      "op": "SUB"
    },
    "1246": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "AND",
      "path": "61"
    },
    "1247": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1248": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2093,
        2215
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1249": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3107,
        3123
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1250": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3150,
        3199
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1252": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3150,
        3199
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1259": {
      "op": "SHL"
    },
    "1260": {
      "op": "SUB"
    },
    "1261": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3107,
        3139
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1262": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3107,
        3139
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1263": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3107,
        3139
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1264": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3107,
        3139
      ],
      "op": "AND",
      "path": "49"
    },
    "1265": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3107,
        3139
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1266": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3107,
        3139
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x5948F733"
    },
    "1271": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3107,
        3139
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1272": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3150,
        3199
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x44F"
    },
    "1275": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3150,
        3199
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1276": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3167,
        3198
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "1278": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3167,
        3198
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1279": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3150,
        3199
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1281": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3150,
        3199
      ],
      "op": "ADD",
      "path": "49"
    },
    "1282": {
      "fn": "PhantomAllocator.getSingleTokens",
      "offset": [
        3150,
        3199
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x9F0"
    },
    "1285": {
      "fn": "PhantomAllocator.getSingleTokens",
      "jump": "i",
      "offset": [
        3150,
        3199
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1286": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3818,
        4091
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1287": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3886,
        3902
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1289": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        3983
      ],
      "op": "PUSH2",
      "path": "49",
      "statement": 12,
      "value": "0x51A"
    },
    "1292": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x3E"
    },
    "1294": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1301": {
      "op": "SHL"
    },
    "1302": {
      "op": "SUB"
    },
    "1303": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "AND",
      "path": "61"
    },
    "1304": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1305": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2093,
        2215
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1306": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        3983
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1313": {
      "op": "SHL"
    },
    "1314": {
      "op": "SUB"
    },
    "1315": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        3994
      ],
      "op": "AND",
      "path": "49"
    },
    "1316": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        3994
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x21F8A721"
    },
    "1321": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4022,
        4029
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x3"
    },
    "1323": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4022,
        4037
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x2E"
    },
    "1325": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4022,
        4037
      ],
      "op": "ADD",
      "path": "49"
    },
    "1326": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4022,
        4058
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x6"
    },
    "1328": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4022,
        4058
      ],
      "op": "ADD",
      "path": "49"
    },
    "1329": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4060,
        4067
      ],
      "op": "DUP5",
      "path": "49"
    },
    "1330": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1332": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1333": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1335": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "ADD",
      "path": "49"
    },
    "1336": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x542"
    },
    "1339": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "1340": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1341": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1342": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xAE7"
    },
    "1345": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "jump": "i",
      "offset": [
        4005,
        4068
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1346": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1347": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1349": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1350": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1352": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1353": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "DUP4",
      "path": "49"
    },
    "1354": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "SUB",
      "path": "49"
    },
    "1355": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "SUB",
      "path": "49"
    },
    "1356": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1357": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1358": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1359": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1361": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        4005,
        4068
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1362": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3995,
        4069
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1363": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3995,
        4069
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1364": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3995,
        4069
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1365": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3995,
        4069
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1367": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3995,
        4069
      ],
      "op": "ADD",
      "path": "49"
    },
    "1368": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3995,
        4069
      ],
      "op": "KECCAK256",
      "path": "49"
    },
    "1369": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1371": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1372": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "DUP3",
      "path": "49"
    },
    "1373": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xFFFFFFFF"
    },
    "1378": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "AND",
      "path": "49"
    },
    "1379": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "1381": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "SHL",
      "path": "49"
    },
    "1382": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1383": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1384": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "1386": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "ADD",
      "path": "49"
    },
    "1387": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x576"
    },
    "1390": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1391": {
      "op": "DUP2"
    },
    "1392": {
      "op": "MSTORE"
    },
    "1393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1395": {
      "op": "ADD"
    },
    "1396": {
      "op": "SWAP1"
    },
    "1397": {
      "op": "JUMP"
    },
    "1398": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1399": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1401": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1403": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1404": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1405": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "DUP4",
      "path": "49"
    },
    "1406": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "SUB",
      "path": "49"
    },
    "1407": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1408": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "DUP7",
      "path": "49"
    },
    "1409": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "GAS",
      "path": "49"
    },
    "1410": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "STATICCALL",
      "path": "49"
    },
    "1411": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "1412": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1413": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "1414": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x593"
    },
    "1417": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "1418": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1419": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1421": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1422": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "1423": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1424": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1426": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "REVERT",
      "path": "49"
    },
    "1427": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1428": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "POP",
      "path": "49"
    },
    "1429": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "POP",
      "path": "49"
    },
    "1430": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "POP",
      "path": "49"
    },
    "1431": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "POP",
      "path": "49"
    },
    "1432": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1434": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1435": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1436": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "1438": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "NOT",
      "path": "49"
    },
    "1439": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "1441": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "DUP3",
      "path": "49"
    },
    "1442": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "ADD",
      "path": "49"
    },
    "1443": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "AND",
      "path": "49"
    },
    "1444": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "DUP3",
      "path": "49"
    },
    "1445": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "ADD",
      "path": "49"
    },
    "1446": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1447": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1449": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1450": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "POP",
      "path": "49"
    },
    "1451": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1452": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "ADD",
      "path": "49"
    },
    "1453": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1454": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x5B7"
    },
    "1457": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1458": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1459": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x856"
    },
    "1462": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "jump": "i",
      "offset": [
        3967,
        4070
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1463": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3967,
        4070
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1464": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3914,
        4084
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "1465": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "offset": [
        3818,
        4091
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1466": {
      "op": "POP"
    },
    "1467": {
      "op": "POP"
    },
    "1468": {
      "fn": "PhantomAllocator.SpiritSwapGaugeFor",
      "jump": "o",
      "offset": [
        3818,
        4091
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1469": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5184,
        5348
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1470": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5231,
        5244
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1472": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5293
      ],
      "op": "PUSH2",
      "path": "61",
      "statement": 13,
      "value": "0x5D1"
    },
    "1475": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x3E"
    },
    "1477": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1484": {
      "op": "SHL"
    },
    "1485": {
      "op": "SUB"
    },
    "1486": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "AND",
      "path": "61"
    },
    "1487": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1488": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2093,
        2215
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1489": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5293
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1496": {
      "op": "SHL"
    },
    "1497": {
      "op": "SUB"
    },
    "1498": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5304
      ],
      "op": "AND",
      "path": "61"
    },
    "1499": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5304
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0x21F8A721"
    },
    "1504": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5315,
        5322
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x3"
    },
    "1506": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5315,
        5332
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1508": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5315,
        5332
      ],
      "op": "ADD",
      "path": "61"
    },
    "1509": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5315,
        5338
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0xA"
    },
    "1511": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5315,
        5338
      ],
      "op": "ADD",
      "path": "61"
    },
    "1512": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5305,
        5339
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1514": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5305,
        5339
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1515": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5305,
        5339
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x5F4"
    },
    "1518": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5305,
        5339
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1519": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5305,
        5339
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1520": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5305,
        5339
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x9F0"
    },
    "1523": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "jump": "i",
      "offset": [
        5305,
        5339
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1524": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5305,
        5339
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1525": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5305,
        5339
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1527": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5305,
        5339
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1528": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5305,
        5339
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1529": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5305,
        5339
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1530": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5305,
        5339
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1531": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5305,
        5339
      ],
      "op": "SUB",
      "path": "61"
    },
    "1532": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5305,
        5339
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1533": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5305,
        5339
      ],
      "op": "KECCAK256",
      "path": "61"
    },
    "1534": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0xE0"
    },
    "1536": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "DUP4",
      "path": "61"
    },
    "1537": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1538": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "SHL",
      "path": "61"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1545": {
      "op": "SHL"
    },
    "1546": {
      "op": "SUB"
    },
    "1547": {
      "op": "NOT"
    },
    "1548": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "AND",
      "path": "61"
    },
    "1549": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1550": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1551": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "1553": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1554": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "ADD",
      "path": "61"
    },
    "1555": {
      "op": "MSTORE"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1558": {
      "op": "ADD"
    },
    "1559": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1561": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1563": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1564": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1565": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "DUP4",
      "path": "61"
    },
    "1566": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "SUB",
      "path": "61"
    },
    "1567": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1568": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "DUP7",
      "path": "61"
    },
    "1569": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "GAS",
      "path": "61"
    },
    "1570": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "STATICCALL",
      "path": "61"
    },
    "1571": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "1572": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1573": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "1574": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x633"
    },
    "1577": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1578": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "RETURNDATASIZE",
      "path": "61"
    },
    "1579": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1581": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1582": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "RETURNDATACOPY",
      "path": "61"
    },
    "1583": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "RETURNDATASIZE",
      "path": "61"
    },
    "1584": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1586": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "REVERT",
      "path": "61"
    },
    "1587": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1588": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "POP",
      "path": "61"
    },
    "1589": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "POP",
      "path": "61"
    },
    "1590": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "POP",
      "path": "61"
    },
    "1591": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "POP",
      "path": "61"
    },
    "1592": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1594": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1595": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "RETURNDATASIZE",
      "path": "61"
    },
    "1596": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x1F"
    },
    "1598": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "NOT",
      "path": "61"
    },
    "1599": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x1F"
    },
    "1601": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1602": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "ADD",
      "path": "61"
    },
    "1603": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "AND",
      "path": "61"
    },
    "1604": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1605": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "ADD",
      "path": "61"
    },
    "1606": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1607": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1609": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1610": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "POP",
      "path": "61"
    },
    "1611": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1612": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "ADD",
      "path": "61"
    },
    "1613": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1614": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x4C8"
    },
    "1617": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1618": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1619": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5277,
        5340
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x856"
    },
    "1622": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "jump": "i",
      "offset": [
        5277,
        5340
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1623": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4091,
        4267
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1624": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4141,
        4157
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1626": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4193,
        4209
      ],
      "op": "PUSH2",
      "path": "61",
      "statement": 14,
      "value": "0x66B"
    },
    "1629": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x3E"
    },
    "1631": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1638": {
      "op": "SHL"
    },
    "1639": {
      "op": "SUB"
    },
    "1640": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "AND",
      "path": "61"
    },
    "1641": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1642": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2093,
        2215
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1643": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4193,
        4209
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1650": {
      "op": "SHL"
    },
    "1651": {
      "op": "SUB"
    },
    "1652": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4193,
        4220
      ],
      "op": "AND",
      "path": "61"
    },
    "1653": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4193,
        4220
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0x21F8A721"
    },
    "1658": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4231,
        4238
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x3"
    },
    "1660": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4231,
        4248
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1662": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4231,
        4248
      ],
      "op": "ADD",
      "path": "61"
    },
    "1663": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4231,
        4257
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0xB"
    },
    "1665": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4231,
        4257
      ],
      "op": "ADD",
      "path": "61"
    },
    "1666": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4221,
        4258
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1668": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4221,
        4258
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1669": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4221,
        4258
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x5F4"
    },
    "1672": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4221,
        4258
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1673": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4221,
        4258
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1674": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4221,
        4258
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x9F0"
    },
    "1677": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "jump": "i",
      "offset": [
        4221,
        4258
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1678": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5354,
        5648
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1679": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1681": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1682": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1683": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5474,
        5475
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x2"
    },
    "1685": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1686": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1687": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1688": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5408,
        5424
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x60"
    },
    "1690": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1691": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "DUP4",
      "path": "61"
    },
    "1692": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "ADD",
      "path": "61"
    },
    "1693": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "DUP5",
      "path": "61"
    },
    "1694": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1695": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5408,
        5424
      ],
      "op": "SWAP3",
      "path": "61"
    },
    "1696": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5436,
        5457
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1698": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5436,
        5457
      ],
      "op": "SWAP3",
      "path": "61"
    },
    "1699": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1700": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5474,
        5475
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1701": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1703": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "DUP4",
      "path": "61"
    },
    "1704": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "ADD",
      "path": "61"
    },
    "1705": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1706": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1707": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "CALLDATASIZE",
      "path": "61"
    },
    "1708": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "DUP4",
      "path": "61"
    },
    "1709": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5460,
        5476
      ],
      "op": "CALLDATACOPY",
      "path": "61"
    },
    "1710": {
      "op": "POP"
    },
    "1711": {
      "op": "POP"
    },
    "1712": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5496,
        5545
      ],
      "op": "PUSH1",
      "path": "61",
      "statement": 15,
      "value": "0x40"
    },
    "1714": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5496,
        5545
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1715": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5436,
        5476
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1716": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5436,
        5476
      ],
      "op": "SWAP3",
      "path": "61"
    },
    "1717": {
      "op": "POP"
    },
    "1718": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5496,
        5545
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x6C2"
    },
    "1721": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5496,
        5545
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1722": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5506,
        5544
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x15"
    },
    "1724": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5506,
        5544
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1725": {
      "op": "POP"
    },
    "1726": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5496,
        5545
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x9F0"
    },
    "1729": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "jump": "i",
      "offset": [
        5496,
        5545
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1730": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5496,
        5545
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1731": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5496,
        5545
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1733": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5496,
        5545
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1734": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5496,
        5545
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1735": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5496,
        5545
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1736": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5496,
        5545
      ],
      "op": "SUB",
      "path": "61"
    },
    "1737": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5496,
        5545
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1738": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5496,
        5545
      ],
      "op": "KECCAK256",
      "path": "61"
    },
    "1739": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5490
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1740": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5491,
        5492
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1742": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5493
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1743": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5493
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1744": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5493
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1745": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5493
      ],
      "op": "LT",
      "path": "61"
    },
    "1746": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5493
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x6DD"
    },
    "1749": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5493
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1750": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5493
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x6DD"
    },
    "1753": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5493
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x828"
    },
    "1756": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "jump": "i",
      "offset": [
        5486,
        5493
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1757": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5493
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1758": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5493
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1760": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5493
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1761": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5493
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1762": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5493
      ],
      "op": "MUL",
      "path": "61"
    },
    "1763": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5493
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1764": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5493
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1765": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5493
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1766": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5493
      ],
      "op": "ADD",
      "path": "61"
    },
    "1767": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5493
      ],
      "op": "ADD",
      "path": "61"
    },
    "1768": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5486,
        5545
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1769": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5565,
        5620
      ],
      "op": "PUSH1",
      "path": "61",
      "statement": 16,
      "value": "0x40"
    },
    "1771": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5565,
        5620
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1772": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5565,
        5620
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x6F7"
    },
    "1775": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5565,
        5620
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1776": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5575,
        5604
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x13"
    },
    "1778": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5575,
        5604
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1779": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5565,
        5620
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x9F0"
    },
    "1782": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "jump": "i",
      "offset": [
        5565,
        5620
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1783": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5565,
        5620
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1784": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5565,
        5620
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1786": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5565,
        5620
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1787": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5565,
        5620
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1788": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5565,
        5620
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1789": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5565,
        5620
      ],
      "op": "SUB",
      "path": "61"
    },
    "1790": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5565,
        5620
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1791": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5565,
        5620
      ],
      "op": "KECCAK256",
      "path": "61"
    },
    "1792": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5559
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1793": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5560,
        5561
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x1"
    },
    "1795": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5562
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1796": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5562
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1797": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5562
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1798": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5562
      ],
      "op": "LT",
      "path": "61"
    },
    "1799": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5562
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x712"
    },
    "1802": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5562
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1803": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5562
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x712"
    },
    "1806": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5562
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x828"
    },
    "1809": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "jump": "i",
      "offset": [
        5555,
        5562
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1810": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5562
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1811": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5562
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1813": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5562
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1814": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5562
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1815": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5562
      ],
      "op": "MUL",
      "path": "61"
    },
    "1816": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5562
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1817": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5562
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1818": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5562
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1819": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5562
      ],
      "op": "ADD",
      "path": "61"
    },
    "1820": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5562
      ],
      "op": "ADD",
      "path": "61"
    },
    "1821": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5555,
        5620
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1822": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5637,
        5641
      ],
      "op": "SWAP2",
      "path": "61",
      "statement": 17
    },
    "1823": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "offset": [
        5354,
        5648
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1824": {
      "op": "POP"
    },
    "1825": {
      "fn": "PhantomStorageMixin.standardAccountKeys",
      "jump": "o",
      "offset": [
        5354,
        5648
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1826": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5654,
        5930
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1827": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1829": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1830": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1831": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5788,
        5789
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x2"
    },
    "1833": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1834": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1835": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1836": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5715,
        5731
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x60"
    },
    "1838": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1839": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "DUP4",
      "path": "61"
    },
    "1840": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "ADD",
      "path": "61"
    },
    "1841": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "DUP5",
      "path": "61"
    },
    "1842": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1843": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5715,
        5731
      ],
      "op": "SWAP3",
      "path": "61"
    },
    "1844": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5743,
        5771
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1846": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5743,
        5771
      ],
      "op": "SWAP3",
      "path": "61"
    },
    "1847": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1848": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5788,
        5789
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1849": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1851": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "DUP4",
      "path": "61"
    },
    "1852": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "ADD",
      "path": "61"
    },
    "1853": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1854": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1855": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "CALLDATASIZE",
      "path": "61"
    },
    "1856": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "DUP4",
      "path": "61"
    },
    "1857": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "CALLDATACOPY",
      "path": "61"
    },
    "1858": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "ADD",
      "path": "61"
    },
    "1859": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1860": {
      "op": "POP"
    },
    "1861": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5774,
        5790
      ],
      "op": "POP",
      "path": "61"
    },
    "1862": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5743,
        5790
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1863": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5743,
        5790
      ],
      "op": "POP",
      "path": "61"
    },
    "1864": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5819,
        5825
      ],
      "op": "PUSH8",
      "path": "61",
      "statement": 18,
      "value": "0xC7D713B49DA0000"
    },
    "1873": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5811
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1874": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5812,
        5813
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1876": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5814
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1877": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5814
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1878": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5814
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1879": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5814
      ],
      "op": "LT",
      "path": "61"
    },
    "1880": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5814
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x763"
    },
    "1883": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5814
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1884": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5814
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x763"
    },
    "1887": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5814
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x828"
    },
    "1890": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "jump": "i",
      "offset": [
        5800,
        5814
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1891": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5814
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1892": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5814
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1894": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5814
      ],
      "op": "MUL",
      "path": "61"
    },
    "1895": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5814
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1897": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5814
      ],
      "op": "ADD",
      "path": "61"
    },
    "1898": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5814
      ],
      "op": "ADD",
      "path": "61"
    },
    "1899": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5827
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1900": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5827
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1901": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5827
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1902": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5827
      ],
      "op": "POP",
      "path": "61"
    },
    "1903": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5800,
        5827
      ],
      "op": "POP",
      "path": "61"
    },
    "1904": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5868,
        5875
      ],
      "op": "PUSH8",
      "path": "61",
      "statement": 19,
      "value": "0x16345785D8A0000"
    },
    "1913": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5849,
        5860
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1914": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5861,
        5862
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x1"
    },
    "1916": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5849,
        5863
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1917": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5849,
        5863
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1918": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5849,
        5863
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1919": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5849,
        5863
      ],
      "op": "LT",
      "path": "61"
    },
    "1920": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5849,
        5863
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x712"
    },
    "1923": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5849,
        5863
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1924": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5849,
        5863
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x712"
    },
    "1927": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "offset": [
        5849,
        5863
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x828"
    },
    "1930": {
      "fn": "PhantomStorageMixin.standardAccountPercentages",
      "jump": "i",
      "offset": [
        5849,
        5863
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1931": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4097,
        4259
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1932": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4145,
        4151
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1934": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4186
      ],
      "op": "PUSH2",
      "path": "49",
      "statement": 20,
      "value": "0x79F"
    },
    "1937": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x3E"
    },
    "1939": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1946": {
      "op": "SHL"
    },
    "1947": {
      "op": "SUB"
    },
    "1948": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "AND",
      "path": "61"
    },
    "1949": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2192,
        2207
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1950": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2093,
        2215
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1951": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4186
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1952": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4198,
        4250
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1954": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4198,
        4250
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1961": {
      "op": "SHL"
    },
    "1962": {
      "op": "SUB"
    },
    "1963": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4197
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1964": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4197
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1965": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4197
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1966": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4197
      ],
      "op": "AND",
      "path": "49"
    },
    "1967": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4197
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1968": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4197
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x21F8A721"
    },
    "1973": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4197
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1974": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4198,
        4250
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x7C1"
    },
    "1977": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4198,
        4250
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1978": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4208,
        4249
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1B"
    },
    "1980": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4208,
        4249
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1981": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4198,
        4250
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x9F0"
    },
    "1984": {
      "fn": "PhantomAllocator.inSpiritToken",
      "jump": "i",
      "offset": [
        4198,
        4250
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1985": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4198,
        4250
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1986": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4198,
        4250
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1988": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4198,
        4250
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1989": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4198,
        4250
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1990": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4198,
        4250
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1991": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4198,
        4250
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1992": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4198,
        4250
      ],
      "op": "SUB",
      "path": "49"
    },
    "1993": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4198,
        4250
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1994": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4198,
        4250
      ],
      "op": "KECCAK256",
      "path": "49"
    },
    "1995": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "1997": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "DUP4",
      "path": "49"
    },
    "1998": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1999": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "SHL",
      "path": "49"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2006": {
      "op": "SHL"
    },
    "2007": {
      "op": "SUB"
    },
    "2008": {
      "op": "NOT"
    },
    "2009": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "AND",
      "path": "49"
    },
    "2010": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2011": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "2012": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "2014": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2015": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "ADD",
      "path": "49"
    },
    "2016": {
      "op": "MSTORE"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2019": {
      "op": "ADD"
    },
    "2020": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "2022": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2024": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2025": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2026": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "DUP4",
      "path": "49"
    },
    "2027": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "SUB",
      "path": "49"
    },
    "2028": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2029": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "DUP7",
      "path": "49"
    },
    "2030": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "GAS",
      "path": "49"
    },
    "2031": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "STATICCALL",
      "path": "49"
    },
    "2032": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2033": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2034": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2035": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x800"
    },
    "2038": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "2039": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2040": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2042": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2043": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "2044": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2045": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2047": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "REVERT",
      "path": "49"
    },
    "2048": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2049": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "POP",
      "path": "49"
    },
    "2050": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "POP",
      "path": "49"
    },
    "2051": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "POP",
      "path": "49"
    },
    "2052": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "POP",
      "path": "49"
    },
    "2053": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2055": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2056": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2057": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "2059": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "NOT",
      "path": "49"
    },
    "2060": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "2062": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2063": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "ADD",
      "path": "49"
    },
    "2064": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "AND",
      "path": "49"
    },
    "2065": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2066": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "ADD",
      "path": "49"
    },
    "2067": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2068": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2070": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "2071": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "POP",
      "path": "49"
    },
    "2072": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2073": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "ADD",
      "path": "49"
    },
    "2074": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2075": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x824"
    },
    "2078": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2079": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2080": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x856"
    },
    "2083": {
      "fn": "PhantomAllocator.inSpiritToken",
      "jump": "i",
      "offset": [
        4170,
        4251
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2084": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4170,
        4251
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2085": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4163,
        4252
      ],
      "op": "POP",
      "path": "49"
    },
    "2086": {
      "fn": "PhantomAllocator.inSpiritToken",
      "offset": [
        4097,
        4259
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2087": {
      "fn": "PhantomAllocator.inSpiritToken",
      "jump": "o",
      "offset": [
        4097,
        4259
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2088": {
      "op": "JUMPDEST"
    },
    "2089": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2096": {
      "op": "SHL"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2099": {
      "op": "MSTORE"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2104": {
      "op": "MSTORE"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2109": {
      "op": "REVERT"
    },
    "2110": {
      "op": "JUMPDEST"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2117": {
      "op": "SHL"
    },
    "2118": {
      "op": "SUB"
    },
    "2119": {
      "op": "DUP2"
    },
    "2120": {
      "op": "AND"
    },
    "2121": {
      "op": "DUP2"
    },
    "2122": {
      "op": "EQ"
    },
    "2123": {
      "op": "PUSH2",
      "value": "0x853"
    },
    "2126": {
      "op": "JUMPI"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2129": {
      "op": "DUP1"
    },
    "2130": {
      "op": "REVERT"
    },
    "2131": {
      "op": "JUMPDEST"
    },
    "2132": {
      "op": "POP"
    },
    "2133": {
      "jump": "o",
      "op": "JUMP"
    },
    "2134": {
      "op": "JUMPDEST"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2139": {
      "op": "DUP3"
    },
    "2140": {
      "op": "DUP5"
    },
    "2141": {
      "op": "SUB"
    },
    "2142": {
      "op": "SLT"
    },
    "2143": {
      "op": "ISZERO"
    },
    "2144": {
      "op": "PUSH2",
      "value": "0x868"
    },
    "2147": {
      "op": "JUMPI"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2150": {
      "op": "DUP1"
    },
    "2151": {
      "op": "REVERT"
    },
    "2152": {
      "op": "JUMPDEST"
    },
    "2153": {
      "op": "DUP2"
    },
    "2154": {
      "op": "MLOAD"
    },
    "2155": {
      "op": "PUSH2",
      "value": "0x873"
    },
    "2158": {
      "op": "DUP2"
    },
    "2159": {
      "op": "PUSH2",
      "value": "0x83E"
    },
    "2162": {
      "jump": "i",
      "op": "JUMP"
    },
    "2163": {
      "op": "JUMPDEST"
    },
    "2164": {
      "op": "SWAP4"
    },
    "2165": {
      "op": "SWAP3"
    },
    "2166": {
      "op": "POP"
    },
    "2167": {
      "op": "POP"
    },
    "2168": {
      "op": "POP"
    },
    "2169": {
      "jump": "o",
      "op": "JUMP"
    },
    "2170": {
      "op": "JUMPDEST"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2175": {
      "op": "DUP3"
    },
    "2176": {
      "op": "DUP5"
    },
    "2177": {
      "op": "SUB"
    },
    "2178": {
      "op": "SLT"
    },
    "2179": {
      "op": "ISZERO"
    },
    "2180": {
      "op": "PUSH2",
      "value": "0x88C"
    },
    "2183": {
      "op": "JUMPI"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2186": {
      "op": "DUP1"
    },
    "2187": {
      "op": "REVERT"
    },
    "2188": {
      "op": "JUMPDEST"
    },
    "2189": {
      "op": "POP"
    },
    "2190": {
      "op": "MLOAD"
    },
    "2191": {
      "op": "SWAP2"
    },
    "2192": {
      "op": "SWAP1"
    },
    "2193": {
      "op": "POP"
    },
    "2194": {
      "jump": "o",
      "op": "JUMP"
    },
    "2195": {
      "op": "JUMPDEST"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2198": {
      "op": "DUP2"
    },
    "2199": {
      "op": "MLOAD"
    },
    "2200": {
      "op": "DUP1"
    },
    "2201": {
      "op": "DUP5"
    },
    "2202": {
      "op": "MSTORE"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2205": {
      "op": "DUP1"
    },
    "2206": {
      "op": "DUP6"
    },
    "2207": {
      "op": "ADD"
    },
    "2208": {
      "op": "SWAP5"
    },
    "2209": {
      "op": "POP"
    },
    "2210": {
      "op": "DUP1"
    },
    "2211": {
      "op": "DUP5"
    },
    "2212": {
      "op": "ADD"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2215": {
      "op": "JUMPDEST"
    },
    "2216": {
      "op": "DUP4"
    },
    "2217": {
      "op": "DUP2"
    },
    "2218": {
      "op": "LT"
    },
    "2219": {
      "op": "ISZERO"
    },
    "2220": {
      "op": "PUSH2",
      "value": "0x8C3"
    },
    "2223": {
      "op": "JUMPI"
    },
    "2224": {
      "op": "DUP2"
    },
    "2225": {
      "op": "MLOAD"
    },
    "2226": {
      "op": "DUP8"
    },
    "2227": {
      "op": "MSTORE"
    },
    "2228": {
      "op": "SWAP6"
    },
    "2229": {
      "op": "DUP3"
    },
    "2230": {
      "op": "ADD"
    },
    "2231": {
      "op": "SWAP6"
    },
    "2232": {
      "op": "SWAP1"
    },
    "2233": {
      "op": "DUP3"
    },
    "2234": {
      "op": "ADD"
    },
    "2235": {
      "op": "SWAP1"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2238": {
      "op": "ADD"
    },
    "2239": {
      "op": "PUSH2",
      "value": "0x8A7"
    },
    "2242": {
      "op": "JUMP"
    },
    "2243": {
      "op": "JUMPDEST"
    },
    "2244": {
      "op": "POP"
    },
    "2245": {
      "op": "SWAP5"
    },
    "2246": {
      "op": "SWAP6"
    },
    "2247": {
      "op": "SWAP5"
    },
    "2248": {
      "op": "POP"
    },
    "2249": {
      "op": "POP"
    },
    "2250": {
      "op": "POP"
    },
    "2251": {
      "op": "POP"
    },
    "2252": {
      "op": "POP"
    },
    "2253": {
      "jump": "o",
      "op": "JUMP"
    },
    "2254": {
      "op": "JUMPDEST"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2261": {
      "op": "SHL"
    },
    "2262": {
      "op": "SUB"
    },
    "2263": {
      "op": "DUP9"
    },
    "2264": {
      "op": "DUP2"
    },
    "2265": {
      "op": "AND"
    },
    "2266": {
      "op": "DUP3"
    },
    "2267": {
      "op": "MSTORE"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2270": {
      "op": "DUP3"
    },
    "2271": {
      "op": "ADD"
    },
    "2272": {
      "op": "DUP9"
    },
    "2273": {
      "op": "SWAP1"
    },
    "2274": {
      "op": "MSTORE"
    },
    "2275": {
      "op": "DUP7"
    },
    "2276": {
      "op": "DUP2"
    },
    "2277": {
      "op": "AND"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2280": {
      "op": "DUP4"
    },
    "2281": {
      "op": "ADD"
    },
    "2282": {
      "op": "MSTORE"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2285": {
      "op": "DUP3"
    },
    "2286": {
      "op": "ADD"
    },
    "2287": {
      "op": "DUP7"
    },
    "2288": {
      "op": "SWAP1"
    },
    "2289": {
      "op": "MSTORE"
    },
    "2290": {
      "op": "DUP5"
    },
    "2291": {
      "op": "AND"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2294": {
      "op": "DUP3"
    },
    "2295": {
      "op": "ADD"
    },
    "2296": {
      "op": "MSTORE"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2301": {
      "op": "DUP3"
    },
    "2302": {
      "op": "ADD"
    },
    "2303": {
      "op": "DUP2"
    },
    "2304": {
      "op": "SWAP1"
    },
    "2305": {
      "op": "MSTORE"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2308": {
      "op": "SWAP1"
    },
    "2309": {
      "op": "PUSH2",
      "value": "0x910"
    },
    "2312": {
      "op": "SWAP1"
    },
    "2313": {
      "op": "DUP4"
    },
    "2314": {
      "op": "ADD"
    },
    "2315": {
      "op": "DUP6"
    },
    "2316": {
      "op": "PUSH2",
      "value": "0x893"
    },
    "2319": {
      "jump": "i",
      "op": "JUMP"
    },
    "2320": {
      "op": "JUMPDEST"
    },
    "2321": {
      "op": "DUP3"
    },
    "2322": {
      "op": "DUP2"
    },
    "2323": {
      "op": "SUB"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2326": {
      "op": "DUP5"
    },
    "2327": {
      "op": "ADD"
    },
    "2328": {
      "op": "MSTORE"
    },
    "2329": {
      "op": "PUSH2",
      "value": "0x922"
    },
    "2332": {
      "op": "DUP2"
    },
    "2333": {
      "op": "DUP6"
    },
    "2334": {
      "op": "PUSH2",
      "value": "0x893"
    },
    "2337": {
      "jump": "i",
      "op": "JUMP"
    },
    "2338": {
      "op": "JUMPDEST"
    },
    "2339": {
      "op": "SWAP11"
    },
    "2340": {
      "op": "SWAP10"
    },
    "2341": {
      "op": "POP"
    },
    "2342": {
      "op": "POP"
    },
    "2343": {
      "op": "POP"
    },
    "2344": {
      "op": "POP"
    },
    "2345": {
      "op": "POP"
    },
    "2346": {
      "op": "POP"
    },
    "2347": {
      "op": "POP"
    },
    "2348": {
      "op": "POP"
    },
    "2349": {
      "op": "POP"
    },
    "2350": {
      "op": "POP"
    },
    "2351": {
      "jump": "o",
      "op": "JUMP"
    },
    "2352": {
      "op": "JUMPDEST"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2355": {
      "op": "DUP3"
    },
    "2356": {
      "op": "NOT"
    },
    "2357": {
      "op": "DUP3"
    },
    "2358": {
      "op": "GT"
    },
    "2359": {
      "op": "ISZERO"
    },
    "2360": {
      "op": "PUSH2",
      "value": "0x951"
    },
    "2363": {
      "op": "JUMPI"
    },
    "2364": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2371": {
      "op": "SHL"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2374": {
      "op": "MSTORE"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2379": {
      "op": "MSTORE"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2384": {
      "op": "REVERT"
    },
    "2385": {
      "op": "JUMPDEST"
    },
    "2386": {
      "op": "POP"
    },
    "2387": {
      "op": "ADD"
    },
    "2388": {
      "op": "SWAP1"
    },
    "2389": {
      "jump": "o",
      "op": "JUMP"
    },
    "2390": {
      "op": "JUMPDEST"
    },
    "2391": {
      "op": "DUP1"
    },
    "2392": {
      "op": "SLOAD"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2395": {
      "op": "SWAP1"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2398": {
      "op": "DUP2"
    },
    "2399": {
      "op": "DUP2"
    },
    "2400": {
      "op": "SHR"
    },
    "2401": {
      "op": "SWAP1"
    },
    "2402": {
      "op": "DUP1"
    },
    "2403": {
      "op": "DUP4"
    },
    "2404": {
      "op": "AND"
    },
    "2405": {
      "op": "DUP1"
    },
    "2406": {
      "op": "PUSH2",
      "value": "0x970"
    },
    "2409": {
      "op": "JUMPI"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2412": {
      "op": "DUP4"
    },
    "2413": {
      "op": "AND"
    },
    "2414": {
      "op": "SWAP3"
    },
    "2415": {
      "op": "POP"
    },
    "2416": {
      "op": "JUMPDEST"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2419": {
      "op": "DUP1"
    },
    "2420": {
      "op": "DUP5"
    },
    "2421": {
      "op": "LT"
    },
    "2422": {
      "op": "DUP3"
    },
    "2423": {
      "op": "EQ"
    },
    "2424": {
      "op": "ISZERO"
    },
    "2425": {
      "op": "PUSH2",
      "value": "0x992"
    },
    "2428": {
      "op": "JUMPI"
    },
    "2429": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2436": {
      "op": "SHL"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2439": {
      "op": "MSTORE"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2444": {
      "op": "MSTORE"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2449": {
      "op": "REVERT"
    },
    "2450": {
      "op": "JUMPDEST"
    },
    "2451": {
      "op": "DUP2"
    },
    "2452": {
      "op": "DUP1"
    },
    "2453": {
      "op": "ISZERO"
    },
    "2454": {
      "op": "PUSH2",
      "value": "0x9A6"
    },
    "2457": {
      "op": "JUMPI"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2460": {
      "op": "DUP2"
    },
    "2461": {
      "op": "EQ"
    },
    "2462": {
      "op": "PUSH2",
      "value": "0x9B7"
    },
    "2465": {
      "op": "JUMPI"
    },
    "2466": {
      "op": "PUSH2",
      "value": "0x9E4"
    },
    "2469": {
      "op": "JUMP"
    },
    "2470": {
      "op": "JUMPDEST"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2473": {
      "op": "NOT"
    },
    "2474": {
      "op": "DUP7"
    },
    "2475": {
      "op": "AND"
    },
    "2476": {
      "op": "DUP10"
    },
    "2477": {
      "op": "MSTORE"
    },
    "2478": {
      "op": "DUP5"
    },
    "2479": {
      "op": "DUP10"
    },
    "2480": {
      "op": "ADD"
    },
    "2481": {
      "op": "SWAP7"
    },
    "2482": {
      "op": "POP"
    },
    "2483": {
      "op": "PUSH2",
      "value": "0x9E4"
    },
    "2486": {
      "op": "JUMP"
    },
    "2487": {
      "op": "JUMPDEST"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2490": {
      "op": "DUP9"
    },
    "2491": {
      "op": "DUP2"
    },
    "2492": {
      "op": "MSTORE"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2495": {
      "op": "SWAP1"
    },
    "2496": {
      "op": "KECCAK256"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2499": {
      "op": "JUMPDEST"
    },
    "2500": {
      "op": "DUP7"
    },
    "2501": {
      "op": "DUP2"
    },
    "2502": {
      "op": "LT"
    },
    "2503": {
      "op": "ISZERO"
    },
    "2504": {
      "op": "PUSH2",
      "value": "0x9DC"
    },
    "2507": {
      "op": "JUMPI"
    },
    "2508": {
      "op": "DUP2"
    },
    "2509": {
      "op": "SLOAD"
    },
    "2510": {
      "op": "DUP12"
    },
    "2511": {
      "op": "DUP3"
    },
    "2512": {
      "op": "ADD"
    },
    "2513": {
      "op": "MSTORE"
    },
    "2514": {
      "op": "SWAP1"
    },
    "2515": {
      "op": "DUP6"
    },
    "2516": {
      "op": "ADD"
    },
    "2517": {
      "op": "SWAP1"
    },
    "2518": {
      "op": "DUP4"
    },
    "2519": {
      "op": "ADD"
    },
    "2520": {
      "op": "PUSH2",
      "value": "0x9C3"
    },
    "2523": {
      "op": "JUMP"
    },
    "2524": {
      "op": "JUMPDEST"
    },
    "2525": {
      "op": "POP"
    },
    "2526": {
      "op": "POP"
    },
    "2527": {
      "op": "DUP5"
    },
    "2528": {
      "op": "DUP10"
    },
    "2529": {
      "op": "ADD"
    },
    "2530": {
      "op": "SWAP7"
    },
    "2531": {
      "op": "POP"
    },
    "2532": {
      "op": "JUMPDEST"
    },
    "2533": {
      "op": "POP"
    },
    "2534": {
      "op": "POP"
    },
    "2535": {
      "op": "POP"
    },
    "2536": {
      "op": "POP"
    },
    "2537": {
      "op": "POP"
    },
    "2538": {
      "op": "POP"
    },
    "2539": {
      "op": "SWAP3"
    },
    "2540": {
      "op": "SWAP2"
    },
    "2541": {
      "op": "POP"
    },
    "2542": {
      "op": "POP"
    },
    "2543": {
      "jump": "o",
      "op": "JUMP"
    },
    "2544": {
      "op": "JUMPDEST"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2547": {
      "op": "PUSH2",
      "value": "0x873"
    },
    "2550": {
      "op": "DUP3"
    },
    "2551": {
      "op": "DUP5"
    },
    "2552": {
      "op": "PUSH2",
      "value": "0x956"
    },
    "2555": {
      "jump": "i",
      "op": "JUMP"
    },
    "2556": {
      "op": "JUMPDEST"
    },
    "2557": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2564": {
      "op": "SHL"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2567": {
      "op": "MSTORE"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2572": {
      "op": "MSTORE"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2577": {
      "op": "REVERT"
    },
    "2578": {
      "op": "JUMPDEST"
    },
    "2579": {
      "op": "DUP1"
    },
    "2580": {
      "op": "MLOAD"
    },
    "2581": {
      "op": "PUSH2",
      "value": "0xA1D"
    },
    "2584": {
      "op": "DUP2"
    },
    "2585": {
      "op": "PUSH2",
      "value": "0x83E"
    },
    "2588": {
      "jump": "i",
      "op": "JUMP"
    },
    "2589": {
      "op": "JUMPDEST"
    },
    "2590": {
      "op": "SWAP2"
    },
    "2591": {
      "op": "SWAP1"
    },
    "2592": {
      "op": "POP"
    },
    "2593": {
      "jump": "o",
      "op": "JUMP"
    },
    "2594": {
      "op": "JUMPDEST"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2599": {
      "op": "DUP1"
    },
    "2600": {
      "op": "DUP4"
    },
    "2601": {
      "op": "DUP6"
    },
    "2602": {
      "op": "SUB"
    },
    "2603": {
      "op": "SLT"
    },
    "2604": {
      "op": "ISZERO"
    },
    "2605": {
      "op": "PUSH2",
      "value": "0xA35"
    },
    "2608": {
      "op": "JUMPI"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2611": {
      "op": "DUP1"
    },
    "2612": {
      "op": "REVERT"
    },
    "2613": {
      "op": "JUMPDEST"
    },
    "2614": {
      "op": "DUP3"
    },
    "2615": {
      "op": "MLOAD"
    },
    "2616": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2625": {
      "op": "DUP1"
    },
    "2626": {
      "op": "DUP3"
    },
    "2627": {
      "op": "GT"
    },
    "2628": {
      "op": "ISZERO"
    },
    "2629": {
      "op": "PUSH2",
      "value": "0xA4D"
    },
    "2632": {
      "op": "JUMPI"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2635": {
      "op": "DUP1"
    },
    "2636": {
      "op": "REVERT"
    },
    "2637": {
      "op": "JUMPDEST"
    },
    "2638": {
      "op": "DUP2"
    },
    "2639": {
      "op": "DUP6"
    },
    "2640": {
      "op": "ADD"
    },
    "2641": {
      "op": "SWAP2"
    },
    "2642": {
      "op": "POP"
    },
    "2643": {
      "op": "DUP6"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2646": {
      "op": "DUP4"
    },
    "2647": {
      "op": "ADD"
    },
    "2648": {
      "op": "SLT"
    },
    "2649": {
      "op": "PUSH2",
      "value": "0xA61"
    },
    "2652": {
      "op": "JUMPI"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2655": {
      "op": "DUP1"
    },
    "2656": {
      "op": "REVERT"
    },
    "2657": {
      "op": "JUMPDEST"
    },
    "2658": {
      "op": "DUP2"
    },
    "2659": {
      "op": "MLOAD"
    },
    "2660": {
      "op": "DUP2"
    },
    "2661": {
      "op": "DUP2"
    },
    "2662": {
      "op": "GT"
    },
    "2663": {
      "op": "ISZERO"
    },
    "2664": {
      "op": "PUSH2",
      "value": "0xA73"
    },
    "2667": {
      "op": "JUMPI"
    },
    "2668": {
      "op": "PUSH2",
      "value": "0xA73"
    },
    "2671": {
      "op": "PUSH2",
      "value": "0x9FC"
    },
    "2674": {
      "jump": "i",
      "op": "JUMP"
    },
    "2675": {
      "op": "JUMPDEST"
    },
    "2676": {
      "op": "DUP1"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2679": {
      "op": "SHL"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2682": {
      "op": "MLOAD"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2685": {
      "op": "NOT"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2688": {
      "op": "DUP4"
    },
    "2689": {
      "op": "ADD"
    },
    "2690": {
      "op": "AND"
    },
    "2691": {
      "op": "DUP2"
    },
    "2692": {
      "op": "ADD"
    },
    "2693": {
      "op": "DUP2"
    },
    "2694": {
      "op": "DUP2"
    },
    "2695": {
      "op": "LT"
    },
    "2696": {
      "op": "DUP6"
    },
    "2697": {
      "op": "DUP3"
    },
    "2698": {
      "op": "GT"
    },
    "2699": {
      "op": "OR"
    },
    "2700": {
      "op": "ISZERO"
    },
    "2701": {
      "op": "PUSH2",
      "value": "0xA98"
    },
    "2704": {
      "op": "JUMPI"
    },
    "2705": {
      "op": "PUSH2",
      "value": "0xA98"
    },
    "2708": {
      "op": "PUSH2",
      "value": "0x9FC"
    },
    "2711": {
      "jump": "i",
      "op": "JUMP"
    },
    "2712": {
      "op": "JUMPDEST"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2715": {
      "op": "MSTORE"
    },
    "2716": {
      "op": "SWAP2"
    },
    "2717": {
      "op": "DUP3"
    },
    "2718": {
      "op": "MSTORE"
    },
    "2719": {
      "op": "DUP5"
    },
    "2720": {
      "op": "DUP3"
    },
    "2721": {
      "op": "ADD"
    },
    "2722": {
      "op": "SWAP3"
    },
    "2723": {
      "op": "POP"
    },
    "2724": {
      "op": "DUP4"
    },
    "2725": {
      "op": "DUP2"
    },
    "2726": {
      "op": "ADD"
    },
    "2727": {
      "op": "DUP6"
    },
    "2728": {
      "op": "ADD"
    },
    "2729": {
      "op": "SWAP2"
    },
    "2730": {
      "op": "DUP9"
    },
    "2731": {
      "op": "DUP4"
    },
    "2732": {
      "op": "GT"
    },
    "2733": {
      "op": "ISZERO"
    },
    "2734": {
      "op": "PUSH2",
      "value": "0xAB6"
    },
    "2737": {
      "op": "JUMPI"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2740": {
      "op": "DUP1"
    },
    "2741": {
      "op": "REVERT"
    },
    "2742": {
      "op": "JUMPDEST"
    },
    "2743": {
      "op": "SWAP4"
    },
    "2744": {
      "op": "DUP6"
    },
    "2745": {
      "op": "ADD"
    },
    "2746": {
      "op": "SWAP4"
    },
    "2747": {
      "op": "JUMPDEST"
    },
    "2748": {
      "op": "DUP3"
    },
    "2749": {
      "op": "DUP6"
    },
    "2750": {
      "op": "LT"
    },
    "2751": {
      "op": "ISZERO"
    },
    "2752": {
      "op": "PUSH2",
      "value": "0xADB"
    },
    "2755": {
      "op": "JUMPI"
    },
    "2756": {
      "op": "PUSH2",
      "value": "0xACC"
    },
    "2759": {
      "op": "DUP6"
    },
    "2760": {
      "op": "PUSH2",
      "value": "0xA12"
    },
    "2763": {
      "jump": "i",
      "op": "JUMP"
    },
    "2764": {
      "op": "JUMPDEST"
    },
    "2765": {
      "op": "DUP5"
    },
    "2766": {
      "op": "MSTORE"
    },
    "2767": {
      "op": "SWAP4"
    },
    "2768": {
      "op": "DUP6"
    },
    "2769": {
      "op": "ADD"
    },
    "2770": {
      "op": "SWAP4"
    },
    "2771": {
      "op": "SWAP3"
    },
    "2772": {
      "op": "DUP6"
    },
    "2773": {
      "op": "ADD"
    },
    "2774": {
      "op": "SWAP3"
    },
    "2775": {
      "op": "PUSH2",
      "value": "0xABB"
    },
    "2778": {
      "op": "JUMP"
    },
    "2779": {
      "op": "JUMPDEST"
    },
    "2780": {
      "op": "SWAP9"
    },
    "2781": {
      "op": "SWAP8"
    },
    "2782": {
      "op": "POP"
    },
    "2783": {
      "op": "POP"
    },
    "2784": {
      "op": "POP"
    },
    "2785": {
      "op": "POP"
    },
    "2786": {
      "op": "POP"
    },
    "2787": {
      "op": "POP"
    },
    "2788": {
      "op": "POP"
    },
    "2789": {
      "op": "POP"
    },
    "2790": {
      "jump": "o",
      "op": "JUMP"
    },
    "2791": {
      "op": "JUMPDEST"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2794": {
      "op": "PUSH2",
      "value": "0xAF3"
    },
    "2797": {
      "op": "DUP3"
    },
    "2798": {
      "op": "DUP6"
    },
    "2799": {
      "op": "PUSH2",
      "value": "0x956"
    },
    "2802": {
      "jump": "i",
      "op": "JUMP"
    },
    "2803": {
      "op": "JUMPDEST"
    },
    "2804": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2806": {
      "op": "SWAP4"
    },
    "2807": {
      "op": "SWAP1"
    },
    "2808": {
      "op": "SWAP4"
    },
    "2809": {
      "op": "SHL"
    },
    "2810": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2823": {
      "op": "NOT"
    },
    "2824": {
      "op": "AND"
    },
    "2825": {
      "op": "DUP4"
    },
    "2826": {
      "op": "MSTORE"
    },
    "2827": {
      "op": "POP"
    },
    "2828": {
      "op": "POP"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2831": {
      "op": "ADD"
    },
    "2832": {
      "op": "SWAP2"
    },
    "2833": {
      "op": "SWAP1"
    },
    "2834": {
      "op": "POP"
    },
    "2835": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d70673a4aebb907a37d6c0c4c639fcf116b4117f",
  "source": "/* SPDX-License-Identifier: MIT */\npragma solidity =0.8.10;\n\n/* Package Imports */\nimport {PRBMathUD60x18} from \"@hifi-finance/prb-math/contracts/PRBMathUD60x18.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n/* Package Interface Imports */\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/* Internal Imports */\nimport {PhantomStorageMixin} from \"../../mixins/PhantomStorageMixin.sol\";\n\n/* Internal Interface Imports */\nimport {IPhantomERC20} from \"../../../interfaces/core/erc20/IPhantomERC20.sol\";\nimport {IPhantomTreasury} from \"../../../interfaces/core/IPhantomTreasury.sol\";\nimport {IPhantomAllocator} from \"../../../interfaces/level0/finance/IPhantomAllocator.sol\";\n\nimport {ISpiritSwapGauge} from \"../../../interfaces/external/ISpiritSwapGauge.sol\";\nimport {IyVault} from \"../../../interfaces/external/IyVault.sol\";\n\n/**\n * @title PhantomAllocator\n * @author PhantomDao Team\n * @notice The contract responsible for holding all ERC20 assets\n */\ncontract PhantomAllocator is PhantomStorageMixin {\n    using PRBMathUD60x18 for uint256;\n    using SafeERC20 for IERC20;\n\n    constructor(address storageFactoryAddress) PhantomStorageMixin(storageFactoryAddress) {\n        return;\n    }\n\n    function allocateAssets() external {\n        address token;\n        uint256 balance;\n        uint256 percentage;\n        uint256 toSend;\n        IyVault yearnVault;\n        address[] memory destinations;\n        address[] memory lpTokens = getLPTokens();\n        address[] memory singleTokens = getSingleTokens();\n\n        for (uint256 i = 0; i < lpTokens.length; i += 1) {\n            token = lpTokens[i];\n            if (IERC20(token) != SpiritSwapGaugeFor(token).TOKEN()) revert(\"F\");\n            balance = IERC20(token).balanceOf(address(PhantomVault()));\n            PhantomTreasury().swap(\n                address(this),\n                0,\n                address(0),\n                balance,\n                address(token),\n                standardAccountKeys(),\n                standardAccountPercentages()\n            );\n            SpiritSwapGaugeFor(token).deposit(balance);\n            // Check to see if we have some rewards we can pull\n            SpiritSwapGaugeFor(token).withdrawAll();\n            // if redacted: spirit -> liquidate to RFV tokens (DAI, MIM, gOHM) -> re go to yearn\n            // if not redacted: 50: take spirit -> inSpirit -> store and use for emissions voting, 50: if redacted\n            balance = inSpiritToken().balanceOf(address(this));\n            PhantomTreasury().swap(\n                address(this),\n                balance,\n                address(inSpiritToken()),\n                0,\n                address(0),\n                standardAccountKeys(),\n                standardAccountPercentages()\n            );\n        }\n    }\n\n    function getLPTokens() internal view returns (address[] memory) {\n        return PhantomStorage().getAddressArray(keccak256(abi.encodePacked(phantom.allocator.tokens.lp)));\n    }\n\n    function getSingleTokens() internal view returns (address[] memory) {\n        return PhantomStorage().getAddressArray(keccak256(abi.encodePacked(phantom.allocator.tokens.single)));\n    }\n\n    function getPercentageForTokenWithDestination(address inToken, address inDestination)\n        internal\n        view\n        returns (uint256)\n    {\n        return\n            PhantomStorage().getUint(\n                keccak256(abi.encodePacked(phantom.allocator.tokens.dest_percentage, inToken, inDestination))\n            );\n    }\n\n    function getDestinationsFor(address inToken) internal view returns (address[] memory) {\n        return\n            PhantomStorage().getAddressArray(\n                keccak256(abi.encodePacked(phantom.allocator.tokens.destinations, inToken))\n            );\n    }\n\n    function SpiritSwapGaugeFor(address inToken) internal view returns (ISpiritSwapGauge) {\n        return\n            ISpiritSwapGauge(\n                PhantomStorage().getAddress(keccak256(abi.encodePacked(phantom.routing.spirit_gauge_address, inToken)))\n            );\n    }\n\n    function inSpiritToken() internal view returns (IERC20) {\n        IERC20(PhantomStorage().getAddress(keccak256(phantom.allocator.tokens.addresses.spirit)));\n    }\n}\n",
  "sourceMap": "533:71:66:-:0;;;;;-1:-1:-1;;;533:71:66;;;;1017:3244:49;533:71:66;;;;;;;;-1:-1:-1;;;533:71:66;;;;;1017:3244:49;533:71:66;;;;;;;;;-1:-1:-1;533:71:66;1017:3244:49;;-1:-1:-1;;503:101:66;;-1:-1:-1;;533:71:66;503:101;:::i;:::-;-1:-1:-1;503:101:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;503:101:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;647:3557:66;;;669:700;;;;;;;;;;;;;;;;;647:3557;;;669:700;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;669:700:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;669:700:66;;;;;;;;;;;;;;;;-1:-1:-1;;;669:700:66;647:3557;;;1383:367;;-1:-1:-1;1383:367:66;;;;;;;;;;;;647:3557;;-1:-1:-1;647:3557:66;;;;1383:367;;;;;;;;;;;;1472:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1383:367;;;;;;;;;;;;;;;;;;;;;;;;;;647:3557;;;1764:687;;1821:366;;;;;;;;;;;;;647:3557;;;;1764:687;;;;;;;1792:645;;;;;;1821:366;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1792:645;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1764:687;;;647:3557;;;;2465:454;;;;;;;;2491:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2465:454;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:3557;;;;2933:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:3557;;3026:434;;;3052:268;;;;;;;;;;;;;647:3557;;;;;3026:434;;;;;;;;3052:268;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3026:434;;;3338:59;;;;;;;;;;;;;;;;;;;;3026:434;;;;;;;;;;;;;;;;;;;;;;;;;;647:3557;;;3474:479;;;;;;;;;;;;;;;647:3557;;;;;3474:479;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:3557;;;;3967:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:3557;;611:3593;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;611:3593:66;;;;;;;;;;;;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;2005:41:61;;1143:109:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:13;1806:7;:22;2567:15:61;:32;;-1:-1:-1;;;;;2567:32:61;;-1:-1:-1;;;;;;2567:32:61;;;;;;1143:109:49;1017:3244;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1017:3244:49;;;-1:-1:-1;1017:3244:49;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:290:91;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:91;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:91:o;309:380::-;388:1;384:12;;;;431;;;452:61;;506:4;498:6;494:17;484:27;;452:61;559:2;551:6;548:14;528:18;525:38;522:161;;;605:10;600:3;596:20;593:1;586:31;640:4;637:1;630:15;668:4;665:1;658:15;522:161;;309:380;;;:::o;:::-;1017:3244:49;;;;;;",
  "sourcePath": "contracts/level0/finance/PhantomAllocator.sol",
  "type": "contract"
}