{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "storageFactoryAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "PhantomStorageMixin__ContractNotFoundByAddressOrIsOutdated",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "contractName",
          "type": "bytes32"
        }
      ],
      "name": "PhantomStorageMixin__ContractNotFoundByNameOrIsOutdated",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "PhantomStorageMixin__UserIsNotGuardian",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dexRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dexFactory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "inAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "inToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "outToken",
          "type": "address"
        }
      ],
      "name": "getQuote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dexRouter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "inAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minOutAmount",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "keys",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "percentages",
          "type": "uint256[]"
        }
      ],
      "name": "swapReceiveMinimum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dexRouter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "outAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxInAmount",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "keys",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "percentages",
          "type": "uint256[]"
        }
      ],
      "name": "swapSpendMaximum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "100": "interfaces/libs/IUniswapV2Router02.sol",
    "101": "interfaces/mixins/IPhantomStorageMixin.sol",
    "11": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/security/ReentrancyGuard.sol",
    "13": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
    "30": "/Users/admin/.brownie/packages/hifi-finance/prb-math@2.4.1/contracts/PRBMath.sol",
    "32": "/Users/admin/.brownie/packages/hifi-finance/prb-math@2.4.1/contracts/PRBMathUD60x18.sol",
    "34": "/Users/admin/.brownie/packages/uniswap/v2-core@1.0.1/contracts/interfaces/IUniswapV2Pair.sol",
    "49": "contracts/level0/finance/routers/PhantomDexRouter.sol",
    "68": "contracts/mixins/PhantomStorageMixin.sol",
    "75": "contracts/storage/PhantomStorageKeys.sol",
    "89": "interfaces/level0/finance/routers/IPhantomDexRouter.sol"
  },
  "ast": {
    "absolutePath": "contracts/level0/finance/routers/PhantomDexRouter.sol",
    "exportedSymbols": {
      "IERC20": [
        15755
      ],
      "IPhantomDexRouter": [
        19385
      ],
      "IUniswapV2Factory": [
        19326
      ],
      "IUniswapV2Pair": [
        16622
      ],
      "IUniswapV2Router02": [
        16710
      ],
      "PRBMathUD60x18": [
        16365
      ],
      "PhantomDexRouter": [
        7212
      ],
      "PhantomStorageMixin": [
        14011
      ]
    },
    "id": 7213,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6726,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:24:49"
      },
      {
        "absolutePath": "/Users/admin/.brownie/packages/hifi-finance/prb-math@2.4.1/contracts/PRBMathUD60x18.sol",
        "file": "@hifi-finance/prb-math/contracts/PRBMathUD60x18.sol",
        "id": 6728,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7213,
        "sourceUnit": 16366,
        "src": "83:83:49",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6727,
              "name": "PRBMathUD60x18",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "91:14:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 6730,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7213,
        "sourceUnit": 15756,
        "src": "200:70:49",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6729,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "208:6:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/admin/.brownie/packages/uniswap/v2-core@1.0.1/contracts/interfaces/IUniswapV2Pair.sol",
        "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
        "id": 6732,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7213,
        "sourceUnit": 16623,
        "src": "271:88:49",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6731,
              "name": "IUniswapV2Pair",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "279:14:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/admin/.brownie/packages/uniswap/v2-core@1.0.1/contracts/interfaces/IUniswapV2Factory.sol",
        "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
        "id": 6734,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7213,
        "sourceUnit": 19327,
        "src": "360:94:49",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6733,
              "name": "IUniswapV2Factory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "368:17:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/libs/IUniswapV2Router02.sol",
        "file": "../../../../interfaces/libs/IUniswapV2Router02.sol",
        "id": 6736,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7213,
        "sourceUnit": 16711,
        "src": "455:86:49",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6735,
              "name": "IUniswapV2Router02",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "463:18:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/mixins/PhantomStorageMixin.sol",
        "file": "../../../mixins/PhantomStorageMixin.sol",
        "id": 6738,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7213,
        "sourceUnit": 14012,
        "src": "566:76:49",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6737,
              "name": "PhantomStorageMixin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "574:19:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/level0/finance/routers/IPhantomDexRouter.sol",
        "file": "../../../../interfaces/level0/finance/routers/IPhantomDexRouter.sol",
        "id": 6740,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7213,
        "sourceUnit": 19386,
        "src": "677:102:49",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6739,
              "name": "IPhantomDexRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "685:17:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6742,
              "name": "PhantomStorageMixin",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14011,
              "src": "914:19:49"
            },
            "id": 6743,
            "nodeType": "InheritanceSpecifier",
            "src": "914:19:49"
          },
          {
            "baseName": {
              "id": 6744,
              "name": "IPhantomDexRouter",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19385,
              "src": "935:17:49"
            },
            "id": 6745,
            "nodeType": "InheritanceSpecifier",
            "src": "935:17:49"
          }
        ],
        "canonicalName": "PhantomDexRouter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6741,
          "nodeType": "StructuredDocumentation",
          "src": "781:103:49",
          "text": " @title PhantomDexRouter\n @author PhantomDao Team\n @notice Communicate with a UniSwap dex"
        },
        "fullyImplemented": true,
        "id": 7212,
        "linearizedBaseContracts": [
          7212,
          19385,
          14011,
          22619,
          22603,
          15621
        ],
        "name": "PhantomDexRouter",
        "nameLocation": "894:16:49",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6748,
            "libraryName": {
              "id": 6746,
              "name": "PRBMathUD60x18",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16365,
              "src": "965:14:49"
            },
            "nodeType": "UsingForDirective",
            "src": "959:33:49",
            "typeName": {
              "id": 6747,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "984:7:49",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 6757,
              "nodeType": "Block",
              "src": "1084:23:49",
              "statements": [
                {
                  "functionReturnParameters": 6755,
                  "id": 6756,
                  "nodeType": "Return",
                  "src": "1094:7:49"
                }
              ]
            },
            "id": 6758,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6753,
                    "name": "storageFactoryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6750,
                    "src": "1061:21:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 6754,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6752,
                  "name": "PhantomStorageMixin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14011,
                  "src": "1041:19:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "1041:42:49"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6750,
                  "mutability": "mutable",
                  "name": "storageFactoryAddress",
                  "nameLocation": "1018:21:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6758,
                  "src": "1010:29:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1009:31:49"
            },
            "returnParameters": {
              "id": 6755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1084:0:49"
            },
            "scope": 7212,
            "src": "998:109:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19344
            ],
            "body": {
              "id": 6798,
              "nodeType": "Block",
              "src": "1585:223:49",
              "statements": [
                {
                  "assignments": [
                    6775,
                    6777
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6775,
                      "mutability": "mutable",
                      "name": "inReserves",
                      "nameLocation": "1604:10:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 6798,
                      "src": "1596:18:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6774,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1596:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6777,
                      "mutability": "mutable",
                      "name": "outReserves",
                      "nameLocation": "1624:11:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 6798,
                      "src": "1616:19:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6776,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1616:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6783,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6779,
                        "name": "dexFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6762,
                        "src": "1651:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6780,
                        "name": "inToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6766,
                        "src": "1663:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6781,
                        "name": "outToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6768,
                        "src": "1672:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6778,
                      "name": "getReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7119,
                      "src": "1639:11:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 6782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1639:42:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1595:86:49"
                },
                {
                  "assignments": [
                    6785
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6785,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "1699:5:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 6798,
                      "src": "1691:13:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6784,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1691:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6794,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6790,
                        "name": "inAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6764,
                        "src": "1743:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6791,
                        "name": "inReserves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6775,
                        "src": "1753:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6792,
                        "name": "outReserves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6777,
                        "src": "1765:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6787,
                            "name": "dexRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6760,
                            "src": "1726:9:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6786,
                          "name": "IUniswapV2Router02",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16710,
                          "src": "1707:18:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$16710_$",
                            "typeString": "type(contract IUniswapV2Router02)"
                          }
                        },
                        "id": 6788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1707:29:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$16710",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "id": 6789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "quote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25709,
                      "src": "1707:35:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure external returns (uint256)"
                      }
                    },
                    "id": 6793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1707:70:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1691:86:49"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 6795,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6785,
                        "src": "1795:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 6796,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1794:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6773,
                  "id": 6797,
                  "nodeType": "Return",
                  "src": "1787:14:49"
                }
              ]
            },
            "functionSelector": "2a0bbedf",
            "id": 6799,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getQuote",
            "nameLocation": "1389:8:49",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6770,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1558:8:49"
            },
            "parameters": {
              "id": 6769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6760,
                  "mutability": "mutable",
                  "name": "dexRouter",
                  "nameLocation": "1415:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6799,
                  "src": "1407:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1407:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6762,
                  "mutability": "mutable",
                  "name": "dexFactory",
                  "nameLocation": "1442:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6799,
                  "src": "1434:18:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6764,
                  "mutability": "mutable",
                  "name": "inAmount",
                  "nameLocation": "1470:8:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6799,
                  "src": "1462:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1462:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6766,
                  "mutability": "mutable",
                  "name": "inToken",
                  "nameLocation": "1496:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6799,
                  "src": "1488:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1488:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6768,
                  "mutability": "mutable",
                  "name": "outToken",
                  "nameLocation": "1521:8:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6799,
                  "src": "1513:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1513:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1397:138:49"
            },
            "returnParameters": {
              "id": 6773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6772,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6799,
                  "src": "1576:7:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1576:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1575:9:49"
            },
            "scope": 7212,
            "src": "1380:428:49",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              19364
            ],
            "body": {
              "id": 6859,
              "nodeType": "Block",
              "src": "2107:323:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6823,
                        "name": "inAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6803,
                        "src": "2125:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 6824,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6808,
                          "src": "2135:4:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 6826,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 6825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2140:1:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2135:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6827,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6813,
                        "src": "2144:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 6828,
                        "name": "percentages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6816,
                        "src": "2150:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 6822,
                      "name": "preSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6953,
                      "src": "2117:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,bytes32[] memory,uint256[] memory)"
                      }
                    },
                    "id": 6829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2117:45:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6830,
                  "nodeType": "ExpressionStatement",
                  "src": "2117:45:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6835,
                        "name": "inAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6803,
                        "src": "2240:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6836,
                        "name": "minOutAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6805,
                        "src": "2263:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6837,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6808,
                        "src": "2290:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6840,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2316:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhantomDexRouter_$7212",
                              "typeString": "contract PhantomDexRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhantomDexRouter_$7212",
                              "typeString": "contract PhantomDexRouter"
                            }
                          ],
                          "id": 6839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2308:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6838,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2308:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2308:13:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6842,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6810,
                        "src": "2336:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6832,
                            "name": "dexRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6801,
                            "src": "2191:9:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6831,
                          "name": "IUniswapV2Router02",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16710,
                          "src": "2172:18:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$16710_$",
                            "typeString": "type(contract IUniswapV2Router02)"
                          }
                        },
                        "id": 6833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2172:29:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$16710",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "id": 6834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25617,
                      "src": "2172:54:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 6843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2172:182:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 6844,
                  "nodeType": "ExpressionStatement",
                  "src": "2172:182:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 6846,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6808,
                          "src": "2373:4:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 6848,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 6847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2378:1:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2373:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 6849,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6808,
                          "src": "2382:4:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 6854,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 6850,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6808,
                              "src": "2387:4:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 6851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2387:11:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 6852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2401:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2387:15:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2382:21:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6855,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6813,
                        "src": "2405:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 6856,
                        "name": "percentages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6816,
                        "src": "2411:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 6845,
                      "name": "postSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7069,
                      "src": "2364:8:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,bytes32[] memory,uint256[] memory)"
                      }
                    },
                    "id": 6857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2364:59:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6858,
                  "nodeType": "ExpressionStatement",
                  "src": "2364:59:49"
                }
              ]
            },
            "functionSelector": "44b291c3",
            "id": 6860,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6820,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6819,
                  "name": "onlyRegisteredContracts",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13961,
                  "src": "2083:23:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "2083:23:49"
              }
            ],
            "name": "swapReceiveMinimum",
            "nameLocation": "1823:18:49",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6818,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2074:8:49"
            },
            "parameters": {
              "id": 6817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6801,
                  "mutability": "mutable",
                  "name": "dexRouter",
                  "nameLocation": "1859:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6860,
                  "src": "1851:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1851:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6803,
                  "mutability": "mutable",
                  "name": "inAmount",
                  "nameLocation": "1886:8:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6860,
                  "src": "1878:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1878:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6805,
                  "mutability": "mutable",
                  "name": "minOutAmount",
                  "nameLocation": "1912:12:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6860,
                  "src": "1904:20:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1904:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6808,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "1951:4:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6860,
                  "src": "1934:21:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6806,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1934:7:49",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 6807,
                    "nodeType": "ArrayTypeName",
                    "src": "1934:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6810,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "1973:8:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6860,
                  "src": "1965:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1965:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6813,
                  "mutability": "mutable",
                  "name": "keys",
                  "nameLocation": "2008:4:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6860,
                  "src": "1991:21:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6811,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1991:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 6812,
                    "nodeType": "ArrayTypeName",
                    "src": "1991:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6816,
                  "mutability": "mutable",
                  "name": "percentages",
                  "nameLocation": "2039:11:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6860,
                  "src": "2022:28:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6814,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2022:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6815,
                    "nodeType": "ArrayTypeName",
                    "src": "2022:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1841:215:49"
            },
            "returnParameters": {
              "id": 6821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2107:0:49"
            },
            "scope": 7212,
            "src": "1814:616:49",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              19384
            ],
            "body": {
              "id": 6920,
              "nodeType": "Block",
              "src": "2727:352:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6884,
                        "name": "maxInAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6866,
                        "src": "2745:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 6885,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6869,
                          "src": "2758:4:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 6887,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 6886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2763:1:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2758:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6888,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6874,
                        "src": "2767:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 6889,
                        "name": "percentages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6877,
                        "src": "2773:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 6883,
                      "name": "preSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6953,
                      "src": "2737:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,bytes32[] memory,uint256[] memory)"
                      }
                    },
                    "id": 6890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2737:48:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6891,
                  "nodeType": "ExpressionStatement",
                  "src": "2737:48:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6896,
                        "name": "outAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6864,
                        "src": "2892:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6897,
                        "name": "maxInAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6866,
                        "src": "2915:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6898,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6869,
                        "src": "2940:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6901,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2966:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhantomDexRouter_$7212",
                              "typeString": "contract PhantomDexRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhantomDexRouter_$7212",
                              "typeString": "contract PhantomDexRouter"
                            }
                          ],
                          "id": 6900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2958:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6899,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2958:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2958:13:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6903,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6871,
                        "src": "2985:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6893,
                            "name": "dexRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6862,
                            "src": "2814:9:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6892,
                          "name": "IUniswapV2Router02",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16710,
                          "src": "2795:18:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$16710_$",
                            "typeString": "type(contract IUniswapV2Router02)"
                          }
                        },
                        "id": 6894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2795:29:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$16710",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "id": 6895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16683,
                      "src": "2795:83:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                      }
                    },
                    "id": 6904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2795:208:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6905,
                  "nodeType": "ExpressionStatement",
                  "src": "2795:208:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 6907,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6869,
                          "src": "3022:4:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 6909,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 6908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3027:1:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3022:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 6910,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6869,
                          "src": "3031:4:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 6915,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 6911,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6869,
                              "src": "3036:4:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 6912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3036:11:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 6913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3050:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3036:15:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3031:21:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6916,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6874,
                        "src": "3054:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 6917,
                        "name": "percentages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6877,
                        "src": "3060:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 6906,
                      "name": "postSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7069,
                      "src": "3013:8:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,bytes32[] memory,uint256[] memory)"
                      }
                    },
                    "id": 6918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3013:59:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6919,
                  "nodeType": "ExpressionStatement",
                  "src": "3013:59:49"
                }
              ]
            },
            "functionSelector": "9c221fdc",
            "id": 6921,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6881,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6880,
                  "name": "onlyRegisteredContracts",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13961,
                  "src": "2703:23:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "2703:23:49"
              }
            ],
            "name": "swapSpendMaximum",
            "nameLocation": "2445:16:49",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6879,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2694:8:49"
            },
            "parameters": {
              "id": 6878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6862,
                  "mutability": "mutable",
                  "name": "dexRouter",
                  "nameLocation": "2479:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6921,
                  "src": "2471:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2471:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6864,
                  "mutability": "mutable",
                  "name": "outAmount",
                  "nameLocation": "2506:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6921,
                  "src": "2498:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2498:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6866,
                  "mutability": "mutable",
                  "name": "maxInAmount",
                  "nameLocation": "2533:11:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6921,
                  "src": "2525:19:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6869,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "2571:4:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6921,
                  "src": "2554:21:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6867,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2554:7:49",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 6868,
                    "nodeType": "ArrayTypeName",
                    "src": "2554:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6871,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "2593:8:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6921,
                  "src": "2585:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2585:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6874,
                  "mutability": "mutable",
                  "name": "keys",
                  "nameLocation": "2628:4:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6921,
                  "src": "2611:21:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6872,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2611:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 6873,
                    "nodeType": "ArrayTypeName",
                    "src": "2611:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6877,
                  "mutability": "mutable",
                  "name": "percentages",
                  "nameLocation": "2659:11:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6921,
                  "src": "2642:28:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6875,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2642:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6876,
                    "nodeType": "ArrayTypeName",
                    "src": "2642:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2461:215:49"
            },
            "returnParameters": {
              "id": 6882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2727:0:49"
            },
            "scope": 7212,
            "src": "2436:643:49",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6952,
              "nodeType": "Block",
              "src": "3515:118:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6939,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3556:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhantomDexRouter_$7212",
                              "typeString": "contract PhantomDexRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhantomDexRouter_$7212",
                              "typeString": "contract PhantomDexRouter"
                            }
                          ],
                          "id": 6938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3548:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6937,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3548:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3548:13:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 6941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3563:1:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3574:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3566:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6942,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3566:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3566:10:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6946,
                        "name": "requiredFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6923,
                        "src": "3578:13:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6947,
                        "name": "requiredToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6925,
                        "src": "3593:13:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6948,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6928,
                        "src": "3608:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 6949,
                        "name": "percentages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6931,
                        "src": "3614:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6934,
                          "name": "PhantomTreasury",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13542,
                          "src": "3525:15:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPhantomTreasury_$17231_$",
                            "typeString": "function () view returns (contract IPhantomTreasury)"
                          }
                        },
                        "id": 6935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3525:17:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPhantomTreasury_$17231",
                          "typeString": "contract IPhantomTreasury"
                        }
                      },
                      "id": 6936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17131,
                      "src": "3525:22:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256,address,bytes32[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 6950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3525:101:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6951,
                  "nodeType": "ExpressionStatement",
                  "src": "3525:101:49"
                }
              ]
            },
            "id": 6953,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "preSwap",
            "nameLocation": "3361:7:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6923,
                  "mutability": "mutable",
                  "name": "requiredFunds",
                  "nameLocation": "3386:13:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6953,
                  "src": "3378:21:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3378:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6925,
                  "mutability": "mutable",
                  "name": "requiredToken",
                  "nameLocation": "3417:13:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6953,
                  "src": "3409:21:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3409:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6928,
                  "mutability": "mutable",
                  "name": "keys",
                  "nameLocation": "3457:4:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6953,
                  "src": "3440:21:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6926,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3440:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 6927,
                    "nodeType": "ArrayTypeName",
                    "src": "3440:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6931,
                  "mutability": "mutable",
                  "name": "percentages",
                  "nameLocation": "3488:11:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 6953,
                  "src": "3471:28:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6929,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3471:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6930,
                    "nodeType": "ArrayTypeName",
                    "src": "3471:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3368:137:49"
            },
            "returnParameters": {
              "id": 6933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3515:0:49"
            },
            "scope": 7212,
            "src": "3352:281:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7068,
              "nodeType": "Block",
              "src": "3799:929:49",
              "statements": [
                {
                  "assignments": [
                    6967
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6967,
                      "mutability": "mutable",
                      "name": "sentBalance",
                      "nameLocation": "3817:11:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 7068,
                      "src": "3809:19:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6966,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3809:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6977,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6974,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3867:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhantomDexRouter_$7212",
                              "typeString": "contract PhantomDexRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhantomDexRouter_$7212",
                              "typeString": "contract PhantomDexRouter"
                            }
                          ],
                          "id": 6973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3859:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6972,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3859:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3859:13:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6969,
                            "name": "sentToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6955,
                            "src": "3838:9:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6968,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15755,
                          "src": "3831:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$15755_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 6970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3831:17:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$15755",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15694,
                      "src": "3831:27:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 6976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3831:42:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3809:64:49"
                },
                {
                  "assignments": [
                    6979
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6979,
                      "mutability": "mutable",
                      "name": "receivedBalance",
                      "nameLocation": "3891:15:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 7068,
                      "src": "3883:23:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6978,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3883:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6989,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6986,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3949:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhantomDexRouter_$7212",
                              "typeString": "contract PhantomDexRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhantomDexRouter_$7212",
                              "typeString": "contract PhantomDexRouter"
                            }
                          ],
                          "id": 6985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3941:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6984,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3941:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3941:13:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6981,
                            "name": "receivedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6957,
                            "src": "3916:13:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6980,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15755,
                          "src": "3909:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$15755_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 6982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3909:21:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$15755",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15694,
                      "src": "3909:31:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 6988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3909:46:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3883:72:49"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6990,
                      "name": "sentBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6967,
                      "src": "3970:11:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 6991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3985:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3970:16:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7028,
                  "nodeType": "IfStatement",
                  "src": "3966:365:49",
                  "trueBody": {
                    "id": 7027,
                    "nodeType": "Block",
                    "src": "3988:343:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 6999,
                                    "name": "PhantomTreasury",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13542,
                                    "src": "4036:15:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPhantomTreasury_$17231_$",
                                      "typeString": "function () view returns (contract IPhantomTreasury)"
                                    }
                                  },
                                  "id": 7000,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4036:17:49",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPhantomTreasury_$17231",
                                    "typeString": "contract IPhantomTreasury"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IPhantomTreasury_$17231",
                                    "typeString": "contract IPhantomTreasury"
                                  }
                                ],
                                "id": 6998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4028:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 6997,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4028:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4028:26:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7002,
                              "name": "sentBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6967,
                              "src": "4056:11:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 6994,
                                  "name": "sentToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6955,
                                  "src": "4009:9:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 6993,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15755,
                                "src": "4002:6:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$15755_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 6995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4002:17:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$15755",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 6996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15724,
                            "src": "4002:25:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 7003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4002:66:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7004,
                        "nodeType": "ExpressionStatement",
                        "src": "4002:66:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 7010,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4130:4:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PhantomDexRouter_$7212",
                                    "typeString": "contract PhantomDexRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PhantomDexRouter_$7212",
                                    "typeString": "contract PhantomDexRouter"
                                  }
                                ],
                                "id": 7009,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4122:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7008,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4122:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4122:13:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7012,
                              "name": "sentBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6967,
                              "src": "4153:11:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 7015,
                                    "name": "PhantomTreasury",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13542,
                                    "src": "4190:15:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPhantomTreasury_$17231_$",
                                      "typeString": "function () view returns (contract IPhantomTreasury)"
                                    }
                                  },
                                  "id": 7016,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4190:17:49",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPhantomTreasury_$17231",
                                    "typeString": "contract IPhantomTreasury"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IPhantomTreasury_$17231",
                                    "typeString": "contract IPhantomTreasury"
                                  }
                                ],
                                "id": 7014,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4182:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7013,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4182:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4182:26:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 7018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4226:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 7021,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4253:1:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 7020,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4245:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7019,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4245:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4245:10:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7023,
                              "name": "keys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6960,
                              "src": "4273:4:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            {
                              "id": 7024,
                              "name": "percentages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6963,
                              "src": "4295:11:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 7005,
                                "name": "PhantomTreasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13542,
                                "src": "4082:15:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPhantomTreasury_$17231_$",
                                  "typeString": "function () view returns (contract IPhantomTreasury)"
                                }
                              },
                              "id": 7006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4082:17:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPhantomTreasury_$17231",
                                "typeString": "contract IPhantomTreasury"
                              }
                            },
                            "id": 7007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17131,
                            "src": "4082:22:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,address,uint256,address,bytes32[] memory,uint256[] memory) external"
                            }
                          },
                          "id": 7025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4082:238:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7026,
                        "nodeType": "ExpressionStatement",
                        "src": "4082:238:49"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7029,
                      "name": "receivedBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6979,
                      "src": "4345:15:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4364:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4345:20:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7067,
                  "nodeType": "IfStatement",
                  "src": "4341:381:49",
                  "trueBody": {
                    "id": 7066,
                    "nodeType": "Block",
                    "src": "4367:355:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 7038,
                                    "name": "PhantomTreasury",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13542,
                                    "src": "4419:15:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPhantomTreasury_$17231_$",
                                      "typeString": "function () view returns (contract IPhantomTreasury)"
                                    }
                                  },
                                  "id": 7039,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4419:17:49",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPhantomTreasury_$17231",
                                    "typeString": "contract IPhantomTreasury"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IPhantomTreasury_$17231",
                                    "typeString": "contract IPhantomTreasury"
                                  }
                                ],
                                "id": 7037,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4411:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7036,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4411:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4411:26:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7041,
                              "name": "receivedBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6979,
                              "src": "4439:15:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7033,
                                  "name": "receivedToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6957,
                                  "src": "4388:13:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7032,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15755,
                                "src": "4381:6:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$15755_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 7034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4381:21:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$15755",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 7035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15724,
                            "src": "4381:29:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 7042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4381:74:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7043,
                        "nodeType": "ExpressionStatement",
                        "src": "4381:74:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 7049,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4517:4:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PhantomDexRouter_$7212",
                                    "typeString": "contract PhantomDexRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PhantomDexRouter_$7212",
                                    "typeString": "contract PhantomDexRouter"
                                  }
                                ],
                                "id": 7048,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4509:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7047,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4509:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4509:13:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7051,
                              "name": "receivedBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6979,
                              "src": "4540:15:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 7054,
                                    "name": "PhantomTreasury",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13542,
                                    "src": "4581:15:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPhantomTreasury_$17231_$",
                                      "typeString": "function () view returns (contract IPhantomTreasury)"
                                    }
                                  },
                                  "id": 7055,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4581:17:49",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPhantomTreasury_$17231",
                                    "typeString": "contract IPhantomTreasury"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IPhantomTreasury_$17231",
                                    "typeString": "contract IPhantomTreasury"
                                  }
                                ],
                                "id": 7053,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4573:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7052,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4573:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4573:26:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 7057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4617:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 7060,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4644:1:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 7059,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4636:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7058,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4636:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4636:10:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7062,
                              "name": "keys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6960,
                              "src": "4664:4:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            {
                              "id": 7063,
                              "name": "percentages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6963,
                              "src": "4686:11:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 7044,
                                "name": "PhantomTreasury",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13542,
                                "src": "4469:15:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPhantomTreasury_$17231_$",
                                  "typeString": "function () view returns (contract IPhantomTreasury)"
                                }
                              },
                              "id": 7045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4469:17:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPhantomTreasury_$17231",
                                "typeString": "contract IPhantomTreasury"
                              }
                            },
                            "id": 7046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17131,
                            "src": "4469:22:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,address,uint256,address,bytes32[] memory,uint256[] memory) external"
                            }
                          },
                          "id": 7064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4469:242:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7065,
                        "nodeType": "ExpressionStatement",
                        "src": "4469:242:49"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 7069,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "postSwap",
            "nameLocation": "3648:8:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6955,
                  "mutability": "mutable",
                  "name": "sentToken",
                  "nameLocation": "3674:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 7069,
                  "src": "3666:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3666:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6957,
                  "mutability": "mutable",
                  "name": "receivedToken",
                  "nameLocation": "3701:13:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 7069,
                  "src": "3693:21:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3693:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6960,
                  "mutability": "mutable",
                  "name": "keys",
                  "nameLocation": "3741:4:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 7069,
                  "src": "3724:21:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6958,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3724:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 6959,
                    "nodeType": "ArrayTypeName",
                    "src": "3724:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6963,
                  "mutability": "mutable",
                  "name": "percentages",
                  "nameLocation": "3772:11:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 7069,
                  "src": "3755:28:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6961,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3755:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6962,
                    "nodeType": "ArrayTypeName",
                    "src": "3755:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3656:133:49"
            },
            "returnParameters": {
              "id": 6965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3799:0:49"
            },
            "scope": 7212,
            "src": "3639:1089:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7118,
              "nodeType": "Block",
              "src": "5159:272:49",
              "statements": [
                {
                  "assignments": [
                    7083,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7083,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "5178:6:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 7118,
                      "src": "5170:14:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7082,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5170:7:49",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 7088,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7085,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7073,
                        "src": "5201:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7086,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7075,
                        "src": "5209:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7084,
                      "name": "sortTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7163,
                      "src": "5190:10:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
                        "typeString": "function (address,address) pure returns (address,address)"
                      }
                    },
                    "id": 7087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5190:26:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5169:47:49"
                },
                {
                  "assignments": [
                    7090,
                    7092,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7090,
                      "mutability": "mutable",
                      "name": "reserve0",
                      "nameLocation": "5235:8:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 7118,
                      "src": "5227:16:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7089,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5227:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7092,
                      "mutability": "mutable",
                      "name": "reserve1",
                      "nameLocation": "5253:8:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 7118,
                      "src": "5245:16:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7091,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5245:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 7102,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 7095,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7071,
                                "src": "5290:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 7096,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7073,
                                "src": "5299:6:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 7097,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7075,
                                "src": "5307:6:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 7094,
                              "name": "pairFor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7211,
                              "src": "5282:7:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                                "typeString": "function (address,address,address) pure returns (address)"
                              }
                            },
                            "id": 7098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5282:32:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7093,
                          "name": "IUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16622,
                          "src": "5267:14:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$16622_$",
                            "typeString": "type(contract IUniswapV2Pair)"
                          }
                        },
                        "id": 7099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5267:48:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$16622",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 7100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16564,
                      "src": "5267:60:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 7101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5267:62:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5226:103:49"
                },
                {
                  "expression": {
                    "id": 7116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 7103,
                          "name": "reserveA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7078,
                          "src": "5340:8:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7104,
                          "name": "reserveB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7080,
                          "src": "5350:8:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 7105,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "5339:20:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7106,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7073,
                          "src": "5362:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 7107,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7083,
                          "src": "5372:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5362:16:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "components": [
                          {
                            "id": 7112,
                            "name": "reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7092,
                            "src": "5405:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 7113,
                            "name": "reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7090,
                            "src": "5415:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 7114,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5404:20:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "id": 7115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "5362:62:49",
                      "trueExpression": {
                        "components": [
                          {
                            "id": 7109,
                            "name": "reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7090,
                            "src": "5382:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 7110,
                            "name": "reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7092,
                            "src": "5392:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 7111,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5381:20:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "5339:85:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7117,
                  "nodeType": "ExpressionStatement",
                  "src": "5339:85:49"
                }
              ]
            },
            "id": 7119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReserves",
            "nameLocation": "5009:11:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7071,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "5038:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 7119,
                  "src": "5030:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7070,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5030:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7073,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "5063:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 7119,
                  "src": "5055:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5055:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7075,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "5087:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 7119,
                  "src": "5079:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5079:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5020:79:49"
            },
            "returnParameters": {
              "id": 7081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7078,
                  "mutability": "mutable",
                  "name": "reserveA",
                  "nameLocation": "5131:8:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 7119,
                  "src": "5123:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5123:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7080,
                  "mutability": "mutable",
                  "name": "reserveB",
                  "nameLocation": "5149:8:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 7119,
                  "src": "5141:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5141:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5122:36:49"
            },
            "scope": 7212,
            "src": "5000:431:49",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7162,
              "nodeType": "Block",
              "src": "5544:238:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7131,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7121,
                          "src": "5562:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 7132,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7123,
                          "src": "5572:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5562:16:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056324c6962726172793a204944454e544943414c5f414444524553534553",
                        "id": 7134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5580:39:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ddc3ca35a8b7ccaa016ab70252fdf3396ded4f4fd8375f95b1e9d99790fcdca",
                          "typeString": "literal_string \"UniswapV2Library: IDENTICAL_ADDRESSES\""
                        },
                        "value": "UniswapV2Library: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ddc3ca35a8b7ccaa016ab70252fdf3396ded4f4fd8375f95b1e9d99790fcdca",
                          "typeString": "literal_string \"UniswapV2Library: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 7130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5554:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5554:66:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7136,
                  "nodeType": "ExpressionStatement",
                  "src": "5554:66:49"
                },
                {
                  "expression": {
                    "id": 7150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 7137,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7126,
                          "src": "5631:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 7138,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7128,
                          "src": "5639:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 7139,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "5630:16:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7140,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7121,
                          "src": "5649:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 7141,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7123,
                          "src": "5658:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5649:15:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "components": [
                          {
                            "id": 7146,
                            "name": "tokenB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7123,
                            "src": "5687:6:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7147,
                            "name": "tokenA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7121,
                            "src": "5695:6:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "id": 7148,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5686:16:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                          "typeString": "tuple(address,address)"
                        }
                      },
                      "id": 7149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "5649:53:49",
                      "trueExpression": {
                        "components": [
                          {
                            "id": 7143,
                            "name": "tokenA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7121,
                            "src": "5668:6:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7144,
                            "name": "tokenB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7123,
                            "src": "5676:6:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "id": 7145,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5667:16:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                          "typeString": "tuple(address,address)"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "src": "5630:72:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7151,
                  "nodeType": "ExpressionStatement",
                  "src": "5630:72:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7153,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7126,
                          "src": "5720:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5738:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5730:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7154,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5730:7:49",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5730:10:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5720:20:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056324c6962726172793a205a45524f5f41444452455353",
                        "id": 7159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5742:32:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db0dda5a73ac3122e17df097fa2cbce2c5161b45d20c7d6cf363d3b147392c83",
                          "typeString": "literal_string \"UniswapV2Library: ZERO_ADDRESS\""
                        },
                        "value": "UniswapV2Library: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db0dda5a73ac3122e17df097fa2cbce2c5161b45d20c7d6cf363d3b147392c83",
                          "typeString": "literal_string \"UniswapV2Library: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 7152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5712:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5712:63:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7161,
                  "nodeType": "ExpressionStatement",
                  "src": "5712:63:49"
                }
              ]
            },
            "id": 7163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sortTokens",
            "nameLocation": "5446:10:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7121,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "5465:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 7163,
                  "src": "5457:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5457:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7123,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "5481:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 7163,
                  "src": "5473:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5473:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5456:32:49"
            },
            "returnParameters": {
              "id": 7129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7126,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "5520:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 7163,
                  "src": "5512:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5512:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7128,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "5536:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 7163,
                  "src": "5528:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5528:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5511:32:49"
            },
            "scope": 7212,
            "src": "5437:345:49",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7210,
              "nodeType": "Block",
              "src": "5921:575:49",
              "statements": [
                {
                  "assignments": [
                    7175,
                    7177
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7175,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "5940:6:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 7210,
                      "src": "5932:14:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7174,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5932:7:49",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7177,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "5956:6:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 7210,
                      "src": "5948:14:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7176,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5948:7:49",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7182,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7179,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7167,
                        "src": "5977:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7180,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7169,
                        "src": "5985:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7178,
                      "name": "sortTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7163,
                      "src": "5966:10:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
                        "typeString": "function (address,address) pure returns (address,address)"
                      }
                    },
                    "id": 7181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5966:26:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5931:61:49"
                },
                {
                  "expression": {
                    "id": 7208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7183,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7172,
                      "src": "6002:4:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "ff",
                                          "id": 7193,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "hexString",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "6165:7:49",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
                                            "typeString": "literal_string hex\"ff\""
                                          }
                                        },
                                        {
                                          "id": 7194,
                                          "name": "factory",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7165,
                                          "src": "6202:7:49",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "id": 7198,
                                                  "name": "token0",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 7175,
                                                  "src": "6266:6:49",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                {
                                                  "id": 7199,
                                                  "name": "token1",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 7177,
                                                  "src": "6274:6:49",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "expression": {
                                                  "id": 7196,
                                                  "name": "abi",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -1,
                                                  "src": "6249:3:49",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_abi",
                                                    "typeString": "abi"
                                                  }
                                                },
                                                "id": 7197,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "encodePacked",
                                                "nodeType": "MemberAccess",
                                                "src": "6249:16:49",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                  "typeString": "function () pure returns (bytes memory)"
                                                }
                                              },
                                              "id": 7200,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "6249:32:49",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes memory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes memory"
                                              }
                                            ],
                                            "id": 7195,
                                            "name": "keccak256",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -8,
                                            "src": "6239:9:49",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                              "typeString": "function (bytes memory) pure returns (bytes32)"
                                            }
                                          },
                                          "id": 7201,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "6239:43:49",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "hexValue": "96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f",
                                          "id": 7202,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "hexString",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "6312:69:49",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_66d76495d34dc7613deaf40ec013ef0fbd2f03604ae509b7212971c455edfb7a",
                                            "typeString": "literal_string hex\"96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f\""
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
                                            "typeString": "literal_string hex\"ff\""
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_66d76495d34dc7613deaf40ec013ef0fbd2f03604ae509b7212971c455edfb7a",
                                            "typeString": "literal_string hex\"96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f\""
                                          }
                                        ],
                                        "expression": {
                                          "id": 7191,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "6119:3:49",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 7192,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "6119:16:49",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 7203,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6119:306:49",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 7190,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "6084:9:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 7204,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6084:363:49",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 7189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6055:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 7188,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6055:7:49",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6055:410:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 7187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6030:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint160_$",
                              "typeString": "type(uint160)"
                            },
                            "typeName": {
                              "id": 7186,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "6030:7:49",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6030:449:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        ],
                        "id": 7185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6009:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 7184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6009:7:49",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6009:480:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6002:487:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7209,
                  "nodeType": "ExpressionStatement",
                  "src": "6002:487:49"
                }
              ]
            },
            "id": 7211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pairFor",
            "nameLocation": "5797:7:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7165,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "5822:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 7211,
                  "src": "5814:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5814:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7167,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "5847:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 7211,
                  "src": "5839:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5839:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7169,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "5871:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 7211,
                  "src": "5863:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5863:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5804:79:49"
            },
            "returnParameters": {
              "id": 7173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7172,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "5915:4:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 7211,
                  "src": "5907:12:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5907:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5906:14:49"
            },
            "scope": 7212,
            "src": "5788:708:49",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 7213,
        "src": "885:5613:49",
        "usedErrors": [
          22610,
          22614,
          22618
        ]
      }
    ],
    "src": "35:6464:49"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "PhantomDexRouter",
  "coverageMap": {
    "branches": {
      "100": {},
      "101": {},
      "11": {},
      "13": {},
      "30": {},
      "32": {},
      "34": {},
      "49": {
        "PhantomDexRouter.getReserves": {
          "18": [
            5362,
            5378,
            true
          ]
        },
        "PhantomDexRouter.postSwap": {
          "19": [
            3970,
            3986,
            false
          ],
          "20": [
            4345,
            4365,
            false
          ]
        },
        "PhantomDexRouter.sortTokens": {
          "21": [
            5562,
            5578,
            true
          ],
          "22": [
            5649,
            5664,
            true
          ],
          "23": [
            5720,
            5740,
            true
          ]
        }
      },
      "68": {
        "PhantomStorageMixin.PhantomStorage": {
          "24": [
            8008,
            8027,
            false
          ],
          "25": [
            8143,
            8239,
            false
          ],
          "26": [
            8525,
            8621,
            true
          ],
          "27": [
            8645,
            8688,
            false
          ]
        }
      },
      "75": {},
      "89": {}
    },
    "statements": {
      "100": {},
      "101": {},
      "11": {},
      "13": {},
      "30": {},
      "32": {},
      "34": {},
      "49": {
        "PhantomDexRouter.getReserves": {
          "7": [
            5339,
            5424
          ]
        },
        "PhantomDexRouter.pairFor": {
          "16": [
            6002,
            6489
          ]
        },
        "PhantomDexRouter.postSwap": {
          "9": [
            4002,
            4068
          ],
          "10": [
            4082,
            4320
          ],
          "11": [
            4381,
            4455
          ],
          "12": [
            4469,
            4711
          ]
        },
        "PhantomDexRouter.preSwap": {
          "8": [
            3525,
            3626
          ]
        },
        "PhantomDexRouter.sortTokens": {
          "13": [
            5554,
            5620
          ],
          "14": [
            5630,
            5702
          ],
          "15": [
            5712,
            5775
          ]
        },
        "PhantomDexRouter.swapReceiveMinimum": {
          "1": [
            2117,
            2162
          ],
          "2": [
            2172,
            2354
          ],
          "3": [
            2364,
            2423
          ]
        },
        "PhantomDexRouter.swapSpendMaximum": {
          "4": [
            2737,
            2785
          ],
          "5": [
            2795,
            3003
          ],
          "6": [
            3013,
            3072
          ]
        }
      },
      "68": {
        "PhantomStorageMixin.PhantomStorage": {
          "0": [
            2447,
            2486
          ]
        },
        "PhantomStorageMixin.PhantomTreasury": {
          "17": [
            4447,
            4538
          ]
        }
      },
      "75": {},
      "89": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20",
    "IPhantomDexRouter",
    "IPhantomStorageMixin",
    "uniswap/v2-core@1.0.1/IUniswapV2Pair",
    "IUniswapV2Router02",
    "hifi-finance/prb-math@2.4.1/PRBMath",
    "hifi-finance/prb-math@2.4.1/PRBMathUD60x18",
    "PhantomStorageKeys",
    "PhantomStorageMixin",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ReentrancyGuard"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c80632a0bbedf1461004657806344b291c31461006b5780639c221fdc14610080575b600080fd5b610059610054366004610e84565b610093565b60405190815260200160405180910390f35b61007e610079366004610fc2565b61012f565b005b61007e61008e366004610fc2565b6104b9565b60008060006100a38786866107d9565b604051632b58577b60e21b815260048101899052602481018390526044810182905291935091506000906001600160a01b038a169063ad615dec90606401602060405180830381865afa1580156100fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012291906110da565b9998505050505050505050565b60006101436049546001600160a01b031690565b6001600160a01b0316631bed52416040518163ffffffff1660e01b8152600401602060405180830381865afa158015610180573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a491906110f3565b90506001811515141561027a576049546001600160a01b03166001600160a01b0316637ae1cfca336040516020016101dc919061111c565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161021091815260200190565b602060405180830381865afa15801561022d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025191906110f3565b6102755760405163372463e360e01b81523360048201526024015b60405180910390fd5b6103c1565b6049546001600160a01b03166001600160a01b0316637ae1cfca336040516020016102a5919061111c565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016102d991815260200190565b602060405180830381865afa1580156102f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031a91906110f3565b806103a257506049546001600160a01b03166001600160a01b031663a75b87d26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d919061115a565b6001600160a01b0316326001600160a01b0316145b6103c15760405163372463e360e01b815233600482015260240161026c565b6103e787866000815181106103d8576103d8611177565b602002602001015185856108a3565b6040516338ed173960e01b81526001600160a01b038916906338ed17399061041b908a908a908a9030908b9060040161118d565b6000604051808303816000875af115801561043a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261046291908101906111fe565b506104af8560008151811061047957610479611177565b60200260200101518660018851610490919061128f565b815181106104a0576104a0611177565b60200260200101518585610911565b5050505050505050565b60006104cd6049546001600160a01b031690565b6001600160a01b0316631bed52416040518163ffffffff1660e01b8152600401602060405180830381865afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e91906110f3565b9050600181151514156105ff576049546001600160a01b03166001600160a01b0316637ae1cfca33604051602001610566919061111c565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161059a91815260200190565b602060405180830381865afa1580156105b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105db91906110f3565b6105fa5760405163372463e360e01b815233600482015260240161026c565b610746565b6049546001600160a01b03166001600160a01b0316637ae1cfca3360405160200161062a919061111c565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161065e91815260200190565b602060405180830381865afa15801561067b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069f91906110f3565b8061072757506049546001600160a01b03166001600160a01b031663a75b87d26040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610712919061115a565b6001600160a01b0316326001600160a01b0316145b6107465760405163372463e360e01b815233600482015260240161026c565b61075d86866000815181106103d8576103d8611177565b604051635c11d79560e01b81526001600160a01b03891690635c11d79590610791908a908a908a9030908b9060040161118d565b600060405180830381600087803b1580156107ab57600080fd5b505af11580156107bf573d6000803e3d6000fd5b505050506104af8560008151811061047957610479611177565b60008060006107e88585610c06565b5090506000806107f9888888610cfe565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610836573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085a91906112d0565b506001600160701b031691506001600160701b03169150826001600160a01b0316876001600160a01b031614610891578082610894565b81815b90999098509650505050505050565b6108ab610dcd565b6001600160a01b031663a397104730600080888888886040518863ffffffff1660e01b81526004016108e3979695949392919061135b565b600060405180830381600087803b1580156108fd57600080fd5b505af11580156104af573d6000803e3d6000fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038616906370a0823190602401602060405180830381865afa158015610958573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097c91906110da565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038616906370a0823190602401602060405180830381865afa1580156109c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ea91906110da565b90508115610af557856001600160a01b031663095ea7b3610a09610dcd565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af1158015610a56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7a91906110f3565b50610a83610dcd565b6001600160a01b031663a39710473084610a9b610dcd565b6000808a8a6040518863ffffffff1660e01b8152600401610ac2979695949392919061135b565b600060405180830381600087803b158015610adc57600080fd5b505af1158015610af0573d6000803e3d6000fd5b505050505b8015610bfe57846001600160a01b031663095ea7b3610b12610dcd565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8391906110f3565b50610b8c610dcd565b6001600160a01b031663a39710473083610ba4610dcd565b6000808a8a6040518863ffffffff1660e01b8152600401610bcb979695949392919061135b565b600060405180830381600087803b158015610be557600080fd5b505af1158015610bf9573d6000803e3d6000fd5b505050505b505050505050565b600080826001600160a01b0316846001600160a01b03161415610c795760405162461bcd60e51b815260206004820152602560248201527f556e697377617056324c6962726172793a204944454e544943414c5f41444452604482015264455353455360d81b606482015260840161026c565b826001600160a01b0316846001600160a01b031610610c99578284610c9c565b83835b90925090506001600160a01b038216610cf75760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f414444524553530000604482015260640161026c565b9250929050565b6000806000610d0d8585610c06565b6040516001600160601b0319606084811b8216602084015283901b1660348201529193509150869060480160405160208183030381529060405280519060200120604051602001610dab9291906001600160f81b0319815260609290921b6001600160601b031916600183015260158201527f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f603582015260550190565b60408051601f1981840301815291905280516020909101209695505050505050565b6000610de16049546001600160a01b031690565b6001600160a01b03166321f8a7216003600001600b01604051610e0491906113bd565b60405190819003812060e083901b6001600160e01b03191682526004820152602401602060405180830381865afa158015610e43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e67919061115a565b905090565b6001600160a01b0381168114610e8157600080fd5b50565b600080600080600060a08688031215610e9c57600080fd5b8535610ea781610e6c565b94506020860135610eb781610e6c565b9350604086013592506060860135610ece81610e6c565b91506080860135610ede81610e6c565b809150509295509295909350565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610f2b57610f2b610eec565b604052919050565b600067ffffffffffffffff821115610f4d57610f4d610eec565b5060051b60200190565b600082601f830112610f6857600080fd5b81356020610f7d610f7883610f33565b610f02565b82815260059290921b84018101918181019086841115610f9c57600080fd5b8286015b84811015610fb75780358352918301918301610fa0565b509695505050505050565b600080600080600080600060e0888a031215610fdd57600080fd5b8735610fe881610e6c565b9650602088810135965060408901359550606089013567ffffffffffffffff8082111561101457600080fd5b818b0191508b601f83011261102857600080fd5b8135611036610f7882610f33565b81815260059190911b8301840190848101908e83111561105557600080fd5b938501935b8285101561107c57843561106d81610e6c565b8252938501939085019061105a565b9850505060808b0135955060a08b013592508083111561109b57600080fd5b6110a78c848d01610f57565b945060c08b01359250808311156110bd57600080fd5b50506110cb8a828b01610f57565b91505092959891949750929550565b6000602082840312156110ec57600080fd5b5051919050565b60006020828403121561110557600080fd5b8151801515811461111557600080fd5b9392505050565b7f7068616e746f6d2e636f6e74726163742e726567697374657265640000000000815260609190911b6001600160601b031916601b820152602f0190565b60006020828403121561116c57600080fd5b815161111581610e6c565b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156111dd5784516001600160a01b0316835293830193918301916001016111b8565b50506001600160a01b03969096166060850152505050608001529392505050565b6000602080838503121561121157600080fd5b825167ffffffffffffffff81111561122857600080fd5b8301601f8101851361123957600080fd5b8051611247610f7882610f33565b81815260059190911b8201830190838101908783111561126657600080fd5b928401925b828410156112845783518252928401929084019061126b565b979650505050505050565b6000828210156112af57634e487b7160e01b600052601160045260246000fd5b500390565b80516001600160701b03811681146112cb57600080fd5b919050565b6000806000606084860312156112e557600080fd5b6112ee846112b4565b92506112fc602085016112b4565b9150604084015163ffffffff8116811461131557600080fd5b809150509250925092565b600081518084526020808501945080840160005b8381101561135057815187529582019590820190600101611334565b509495945050505050565b6001600160a01b038881168252602082018890528681166040830152606082018690528416608082015260e060a0820181905260009061139d90830185611320565b82810360c08401526113af8185611320565b9a9950505050505050505050565b600080835481600182811c9150808316806113d957607f831692505b60208084108214156113f957634e487b7160e01b86526022600452602486fd5b81801561140d576001811461141e5761144b565b60ff1986168952848901965061144b565b60008a81526020902060005b868110156114435781548b82015290850190830161142a565b505084890196505b50949897505050505050505056fea2646970667358221220d5ab0ed8d732f5f0ddbb0747bb71903da89646312be01264dcb08d8530ef6a0e64736f6c634300080a0033",
  "deployedSourceMap": "885:5613:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1380:428;;;;;;:::i;:::-;;:::i;:::-;;;1041:25:104;;;1029:2;1014:18;1380:428:49;;;;;;;1814:616;;;;;;:::i;:::-;;:::i;:::-;;2436:643;;;;;;:::i;:::-;;:::i;1380:428::-;1576:7;1596:18;1616:19;1639:42;1651:10;1663:7;1672:8;1639:11;:42::i;:::-;1707:70;;-1:-1:-1;;;1707:70:49;;;;;5006:25:104;;;5047:18;;;5040:34;;;5090:18;;;5083:34;;;1595:86:49;;-1:-1:-1;1595:86:49;-1:-1:-1;1691:13:49;;-1:-1:-1;;;;;1707:35:49;;;;;4979:18:104;;1707:70:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1691:86;1380:428;-1:-1:-1;;;;;;;;;1380:428:49:o;1814:616::-;7939:16:68;7958;2470:15;;-1:-1:-1;;;;;2470:15:68;;2371:122;7958:16;-1:-1:-1;;;;;7958:34:68;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7939:55;-1:-1:-1;8023:4:68;8008:19;;;;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8143:24:68;;8226:10;8178:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8168:70;;;;;;8143:96;;;;;;;;;;;;;1041:25:104;;1029:2;1014:18;;895:177;8143:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8138:213;;8266:70;;-1:-1:-1;;;8266:70:68;;8325:10;8266:70;;;6322:51:104;6295:18;;8266:70:68;;;;;;;;8138:213;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8525:24:68;;8608:10;8560:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8550:70;;;;;;8525:96;;;;;;;;;;;;;1041:25:104;;1029:2;1014:18;;895:177;8525:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:163;;;-1:-1:-1;2470:15:68;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8658:28:68;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8645:43:68;:9;-1:-1:-1;;;;;8645:43:68;;8525:163;8502:312;;8729:70;;-1:-1:-1;;;8729:70:68;;8788:10;8729:70;;;6322:51:104;6295:18;;8729:70:68;6176:203:104;8502:312:68;2117:45:49::1;2125:8;2135:4;2140:1;2135:7;;;;;;;;:::i;:::-;;;;;;;2144:4;2150:11;2117:7;:45::i;:::-;2172:182;::::0;-1:-1:-1;;;2172:182:49;;-1:-1:-1;;;;;2172:54:49;::::1;::::0;::::1;::::0;:182:::1;::::0;2240:8;;2263:12;;2290:4;;2316::::1;::::0;2336:8;;2172:182:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;2172:182:49::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;;2364:59;2373:4;2378:1;2373:7;;;;;;;;:::i;:::-;;;;;;;2382:4;2401:1;2387:4;:11;:15;;;;:::i;:::-;2382:21;;;;;;;;:::i;:::-;;;;;;;2405:4;2411:11;2364:8;:59::i;:::-;7929:912:68::0;1814:616:49;;;;;;;:::o;2436:643::-;7939:16:68;7958;2470:15;;-1:-1:-1;;;;;2470:15:68;;2371:122;7958:16;-1:-1:-1;;;;;7958:34:68;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7939:55;-1:-1:-1;8023:4:68;8008:19;;;;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8143:24:68;;8226:10;8178:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8168:70;;;;;;8143:96;;;;;;;;;;;;;1041:25:104;;1029:2;1014:18;;895:177;8143:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8138:213;;8266:70;;-1:-1:-1;;;8266:70:68;;8325:10;8266:70;;;6322:51:104;6295:18;;8266:70:68;6176:203:104;8138:213:68;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8525:24:68;;8608:10;8560:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8550:70;;;;;;8525:96;;;;;;;;;;;;;1041:25:104;;1029:2;1014:18;;895:177;8525:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:163;;;-1:-1:-1;2470:15:68;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8658:28:68;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8645:43:68;:9;-1:-1:-1;;;;;8645:43:68;;8525:163;8502:312;;8729:70;;-1:-1:-1;;;8729:70:68;;8788:10;8729:70;;;6322:51:104;6295:18;;8729:70:68;6176:203:104;8502:312:68;2737:48:49::1;2745:11;2758:4;2763:1;2758:7;;;;;;;;:::i;2737:48::-;2795:208;::::0;-1:-1:-1;;;2795:208:49;;-1:-1:-1;;;;;2795:83:49;::::1;::::0;::::1;::::0;:208:::1;::::0;2892:9;;2915:11;;2940:4;;2966::::1;::::0;2985:8;;2795:208:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3013:59;3022:4;3027:1;3022:7;;;;;;;;:::i;5000:431::-:0;5123:16;5141;5170:14;5190:26;5201:6;5209;5190:10;:26::i;:::-;5169:47;;;5227:16;5245;5282:32;5290:7;5299:6;5307;5282:7;:32::i;:::-;-1:-1:-1;;;;;5267:60:49;;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5226:103;-1:-1:-1;;;;;5226:103:49;;;-1:-1:-1;;;;;5226:103:49;;;5372:6;-1:-1:-1;;;;;5362:16:49;:6;-1:-1:-1;;;;;5362:16:49;;:62;;5405:8;5415;5362:62;;;5382:8;5392;5362:62;5339:85;;;;-1:-1:-1;5000:431:49;-1:-1:-1;;;;;;;5000:431:49:o;3352:281::-;3525:17;:15;:17::i;:::-;-1:-1:-1;;;;;3525:22:49;;3556:4;3563:1;3574;3578:13;3593;3608:4;3614:11;3525:101;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3639:1089;3831:42;;-1:-1:-1;;;3831:42:49;;3867:4;3831:42;;;6322:51:104;3809:19:49;;-1:-1:-1;;;;;3831:27:49;;;;;6295:18:104;;3831:42:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3909:46;;-1:-1:-1;;;3909:46:49;;3949:4;3909:46;;;6322:51:104;3809:64:49;;-1:-1:-1;3883:23:49;;-1:-1:-1;;;;;3909:31:49;;;;;6295:18:104;;3909:46:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3883:72;-1:-1:-1;3970:16:49;;3966:365;;4009:9;-1:-1:-1;;;;;4002:25:49;;4036:17;:15;:17::i;:::-;4002:66;;-1:-1:-1;;;;;;4002:66:49;;;;;;;-1:-1:-1;;;;;11045:32:104;;;4002:66:49;;;11027:51:104;11094:18;;;11087:34;;;11000:18;;4002:66:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4082:17;:15;:17::i;:::-;-1:-1:-1;;;;;4082:22:49;;4130:4;4153:11;4190:17;:15;:17::i;:::-;4226:1;4253;4273:4;4295:11;4082:238;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3966:365;4345:20;;4341:381;;4388:13;-1:-1:-1;;;;;4381:29:49;;4419:17;:15;:17::i;:::-;4381:74;;-1:-1:-1;;;;;;4381:74:49;;;;;;;-1:-1:-1;;;;;11045:32:104;;;4381:74:49;;;11027:51:104;11094:18;;;11087:34;;;11000:18;;4381:74:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4469:17;:15;:17::i;:::-;-1:-1:-1;;;;;4469:22:49;;4517:4;4540:15;4581:17;:15;:17::i;:::-;4617:1;4644;4664:4;4686:11;4469:242;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4341:381;3799:929;;3639:1089;;;;:::o;5437:345::-;5512:14;5528;5572:6;-1:-1:-1;;;;;5562:16:49;:6;-1:-1:-1;;;;;5562:16:49;;;5554:66;;;;-1:-1:-1;;;5554:66:49;;12237:2:104;5554:66:49;;;12219:21:104;12276:2;12256:18;;;12249:30;12315:34;12295:18;;;12288:62;-1:-1:-1;;;12366:18:104;;;12359:35;12411:19;;5554:66:49;12035:401:104;5554:66:49;5658:6;-1:-1:-1;;;;;5649:15:49;:6;-1:-1:-1;;;;;5649:15:49;;:53;;5687:6;5695;5649:53;;;5668:6;5676;5649:53;5630:72;;-1:-1:-1;5630:72:49;-1:-1:-1;;;;;;5720:20:49;;5712:63;;;;-1:-1:-1;;;5712:63:49;;12643:2:104;5712:63:49;;;12625:21:104;12682:2;12662:18;;;12655:30;12721:32;12701:18;;;12694:60;12771:18;;5712:63:49;12441:354:104;5712:63:49;5437:345;;;;;:::o;5788:708::-;5907:12;5932:14;5948;5966:26;5977:6;5985;5966:10;:26::i;:::-;6249:32;;-1:-1:-1;;;;;;13027:2:104;13023:15;;;13019:24;;6249:32:49;;;13007:37:104;13078:15;;;13074:24;13060:12;;;13053:46;5931:61:49;;-1:-1:-1;5931:61:49;-1:-1:-1;6202:7:49;;13115:12:104;;6249:32:49;;;;;;;;;;;;6239:43;;;;;;6119:306;;;;;;;;-1:-1:-1;;;;;;13497:26:104;;13560:2;13556:15;;;;-1:-1:-1;;;;;;13552:53:104;13548:1;13539:11;;13532:74;13631:2;13622:12;;13615:28;13673:66;13668:2;13659:12;;13652:88;13765:2;13756:12;;13138:636;6119:306:49;;;;-1:-1:-1;;6119:306:49;;;;;;;;;6084:363;;6119:306;6084:363;;;;;5788:708;-1:-1:-1;;;;;;5788:708:49:o;4369:176:68:-;4419:16;4471;2470:15;;-1:-1:-1;;;;;2470:15:68;;2371:122;4471:16;-1:-1:-1;;;;;4471:27:68;;4509:7;:17;;:26;;4499:37;;;;;;:::i;:::-;;;;;;;;;4471:66;;;;-1:-1:-1;;;;;;4471:66:68;;;;;;1041:25:104;1014:18;;4471:66:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4447:91;;4369:176;:::o;14:131:104:-;-1:-1:-1;;;;;89:31:104;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:740::-;245:6;253;261;269;277;330:3;318:9;309:7;305:23;301:33;298:53;;;347:1;344;337:12;298:53;386:9;373:23;405:31;430:5;405:31;:::i;:::-;455:5;-1:-1:-1;512:2:104;497:18;;484:32;525:33;484:32;525:33;:::i;:::-;577:7;-1:-1:-1;631:2:104;616:18;;603:32;;-1:-1:-1;687:2:104;672:18;;659:32;700:33;659:32;700:33;:::i;:::-;752:7;-1:-1:-1;811:3:104;796:19;;783:33;825;783;825;:::i;:::-;877:7;867:17;;;150:740;;;;;;;;:::o;1077:127::-;1138:10;1133:3;1129:20;1126:1;1119:31;1169:4;1166:1;1159:15;1193:4;1190:1;1183:15;1209:275;1280:2;1274:9;1345:2;1326:13;;-1:-1:-1;;1322:27:104;1310:40;;1380:18;1365:34;;1401:22;;;1362:62;1359:88;;;1427:18;;:::i;:::-;1463:2;1456:22;1209:275;;-1:-1:-1;1209:275:104:o;1489:183::-;1549:4;1582:18;1574:6;1571:30;1568:56;;;1604:18;;:::i;:::-;-1:-1:-1;1649:1:104;1645:14;1661:4;1641:25;;1489:183::o;1677:662::-;1731:5;1784:3;1777:4;1769:6;1765:17;1761:27;1751:55;;1802:1;1799;1792:12;1751:55;1838:6;1825:20;1864:4;1888:60;1904:43;1944:2;1904:43;:::i;:::-;1888:60;:::i;:::-;1982:15;;;2068:1;2064:10;;;;2052:23;;2048:32;;;2013:12;;;;2092:15;;;2089:35;;;2120:1;2117;2110:12;2089:35;2156:2;2148:6;2144:15;2168:142;2184:6;2179:3;2176:15;2168:142;;;2250:17;;2238:30;;2288:12;;;;2201;;2168:142;;;-1:-1:-1;2328:5:104;1677:662;-1:-1:-1;;;;;;1677:662:104:o;3011:1788::-;3199:6;3207;3215;3223;3231;3239;3247;3300:3;3288:9;3279:7;3275:23;3271:33;3268:53;;;3317:1;3314;3307:12;3268:53;3356:9;3343:23;3375:31;3400:5;3375:31;:::i;:::-;3425:5;-1:-1:-1;3449:2:104;3483:18;;;3470:32;;-1:-1:-1;3549:2:104;3534:18;;3521:32;;-1:-1:-1;3604:2:104;3589:18;;3576:32;3627:18;3657:14;;;3654:34;;;3684:1;3681;3674:12;3654:34;3722:6;3711:9;3707:22;3697:32;;3767:7;3760:4;3756:2;3752:13;3748:27;3738:55;;3789:1;3786;3779:12;3738:55;3825:2;3812:16;3848:60;3864:43;3904:2;3864:43;:::i;3848:60::-;3942:15;;;4024:1;4020:10;;;;4012:19;;4008:28;;;3973:12;;;;4048:19;;;4045:39;;;4080:1;4077;4070:12;4045:39;4104:11;;;;4124:223;4140:6;4135:3;4132:15;4124:223;;;4222:3;4209:17;4239:33;4264:7;4239:33;:::i;:::-;4285:20;;4157:12;;;;4325;;;;4124:223;;;4366:5;-1:-1:-1;;;4418:3:104;4403:19;;4390:33;;-1:-1:-1;4476:3:104;4461:19;;4448:33;;-1:-1:-1;4493:16:104;;;4490:36;;;4522:1;4519;4512:12;4490:36;4545:63;4600:7;4589:8;4578:9;4574:24;4545:63;:::i;:::-;4535:73;;4661:3;4650:9;4646:19;4633:33;4617:49;;4691:2;4681:8;4678:16;4675:36;;;4707:1;4704;4697:12;4675:36;;;4730:63;4785:7;4774:8;4763:9;4759:24;4730:63;:::i;:::-;4720:73;;;3011:1788;;;;;;;;;;:::o;5128:184::-;5198:6;5251:2;5239:9;5230:7;5226:23;5222:32;5219:52;;;5267:1;5264;5257:12;5219:52;-1:-1:-1;5290:16:104;;5128:184;-1:-1:-1;5128:184:104:o;5317:277::-;5384:6;5437:2;5425:9;5416:7;5412:23;5408:32;5405:52;;;5453:1;5450;5443:12;5405:52;5485:9;5479:16;5538:5;5531:13;5524:21;5517:5;5514:32;5504:60;;5560:1;5557;5550:12;5504:60;5583:5;5317:277;-1:-1:-1;;;5317:277:104:o;5599:390::-;5841:29;5829:42;;5909:2;5905:15;;;;-1:-1:-1;;;;;;5901:53:104;5896:2;5887:12;;5880:75;5980:2;5971:12;;5599:390::o;6384:251::-;6454:6;6507:2;6495:9;6486:7;6482:23;6478:32;6475:52;;;6523:1;6520;6513:12;6475:52;6555:9;6549:16;6574:31;6599:5;6574:31;:::i;6640:127::-;6701:10;6696:3;6692:20;6689:1;6682:31;6732:4;6729:1;6722:15;6756:4;6753:1;6746:15;6772:972;7026:4;7074:3;7063:9;7059:19;7105:6;7094:9;7087:25;7131:2;7169:6;7164:2;7153:9;7149:18;7142:34;7212:3;7207:2;7196:9;7192:18;7185:31;7236:6;7271;7265:13;7302:6;7294;7287:22;7340:3;7329:9;7325:19;7318:26;;7379:2;7371:6;7367:15;7353:29;;7400:1;7410:195;7424:6;7421:1;7418:13;7410:195;;;7489:13;;-1:-1:-1;;;;;7485:39:104;7473:52;;7580:15;;;;7545:12;;;;7521:1;7439:9;7410:195;;;-1:-1:-1;;;;;;;7661:32:104;;;;7656:2;7641:18;;7634:60;-1:-1:-1;;;7725:3:104;7710:19;7703:35;7622:3;6772:972;-1:-1:-1;;;6772:972:104:o;7749:881::-;7844:6;7875:2;7918;7906:9;7897:7;7893:23;7889:32;7886:52;;;7934:1;7931;7924:12;7886:52;7967:9;7961:16;8000:18;7992:6;7989:30;7986:50;;;8032:1;8029;8022:12;7986:50;8055:22;;8108:4;8100:13;;8096:27;-1:-1:-1;8086:55:104;;8137:1;8134;8127:12;8086:55;8166:2;8160:9;8189:60;8205:43;8245:2;8205:43;:::i;8189:60::-;8283:15;;;8365:1;8361:10;;;;8353:19;;8349:28;;;8314:12;;;;8389:19;;;8386:39;;;8421:1;8418;8411:12;8386:39;8445:11;;;;8465:135;8481:6;8476:3;8473:15;8465:135;;;8547:10;;8535:23;;8498:12;;;;8578;;;;8465:135;;;8619:5;7749:881;-1:-1:-1;;;;;;;7749:881:104:o;8635:222::-;8675:4;8703:1;8700;8697:8;8694:131;;;8747:10;8742:3;8738:20;8735:1;8728:31;8782:4;8779:1;8772:15;8810:4;8807:1;8800:15;8694:131;-1:-1:-1;8842:9:104;;8635:222::o;8862:188::-;8941:13;;-1:-1:-1;;;;;8983:42:104;;8973:53;;8963:81;;9040:1;9037;9030:12;8963:81;8862:188;;;:::o;9055:450::-;9142:6;9150;9158;9211:2;9199:9;9190:7;9186:23;9182:32;9179:52;;;9227:1;9224;9217:12;9179:52;9250:40;9280:9;9250:40;:::i;:::-;9240:50;;9309:49;9354:2;9343:9;9339:18;9309:49;:::i;:::-;9299:59;;9401:2;9390:9;9386:18;9380:25;9445:10;9438:5;9434:22;9427:5;9424:33;9414:61;;9471:1;9468;9461:12;9414:61;9494:5;9484:15;;;9055:450;;;;;:::o;9510:435::-;9563:3;9601:5;9595:12;9628:6;9623:3;9616:19;9654:4;9683:2;9678:3;9674:12;9667:19;;9720:2;9713:5;9709:14;9741:1;9751:169;9765:6;9762:1;9759:13;9751:169;;;9826:13;;9814:26;;9860:12;;;;9895:15;;;;9787:1;9780:9;9751:169;;;-1:-1:-1;9936:3:104;;9510:435;-1:-1:-1;;;;;9510:435:104:o;9950:898::-;-1:-1:-1;;;;;10393:15:104;;;10375:34;;10440:2;10425:18;;10418:34;;;10488:15;;;10483:2;10468:18;;10461:43;10535:2;10520:18;;10513:34;;;10584:15;;10578:3;10563:19;;10556:44;10637:3;10355;10616:19;;10609:32;;;10318:4;;10664:57;;10701:19;;10693:6;10664:57;:::i;:::-;10770:9;10762:6;10758:22;10752:3;10741:9;10737:19;10730:51;10798:44;10835:6;10827;10798:44;:::i;:::-;10790:52;9950:898;-1:-1:-1;;;;;;;;;;9950:898:104:o;13904:1096::-;14030:3;14059:1;14092:6;14086:13;14122:3;14144:1;14172:9;14168:2;14164:18;14154:28;;14232:2;14221:9;14217:18;14254;14244:61;;14298:4;14290:6;14286:17;14276:27;;14244:61;14324:2;14372;14364:6;14361:14;14341:18;14338:38;14335:165;;;-1:-1:-1;;;14399:33:104;;14455:4;14452:1;14445:15;14485:4;14406:3;14473:17;14335:165;14516:18;14543:104;;;;14661:1;14656:319;;;;14509:466;;14543:104;-1:-1:-1;;14576:24:104;;14564:37;;14621:16;;;;-1:-1:-1;14543:104:104;;14656:319;13851:1;13844:14;;;13888:4;13875:18;;14750:1;14764:165;14778:6;14775:1;14772:13;14764:165;;;14856:14;;14843:11;;;14836:35;14899:16;;;;14793:10;;14764:165;;;14768:3;;14958:6;14953:3;14949:16;14942:23;;14509:466;-1:-1:-1;14991:3:104;;13904:1096;-1:-1:-1;;;;;;;;13904:1096:104:o",
  "language": "Solidity",
  "natspec": {
    "author": "PhantomDao Team",
    "kind": "dev",
    "methods": {},
    "notice": "Communicate with a UniSwap dex",
    "title": "PhantomDexRouter",
    "version": 1
  },
  "offset": [
    885,
    6498
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A0BBEDF EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x44B291C3 EQ PUSH2 0x6B JUMPI DUP1 PUSH4 0x9C221FDC EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0xE84 JUMP JUMPDEST PUSH2 0x93 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x79 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC2 JUMP JUMPDEST PUSH2 0x12F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7E PUSH2 0x8E CALLDATASIZE PUSH1 0x4 PUSH2 0xFC2 JUMP JUMPDEST PUSH2 0x4B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xA3 DUP8 DUP7 DUP7 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2B58577B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0xAD615DEC SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x10DA JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143 PUSH1 0x49 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BED5241 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x180 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x27A JUMPI PUSH1 0x49 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x210 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x275 JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x49 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST DUP1 PUSH2 0x3A2 JUMPI POP PUSH1 0x49 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA75B87D2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x369 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x115A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ORIGIN PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x3C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x26C JUMP JUMPDEST PUSH2 0x3E7 DUP8 DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3D8 JUMPI PUSH2 0x3D8 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x38ED1739 SWAP1 PUSH2 0x41B SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 ADDRESS SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x118D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x462 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x11FE JUMP JUMPDEST POP PUSH2 0x4AF DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x479 JUMPI PUSH2 0x479 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH1 0x1 DUP9 MLOAD PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x128F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x4A0 JUMPI PUSH2 0x4A0 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 PUSH2 0x911 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CD PUSH1 0x49 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BED5241 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x5FF JUMPI PUSH1 0x49 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x26C JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST PUSH1 0x49 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x67B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST DUP1 PUSH2 0x727 JUMPI POP PUSH1 0x49 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA75B87D2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x712 SWAP2 SWAP1 PUSH2 0x115A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ORIGIN PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x746 JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x26C JUMP JUMPDEST PUSH2 0x75D DUP7 DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3D8 JUMPI PUSH2 0x3D8 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5C11D795 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x5C11D795 SWAP1 PUSH2 0x791 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 ADDRESS SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x118D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x4AF DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x479 JUMPI PUSH2 0x479 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x7E8 DUP6 DUP6 PUSH2 0xC06 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x7F9 DUP9 DUP9 DUP9 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x836 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x85A SWAP2 SWAP1 PUSH2 0x12D0 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x891 JUMPI DUP1 DUP3 PUSH2 0x894 JUMP JUMPDEST DUP2 DUP2 JUMPDEST SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8AB PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA3971047 ADDRESS PUSH1 0x0 DUP1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E3 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x958 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97C SWAP2 SWAP1 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0x10DA JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0xAF5 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH2 0xA09 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA56 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA7A SWAP2 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST POP PUSH2 0xA83 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA3971047 ADDRESS DUP5 PUSH2 0xA9B PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP11 DUP11 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC2 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP1 ISZERO PUSH2 0xBFE JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH2 0xB12 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB83 SWAP2 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST POP PUSH2 0xB8C PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA3971047 ADDRESS DUP4 PUSH2 0xBA4 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP11 DUP11 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xC79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056324C6962726172793A204944454E544943414C5F41444452 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x4553534553 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x26C JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0xC99 JUMPI DUP3 DUP5 PUSH2 0xC9C JUMP JUMPDEST DUP4 DUP4 JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056324C6962726172793A205A45524F5F414444524553530000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x26C JUMP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xD0D DUP6 DUP6 PUSH2 0xC06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP5 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP4 SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE SWAP2 SWAP4 POP SWAP2 POP DUP7 SWAP1 PUSH1 0x48 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDAB SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP2 MSTORE PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 DUP4 ADD MSTORE PUSH1 0x15 DUP3 ADD MSTORE PUSH32 0x96E8AC4277198FF8B6F785478AA9A39F403CB768DD02CBEE326C3E7DA348845F PUSH1 0x35 DUP3 ADD MSTORE PUSH1 0x55 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE1 PUSH1 0x49 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x21F8A721 PUSH1 0x3 PUSH1 0x0 ADD PUSH1 0xB ADD PUSH1 0x40 MLOAD PUSH2 0xE04 SWAP2 SWAP1 PUSH2 0x13BD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH1 0xE0 DUP4 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE67 SWAP2 SWAP1 PUSH2 0x115A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xEA7 DUP2 PUSH2 0xE6C JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0xEB7 DUP2 PUSH2 0xE6C JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0xECE DUP2 PUSH2 0xE6C JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0xEDE DUP2 PUSH2 0xE6C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xF2B JUMPI PUSH2 0xF2B PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF4D JUMPI PUSH2 0xF4D PUSH2 0xEEC JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF7D PUSH2 0xF78 DUP4 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0xF02 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xF9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xFB7 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xFA0 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xFDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0xFE8 DUP2 PUSH2 0xE6C JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1014 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1036 PUSH2 0xF78 DUP3 PUSH2 0xF33 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP15 DUP4 GT ISZERO PUSH2 0x1055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x107C JUMPI DUP5 CALLDATALOAD PUSH2 0x106D DUP2 PUSH2 0xE6C JUMP JUMPDEST DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x105A JUMP JUMPDEST SWAP9 POP POP POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x109B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10A7 DUP13 DUP5 DUP14 ADD PUSH2 0xF57 JUMP JUMPDEST SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x10BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x10CB DUP11 DUP3 DUP12 ADD PUSH2 0xF57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x7068616E746F6D2E636F6E74726163742E726567697374657265640000000000 DUP2 MSTORE PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1B DUP3 ADD MSTORE PUSH1 0x2F ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x116C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1115 DUP2 PUSH2 0xE6C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11DD JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x11B8 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1247 PUSH2 0xF78 DUP3 PUSH2 0xF33 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1284 JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x12AF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12EE DUP5 PUSH2 0x12B4 JUMP JUMPDEST SWAP3 POP PUSH2 0x12FC PUSH1 0x20 DUP6 ADD PUSH2 0x12B4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1350 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1334 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP9 SWAP1 MSTORE DUP7 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x139D SWAP1 DUP4 ADD DUP6 PUSH2 0x1320 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x13AF DUP2 DUP6 PUSH2 0x1320 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x13D9 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x13F9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x140D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x141E JUMPI PUSH2 0x144B JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x144B JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1443 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x142A JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xAB 0xE 0xD8 0xD7 ORIGIN CREATE2 CREATE 0xDD 0xBB SMOD SELFBALANCE 0xBB PUSH18 0x903DA89646312BE01264DCB08D8530EF6A0E PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        885,
        6498
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "5": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "CALLVALUE",
      "path": "49"
    },
    "6": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "DUP1",
      "path": "49"
    },
    "7": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "8": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "12": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "DUP1",
      "path": "49"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "REVERT",
      "path": "49"
    },
    "16": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "17": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "POP",
      "path": "49"
    },
    "18": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "CALLDATASIZE",
      "path": "49"
    },
    "21": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "LT",
      "path": "49"
    },
    "22": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x41"
    },
    "25": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "26": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "CALLDATALOAD",
      "path": "49"
    },
    "29": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "SHR",
      "path": "49"
    },
    "32": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "DUP1",
      "path": "49"
    },
    "33": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x2A0BBEDF"
    },
    "38": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "EQ",
      "path": "49"
    },
    "39": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x46"
    },
    "42": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "43": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "DUP1",
      "path": "49"
    },
    "44": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x44B291C3"
    },
    "49": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "EQ",
      "path": "49"
    },
    "50": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x6B"
    },
    "53": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "54": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "DUP1",
      "path": "49"
    },
    "55": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x9C221FDC"
    },
    "60": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "EQ",
      "path": "49"
    },
    "61": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x80"
    },
    "64": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "65": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "66": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "68": {
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "DUP1",
      "path": "49"
    },
    "69": {
      "first_revert": true,
      "fn": null,
      "offset": [
        885,
        6498
      ],
      "op": "REVERT",
      "path": "49"
    },
    "70": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "71": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x59"
    },
    "74": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x54"
    },
    "77": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "CALLDATASIZE",
      "path": "49"
    },
    "78": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "80": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xE84"
    },
    "83": {
      "fn": "PhantomDexRouter.getQuote",
      "jump": "i",
      "offset": [
        1380,
        1808
      ],
      "op": "JUMP",
      "path": "49"
    },
    "84": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "85": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x93"
    },
    "88": {
      "fn": "PhantomDexRouter.getQuote",
      "jump": "i",
      "offset": [
        1380,
        1808
      ],
      "op": "JUMP",
      "path": "49"
    },
    "89": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "90": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "92": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "93": {
      "op": "SWAP1"
    },
    "94": {
      "op": "DUP2"
    },
    "95": {
      "op": "MSTORE"
    },
    "96": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "98": {
      "op": "ADD"
    },
    "99": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "101": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "102": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "DUP1",
      "path": "49"
    },
    "103": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "104": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "SUB",
      "path": "49"
    },
    "105": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "106": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "RETURN",
      "path": "49"
    },
    "107": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        1814,
        2430
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "108": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        1814,
        2430
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x7E"
    },
    "111": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        1814,
        2430
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x79"
    },
    "114": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        1814,
        2430
      ],
      "op": "CALLDATASIZE",
      "path": "49"
    },
    "115": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        1814,
        2430
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "117": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        1814,
        2430
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xFC2"
    },
    "120": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "jump": "i",
      "offset": [
        1814,
        2430
      ],
      "op": "JUMP",
      "path": "49"
    },
    "121": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        1814,
        2430
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "122": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        1814,
        2430
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x12F"
    },
    "125": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "jump": "i",
      "offset": [
        1814,
        2430
      ],
      "op": "JUMP",
      "path": "49"
    },
    "126": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        1814,
        2430
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "127": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        1814,
        2430
      ],
      "op": "STOP",
      "path": "49"
    },
    "128": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2436,
        3079
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "129": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2436,
        3079
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x7E"
    },
    "132": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2436,
        3079
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x8E"
    },
    "135": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2436,
        3079
      ],
      "op": "CALLDATASIZE",
      "path": "49"
    },
    "136": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2436,
        3079
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "138": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2436,
        3079
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xFC2"
    },
    "141": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "jump": "i",
      "offset": [
        2436,
        3079
      ],
      "op": "JUMP",
      "path": "49"
    },
    "142": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2436,
        3079
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "143": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2436,
        3079
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x4B9"
    },
    "146": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "jump": "i",
      "offset": [
        2436,
        3079
      ],
      "op": "JUMP",
      "path": "49"
    },
    "147": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "148": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1576,
        1583
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "150": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1596,
        1614
      ],
      "op": "DUP1",
      "path": "49"
    },
    "151": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1616,
        1635
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "153": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1639,
        1681
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xA3"
    },
    "156": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1651,
        1661
      ],
      "op": "DUP8",
      "path": "49"
    },
    "157": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1663,
        1670
      ],
      "op": "DUP7",
      "path": "49"
    },
    "158": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1672,
        1680
      ],
      "op": "DUP7",
      "path": "49"
    },
    "159": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1639,
        1650
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x7D9"
    },
    "162": {
      "fn": "PhantomDexRouter.getQuote",
      "jump": "i",
      "offset": [
        1639,
        1681
      ],
      "op": "JUMP",
      "path": "49"
    },
    "163": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1639,
        1681
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "164": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "166": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "167": {
      "op": "PUSH4",
      "value": "0x2B58577B"
    },
    "172": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "174": {
      "op": "SHL"
    },
    "175": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "DUP2",
      "path": "49"
    },
    "176": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "177": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "179": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "DUP2",
      "path": "49"
    },
    "180": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "ADD",
      "path": "49"
    },
    "181": {
      "op": "DUP10"
    },
    "182": {
      "op": "SWAP1"
    },
    "183": {
      "op": "MSTORE"
    },
    "184": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "186": {
      "op": "DUP2"
    },
    "187": {
      "op": "ADD"
    },
    "188": {
      "op": "DUP4"
    },
    "189": {
      "op": "SWAP1"
    },
    "190": {
      "op": "MSTORE"
    },
    "191": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "193": {
      "op": "DUP2"
    },
    "194": {
      "op": "ADD"
    },
    "195": {
      "op": "DUP3"
    },
    "196": {
      "op": "SWAP1"
    },
    "197": {
      "op": "MSTORE"
    },
    "198": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1595,
        1681
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "199": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1595,
        1681
      ],
      "op": "SWAP4",
      "path": "49"
    },
    "200": {
      "op": "POP"
    },
    "201": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1595,
        1681
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "202": {
      "op": "POP"
    },
    "203": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1691,
        1704
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "205": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1691,
        1704
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "210": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "212": {
      "op": "SHL"
    },
    "213": {
      "op": "SUB"
    },
    "214": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1742
      ],
      "op": "DUP11",
      "path": "49"
    },
    "215": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1742
      ],
      "op": "AND",
      "path": "49"
    },
    "216": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1742
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "217": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1742
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xAD615DEC"
    },
    "222": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1742
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "223": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "225": {
      "op": "ADD"
    },
    "226": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "228": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "230": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "231": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "DUP1",
      "path": "49"
    },
    "232": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "DUP4",
      "path": "49"
    },
    "233": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "SUB",
      "path": "49"
    },
    "234": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "DUP2",
      "path": "49"
    },
    "235": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "DUP7",
      "path": "49"
    },
    "236": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "GAS",
      "path": "49"
    },
    "237": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "STATICCALL",
      "path": "49"
    },
    "238": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "239": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "DUP1",
      "path": "49"
    },
    "240": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "241": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xFE"
    },
    "244": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "245": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "246": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "248": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "DUP1",
      "path": "49"
    },
    "249": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "250": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "251": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "253": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "REVERT",
      "path": "49"
    },
    "254": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "255": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "POP",
      "path": "49"
    },
    "256": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "POP",
      "path": "49"
    },
    "257": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "POP",
      "path": "49"
    },
    "258": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "POP",
      "path": "49"
    },
    "259": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "261": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "262": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "263": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "265": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "NOT",
      "path": "49"
    },
    "266": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "268": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "DUP3",
      "path": "49"
    },
    "269": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "ADD",
      "path": "49"
    },
    "270": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "AND",
      "path": "49"
    },
    "271": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "DUP3",
      "path": "49"
    },
    "272": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "ADD",
      "path": "49"
    },
    "273": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "DUP1",
      "path": "49"
    },
    "274": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "276": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "277": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "POP",
      "path": "49"
    },
    "278": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "DUP2",
      "path": "49"
    },
    "279": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "ADD",
      "path": "49"
    },
    "280": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "281": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x122"
    },
    "284": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "285": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "286": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x10DA"
    },
    "289": {
      "fn": "PhantomDexRouter.getQuote",
      "jump": "i",
      "offset": [
        1707,
        1777
      ],
      "op": "JUMP",
      "path": "49"
    },
    "290": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1707,
        1777
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "291": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1691,
        1777
      ],
      "op": "SWAP10",
      "path": "49"
    },
    "292": {
      "fn": "PhantomDexRouter.getQuote",
      "offset": [
        1380,
        1808
      ],
      "op": "SWAP9",
      "path": "49"
    },
    "293": {
      "op": "POP"
    },
    "294": {
      "op": "POP"
    },
    "295": {
      "op": "POP"
    },
    "296": {
      "op": "POP"
    },
    "297": {
      "op": "POP"
    },
    "298": {
      "op": "POP"
    },
    "299": {
      "op": "POP"
    },
    "300": {
      "op": "POP"
    },
    "301": {
      "op": "POP"
    },
    "302": {
      "fn": "PhantomDexRouter.getQuote",
      "jump": "o",
      "offset": [
        1380,
        1808
      ],
      "op": "JUMP",
      "path": "49"
    },
    "303": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        1814,
        2430
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "304": {
      "offset": [
        7939,
        7955
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "306": {
      "offset": [
        7958,
        7974
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x143"
    },
    "309": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "statement": 0,
      "value": "0x49"
    },
    "311": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "318": {
      "op": "SHL"
    },
    "319": {
      "op": "SUB"
    },
    "320": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "321": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "322": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2371,
        2493
      ],
      "op": "JUMP",
      "path": "68"
    },
    "323": {
      "offset": [
        7958,
        7974
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "330": {
      "op": "SHL"
    },
    "331": {
      "op": "SUB"
    },
    "332": {
      "offset": [
        7958,
        7992
      ],
      "op": "AND",
      "path": "68"
    },
    "333": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7992
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x1BED5241"
    },
    "338": {
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "340": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "341": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "342": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "347": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "348": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "350": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SHL",
      "path": "68"
    },
    "351": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "352": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "353": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "355": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "356": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "358": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "360": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "361": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "362": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP4",
      "path": "68"
    },
    "363": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SUB",
      "path": "68"
    },
    "364": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "365": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP7",
      "path": "68"
    },
    "366": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "GAS",
      "path": "68"
    },
    "367": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "368": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "369": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "370": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "371": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x180"
    },
    "374": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "375": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "376": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "378": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "379": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "380": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "381": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "383": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "REVERT",
      "path": "68"
    },
    "384": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "385": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "386": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "387": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "388": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "389": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "391": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "392": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "393": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "395": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "NOT",
      "path": "68"
    },
    "396": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "398": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "399": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "400": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "401": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "402": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "403": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "404": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "406": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "407": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "408": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "409": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "410": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "411": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1A4"
    },
    "414": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "415": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "416": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x10F3"
    },
    "419": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMP",
      "path": "68"
    },
    "420": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "421": {
      "offset": [
        7939,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "422": {
      "op": "POP"
    },
    "423": {
      "offset": [
        8023,
        8027
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1"
    },
    "425": {
      "offset": [
        8008,
        8027
      ],
      "op": "DUP2",
      "path": "68"
    },
    "426": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "427": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "428": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "EQ",
      "path": "68"
    },
    "429": {
      "offset": [
        8004,
        8824
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "430": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x27A"
    },
    "433": {
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "434": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x49"
    },
    "436": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "443": {
      "op": "SHL"
    },
    "444": {
      "op": "SUB"
    },
    "445": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "452": {
      "op": "SHL"
    },
    "453": {
      "op": "SUB"
    },
    "454": {
      "offset": [
        8143,
        8167
      ],
      "op": "AND",
      "path": "68"
    },
    "455": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8167
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "460": {
      "offset": [
        8226,
        8236
      ],
      "op": "CALLER",
      "path": "68"
    },
    "461": {
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "463": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "464": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "466": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "ADD",
      "path": "68"
    },
    "467": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1DC"
    },
    "470": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "471": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "472": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x111C"
    },
    "475": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMP",
      "path": "68"
    },
    "476": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "477": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "479": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "480": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "482": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "483": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP4",
      "path": "68"
    },
    "484": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "485": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "486": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "487": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "488": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "489": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "491": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "492": {
      "offset": [
        8168,
        8238
      ],
      "op": "DUP1",
      "path": "68"
    },
    "493": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "494": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "495": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "497": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "ADD",
      "path": "68"
    },
    "498": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "499": {
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "501": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "502": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "503": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "508": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "509": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "511": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SHL",
      "path": "68"
    },
    "512": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "513": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "514": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "516": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "517": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x210"
    },
    "520": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "521": {
      "op": "DUP2"
    },
    "522": {
      "op": "MSTORE"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "525": {
      "op": "ADD"
    },
    "526": {
      "op": "SWAP1"
    },
    "527": {
      "op": "JUMP"
    },
    "528": {
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "529": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "531": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "533": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "534": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "535": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP4",
      "path": "68"
    },
    "536": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SUB",
      "path": "68"
    },
    "537": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "538": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP7",
      "path": "68"
    },
    "539": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "GAS",
      "path": "68"
    },
    "540": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "541": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "542": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "543": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "544": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x22D"
    },
    "547": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "548": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "549": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "551": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "552": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "553": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "554": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "556": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "REVERT",
      "path": "68"
    },
    "557": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "558": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "559": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "560": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "561": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "562": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "564": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "565": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "566": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "568": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "NOT",
      "path": "68"
    },
    "569": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "571": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "572": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "573": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "574": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "575": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "576": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "577": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "579": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "580": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "581": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "582": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "583": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "584": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x251"
    },
    "587": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "588": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "589": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x10F3"
    },
    "592": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMP",
      "path": "68"
    },
    "593": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "594": {
      "offset": [
        8138,
        8351
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x275"
    },
    "597": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "598": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "600": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "601": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "606": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "608": {
      "op": "SHL"
    },
    "609": {
      "offset": [
        8266,
        8336
      ],
      "op": "DUP2",
      "path": "68"
    },
    "610": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "611": {
      "offset": [
        8325,
        8335
      ],
      "op": "CALLER",
      "path": "68"
    },
    "612": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "614": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "DUP3",
      "path": "68"
    },
    "615": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "ADD",
      "path": "68"
    },
    "616": {
      "op": "MSTORE"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "619": {
      "op": "ADD"
    },
    "620": {
      "offset": [
        8266,
        8336
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "621": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "623": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "624": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "DUP1",
      "path": "68"
    },
    "625": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "626": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "SUB",
      "path": "68"
    },
    "627": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "628": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "REVERT",
      "path": "68"
    },
    "629": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "630": {
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3C1"
    },
    "633": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMP",
      "path": "68"
    },
    "634": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "635": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x49"
    },
    "637": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "644": {
      "op": "SHL"
    },
    "645": {
      "op": "SUB"
    },
    "646": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "653": {
      "op": "SHL"
    },
    "654": {
      "op": "SUB"
    },
    "655": {
      "offset": [
        8525,
        8549
      ],
      "op": "AND",
      "path": "68"
    },
    "656": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8549
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "661": {
      "offset": [
        8608,
        8618
      ],
      "op": "CALLER",
      "path": "68"
    },
    "662": {
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "664": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "665": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "667": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "ADD",
      "path": "68"
    },
    "668": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x2A5"
    },
    "671": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "672": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "673": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x111C"
    },
    "676": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMP",
      "path": "68"
    },
    "677": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "678": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "680": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "681": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "683": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "684": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP4",
      "path": "68"
    },
    "685": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "686": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "687": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "688": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "689": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "690": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "692": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "693": {
      "offset": [
        8550,
        8620
      ],
      "op": "DUP1",
      "path": "68"
    },
    "694": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "695": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "696": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "698": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "ADD",
      "path": "68"
    },
    "699": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "700": {
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "702": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "703": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "704": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "709": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "710": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "712": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SHL",
      "path": "68"
    },
    "713": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "714": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "715": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "717": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "718": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x2D9"
    },
    "721": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "722": {
      "op": "DUP2"
    },
    "723": {
      "op": "MSTORE"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "726": {
      "op": "ADD"
    },
    "727": {
      "op": "SWAP1"
    },
    "728": {
      "op": "JUMP"
    },
    "729": {
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "730": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "732": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "734": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "735": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "736": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP4",
      "path": "68"
    },
    "737": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SUB",
      "path": "68"
    },
    "738": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "739": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP7",
      "path": "68"
    },
    "740": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "GAS",
      "path": "68"
    },
    "741": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "742": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "743": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "744": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "745": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x2F6"
    },
    "748": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "749": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "750": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "752": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "753": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "754": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "755": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "757": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "REVERT",
      "path": "68"
    },
    "758": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "759": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "760": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "761": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "762": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "763": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "765": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "766": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "767": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "769": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "NOT",
      "path": "68"
    },
    "770": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "772": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "773": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "774": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "775": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "776": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "777": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "778": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "780": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "781": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "782": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "783": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "784": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "785": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x31A"
    },
    "788": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "789": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "790": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x10F3"
    },
    "793": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMP",
      "path": "68"
    },
    "794": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "795": {
      "offset": [
        8525,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "796": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3A2"
    },
    "799": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "800": {
      "op": "POP"
    },
    "801": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x49"
    },
    "803": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "810": {
      "op": "SHL"
    },
    "811": {
      "op": "SUB"
    },
    "812": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "819": {
      "op": "SHL"
    },
    "820": {
      "op": "SUB"
    },
    "821": {
      "offset": [
        8658,
        8686
      ],
      "op": "AND",
      "path": "68"
    },
    "822": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xA75B87D2"
    },
    "827": {
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "829": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "830": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "831": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "836": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "837": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "839": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SHL",
      "path": "68"
    },
    "840": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "841": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "842": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "844": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "845": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "847": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "849": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "850": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "851": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP4",
      "path": "68"
    },
    "852": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SUB",
      "path": "68"
    },
    "853": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "854": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP7",
      "path": "68"
    },
    "855": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "GAS",
      "path": "68"
    },
    "856": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "857": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "858": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "859": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "860": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x369"
    },
    "863": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "864": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "865": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "867": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "868": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "869": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "870": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "872": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "REVERT",
      "path": "68"
    },
    "873": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "874": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "875": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "876": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "877": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "878": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "880": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "881": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "882": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "884": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "NOT",
      "path": "68"
    },
    "885": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "887": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "888": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "889": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "890": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "891": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "892": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "893": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "895": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "896": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "897": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "898": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "899": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "900": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x38D"
    },
    "903": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "904": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "905": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x115A"
    },
    "908": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMP",
      "path": "68"
    },
    "909": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "914": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "916": {
      "op": "SHL"
    },
    "917": {
      "op": "SUB"
    },
    "918": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "919": {
      "offset": [
        8645,
        8654
      ],
      "op": "ORIGIN",
      "path": "68"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "926": {
      "op": "SHL"
    },
    "927": {
      "op": "SUB"
    },
    "928": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "929": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8645,
        8688
      ],
      "op": "EQ",
      "path": "68"
    },
    "930": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "931": {
      "offset": [
        8502,
        8814
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3C1"
    },
    "934": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "935": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "937": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "938": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "943": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "945": {
      "op": "SHL"
    },
    "946": {
      "offset": [
        8729,
        8799
      ],
      "op": "DUP2",
      "path": "68"
    },
    "947": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "948": {
      "offset": [
        8788,
        8798
      ],
      "op": "CALLER",
      "path": "68"
    },
    "949": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "951": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "DUP3",
      "path": "68"
    },
    "952": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "ADD",
      "path": "68"
    },
    "953": {
      "op": "MSTORE"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "956": {
      "op": "ADD"
    },
    "957": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x26C"
    },
    "960": {
      "op": "JUMP"
    },
    "961": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "962": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2117,
        2162
      ],
      "op": "PUSH2",
      "path": "49",
      "statement": 1,
      "value": "0x3E7"
    },
    "965": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2125,
        2133
      ],
      "op": "DUP8",
      "path": "49"
    },
    "966": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2135,
        2139
      ],
      "op": "DUP7",
      "path": "49"
    },
    "967": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2140,
        2141
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "969": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2135,
        2142
      ],
      "op": "DUP2",
      "path": "49"
    },
    "970": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2135,
        2142
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "971": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2135,
        2142
      ],
      "op": "DUP2",
      "path": "49"
    },
    "972": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2135,
        2142
      ],
      "op": "LT",
      "path": "49"
    },
    "973": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2135,
        2142
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x3D8"
    },
    "976": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2135,
        2142
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "977": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2135,
        2142
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x3D8"
    },
    "980": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2135,
        2142
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x1177"
    },
    "983": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "jump": "i",
      "offset": [
        2135,
        2142
      ],
      "op": "JUMP",
      "path": "49"
    },
    "984": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2135,
        2142
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "985": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2135,
        2142
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "987": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2135,
        2142
      ],
      "op": "MUL",
      "path": "49"
    },
    "988": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2135,
        2142
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "990": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2135,
        2142
      ],
      "op": "ADD",
      "path": "49"
    },
    "991": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2135,
        2142
      ],
      "op": "ADD",
      "path": "49"
    },
    "992": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2135,
        2142
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "993": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2144,
        2148
      ],
      "op": "DUP6",
      "path": "49"
    },
    "994": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2150,
        2161
      ],
      "op": "DUP6",
      "path": "49"
    },
    "995": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2117,
        2124
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x8A3"
    },
    "998": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "jump": "i",
      "offset": [
        2117,
        2162
      ],
      "op": "JUMP",
      "path": "49"
    },
    "999": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2117,
        2162
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1000": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 2,
      "value": "0x40"
    },
    "1002": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1003": {
      "op": "PUSH4",
      "value": "0x38ED1739"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1010": {
      "op": "SHL"
    },
    "1011": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1012": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1019": {
      "op": "SHL"
    },
    "1020": {
      "op": "SUB"
    },
    "1021": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2226
      ],
      "op": "DUP10",
      "path": "49"
    },
    "1022": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2226
      ],
      "op": "AND",
      "path": "49"
    },
    "1023": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2226
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1024": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2226
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x38ED1739"
    },
    "1029": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2226
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1030": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x41B"
    },
    "1033": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1034": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2240,
        2248
      ],
      "op": "DUP11",
      "path": "49"
    },
    "1035": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2240,
        2248
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1036": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2263,
        2275
      ],
      "op": "DUP11",
      "path": "49"
    },
    "1037": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2263,
        2275
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1038": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2290,
        2294
      ],
      "op": "DUP11",
      "path": "49"
    },
    "1039": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2290,
        2294
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1040": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2316,
        2320
      ],
      "op": "ADDRESS",
      "path": "49"
    },
    "1041": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2316,
        2320
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1042": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2336,
        2344
      ],
      "op": "DUP12",
      "path": "49"
    },
    "1043": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2336,
        2344
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1044": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "1046": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "ADD",
      "path": "49"
    },
    "1047": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x118D"
    },
    "1050": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "jump": "i",
      "offset": [
        2172,
        2354
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1051": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1052": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1054": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1056": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1057": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1058": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "DUP4",
      "path": "49"
    },
    "1059": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "SUB",
      "path": "49"
    },
    "1060": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1061": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1063": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "DUP8",
      "path": "49"
    },
    "1064": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "GAS",
      "path": "49"
    },
    "1065": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "CALL",
      "path": "49"
    },
    "1066": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "1067": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1068": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "1069": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x43A"
    },
    "1072": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "1073": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1074": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1076": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1077": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "1078": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1079": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1081": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "REVERT",
      "path": "49"
    },
    "1082": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1083": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "POP",
      "path": "49"
    },
    "1084": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "POP",
      "path": "49"
    },
    "1085": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "POP",
      "path": "49"
    },
    "1086": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "POP",
      "path": "49"
    },
    "1087": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1089": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1090": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1091": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1093": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "DUP3",
      "path": "49"
    },
    "1094": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "1095": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "1097": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1098": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1099": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1100": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "ADD",
      "path": "49"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1103": {
      "op": "NOT"
    },
    "1104": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "AND",
      "path": "49"
    },
    "1105": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "DUP3",
      "path": "49"
    },
    "1106": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "ADD",
      "path": "49"
    },
    "1107": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1109": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1110": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x462"
    },
    "1113": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1114": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1115": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1116": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "ADD",
      "path": "49"
    },
    "1117": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1118": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x11FE"
    },
    "1121": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "jump": "i",
      "offset": [
        2172,
        2354
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1122": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1123": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2172,
        2354
      ],
      "op": "POP",
      "path": "49"
    },
    "1124": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2364,
        2423
      ],
      "op": "PUSH2",
      "path": "49",
      "statement": 3,
      "value": "0x4AF"
    },
    "1127": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2373,
        2377
      ],
      "op": "DUP6",
      "path": "49"
    },
    "1128": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2378,
        2379
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1130": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2373,
        2380
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1131": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2373,
        2380
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1132": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2373,
        2380
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1133": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2373,
        2380
      ],
      "op": "LT",
      "path": "49"
    },
    "1134": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2373,
        2380
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x479"
    },
    "1137": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2373,
        2380
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "1138": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2373,
        2380
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x479"
    },
    "1141": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2373,
        2380
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x1177"
    },
    "1144": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "jump": "i",
      "offset": [
        2373,
        2380
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1145": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2373,
        2380
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1146": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2373,
        2380
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1148": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2373,
        2380
      ],
      "op": "MUL",
      "path": "49"
    },
    "1149": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2373,
        2380
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1151": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2373,
        2380
      ],
      "op": "ADD",
      "path": "49"
    },
    "1152": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2373,
        2380
      ],
      "op": "ADD",
      "path": "49"
    },
    "1153": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2373,
        2380
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1154": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2382,
        2386
      ],
      "op": "DUP7",
      "path": "49"
    },
    "1155": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2401,
        2402
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1"
    },
    "1157": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2387,
        2391
      ],
      "op": "DUP9",
      "path": "49"
    },
    "1158": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2387,
        2398
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1159": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2387,
        2402
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x490"
    },
    "1162": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2387,
        2402
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1163": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2387,
        2402
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1164": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2387,
        2402
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x128F"
    },
    "1167": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "jump": "i",
      "offset": [
        2387,
        2402
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1168": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2387,
        2402
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1169": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2382,
        2403
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1170": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2382,
        2403
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1171": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2382,
        2403
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1172": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2382,
        2403
      ],
      "op": "LT",
      "path": "49"
    },
    "1173": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2382,
        2403
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x4A0"
    },
    "1176": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2382,
        2403
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "1177": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2382,
        2403
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x4A0"
    },
    "1180": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2382,
        2403
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x1177"
    },
    "1183": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "jump": "i",
      "offset": [
        2382,
        2403
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1184": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2382,
        2403
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1185": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2382,
        2403
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1187": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2382,
        2403
      ],
      "op": "MUL",
      "path": "49"
    },
    "1188": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2382,
        2403
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1190": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2382,
        2403
      ],
      "op": "ADD",
      "path": "49"
    },
    "1191": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2382,
        2403
      ],
      "op": "ADD",
      "path": "49"
    },
    "1192": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2382,
        2403
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1193": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2405,
        2409
      ],
      "op": "DUP6",
      "path": "49"
    },
    "1194": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2411,
        2422
      ],
      "op": "DUP6",
      "path": "49"
    },
    "1195": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2364,
        2372
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x911"
    },
    "1198": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "jump": "i",
      "offset": [
        2364,
        2423
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1199": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        2364,
        2423
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1200": {
      "offset": [
        7929,
        8841
      ],
      "op": "POP",
      "path": "68"
    },
    "1201": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        1814,
        2430
      ],
      "op": "POP",
      "path": "49"
    },
    "1202": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        1814,
        2430
      ],
      "op": "POP",
      "path": "49"
    },
    "1203": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        1814,
        2430
      ],
      "op": "POP",
      "path": "49"
    },
    "1204": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        1814,
        2430
      ],
      "op": "POP",
      "path": "49"
    },
    "1205": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        1814,
        2430
      ],
      "op": "POP",
      "path": "49"
    },
    "1206": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        1814,
        2430
      ],
      "op": "POP",
      "path": "49"
    },
    "1207": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "offset": [
        1814,
        2430
      ],
      "op": "POP",
      "path": "49"
    },
    "1208": {
      "fn": "PhantomDexRouter.swapReceiveMinimum",
      "jump": "o",
      "offset": [
        1814,
        2430
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1209": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2436,
        3079
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1210": {
      "offset": [
        7939,
        7955
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "1212": {
      "offset": [
        7958,
        7974
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x4CD"
    },
    "1215": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x49"
    },
    "1217": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1224": {
      "op": "SHL"
    },
    "1225": {
      "op": "SUB"
    },
    "1226": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "1227": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1228": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2371,
        2493
      ],
      "op": "JUMP",
      "path": "68"
    },
    "1229": {
      "offset": [
        7958,
        7974
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1236": {
      "op": "SHL"
    },
    "1237": {
      "op": "SUB"
    },
    "1238": {
      "offset": [
        7958,
        7992
      ],
      "op": "AND",
      "path": "68"
    },
    "1239": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7992
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x1BED5241"
    },
    "1244": {
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1246": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1247": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1248": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "1253": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "1254": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "1256": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SHL",
      "path": "68"
    },
    "1257": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1258": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1259": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "1261": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "1262": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "1264": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1266": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1267": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1268": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP4",
      "path": "68"
    },
    "1269": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SUB",
      "path": "68"
    },
    "1270": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1271": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP7",
      "path": "68"
    },
    "1272": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "GAS",
      "path": "68"
    },
    "1273": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "1274": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "1275": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1276": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "1277": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x50A"
    },
    "1280": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "1281": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "1282": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "1284": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1285": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "1286": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "1287": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "1289": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "REVERT",
      "path": "68"
    },
    "1290": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1291": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "1292": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "1293": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "1294": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "1295": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1297": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1298": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "1299": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "1301": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "NOT",
      "path": "68"
    },
    "1302": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "1304": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1305": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "1306": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "1307": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1308": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "1309": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1310": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1312": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1313": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "1314": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1315": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "1316": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1317": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x52E"
    },
    "1320": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "1321": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1322": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x10F3"
    },
    "1325": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMP",
      "path": "68"
    },
    "1326": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1327": {
      "offset": [
        7939,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1328": {
      "op": "POP"
    },
    "1329": {
      "offset": [
        8023,
        8027
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1"
    },
    "1331": {
      "offset": [
        8008,
        8027
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1332": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "1333": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "1334": {
      "branch": 24,
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "EQ",
      "path": "68"
    },
    "1335": {
      "offset": [
        8004,
        8824
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "1336": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x5FF"
    },
    "1339": {
      "branch": 24,
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "1340": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x49"
    },
    "1342": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1349": {
      "op": "SHL"
    },
    "1350": {
      "op": "SUB"
    },
    "1351": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1358": {
      "op": "SHL"
    },
    "1359": {
      "op": "SUB"
    },
    "1360": {
      "offset": [
        8143,
        8167
      ],
      "op": "AND",
      "path": "68"
    },
    "1361": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8167
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "1366": {
      "offset": [
        8226,
        8236
      ],
      "op": "CALLER",
      "path": "68"
    },
    "1367": {
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1369": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1370": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "1372": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "ADD",
      "path": "68"
    },
    "1373": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x566"
    },
    "1376": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "1377": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1378": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x111C"
    },
    "1381": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMP",
      "path": "68"
    },
    "1382": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1383": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1385": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1386": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "1388": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1389": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP4",
      "path": "68"
    },
    "1390": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "1391": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "1392": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1393": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1394": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1395": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1397": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1398": {
      "offset": [
        8168,
        8238
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1399": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1400": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1401": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "1403": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "ADD",
      "path": "68"
    },
    "1404": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "1405": {
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1407": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1408": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1409": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "1414": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "1415": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "1417": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SHL",
      "path": "68"
    },
    "1418": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1419": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1420": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "1422": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "1423": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x59A"
    },
    "1426": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "1427": {
      "op": "DUP2"
    },
    "1428": {
      "op": "MSTORE"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1431": {
      "op": "ADD"
    },
    "1432": {
      "op": "SWAP1"
    },
    "1433": {
      "op": "JUMP"
    },
    "1434": {
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1435": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "1437": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1439": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1440": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1441": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP4",
      "path": "68"
    },
    "1442": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SUB",
      "path": "68"
    },
    "1443": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1444": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP7",
      "path": "68"
    },
    "1445": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "GAS",
      "path": "68"
    },
    "1446": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "1447": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "1448": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1449": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "1450": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x5B7"
    },
    "1453": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "1454": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "1455": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "1457": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1458": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "1459": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "1460": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "1462": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "REVERT",
      "path": "68"
    },
    "1463": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1464": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "1465": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "1466": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "1467": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "1468": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1470": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1471": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "1472": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "1474": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "NOT",
      "path": "68"
    },
    "1475": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "1477": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1478": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "1479": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "1480": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1481": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "1482": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1483": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1485": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1486": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "1487": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1488": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "1489": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1490": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x5DB"
    },
    "1493": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "1494": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1495": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x10F3"
    },
    "1498": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMP",
      "path": "68"
    },
    "1499": {
      "branch": 25,
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1500": {
      "offset": [
        8138,
        8351
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x5FA"
    },
    "1503": {
      "branch": 25,
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "1504": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1506": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1507": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1514": {
      "op": "SHL"
    },
    "1515": {
      "offset": [
        8266,
        8336
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1516": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1517": {
      "offset": [
        8325,
        8335
      ],
      "op": "CALLER",
      "path": "68"
    },
    "1518": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "1520": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1521": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "ADD",
      "path": "68"
    },
    "1522": {
      "op": "MSTORE"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1525": {
      "op": "ADD"
    },
    "1526": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x26C"
    },
    "1529": {
      "op": "JUMP"
    },
    "1530": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1531": {
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x746"
    },
    "1534": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMP",
      "path": "68"
    },
    "1535": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1536": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x49"
    },
    "1538": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1545": {
      "op": "SHL"
    },
    "1546": {
      "op": "SUB"
    },
    "1547": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1554": {
      "op": "SHL"
    },
    "1555": {
      "op": "SUB"
    },
    "1556": {
      "offset": [
        8525,
        8549
      ],
      "op": "AND",
      "path": "68"
    },
    "1557": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8549
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "1562": {
      "offset": [
        8608,
        8618
      ],
      "op": "CALLER",
      "path": "68"
    },
    "1563": {
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1565": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1566": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "1568": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "ADD",
      "path": "68"
    },
    "1569": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x62A"
    },
    "1572": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "1573": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1574": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x111C"
    },
    "1577": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMP",
      "path": "68"
    },
    "1578": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1579": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1581": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1582": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "1584": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1585": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP4",
      "path": "68"
    },
    "1586": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "1587": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "1588": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1589": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1590": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1591": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1593": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1594": {
      "offset": [
        8550,
        8620
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1595": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1596": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1597": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "1599": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "ADD",
      "path": "68"
    },
    "1600": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "1601": {
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1603": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1604": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1605": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "1610": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "1611": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "1613": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SHL",
      "path": "68"
    },
    "1614": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1615": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1616": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "1618": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "1619": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x65E"
    },
    "1622": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "1623": {
      "op": "DUP2"
    },
    "1624": {
      "op": "MSTORE"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1627": {
      "op": "ADD"
    },
    "1628": {
      "op": "SWAP1"
    },
    "1629": {
      "op": "JUMP"
    },
    "1630": {
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1631": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "1633": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1635": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1636": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1637": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP4",
      "path": "68"
    },
    "1638": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SUB",
      "path": "68"
    },
    "1639": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1640": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP7",
      "path": "68"
    },
    "1641": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "GAS",
      "path": "68"
    },
    "1642": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "1643": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "1644": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1645": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "1646": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x67B"
    },
    "1649": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "1650": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "1651": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "1653": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1654": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "1655": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "1656": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "1658": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "REVERT",
      "path": "68"
    },
    "1659": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1660": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "1661": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "1662": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "1663": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "1664": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1666": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1667": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "1668": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "1670": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "NOT",
      "path": "68"
    },
    "1671": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "1673": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1674": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "1675": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "1676": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1677": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "1678": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1679": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1681": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1682": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "1683": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1684": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "1685": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1686": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x69F"
    },
    "1689": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "1690": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1691": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x10F3"
    },
    "1694": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMP",
      "path": "68"
    },
    "1695": {
      "branch": 26,
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1696": {
      "offset": [
        8525,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1697": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x727"
    },
    "1700": {
      "branch": 26,
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "1701": {
      "op": "POP"
    },
    "1702": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x49"
    },
    "1704": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1711": {
      "op": "SHL"
    },
    "1712": {
      "op": "SUB"
    },
    "1713": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1720": {
      "op": "SHL"
    },
    "1721": {
      "op": "SUB"
    },
    "1722": {
      "offset": [
        8658,
        8686
      ],
      "op": "AND",
      "path": "68"
    },
    "1723": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xA75B87D2"
    },
    "1728": {
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1730": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1731": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1732": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "1737": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "1738": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "1740": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SHL",
      "path": "68"
    },
    "1741": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1742": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1743": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "1745": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "1746": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "1748": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1750": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1751": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1752": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP4",
      "path": "68"
    },
    "1753": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SUB",
      "path": "68"
    },
    "1754": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1755": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP7",
      "path": "68"
    },
    "1756": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "GAS",
      "path": "68"
    },
    "1757": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "1758": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "1759": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1760": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "1761": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x6EE"
    },
    "1764": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "1765": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "1766": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "1768": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1769": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "1770": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "1771": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "1773": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "REVERT",
      "path": "68"
    },
    "1774": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1775": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "1776": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "1777": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "1778": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "1779": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1781": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1782": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "1783": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "1785": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "NOT",
      "path": "68"
    },
    "1786": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "1788": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1789": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "1790": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "1791": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1792": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "1793": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1794": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1796": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1797": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "1798": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1799": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "1800": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1801": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x712"
    },
    "1804": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "1805": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1806": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x115A"
    },
    "1809": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMP",
      "path": "68"
    },
    "1810": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1817": {
      "op": "SHL"
    },
    "1818": {
      "op": "SUB"
    },
    "1819": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "1820": {
      "offset": [
        8645,
        8654
      ],
      "op": "ORIGIN",
      "path": "68"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1827": {
      "op": "SHL"
    },
    "1828": {
      "op": "SUB"
    },
    "1829": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "1830": {
      "branch": 27,
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8645,
        8688
      ],
      "op": "EQ",
      "path": "68"
    },
    "1831": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1832": {
      "offset": [
        8502,
        8814
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x746"
    },
    "1835": {
      "branch": 27,
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "1836": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1838": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1839": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1846": {
      "op": "SHL"
    },
    "1847": {
      "offset": [
        8729,
        8799
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1848": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1849": {
      "offset": [
        8788,
        8798
      ],
      "op": "CALLER",
      "path": "68"
    },
    "1850": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "1852": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1853": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "ADD",
      "path": "68"
    },
    "1854": {
      "op": "MSTORE"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1857": {
      "op": "ADD"
    },
    "1858": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x26C"
    },
    "1861": {
      "op": "JUMP"
    },
    "1862": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1863": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2737,
        2785
      ],
      "op": "PUSH2",
      "path": "49",
      "statement": 4,
      "value": "0x75D"
    },
    "1866": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2745,
        2756
      ],
      "op": "DUP7",
      "path": "49"
    },
    "1867": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2758,
        2762
      ],
      "op": "DUP7",
      "path": "49"
    },
    "1868": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2763,
        2764
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1870": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2758,
        2765
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1871": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2758,
        2765
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1872": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2758,
        2765
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1873": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2758,
        2765
      ],
      "op": "LT",
      "path": "49"
    },
    "1874": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2758,
        2765
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x3D8"
    },
    "1877": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2758,
        2765
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "1878": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2758,
        2765
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x3D8"
    },
    "1881": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2758,
        2765
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x1177"
    },
    "1884": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "jump": "i",
      "offset": [
        2758,
        2765
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1885": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2737,
        2785
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1886": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 5,
      "value": "0x40"
    },
    "1888": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1889": {
      "op": "PUSH4",
      "value": "0x5C11D795"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1896": {
      "op": "SHL"
    },
    "1897": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1898": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1905": {
      "op": "SHL"
    },
    "1906": {
      "op": "SUB"
    },
    "1907": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        2878
      ],
      "op": "DUP10",
      "path": "49"
    },
    "1908": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        2878
      ],
      "op": "AND",
      "path": "49"
    },
    "1909": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        2878
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1910": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        2878
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x5C11D795"
    },
    "1915": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        2878
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1916": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x791"
    },
    "1919": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1920": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2892,
        2901
      ],
      "op": "DUP11",
      "path": "49"
    },
    "1921": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2892,
        2901
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1922": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2915,
        2926
      ],
      "op": "DUP11",
      "path": "49"
    },
    "1923": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2915,
        2926
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1924": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2940,
        2944
      ],
      "op": "DUP11",
      "path": "49"
    },
    "1925": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2940,
        2944
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1926": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2966,
        2970
      ],
      "op": "ADDRESS",
      "path": "49"
    },
    "1927": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2966,
        2970
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1928": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2985,
        2993
      ],
      "op": "DUP12",
      "path": "49"
    },
    "1929": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2985,
        2993
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1930": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "1932": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "ADD",
      "path": "49"
    },
    "1933": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x118D"
    },
    "1936": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "jump": "i",
      "offset": [
        2795,
        3003
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1937": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1938": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1940": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1942": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1943": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1944": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "DUP4",
      "path": "49"
    },
    "1945": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "SUB",
      "path": "49"
    },
    "1946": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1947": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1949": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "DUP8",
      "path": "49"
    },
    "1950": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1951": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "EXTCODESIZE",
      "path": "49"
    },
    "1952": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "1953": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1954": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "1955": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x7AB"
    },
    "1958": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "1959": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1961": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1962": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "REVERT",
      "path": "49"
    },
    "1963": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1964": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "POP",
      "path": "49"
    },
    "1965": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "GAS",
      "path": "49"
    },
    "1966": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "CALL",
      "path": "49"
    },
    "1967": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "1968": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1969": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "1970": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x7BF"
    },
    "1973": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "1974": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1975": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1977": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1978": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "1979": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1980": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1982": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "REVERT",
      "path": "49"
    },
    "1983": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1984": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "POP",
      "path": "49"
    },
    "1985": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "POP",
      "path": "49"
    },
    "1986": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "POP",
      "path": "49"
    },
    "1987": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        2795,
        3003
      ],
      "op": "POP",
      "path": "49"
    },
    "1988": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        3013,
        3072
      ],
      "op": "PUSH2",
      "path": "49",
      "statement": 6,
      "value": "0x4AF"
    },
    "1991": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        3022,
        3026
      ],
      "op": "DUP6",
      "path": "49"
    },
    "1992": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        3027,
        3028
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1994": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        3022,
        3029
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1995": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        3022,
        3029
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1996": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        3022,
        3029
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1997": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        3022,
        3029
      ],
      "op": "LT",
      "path": "49"
    },
    "1998": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        3022,
        3029
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x479"
    },
    "2001": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        3022,
        3029
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "2002": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        3022,
        3029
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x479"
    },
    "2005": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "offset": [
        3022,
        3029
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x1177"
    },
    "2008": {
      "fn": "PhantomDexRouter.swapSpendMaximum",
      "jump": "i",
      "offset": [
        3022,
        3029
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2009": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5000,
        5431
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2010": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5123,
        5139
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2012": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5141,
        5157
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2013": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5170,
        5184
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2015": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5190,
        5216
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x7E8"
    },
    "2018": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5201,
        5207
      ],
      "op": "DUP6",
      "path": "49"
    },
    "2019": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5209,
        5215
      ],
      "op": "DUP6",
      "path": "49"
    },
    "2020": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5190,
        5200
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xC06"
    },
    "2023": {
      "fn": "PhantomDexRouter.getReserves",
      "jump": "i",
      "offset": [
        5190,
        5216
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2024": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5190,
        5216
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2025": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5169,
        5216
      ],
      "op": "POP",
      "path": "49"
    },
    "2026": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5169,
        5216
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2027": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5169,
        5216
      ],
      "op": "POP",
      "path": "49"
    },
    "2028": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5227,
        5243
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2030": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5245,
        5261
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2031": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5282,
        5314
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x7F9"
    },
    "2034": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5290,
        5297
      ],
      "op": "DUP9",
      "path": "49"
    },
    "2035": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5299,
        5305
      ],
      "op": "DUP9",
      "path": "49"
    },
    "2036": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5307,
        5313
      ],
      "op": "DUP9",
      "path": "49"
    },
    "2037": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5282,
        5289
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xCFE"
    },
    "2040": {
      "fn": "PhantomDexRouter.getReserves",
      "jump": "i",
      "offset": [
        5282,
        5314
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2041": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5282,
        5314
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2048": {
      "op": "SHL"
    },
    "2049": {
      "op": "SUB"
    },
    "2050": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5327
      ],
      "op": "AND",
      "path": "49"
    },
    "2051": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5327
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x902F1AC"
    },
    "2056": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2058": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2059": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2060": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xFFFFFFFF"
    },
    "2065": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "AND",
      "path": "49"
    },
    "2066": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "2068": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "SHL",
      "path": "49"
    },
    "2069": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2070": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "2071": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "2073": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "ADD",
      "path": "49"
    },
    "2074": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x60"
    },
    "2076": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2078": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2079": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2080": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "DUP4",
      "path": "49"
    },
    "2081": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "SUB",
      "path": "49"
    },
    "2082": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2083": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "DUP7",
      "path": "49"
    },
    "2084": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "GAS",
      "path": "49"
    },
    "2085": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "STATICCALL",
      "path": "49"
    },
    "2086": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2087": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2088": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2089": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x836"
    },
    "2092": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "2093": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2094": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2096": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2097": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "2098": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2099": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2101": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "REVERT",
      "path": "49"
    },
    "2102": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2103": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "POP",
      "path": "49"
    },
    "2104": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "POP",
      "path": "49"
    },
    "2105": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "POP",
      "path": "49"
    },
    "2106": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "POP",
      "path": "49"
    },
    "2107": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2109": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2110": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2111": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "2113": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "NOT",
      "path": "49"
    },
    "2114": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "2116": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2117": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "ADD",
      "path": "49"
    },
    "2118": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "AND",
      "path": "49"
    },
    "2119": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2120": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "ADD",
      "path": "49"
    },
    "2121": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2122": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2124": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "2125": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "POP",
      "path": "49"
    },
    "2126": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2127": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "ADD",
      "path": "49"
    },
    "2128": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2129": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x85A"
    },
    "2132": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2133": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2134": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x12D0"
    },
    "2137": {
      "fn": "PhantomDexRouter.getReserves",
      "jump": "i",
      "offset": [
        5267,
        5329
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2138": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5267,
        5329
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2139": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5226,
        5329
      ],
      "op": "POP",
      "path": "49"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2146": {
      "op": "SHL"
    },
    "2147": {
      "op": "SUB"
    },
    "2148": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5226,
        5329
      ],
      "op": "AND",
      "path": "49"
    },
    "2149": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5226,
        5329
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2150": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5226,
        5329
      ],
      "op": "POP",
      "path": "49"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2157": {
      "op": "SHL"
    },
    "2158": {
      "op": "SUB"
    },
    "2159": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5226,
        5329
      ],
      "op": "AND",
      "path": "49"
    },
    "2160": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5226,
        5329
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2161": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5226,
        5329
      ],
      "op": "POP",
      "path": "49"
    },
    "2162": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5372,
        5378
      ],
      "op": "DUP3",
      "path": "49",
      "statement": 7
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2169": {
      "op": "SHL"
    },
    "2170": {
      "op": "SUB"
    },
    "2171": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5362,
        5378
      ],
      "op": "AND",
      "path": "49"
    },
    "2172": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5362,
        5368
      ],
      "op": "DUP8",
      "path": "49"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2179": {
      "op": "SHL"
    },
    "2180": {
      "op": "SUB"
    },
    "2181": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5362,
        5378
      ],
      "op": "AND",
      "path": "49"
    },
    "2182": {
      "branch": 18,
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5362,
        5378
      ],
      "op": "EQ",
      "path": "49"
    },
    "2183": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5362,
        5424
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x891"
    },
    "2186": {
      "branch": 18,
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5362,
        5424
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "2187": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5405,
        5413
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2188": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5415,
        5423
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2189": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5362,
        5424
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x894"
    },
    "2192": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5362,
        5424
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2193": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5362,
        5424
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2194": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5382,
        5390
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2195": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5392,
        5400
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2196": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5362,
        5424
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2197": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5339,
        5424
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2198": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5339,
        5424
      ],
      "op": "SWAP10",
      "path": "49"
    },
    "2199": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5339,
        5424
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2200": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5339,
        5424
      ],
      "op": "SWAP9",
      "path": "49"
    },
    "2201": {
      "op": "POP"
    },
    "2202": {
      "fn": "PhantomDexRouter.getReserves",
      "offset": [
        5000,
        5431
      ],
      "op": "SWAP7",
      "path": "49"
    },
    "2203": {
      "op": "POP"
    },
    "2204": {
      "op": "POP"
    },
    "2205": {
      "op": "POP"
    },
    "2206": {
      "op": "POP"
    },
    "2207": {
      "op": "POP"
    },
    "2208": {
      "op": "POP"
    },
    "2209": {
      "op": "POP"
    },
    "2210": {
      "fn": "PhantomDexRouter.getReserves",
      "jump": "o",
      "offset": [
        5000,
        5431
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2211": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3352,
        3633
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2212": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3542
      ],
      "op": "PUSH2",
      "path": "49",
      "statement": 8,
      "value": "0x8AB"
    },
    "2215": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3540
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xDCD"
    },
    "2218": {
      "fn": "PhantomDexRouter.preSwap",
      "jump": "i",
      "offset": [
        3525,
        3542
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2219": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3542
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2226": {
      "op": "SHL"
    },
    "2227": {
      "op": "SUB"
    },
    "2228": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3547
      ],
      "op": "AND",
      "path": "49"
    },
    "2229": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3547
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xA3971047"
    },
    "2234": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3556,
        3560
      ],
      "op": "ADDRESS",
      "path": "49"
    },
    "2235": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3563,
        3564
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2237": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3574,
        3575
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2238": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3578,
        3591
      ],
      "op": "DUP9",
      "path": "49"
    },
    "2239": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3593,
        3606
      ],
      "op": "DUP9",
      "path": "49"
    },
    "2240": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3608,
        3612
      ],
      "op": "DUP9",
      "path": "49"
    },
    "2241": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3614,
        3625
      ],
      "op": "DUP9",
      "path": "49"
    },
    "2242": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2244": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2245": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "DUP9",
      "path": "49"
    },
    "2246": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xFFFFFFFF"
    },
    "2251": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "AND",
      "path": "49"
    },
    "2252": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "2254": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "SHL",
      "path": "49"
    },
    "2255": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2256": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "2257": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "2259": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "ADD",
      "path": "49"
    },
    "2260": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x8E3"
    },
    "2263": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "SWAP8",
      "path": "49"
    },
    "2264": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "SWAP7",
      "path": "49"
    },
    "2265": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "SWAP6",
      "path": "49"
    },
    "2266": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "SWAP5",
      "path": "49"
    },
    "2267": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "SWAP4",
      "path": "49"
    },
    "2268": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "2269": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2270": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2271": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x135B"
    },
    "2274": {
      "fn": "PhantomDexRouter.preSwap",
      "jump": "i",
      "offset": [
        3525,
        3626
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2275": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2276": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2278": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2280": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2281": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2282": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "DUP4",
      "path": "49"
    },
    "2283": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "SUB",
      "path": "49"
    },
    "2284": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2285": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2287": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "DUP8",
      "path": "49"
    },
    "2288": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2289": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "EXTCODESIZE",
      "path": "49"
    },
    "2290": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2291": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2292": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2293": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x8FD"
    },
    "2296": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "2297": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2299": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2300": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "REVERT",
      "path": "49"
    },
    "2301": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2302": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "POP",
      "path": "49"
    },
    "2303": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "GAS",
      "path": "49"
    },
    "2304": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "CALL",
      "path": "49"
    },
    "2305": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2306": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2307": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2308": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x4AF"
    },
    "2311": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "2312": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2313": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2315": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2316": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "2317": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2318": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2320": {
      "fn": "PhantomDexRouter.preSwap",
      "offset": [
        3525,
        3626
      ],
      "op": "REVERT",
      "path": "49"
    },
    "2321": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3639,
        4728
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2322": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2324": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2325": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2332": {
      "op": "SHL"
    },
    "2333": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2334": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "2335": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3867,
        3871
      ],
      "op": "ADDRESS",
      "path": "49"
    },
    "2336": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "2338": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2339": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "ADD",
      "path": "49"
    },
    "2340": {
      "op": "MSTORE"
    },
    "2341": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3809,
        3828
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2343": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3809,
        3828
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2350": {
      "op": "SHL"
    },
    "2351": {
      "op": "SUB"
    },
    "2352": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3858
      ],
      "op": "DUP7",
      "path": "49"
    },
    "2353": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3858
      ],
      "op": "AND",
      "path": "49"
    },
    "2354": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3858
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2355": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3858
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x70A08231"
    },
    "2360": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3858
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2363": {
      "op": "ADD"
    },
    "2364": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "2366": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2368": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2369": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2370": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "DUP4",
      "path": "49"
    },
    "2371": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "SUB",
      "path": "49"
    },
    "2372": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2373": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "DUP7",
      "path": "49"
    },
    "2374": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "GAS",
      "path": "49"
    },
    "2375": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "STATICCALL",
      "path": "49"
    },
    "2376": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2377": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2378": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2379": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x958"
    },
    "2382": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "2383": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2384": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2386": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2387": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "2388": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2389": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2391": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "REVERT",
      "path": "49"
    },
    "2392": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2393": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "POP",
      "path": "49"
    },
    "2394": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "POP",
      "path": "49"
    },
    "2395": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "POP",
      "path": "49"
    },
    "2396": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "POP",
      "path": "49"
    },
    "2397": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2399": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2400": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2401": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "2403": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "NOT",
      "path": "49"
    },
    "2404": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "2406": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2407": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "ADD",
      "path": "49"
    },
    "2408": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "AND",
      "path": "49"
    },
    "2409": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2410": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "ADD",
      "path": "49"
    },
    "2411": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2412": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2414": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "2415": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "POP",
      "path": "49"
    },
    "2416": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2417": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "ADD",
      "path": "49"
    },
    "2418": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2419": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x97C"
    },
    "2422": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2423": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2424": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x10DA"
    },
    "2427": {
      "fn": "PhantomDexRouter.postSwap",
      "jump": "i",
      "offset": [
        3831,
        3873
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2428": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3831,
        3873
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2429": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2431": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2432": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2439": {
      "op": "SHL"
    },
    "2440": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2441": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "2442": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3949,
        3953
      ],
      "op": "ADDRESS",
      "path": "49"
    },
    "2443": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "2445": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2446": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "ADD",
      "path": "49"
    },
    "2447": {
      "op": "MSTORE"
    },
    "2448": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3809,
        3873
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2449": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3809,
        3873
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2450": {
      "op": "POP"
    },
    "2451": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3883,
        3906
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2453": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3883,
        3906
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2460": {
      "op": "SHL"
    },
    "2461": {
      "op": "SUB"
    },
    "2462": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3940
      ],
      "op": "DUP7",
      "path": "49"
    },
    "2463": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3940
      ],
      "op": "AND",
      "path": "49"
    },
    "2464": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3940
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2465": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3940
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x70A08231"
    },
    "2470": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3940
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2473": {
      "op": "ADD"
    },
    "2474": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "2476": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2478": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2479": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2480": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "DUP4",
      "path": "49"
    },
    "2481": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "SUB",
      "path": "49"
    },
    "2482": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2483": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "DUP7",
      "path": "49"
    },
    "2484": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "GAS",
      "path": "49"
    },
    "2485": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "STATICCALL",
      "path": "49"
    },
    "2486": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2487": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2488": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2489": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x9C6"
    },
    "2492": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "2493": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2494": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2496": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2497": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "2498": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2499": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2501": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "REVERT",
      "path": "49"
    },
    "2502": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2503": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "POP",
      "path": "49"
    },
    "2504": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "POP",
      "path": "49"
    },
    "2505": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "POP",
      "path": "49"
    },
    "2506": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "POP",
      "path": "49"
    },
    "2507": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2509": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2510": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2511": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "2513": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "NOT",
      "path": "49"
    },
    "2514": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "2516": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2517": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "ADD",
      "path": "49"
    },
    "2518": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "AND",
      "path": "49"
    },
    "2519": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2520": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "ADD",
      "path": "49"
    },
    "2521": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2522": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2524": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "2525": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "POP",
      "path": "49"
    },
    "2526": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2527": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "ADD",
      "path": "49"
    },
    "2528": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2529": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x9EA"
    },
    "2532": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2533": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2534": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x10DA"
    },
    "2537": {
      "fn": "PhantomDexRouter.postSwap",
      "jump": "i",
      "offset": [
        3909,
        3955
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2538": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3909,
        3955
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2539": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3883,
        3955
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2540": {
      "op": "POP"
    },
    "2541": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3970,
        3986
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2542": {
      "branch": 19,
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3970,
        3986
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2543": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3966,
        4331
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xAF5"
    },
    "2546": {
      "branch": 19,
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3966,
        4331
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "2547": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4009,
        4018
      ],
      "op": "DUP6",
      "path": "49",
      "statement": 9
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2554": {
      "op": "SHL"
    },
    "2555": {
      "op": "SUB"
    },
    "2556": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4027
      ],
      "op": "AND",
      "path": "49"
    },
    "2557": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4027
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x95EA7B3"
    },
    "2562": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4036,
        4053
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xA09"
    },
    "2565": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4036,
        4051
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xDCD"
    },
    "2568": {
      "fn": "PhantomDexRouter.postSwap",
      "jump": "i",
      "offset": [
        4036,
        4053
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2569": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4036,
        4053
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2570": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2572": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2579": {
      "op": "SHL"
    },
    "2580": {
      "op": "SUB"
    },
    "2581": {
      "op": "NOT"
    },
    "2582": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "2584": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "DUP5",
      "path": "49"
    },
    "2585": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2586": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "SHL",
      "path": "49"
    },
    "2587": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "AND",
      "path": "49"
    },
    "2588": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2589": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2596": {
      "op": "SHL"
    },
    "2597": {
      "op": "SUB"
    },
    "2598": {
      "op": "SWAP1"
    },
    "2599": {
      "op": "SWAP2"
    },
    "2600": {
      "op": "AND"
    },
    "2601": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "2603": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2604": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "ADD",
      "path": "49"
    },
    "2605": {
      "op": "MSTORE"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2608": {
      "op": "DUP2"
    },
    "2609": {
      "op": "ADD"
    },
    "2610": {
      "op": "DUP6"
    },
    "2611": {
      "op": "SWAP1"
    },
    "2612": {
      "op": "MSTORE"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2615": {
      "op": "ADD"
    },
    "2616": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "2618": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2620": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2621": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2622": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "DUP4",
      "path": "49"
    },
    "2623": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "SUB",
      "path": "49"
    },
    "2624": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2625": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2627": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "DUP8",
      "path": "49"
    },
    "2628": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "GAS",
      "path": "49"
    },
    "2629": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "CALL",
      "path": "49"
    },
    "2630": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2631": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2632": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2633": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xA56"
    },
    "2636": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "2637": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2638": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2640": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2641": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "2642": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2643": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2645": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "REVERT",
      "path": "49"
    },
    "2646": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2647": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "POP",
      "path": "49"
    },
    "2648": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "POP",
      "path": "49"
    },
    "2649": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "POP",
      "path": "49"
    },
    "2650": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "POP",
      "path": "49"
    },
    "2651": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2653": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2654": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2655": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "2657": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "NOT",
      "path": "49"
    },
    "2658": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "2660": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2661": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "ADD",
      "path": "49"
    },
    "2662": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "AND",
      "path": "49"
    },
    "2663": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2664": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "ADD",
      "path": "49"
    },
    "2665": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2666": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2668": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "2669": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "POP",
      "path": "49"
    },
    "2670": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2671": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "ADD",
      "path": "49"
    },
    "2672": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2673": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xA7A"
    },
    "2676": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2677": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2678": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x10F3"
    },
    "2681": {
      "fn": "PhantomDexRouter.postSwap",
      "jump": "i",
      "offset": [
        4002,
        4068
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2682": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2683": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4002,
        4068
      ],
      "op": "POP",
      "path": "49"
    },
    "2684": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4099
      ],
      "op": "PUSH2",
      "path": "49",
      "statement": 10,
      "value": "0xA83"
    },
    "2687": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4097
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xDCD"
    },
    "2690": {
      "fn": "PhantomDexRouter.postSwap",
      "jump": "i",
      "offset": [
        4082,
        4099
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2691": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4099
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2698": {
      "op": "SHL"
    },
    "2699": {
      "op": "SUB"
    },
    "2700": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4104
      ],
      "op": "AND",
      "path": "49"
    },
    "2701": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4104
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xA3971047"
    },
    "2706": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4130,
        4134
      ],
      "op": "ADDRESS",
      "path": "49"
    },
    "2707": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4153,
        4164
      ],
      "op": "DUP5",
      "path": "49"
    },
    "2708": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4190,
        4207
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xA9B"
    },
    "2711": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4190,
        4205
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xDCD"
    },
    "2714": {
      "fn": "PhantomDexRouter.postSwap",
      "jump": "i",
      "offset": [
        4190,
        4207
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2715": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4190,
        4207
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2716": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4226,
        4227
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2718": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4253,
        4254
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2719": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4273,
        4277
      ],
      "op": "DUP11",
      "path": "49"
    },
    "2720": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4295,
        4306
      ],
      "op": "DUP11",
      "path": "49"
    },
    "2721": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2723": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2724": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "DUP9",
      "path": "49"
    },
    "2725": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xFFFFFFFF"
    },
    "2730": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "AND",
      "path": "49"
    },
    "2731": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "2733": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "SHL",
      "path": "49"
    },
    "2734": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2735": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "2736": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "2738": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "ADD",
      "path": "49"
    },
    "2739": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xAC2"
    },
    "2742": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "SWAP8",
      "path": "49"
    },
    "2743": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "SWAP7",
      "path": "49"
    },
    "2744": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "SWAP6",
      "path": "49"
    },
    "2745": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "SWAP5",
      "path": "49"
    },
    "2746": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "SWAP4",
      "path": "49"
    },
    "2747": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "2748": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2749": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2750": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x135B"
    },
    "2753": {
      "fn": "PhantomDexRouter.postSwap",
      "jump": "i",
      "offset": [
        4082,
        4320
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2754": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2755": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2757": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2759": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2760": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2761": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "DUP4",
      "path": "49"
    },
    "2762": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "SUB",
      "path": "49"
    },
    "2763": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2764": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2766": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "DUP8",
      "path": "49"
    },
    "2767": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2768": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "EXTCODESIZE",
      "path": "49"
    },
    "2769": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2770": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2771": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2772": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xADC"
    },
    "2775": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "2776": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2778": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2779": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "REVERT",
      "path": "49"
    },
    "2780": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2781": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "POP",
      "path": "49"
    },
    "2782": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "GAS",
      "path": "49"
    },
    "2783": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "CALL",
      "path": "49"
    },
    "2784": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2785": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2786": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2787": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xAF0"
    },
    "2790": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "2791": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2792": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2794": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2795": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "2796": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2797": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2799": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "REVERT",
      "path": "49"
    },
    "2800": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2801": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "POP",
      "path": "49"
    },
    "2802": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "POP",
      "path": "49"
    },
    "2803": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "POP",
      "path": "49"
    },
    "2804": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4082,
        4320
      ],
      "op": "POP",
      "path": "49"
    },
    "2805": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3966,
        4331
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2806": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4345,
        4365
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2807": {
      "branch": 20,
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4345,
        4365
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2808": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4341,
        4722
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xBFE"
    },
    "2811": {
      "branch": 20,
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4341,
        4722
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "2812": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4388,
        4401
      ],
      "op": "DUP5",
      "path": "49",
      "statement": 11
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2819": {
      "op": "SHL"
    },
    "2820": {
      "op": "SUB"
    },
    "2821": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4410
      ],
      "op": "AND",
      "path": "49"
    },
    "2822": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4410
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x95EA7B3"
    },
    "2827": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4419,
        4436
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xB12"
    },
    "2830": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4419,
        4434
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xDCD"
    },
    "2833": {
      "fn": "PhantomDexRouter.postSwap",
      "jump": "i",
      "offset": [
        4419,
        4436
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2834": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4419,
        4436
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2835": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2837": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2844": {
      "op": "SHL"
    },
    "2845": {
      "op": "SUB"
    },
    "2846": {
      "op": "NOT"
    },
    "2847": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "2849": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "DUP5",
      "path": "49"
    },
    "2850": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2851": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "SHL",
      "path": "49"
    },
    "2852": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "AND",
      "path": "49"
    },
    "2853": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2854": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2861": {
      "op": "SHL"
    },
    "2862": {
      "op": "SUB"
    },
    "2863": {
      "op": "SWAP1"
    },
    "2864": {
      "op": "SWAP2"
    },
    "2865": {
      "op": "AND"
    },
    "2866": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "2868": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2869": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "ADD",
      "path": "49"
    },
    "2870": {
      "op": "MSTORE"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2873": {
      "op": "DUP2"
    },
    "2874": {
      "op": "ADD"
    },
    "2875": {
      "op": "DUP5"
    },
    "2876": {
      "op": "SWAP1"
    },
    "2877": {
      "op": "MSTORE"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2880": {
      "op": "ADD"
    },
    "2881": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "2883": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2885": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2886": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2887": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "DUP4",
      "path": "49"
    },
    "2888": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "SUB",
      "path": "49"
    },
    "2889": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2890": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2892": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "DUP8",
      "path": "49"
    },
    "2893": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "GAS",
      "path": "49"
    },
    "2894": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "CALL",
      "path": "49"
    },
    "2895": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2896": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2897": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2898": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xB5F"
    },
    "2901": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "2902": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2903": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2905": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2906": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "2907": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2908": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2910": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "REVERT",
      "path": "49"
    },
    "2911": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2912": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "POP",
      "path": "49"
    },
    "2913": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "POP",
      "path": "49"
    },
    "2914": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "POP",
      "path": "49"
    },
    "2915": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "POP",
      "path": "49"
    },
    "2916": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2918": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2919": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2920": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "2922": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "NOT",
      "path": "49"
    },
    "2923": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "2925": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2926": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "ADD",
      "path": "49"
    },
    "2927": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "AND",
      "path": "49"
    },
    "2928": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2929": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "ADD",
      "path": "49"
    },
    "2930": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2931": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2933": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "2934": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "POP",
      "path": "49"
    },
    "2935": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2936": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "ADD",
      "path": "49"
    },
    "2937": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2938": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xB83"
    },
    "2941": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2942": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2943": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x10F3"
    },
    "2946": {
      "fn": "PhantomDexRouter.postSwap",
      "jump": "i",
      "offset": [
        4381,
        4455
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2947": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2948": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4381,
        4455
      ],
      "op": "POP",
      "path": "49"
    },
    "2949": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4486
      ],
      "op": "PUSH2",
      "path": "49",
      "statement": 12,
      "value": "0xB8C"
    },
    "2952": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4484
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xDCD"
    },
    "2955": {
      "fn": "PhantomDexRouter.postSwap",
      "jump": "i",
      "offset": [
        4469,
        4486
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2956": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4486
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2963": {
      "op": "SHL"
    },
    "2964": {
      "op": "SUB"
    },
    "2965": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4491
      ],
      "op": "AND",
      "path": "49"
    },
    "2966": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4491
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xA3971047"
    },
    "2971": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4517,
        4521
      ],
      "op": "ADDRESS",
      "path": "49"
    },
    "2972": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4540,
        4555
      ],
      "op": "DUP4",
      "path": "49"
    },
    "2973": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4581,
        4598
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xBA4"
    },
    "2976": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4581,
        4596
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xDCD"
    },
    "2979": {
      "fn": "PhantomDexRouter.postSwap",
      "jump": "i",
      "offset": [
        4581,
        4598
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2980": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4581,
        4598
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2981": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4617,
        4618
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2983": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4644,
        4645
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2984": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4664,
        4668
      ],
      "op": "DUP11",
      "path": "49"
    },
    "2985": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4686,
        4697
      ],
      "op": "DUP11",
      "path": "49"
    },
    "2986": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2988": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2989": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "DUP9",
      "path": "49"
    },
    "2990": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xFFFFFFFF"
    },
    "2995": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "AND",
      "path": "49"
    },
    "2996": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "2998": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "SHL",
      "path": "49"
    },
    "2999": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "DUP2",
      "path": "49"
    },
    "3000": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "3001": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "3003": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "ADD",
      "path": "49"
    },
    "3004": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xBCB"
    },
    "3007": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "SWAP8",
      "path": "49"
    },
    "3008": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "SWAP7",
      "path": "49"
    },
    "3009": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "SWAP6",
      "path": "49"
    },
    "3010": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "SWAP5",
      "path": "49"
    },
    "3011": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "SWAP4",
      "path": "49"
    },
    "3012": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "3013": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "3014": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3015": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x135B"
    },
    "3018": {
      "fn": "PhantomDexRouter.postSwap",
      "jump": "i",
      "offset": [
        4469,
        4711
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3019": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3020": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "3022": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "3024": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "3025": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "DUP1",
      "path": "49"
    },
    "3026": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "DUP4",
      "path": "49"
    },
    "3027": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "SUB",
      "path": "49"
    },
    "3028": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "DUP2",
      "path": "49"
    },
    "3029": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "3031": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "DUP8",
      "path": "49"
    },
    "3032": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "DUP1",
      "path": "49"
    },
    "3033": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "EXTCODESIZE",
      "path": "49"
    },
    "3034": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "3035": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "DUP1",
      "path": "49"
    },
    "3036": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "3037": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xBE5"
    },
    "3040": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "3041": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "3043": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "DUP1",
      "path": "49"
    },
    "3044": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "REVERT",
      "path": "49"
    },
    "3045": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3046": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "POP",
      "path": "49"
    },
    "3047": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "GAS",
      "path": "49"
    },
    "3048": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "CALL",
      "path": "49"
    },
    "3049": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "3050": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "DUP1",
      "path": "49"
    },
    "3051": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "3052": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xBF9"
    },
    "3055": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "3056": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "3057": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "3059": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "DUP1",
      "path": "49"
    },
    "3060": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "3061": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "3062": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "3064": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "REVERT",
      "path": "49"
    },
    "3065": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3066": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "POP",
      "path": "49"
    },
    "3067": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "POP",
      "path": "49"
    },
    "3068": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "POP",
      "path": "49"
    },
    "3069": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4469,
        4711
      ],
      "op": "POP",
      "path": "49"
    },
    "3070": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        4341,
        4722
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3071": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3799,
        4728
      ],
      "op": "POP",
      "path": "49"
    },
    "3072": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3799,
        4728
      ],
      "op": "POP",
      "path": "49"
    },
    "3073": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3639,
        4728
      ],
      "op": "POP",
      "path": "49"
    },
    "3074": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3639,
        4728
      ],
      "op": "POP",
      "path": "49"
    },
    "3075": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3639,
        4728
      ],
      "op": "POP",
      "path": "49"
    },
    "3076": {
      "fn": "PhantomDexRouter.postSwap",
      "offset": [
        3639,
        4728
      ],
      "op": "POP",
      "path": "49"
    },
    "3077": {
      "fn": "PhantomDexRouter.postSwap",
      "jump": "o",
      "offset": [
        3639,
        4728
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3078": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5437,
        5782
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3079": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5512,
        5526
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "3081": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5528,
        5542
      ],
      "op": "DUP1",
      "path": "49"
    },
    "3082": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5572,
        5578
      ],
      "op": "DUP3",
      "path": "49",
      "statement": 13
    },
    "3083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3089": {
      "op": "SHL"
    },
    "3090": {
      "op": "SUB"
    },
    "3091": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5562,
        5578
      ],
      "op": "AND",
      "path": "49"
    },
    "3092": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5562,
        5568
      ],
      "op": "DUP5",
      "path": "49"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3099": {
      "op": "SHL"
    },
    "3100": {
      "op": "SUB"
    },
    "3101": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5562,
        5578
      ],
      "op": "AND",
      "path": "49"
    },
    "3102": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5562,
        5578
      ],
      "op": "EQ",
      "path": "49"
    },
    "3103": {
      "branch": 21,
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5562,
        5578
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "3104": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5554,
        5620
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xC79"
    },
    "3107": {
      "branch": 21,
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5554,
        5620
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "3108": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5554,
        5620
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "3110": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5554,
        5620
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "3111": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3115": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3117": {
      "op": "SHL"
    },
    "3118": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5554,
        5620
      ],
      "op": "DUP2",
      "path": "49"
    },
    "3119": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5554,
        5620
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3122": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5554,
        5620
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "3124": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5554,
        5620
      ],
      "op": "DUP3",
      "path": "49"
    },
    "3125": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5554,
        5620
      ],
      "op": "ADD",
      "path": "49"
    },
    "3126": {
      "op": "MSTORE"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3131": {
      "op": "DUP3"
    },
    "3132": {
      "op": "ADD"
    },
    "3133": {
      "op": "MSTORE"
    },
    "3134": {
      "op": "PUSH32",
      "value": "0x556E697377617056324C6962726172793A204944454E544943414C5F41444452"
    },
    "3167": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3169": {
      "op": "DUP3"
    },
    "3170": {
      "op": "ADD"
    },
    "3171": {
      "op": "MSTORE"
    },
    "3172": {
      "op": "PUSH5",
      "value": "0x4553534553"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3180": {
      "op": "SHL"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3183": {
      "op": "DUP3"
    },
    "3184": {
      "op": "ADD"
    },
    "3185": {
      "op": "MSTORE"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3188": {
      "op": "ADD"
    },
    "3189": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5554,
        5620
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x26C"
    },
    "3192": {
      "op": "JUMP"
    },
    "3193": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5554,
        5620
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3194": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5658,
        5664
      ],
      "op": "DUP3",
      "path": "49",
      "statement": 14
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3201": {
      "op": "SHL"
    },
    "3202": {
      "op": "SUB"
    },
    "3203": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5649,
        5664
      ],
      "op": "AND",
      "path": "49"
    },
    "3204": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5649,
        5655
      ],
      "op": "DUP5",
      "path": "49"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3211": {
      "op": "SHL"
    },
    "3212": {
      "op": "SUB"
    },
    "3213": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5649,
        5664
      ],
      "op": "AND",
      "path": "49"
    },
    "3214": {
      "branch": 22,
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5649,
        5664
      ],
      "op": "LT",
      "path": "49"
    },
    "3215": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5649,
        5702
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xC99"
    },
    "3218": {
      "branch": 22,
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5649,
        5702
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "3219": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5687,
        5693
      ],
      "op": "DUP3",
      "path": "49"
    },
    "3220": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5695,
        5701
      ],
      "op": "DUP5",
      "path": "49"
    },
    "3221": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5649,
        5702
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xC9C"
    },
    "3224": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5649,
        5702
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3225": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5649,
        5702
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3226": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5668,
        5674
      ],
      "op": "DUP4",
      "path": "49"
    },
    "3227": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5676,
        5682
      ],
      "op": "DUP4",
      "path": "49"
    },
    "3228": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5649,
        5702
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3229": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5630,
        5702
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3230": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5630,
        5702
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "3231": {
      "op": "POP"
    },
    "3232": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5630,
        5702
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3233": {
      "op": "POP"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3240": {
      "op": "SHL"
    },
    "3241": {
      "op": "SUB"
    },
    "3242": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5720,
        5740
      ],
      "op": "DUP3",
      "path": "49",
      "statement": 15
    },
    "3243": {
      "branch": 23,
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5720,
        5740
      ],
      "op": "AND",
      "path": "49"
    },
    "3244": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5712,
        5775
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xCF7"
    },
    "3247": {
      "branch": 23,
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5712,
        5775
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "3248": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5712,
        5775
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "3250": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5712,
        5775
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "3251": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3255": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3257": {
      "op": "SHL"
    },
    "3258": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5712,
        5775
      ],
      "op": "DUP2",
      "path": "49"
    },
    "3259": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5712,
        5775
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3262": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5712,
        5775
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "3264": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5712,
        5775
      ],
      "op": "DUP3",
      "path": "49"
    },
    "3265": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5712,
        5775
      ],
      "op": "ADD",
      "path": "49"
    },
    "3266": {
      "op": "MSTORE"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3271": {
      "op": "DUP3"
    },
    "3272": {
      "op": "ADD"
    },
    "3273": {
      "op": "MSTORE"
    },
    "3274": {
      "op": "PUSH32",
      "value": "0x556E697377617056324C6962726172793A205A45524F5F414444524553530000"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3309": {
      "op": "DUP3"
    },
    "3310": {
      "op": "ADD"
    },
    "3311": {
      "op": "MSTORE"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3314": {
      "op": "ADD"
    },
    "3315": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5712,
        5775
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x26C"
    },
    "3318": {
      "op": "JUMP"
    },
    "3319": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5712,
        5775
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3320": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5437,
        5782
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "3321": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5437,
        5782
      ],
      "op": "POP",
      "path": "49"
    },
    "3322": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5437,
        5782
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "3323": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5437,
        5782
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3324": {
      "fn": "PhantomDexRouter.sortTokens",
      "offset": [
        5437,
        5782
      ],
      "op": "POP",
      "path": "49"
    },
    "3325": {
      "fn": "PhantomDexRouter.sortTokens",
      "jump": "o",
      "offset": [
        5437,
        5782
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3326": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        5788,
        6496
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3327": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        5907,
        5919
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "3329": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        5932,
        5946
      ],
      "op": "DUP1",
      "path": "49"
    },
    "3330": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        5948,
        5962
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "3332": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        5966,
        5992
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xD0D"
    },
    "3335": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        5977,
        5983
      ],
      "op": "DUP6",
      "path": "49"
    },
    "3336": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        5985,
        5991
      ],
      "op": "DUP6",
      "path": "49"
    },
    "3337": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        5966,
        5976
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xC06"
    },
    "3340": {
      "fn": "PhantomDexRouter.pairFor",
      "jump": "i",
      "offset": [
        5966,
        5992
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3341": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        5966,
        5992
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3342": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6249,
        6281
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 16,
      "value": "0x40"
    },
    "3344": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6249,
        6281
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3351": {
      "op": "SHL"
    },
    "3352": {
      "op": "SUB"
    },
    "3353": {
      "op": "NOT"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3356": {
      "op": "DUP5"
    },
    "3357": {
      "op": "DUP2"
    },
    "3358": {
      "op": "SHL"
    },
    "3359": {
      "op": "DUP3"
    },
    "3360": {
      "op": "AND"
    },
    "3361": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6249,
        6281
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "3363": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6249,
        6281
      ],
      "op": "DUP5",
      "path": "49"
    },
    "3364": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6249,
        6281
      ],
      "op": "ADD",
      "path": "49"
    },
    "3365": {
      "op": "MSTORE"
    },
    "3366": {
      "op": "DUP4"
    },
    "3367": {
      "op": "SWAP1"
    },
    "3368": {
      "op": "SHL"
    },
    "3369": {
      "op": "AND"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "3372": {
      "op": "DUP3"
    },
    "3373": {
      "op": "ADD"
    },
    "3374": {
      "op": "MSTORE"
    },
    "3375": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        5931,
        5992
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "3376": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        5931,
        5992
      ],
      "op": "SWAP4",
      "path": "49"
    },
    "3377": {
      "op": "POP"
    },
    "3378": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        5931,
        5992
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "3379": {
      "op": "POP"
    },
    "3380": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6202,
        6209
      ],
      "op": "DUP7",
      "path": "49"
    },
    "3381": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6202,
        6209
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "3384": {
      "op": "ADD"
    },
    "3385": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6249,
        6281
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "3387": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6249,
        6281
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "3388": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6249,
        6281
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "3390": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6249,
        6281
      ],
      "op": "DUP2",
      "path": "49"
    },
    "3391": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6249,
        6281
      ],
      "op": "DUP4",
      "path": "49"
    },
    "3392": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6249,
        6281
      ],
      "op": "SUB",
      "path": "49"
    },
    "3393": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6249,
        6281
      ],
      "op": "SUB",
      "path": "49"
    },
    "3394": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6249,
        6281
      ],
      "op": "DUP2",
      "path": "49"
    },
    "3395": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6249,
        6281
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "3396": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6249,
        6281
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3397": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6249,
        6281
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "3399": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6249,
        6281
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "3400": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6239,
        6282
      ],
      "op": "DUP1",
      "path": "49"
    },
    "3401": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6239,
        6282
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "3402": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6239,
        6282
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3403": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6239,
        6282
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "3405": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6239,
        6282
      ],
      "op": "ADD",
      "path": "49"
    },
    "3406": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6239,
        6282
      ],
      "op": "KECCAK256",
      "path": "49"
    },
    "3407": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "3409": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "3410": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "3412": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "ADD",
      "path": "49"
    },
    "3413": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xDAB"
    },
    "3416": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "3417": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "3418": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3425": {
      "op": "SHL"
    },
    "3426": {
      "op": "SUB"
    },
    "3427": {
      "op": "NOT"
    },
    "3428": {
      "op": "DUP2"
    },
    "3429": {
      "op": "MSTORE"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3432": {
      "op": "SWAP3"
    },
    "3433": {
      "op": "SWAP1"
    },
    "3434": {
      "op": "SWAP3"
    },
    "3435": {
      "op": "SHL"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3442": {
      "op": "SHL"
    },
    "3443": {
      "op": "SUB"
    },
    "3444": {
      "op": "NOT"
    },
    "3445": {
      "op": "AND"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3448": {
      "op": "DUP4"
    },
    "3449": {
      "op": "ADD"
    },
    "3450": {
      "op": "MSTORE"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "3453": {
      "op": "DUP3"
    },
    "3454": {
      "op": "ADD"
    },
    "3455": {
      "op": "MSTORE"
    },
    "3456": {
      "op": "PUSH32",
      "value": "0x96E8AC4277198FF8B6F785478AA9A39F403CB768DD02CBEE326C3E7DA348845F"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0x35"
    },
    "3491": {
      "op": "DUP3"
    },
    "3492": {
      "op": "ADD"
    },
    "3493": {
      "op": "MSTORE"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x55"
    },
    "3496": {
      "op": "ADD"
    },
    "3497": {
      "op": "SWAP1"
    },
    "3498": {
      "op": "JUMP"
    },
    "3499": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3500": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "3502": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "DUP1",
      "path": "49"
    },
    "3503": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3506": {
      "op": "NOT"
    },
    "3507": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "DUP2",
      "path": "49"
    },
    "3508": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "DUP5",
      "path": "49"
    },
    "3509": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "SUB",
      "path": "49"
    },
    "3510": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "ADD",
      "path": "49"
    },
    "3511": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "DUP2",
      "path": "49"
    },
    "3512": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "3513": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "3514": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3515": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "3516": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6084,
        6447
      ],
      "op": "DUP1",
      "path": "49"
    },
    "3517": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6084,
        6447
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "3518": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6119,
        6425
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "3520": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6084,
        6447
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3521": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6084,
        6447
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "3522": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6084,
        6447
      ],
      "op": "ADD",
      "path": "49"
    },
    "3523": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6084,
        6447
      ],
      "op": "KECCAK256",
      "path": "49"
    },
    "3524": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        6084,
        6447
      ],
      "op": "SWAP7",
      "path": "49"
    },
    "3525": {
      "fn": "PhantomDexRouter.pairFor",
      "offset": [
        5788,
        6496
      ],
      "op": "SWAP6",
      "path": "49"
    },
    "3526": {
      "op": "POP"
    },
    "3527": {
      "op": "POP"
    },
    "3528": {
      "op": "POP"
    },
    "3529": {
      "op": "POP"
    },
    "3530": {
      "op": "POP"
    },
    "3531": {
      "op": "POP"
    },
    "3532": {
      "fn": "PhantomDexRouter.pairFor",
      "jump": "o",
      "offset": [
        5788,
        6496
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3533": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4369,
        4545
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3534": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4419,
        4435
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3536": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4487
      ],
      "op": "PUSH2",
      "path": "68",
      "statement": 17,
      "value": "0xDE1"
    },
    "3539": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x49"
    },
    "3541": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3548": {
      "op": "SHL"
    },
    "3549": {
      "op": "SUB"
    },
    "3550": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "3551": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3552": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2371,
        2493
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3553": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4487
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3560": {
      "op": "SHL"
    },
    "3561": {
      "op": "SUB"
    },
    "3562": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4498
      ],
      "op": "AND",
      "path": "68"
    },
    "3563": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4498
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x21F8A721"
    },
    "3568": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4509,
        4516
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x3"
    },
    "3570": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4509,
        4526
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3572": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4509,
        4526
      ],
      "op": "ADD",
      "path": "68"
    },
    "3573": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4509,
        4535
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xB"
    },
    "3575": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4509,
        4535
      ],
      "op": "ADD",
      "path": "68"
    },
    "3576": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4499,
        4536
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3578": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4499,
        4536
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3579": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4499,
        4536
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xE04"
    },
    "3582": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4499,
        4536
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3583": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4499,
        4536
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3584": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4499,
        4536
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x13BD"
    },
    "3587": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "jump": "i",
      "offset": [
        4499,
        4536
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3588": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4499,
        4536
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3589": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4499,
        4536
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3591": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4499,
        4536
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3592": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4499,
        4536
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3593": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4499,
        4536
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3594": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4499,
        4536
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3595": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4499,
        4536
      ],
      "op": "SUB",
      "path": "68"
    },
    "3596": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4499,
        4536
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3597": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4499,
        4536
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "3598": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "3600": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "DUP4",
      "path": "68"
    },
    "3601": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3602": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "SHL",
      "path": "68"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3609": {
      "op": "SHL"
    },
    "3610": {
      "op": "SUB"
    },
    "3611": {
      "op": "NOT"
    },
    "3612": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "AND",
      "path": "68"
    },
    "3613": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3614": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3615": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "3617": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3618": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "ADD",
      "path": "68"
    },
    "3619": {
      "op": "MSTORE"
    },
    "3620": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3622": {
      "op": "ADD"
    },
    "3623": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3625": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3627": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3628": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3629": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "DUP4",
      "path": "68"
    },
    "3630": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "SUB",
      "path": "68"
    },
    "3631": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3632": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "DUP7",
      "path": "68"
    },
    "3633": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "GAS",
      "path": "68"
    },
    "3634": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "3635": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3636": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3637": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3638": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xE43"
    },
    "3641": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3642": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3643": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3645": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3646": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "3647": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3648": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3650": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "REVERT",
      "path": "68"
    },
    "3651": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3652": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "POP",
      "path": "68"
    },
    "3653": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "POP",
      "path": "68"
    },
    "3654": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "POP",
      "path": "68"
    },
    "3655": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "POP",
      "path": "68"
    },
    "3656": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3658": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3659": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3660": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3662": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "NOT",
      "path": "68"
    },
    "3663": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3665": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3666": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "ADD",
      "path": "68"
    },
    "3667": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "AND",
      "path": "68"
    },
    "3668": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3669": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "ADD",
      "path": "68"
    },
    "3670": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3671": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3673": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3674": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "POP",
      "path": "68"
    },
    "3675": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3676": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "ADD",
      "path": "68"
    },
    "3677": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3678": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xE67"
    },
    "3681": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3682": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3683": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x115A"
    },
    "3686": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "jump": "i",
      "offset": [
        4471,
        4537
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3687": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4471,
        4537
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3688": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4447,
        4538
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3689": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4447,
        4538
      ],
      "op": "POP",
      "path": "68"
    },
    "3690": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "offset": [
        4369,
        4545
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3691": {
      "fn": "PhantomStorageMixin.PhantomTreasury",
      "jump": "o",
      "offset": [
        4369,
        4545
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3692": {
      "op": "JUMPDEST"
    },
    "3693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3699": {
      "op": "SHL"
    },
    "3700": {
      "op": "SUB"
    },
    "3701": {
      "op": "DUP2"
    },
    "3702": {
      "op": "AND"
    },
    "3703": {
      "op": "DUP2"
    },
    "3704": {
      "op": "EQ"
    },
    "3705": {
      "op": "PUSH2",
      "value": "0xE81"
    },
    "3708": {
      "op": "JUMPI"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3711": {
      "op": "DUP1"
    },
    "3712": {
      "op": "REVERT"
    },
    "3713": {
      "op": "JUMPDEST"
    },
    "3714": {
      "op": "POP"
    },
    "3715": {
      "jump": "o",
      "op": "JUMP"
    },
    "3716": {
      "op": "JUMPDEST"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3719": {
      "op": "DUP1"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3722": {
      "op": "DUP1"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3727": {
      "op": "DUP7"
    },
    "3728": {
      "op": "DUP9"
    },
    "3729": {
      "op": "SUB"
    },
    "3730": {
      "op": "SLT"
    },
    "3731": {
      "op": "ISZERO"
    },
    "3732": {
      "op": "PUSH2",
      "value": "0xE9C"
    },
    "3735": {
      "op": "JUMPI"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3738": {
      "op": "DUP1"
    },
    "3739": {
      "op": "REVERT"
    },
    "3740": {
      "op": "JUMPDEST"
    },
    "3741": {
      "op": "DUP6"
    },
    "3742": {
      "op": "CALLDATALOAD"
    },
    "3743": {
      "op": "PUSH2",
      "value": "0xEA7"
    },
    "3746": {
      "op": "DUP2"
    },
    "3747": {
      "op": "PUSH2",
      "value": "0xE6C"
    },
    "3750": {
      "jump": "i",
      "op": "JUMP"
    },
    "3751": {
      "op": "JUMPDEST"
    },
    "3752": {
      "op": "SWAP5"
    },
    "3753": {
      "op": "POP"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3756": {
      "op": "DUP7"
    },
    "3757": {
      "op": "ADD"
    },
    "3758": {
      "op": "CALLDATALOAD"
    },
    "3759": {
      "op": "PUSH2",
      "value": "0xEB7"
    },
    "3762": {
      "op": "DUP2"
    },
    "3763": {
      "op": "PUSH2",
      "value": "0xE6C"
    },
    "3766": {
      "jump": "i",
      "op": "JUMP"
    },
    "3767": {
      "op": "JUMPDEST"
    },
    "3768": {
      "op": "SWAP4"
    },
    "3769": {
      "op": "POP"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3772": {
      "op": "DUP7"
    },
    "3773": {
      "op": "ADD"
    },
    "3774": {
      "op": "CALLDATALOAD"
    },
    "3775": {
      "op": "SWAP3"
    },
    "3776": {
      "op": "POP"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3779": {
      "op": "DUP7"
    },
    "3780": {
      "op": "ADD"
    },
    "3781": {
      "op": "CALLDATALOAD"
    },
    "3782": {
      "op": "PUSH2",
      "value": "0xECE"
    },
    "3785": {
      "op": "DUP2"
    },
    "3786": {
      "op": "PUSH2",
      "value": "0xE6C"
    },
    "3789": {
      "jump": "i",
      "op": "JUMP"
    },
    "3790": {
      "op": "JUMPDEST"
    },
    "3791": {
      "op": "SWAP2"
    },
    "3792": {
      "op": "POP"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3795": {
      "op": "DUP7"
    },
    "3796": {
      "op": "ADD"
    },
    "3797": {
      "op": "CALLDATALOAD"
    },
    "3798": {
      "op": "PUSH2",
      "value": "0xEDE"
    },
    "3801": {
      "op": "DUP2"
    },
    "3802": {
      "op": "PUSH2",
      "value": "0xE6C"
    },
    "3805": {
      "jump": "i",
      "op": "JUMP"
    },
    "3806": {
      "op": "JUMPDEST"
    },
    "3807": {
      "op": "DUP1"
    },
    "3808": {
      "op": "SWAP2"
    },
    "3809": {
      "op": "POP"
    },
    "3810": {
      "op": "POP"
    },
    "3811": {
      "op": "SWAP3"
    },
    "3812": {
      "op": "SWAP6"
    },
    "3813": {
      "op": "POP"
    },
    "3814": {
      "op": "SWAP3"
    },
    "3815": {
      "op": "SWAP6"
    },
    "3816": {
      "op": "SWAP1"
    },
    "3817": {
      "op": "SWAP4"
    },
    "3818": {
      "op": "POP"
    },
    "3819": {
      "jump": "o",
      "op": "JUMP"
    },
    "3820": {
      "op": "JUMPDEST"
    },
    "3821": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3828": {
      "op": "SHL"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3831": {
      "op": "MSTORE"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3836": {
      "op": "MSTORE"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3841": {
      "op": "REVERT"
    },
    "3842": {
      "op": "JUMPDEST"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3845": {
      "op": "MLOAD"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3848": {
      "op": "DUP3"
    },
    "3849": {
      "op": "ADD"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3852": {
      "op": "NOT"
    },
    "3853": {
      "op": "AND"
    },
    "3854": {
      "op": "DUP2"
    },
    "3855": {
      "op": "ADD"
    },
    "3856": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3865": {
      "op": "DUP2"
    },
    "3866": {
      "op": "GT"
    },
    "3867": {
      "op": "DUP3"
    },
    "3868": {
      "op": "DUP3"
    },
    "3869": {
      "op": "LT"
    },
    "3870": {
      "op": "OR"
    },
    "3871": {
      "op": "ISZERO"
    },
    "3872": {
      "op": "PUSH2",
      "value": "0xF2B"
    },
    "3875": {
      "op": "JUMPI"
    },
    "3876": {
      "op": "PUSH2",
      "value": "0xF2B"
    },
    "3879": {
      "op": "PUSH2",
      "value": "0xEEC"
    },
    "3882": {
      "jump": "i",
      "op": "JUMP"
    },
    "3883": {
      "op": "JUMPDEST"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3886": {
      "op": "MSTORE"
    },
    "3887": {
      "op": "SWAP2"
    },
    "3888": {
      "op": "SWAP1"
    },
    "3889": {
      "op": "POP"
    },
    "3890": {
      "jump": "o",
      "op": "JUMP"
    },
    "3891": {
      "op": "JUMPDEST"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3894": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3903": {
      "op": "DUP3"
    },
    "3904": {
      "op": "GT"
    },
    "3905": {
      "op": "ISZERO"
    },
    "3906": {
      "op": "PUSH2",
      "value": "0xF4D"
    },
    "3909": {
      "op": "JUMPI"
    },
    "3910": {
      "op": "PUSH2",
      "value": "0xF4D"
    },
    "3913": {
      "op": "PUSH2",
      "value": "0xEEC"
    },
    "3916": {
      "jump": "i",
      "op": "JUMP"
    },
    "3917": {
      "op": "JUMPDEST"
    },
    "3918": {
      "op": "POP"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3921": {
      "op": "SHL"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3924": {
      "op": "ADD"
    },
    "3925": {
      "op": "SWAP1"
    },
    "3926": {
      "jump": "o",
      "op": "JUMP"
    },
    "3927": {
      "op": "JUMPDEST"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3930": {
      "op": "DUP3"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3933": {
      "op": "DUP4"
    },
    "3934": {
      "op": "ADD"
    },
    "3935": {
      "op": "SLT"
    },
    "3936": {
      "op": "PUSH2",
      "value": "0xF68"
    },
    "3939": {
      "op": "JUMPI"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3942": {
      "op": "DUP1"
    },
    "3943": {
      "op": "REVERT"
    },
    "3944": {
      "op": "JUMPDEST"
    },
    "3945": {
      "op": "DUP2"
    },
    "3946": {
      "op": "CALLDATALOAD"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3949": {
      "op": "PUSH2",
      "value": "0xF7D"
    },
    "3952": {
      "op": "PUSH2",
      "value": "0xF78"
    },
    "3955": {
      "op": "DUP4"
    },
    "3956": {
      "op": "PUSH2",
      "value": "0xF33"
    },
    "3959": {
      "jump": "i",
      "op": "JUMP"
    },
    "3960": {
      "op": "JUMPDEST"
    },
    "3961": {
      "op": "PUSH2",
      "value": "0xF02"
    },
    "3964": {
      "jump": "i",
      "op": "JUMP"
    },
    "3965": {
      "op": "JUMPDEST"
    },
    "3966": {
      "op": "DUP3"
    },
    "3967": {
      "op": "DUP2"
    },
    "3968": {
      "op": "MSTORE"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3971": {
      "op": "SWAP3"
    },
    "3972": {
      "op": "SWAP1"
    },
    "3973": {
      "op": "SWAP3"
    },
    "3974": {
      "op": "SHL"
    },
    "3975": {
      "op": "DUP5"
    },
    "3976": {
      "op": "ADD"
    },
    "3977": {
      "op": "DUP2"
    },
    "3978": {
      "op": "ADD"
    },
    "3979": {
      "op": "SWAP2"
    },
    "3980": {
      "op": "DUP2"
    },
    "3981": {
      "op": "DUP2"
    },
    "3982": {
      "op": "ADD"
    },
    "3983": {
      "op": "SWAP1"
    },
    "3984": {
      "op": "DUP7"
    },
    "3985": {
      "op": "DUP5"
    },
    "3986": {
      "op": "GT"
    },
    "3987": {
      "op": "ISZERO"
    },
    "3988": {
      "op": "PUSH2",
      "value": "0xF9C"
    },
    "3991": {
      "op": "JUMPI"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3994": {
      "op": "DUP1"
    },
    "3995": {
      "op": "REVERT"
    },
    "3996": {
      "op": "JUMPDEST"
    },
    "3997": {
      "op": "DUP3"
    },
    "3998": {
      "op": "DUP7"
    },
    "3999": {
      "op": "ADD"
    },
    "4000": {
      "op": "JUMPDEST"
    },
    "4001": {
      "op": "DUP5"
    },
    "4002": {
      "op": "DUP2"
    },
    "4003": {
      "op": "LT"
    },
    "4004": {
      "op": "ISZERO"
    },
    "4005": {
      "op": "PUSH2",
      "value": "0xFB7"
    },
    "4008": {
      "op": "JUMPI"
    },
    "4009": {
      "op": "DUP1"
    },
    "4010": {
      "op": "CALLDATALOAD"
    },
    "4011": {
      "op": "DUP4"
    },
    "4012": {
      "op": "MSTORE"
    },
    "4013": {
      "op": "SWAP2"
    },
    "4014": {
      "op": "DUP4"
    },
    "4015": {
      "op": "ADD"
    },
    "4016": {
      "op": "SWAP2"
    },
    "4017": {
      "op": "DUP4"
    },
    "4018": {
      "op": "ADD"
    },
    "4019": {
      "op": "PUSH2",
      "value": "0xFA0"
    },
    "4022": {
      "op": "JUMP"
    },
    "4023": {
      "op": "JUMPDEST"
    },
    "4024": {
      "op": "POP"
    },
    "4025": {
      "op": "SWAP7"
    },
    "4026": {
      "op": "SWAP6"
    },
    "4027": {
      "op": "POP"
    },
    "4028": {
      "op": "POP"
    },
    "4029": {
      "op": "POP"
    },
    "4030": {
      "op": "POP"
    },
    "4031": {
      "op": "POP"
    },
    "4032": {
      "op": "POP"
    },
    "4033": {
      "jump": "o",
      "op": "JUMP"
    },
    "4034": {
      "op": "JUMPDEST"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4037": {
      "op": "DUP1"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4040": {
      "op": "DUP1"
    },
    "4041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4043": {
      "op": "DUP1"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4048": {
      "op": "DUP9"
    },
    "4049": {
      "op": "DUP11"
    },
    "4050": {
      "op": "SUB"
    },
    "4051": {
      "op": "SLT"
    },
    "4052": {
      "op": "ISZERO"
    },
    "4053": {
      "op": "PUSH2",
      "value": "0xFDD"
    },
    "4056": {
      "op": "JUMPI"
    },
    "4057": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4059": {
      "op": "DUP1"
    },
    "4060": {
      "op": "REVERT"
    },
    "4061": {
      "op": "JUMPDEST"
    },
    "4062": {
      "op": "DUP8"
    },
    "4063": {
      "op": "CALLDATALOAD"
    },
    "4064": {
      "op": "PUSH2",
      "value": "0xFE8"
    },
    "4067": {
      "op": "DUP2"
    },
    "4068": {
      "op": "PUSH2",
      "value": "0xE6C"
    },
    "4071": {
      "jump": "i",
      "op": "JUMP"
    },
    "4072": {
      "op": "JUMPDEST"
    },
    "4073": {
      "op": "SWAP7"
    },
    "4074": {
      "op": "POP"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4077": {
      "op": "DUP9"
    },
    "4078": {
      "op": "DUP2"
    },
    "4079": {
      "op": "ADD"
    },
    "4080": {
      "op": "CALLDATALOAD"
    },
    "4081": {
      "op": "SWAP7"
    },
    "4082": {
      "op": "POP"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4085": {
      "op": "DUP10"
    },
    "4086": {
      "op": "ADD"
    },
    "4087": {
      "op": "CALLDATALOAD"
    },
    "4088": {
      "op": "SWAP6"
    },
    "4089": {
      "op": "POP"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4092": {
      "op": "DUP10"
    },
    "4093": {
      "op": "ADD"
    },
    "4094": {
      "op": "CALLDATALOAD"
    },
    "4095": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4104": {
      "op": "DUP1"
    },
    "4105": {
      "op": "DUP3"
    },
    "4106": {
      "op": "GT"
    },
    "4107": {
      "op": "ISZERO"
    },
    "4108": {
      "op": "PUSH2",
      "value": "0x1014"
    },
    "4111": {
      "op": "JUMPI"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4114": {
      "op": "DUP1"
    },
    "4115": {
      "op": "REVERT"
    },
    "4116": {
      "op": "JUMPDEST"
    },
    "4117": {
      "op": "DUP2"
    },
    "4118": {
      "op": "DUP12"
    },
    "4119": {
      "op": "ADD"
    },
    "4120": {
      "op": "SWAP2"
    },
    "4121": {
      "op": "POP"
    },
    "4122": {
      "op": "DUP12"
    },
    "4123": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4125": {
      "op": "DUP4"
    },
    "4126": {
      "op": "ADD"
    },
    "4127": {
      "op": "SLT"
    },
    "4128": {
      "op": "PUSH2",
      "value": "0x1028"
    },
    "4131": {
      "op": "JUMPI"
    },
    "4132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4134": {
      "op": "DUP1"
    },
    "4135": {
      "op": "REVERT"
    },
    "4136": {
      "op": "JUMPDEST"
    },
    "4137": {
      "op": "DUP2"
    },
    "4138": {
      "op": "CALLDATALOAD"
    },
    "4139": {
      "op": "PUSH2",
      "value": "0x1036"
    },
    "4142": {
      "op": "PUSH2",
      "value": "0xF78"
    },
    "4145": {
      "op": "DUP3"
    },
    "4146": {
      "op": "PUSH2",
      "value": "0xF33"
    },
    "4149": {
      "jump": "i",
      "op": "JUMP"
    },
    "4150": {
      "op": "JUMPDEST"
    },
    "4151": {
      "op": "DUP2"
    },
    "4152": {
      "op": "DUP2"
    },
    "4153": {
      "op": "MSTORE"
    },
    "4154": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4156": {
      "op": "SWAP2"
    },
    "4157": {
      "op": "SWAP1"
    },
    "4158": {
      "op": "SWAP2"
    },
    "4159": {
      "op": "SHL"
    },
    "4160": {
      "op": "DUP4"
    },
    "4161": {
      "op": "ADD"
    },
    "4162": {
      "op": "DUP5"
    },
    "4163": {
      "op": "ADD"
    },
    "4164": {
      "op": "SWAP1"
    },
    "4165": {
      "op": "DUP5"
    },
    "4166": {
      "op": "DUP2"
    },
    "4167": {
      "op": "ADD"
    },
    "4168": {
      "op": "SWAP1"
    },
    "4169": {
      "op": "DUP15"
    },
    "4170": {
      "op": "DUP4"
    },
    "4171": {
      "op": "GT"
    },
    "4172": {
      "op": "ISZERO"
    },
    "4173": {
      "op": "PUSH2",
      "value": "0x1055"
    },
    "4176": {
      "op": "JUMPI"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4179": {
      "op": "DUP1"
    },
    "4180": {
      "op": "REVERT"
    },
    "4181": {
      "op": "JUMPDEST"
    },
    "4182": {
      "op": "SWAP4"
    },
    "4183": {
      "op": "DUP6"
    },
    "4184": {
      "op": "ADD"
    },
    "4185": {
      "op": "SWAP4"
    },
    "4186": {
      "op": "JUMPDEST"
    },
    "4187": {
      "op": "DUP3"
    },
    "4188": {
      "op": "DUP6"
    },
    "4189": {
      "op": "LT"
    },
    "4190": {
      "op": "ISZERO"
    },
    "4191": {
      "op": "PUSH2",
      "value": "0x107C"
    },
    "4194": {
      "op": "JUMPI"
    },
    "4195": {
      "op": "DUP5"
    },
    "4196": {
      "op": "CALLDATALOAD"
    },
    "4197": {
      "op": "PUSH2",
      "value": "0x106D"
    },
    "4200": {
      "op": "DUP2"
    },
    "4201": {
      "op": "PUSH2",
      "value": "0xE6C"
    },
    "4204": {
      "jump": "i",
      "op": "JUMP"
    },
    "4205": {
      "op": "JUMPDEST"
    },
    "4206": {
      "op": "DUP3"
    },
    "4207": {
      "op": "MSTORE"
    },
    "4208": {
      "op": "SWAP4"
    },
    "4209": {
      "op": "DUP6"
    },
    "4210": {
      "op": "ADD"
    },
    "4211": {
      "op": "SWAP4"
    },
    "4212": {
      "op": "SWAP1"
    },
    "4213": {
      "op": "DUP6"
    },
    "4214": {
      "op": "ADD"
    },
    "4215": {
      "op": "SWAP1"
    },
    "4216": {
      "op": "PUSH2",
      "value": "0x105A"
    },
    "4219": {
      "op": "JUMP"
    },
    "4220": {
      "op": "JUMPDEST"
    },
    "4221": {
      "op": "SWAP9"
    },
    "4222": {
      "op": "POP"
    },
    "4223": {
      "op": "POP"
    },
    "4224": {
      "op": "POP"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4227": {
      "op": "DUP12"
    },
    "4228": {
      "op": "ADD"
    },
    "4229": {
      "op": "CALLDATALOAD"
    },
    "4230": {
      "op": "SWAP6"
    },
    "4231": {
      "op": "POP"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4234": {
      "op": "DUP12"
    },
    "4235": {
      "op": "ADD"
    },
    "4236": {
      "op": "CALLDATALOAD"
    },
    "4237": {
      "op": "SWAP3"
    },
    "4238": {
      "op": "POP"
    },
    "4239": {
      "op": "DUP1"
    },
    "4240": {
      "op": "DUP4"
    },
    "4241": {
      "op": "GT"
    },
    "4242": {
      "op": "ISZERO"
    },
    "4243": {
      "op": "PUSH2",
      "value": "0x109B"
    },
    "4246": {
      "op": "JUMPI"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4249": {
      "op": "DUP1"
    },
    "4250": {
      "op": "REVERT"
    },
    "4251": {
      "op": "JUMPDEST"
    },
    "4252": {
      "op": "PUSH2",
      "value": "0x10A7"
    },
    "4255": {
      "op": "DUP13"
    },
    "4256": {
      "op": "DUP5"
    },
    "4257": {
      "op": "DUP14"
    },
    "4258": {
      "op": "ADD"
    },
    "4259": {
      "op": "PUSH2",
      "value": "0xF57"
    },
    "4262": {
      "jump": "i",
      "op": "JUMP"
    },
    "4263": {
      "op": "JUMPDEST"
    },
    "4264": {
      "op": "SWAP5"
    },
    "4265": {
      "op": "POP"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4268": {
      "op": "DUP12"
    },
    "4269": {
      "op": "ADD"
    },
    "4270": {
      "op": "CALLDATALOAD"
    },
    "4271": {
      "op": "SWAP3"
    },
    "4272": {
      "op": "POP"
    },
    "4273": {
      "op": "DUP1"
    },
    "4274": {
      "op": "DUP4"
    },
    "4275": {
      "op": "GT"
    },
    "4276": {
      "op": "ISZERO"
    },
    "4277": {
      "op": "PUSH2",
      "value": "0x10BD"
    },
    "4280": {
      "op": "JUMPI"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4283": {
      "op": "DUP1"
    },
    "4284": {
      "op": "REVERT"
    },
    "4285": {
      "op": "JUMPDEST"
    },
    "4286": {
      "op": "POP"
    },
    "4287": {
      "op": "POP"
    },
    "4288": {
      "op": "PUSH2",
      "value": "0x10CB"
    },
    "4291": {
      "op": "DUP11"
    },
    "4292": {
      "op": "DUP3"
    },
    "4293": {
      "op": "DUP12"
    },
    "4294": {
      "op": "ADD"
    },
    "4295": {
      "op": "PUSH2",
      "value": "0xF57"
    },
    "4298": {
      "jump": "i",
      "op": "JUMP"
    },
    "4299": {
      "op": "JUMPDEST"
    },
    "4300": {
      "op": "SWAP2"
    },
    "4301": {
      "op": "POP"
    },
    "4302": {
      "op": "POP"
    },
    "4303": {
      "op": "SWAP3"
    },
    "4304": {
      "op": "SWAP6"
    },
    "4305": {
      "op": "SWAP9"
    },
    "4306": {
      "op": "SWAP2"
    },
    "4307": {
      "op": "SWAP5"
    },
    "4308": {
      "op": "SWAP8"
    },
    "4309": {
      "op": "POP"
    },
    "4310": {
      "op": "SWAP3"
    },
    "4311": {
      "op": "SWAP6"
    },
    "4312": {
      "op": "POP"
    },
    "4313": {
      "jump": "o",
      "op": "JUMP"
    },
    "4314": {
      "op": "JUMPDEST"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4319": {
      "op": "DUP3"
    },
    "4320": {
      "op": "DUP5"
    },
    "4321": {
      "op": "SUB"
    },
    "4322": {
      "op": "SLT"
    },
    "4323": {
      "op": "ISZERO"
    },
    "4324": {
      "op": "PUSH2",
      "value": "0x10EC"
    },
    "4327": {
      "op": "JUMPI"
    },
    "4328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4330": {
      "op": "DUP1"
    },
    "4331": {
      "op": "REVERT"
    },
    "4332": {
      "op": "JUMPDEST"
    },
    "4333": {
      "op": "POP"
    },
    "4334": {
      "op": "MLOAD"
    },
    "4335": {
      "op": "SWAP2"
    },
    "4336": {
      "op": "SWAP1"
    },
    "4337": {
      "op": "POP"
    },
    "4338": {
      "jump": "o",
      "op": "JUMP"
    },
    "4339": {
      "op": "JUMPDEST"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4344": {
      "op": "DUP3"
    },
    "4345": {
      "op": "DUP5"
    },
    "4346": {
      "op": "SUB"
    },
    "4347": {
      "op": "SLT"
    },
    "4348": {
      "op": "ISZERO"
    },
    "4349": {
      "op": "PUSH2",
      "value": "0x1105"
    },
    "4352": {
      "op": "JUMPI"
    },
    "4353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4355": {
      "op": "DUP1"
    },
    "4356": {
      "op": "REVERT"
    },
    "4357": {
      "op": "JUMPDEST"
    },
    "4358": {
      "op": "DUP2"
    },
    "4359": {
      "op": "MLOAD"
    },
    "4360": {
      "op": "DUP1"
    },
    "4361": {
      "op": "ISZERO"
    },
    "4362": {
      "op": "ISZERO"
    },
    "4363": {
      "op": "DUP2"
    },
    "4364": {
      "op": "EQ"
    },
    "4365": {
      "op": "PUSH2",
      "value": "0x1115"
    },
    "4368": {
      "op": "JUMPI"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4371": {
      "op": "DUP1"
    },
    "4372": {
      "op": "REVERT"
    },
    "4373": {
      "op": "JUMPDEST"
    },
    "4374": {
      "op": "SWAP4"
    },
    "4375": {
      "op": "SWAP3"
    },
    "4376": {
      "op": "POP"
    },
    "4377": {
      "op": "POP"
    },
    "4378": {
      "op": "POP"
    },
    "4379": {
      "jump": "o",
      "op": "JUMP"
    },
    "4380": {
      "op": "JUMPDEST"
    },
    "4381": {
      "op": "PUSH32",
      "value": "0x7068616E746F6D2E636F6E74726163742E726567697374657265640000000000"
    },
    "4414": {
      "op": "DUP2"
    },
    "4415": {
      "op": "MSTORE"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4418": {
      "op": "SWAP2"
    },
    "4419": {
      "op": "SWAP1"
    },
    "4420": {
      "op": "SWAP2"
    },
    "4421": {
      "op": "SHL"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4426": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4428": {
      "op": "SHL"
    },
    "4429": {
      "op": "SUB"
    },
    "4430": {
      "op": "NOT"
    },
    "4431": {
      "op": "AND"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4434": {
      "op": "DUP3"
    },
    "4435": {
      "op": "ADD"
    },
    "4436": {
      "op": "MSTORE"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "4439": {
      "op": "ADD"
    },
    "4440": {
      "op": "SWAP1"
    },
    "4441": {
      "jump": "o",
      "op": "JUMP"
    },
    "4442": {
      "op": "JUMPDEST"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4447": {
      "op": "DUP3"
    },
    "4448": {
      "op": "DUP5"
    },
    "4449": {
      "op": "SUB"
    },
    "4450": {
      "op": "SLT"
    },
    "4451": {
      "op": "ISZERO"
    },
    "4452": {
      "op": "PUSH2",
      "value": "0x116C"
    },
    "4455": {
      "op": "JUMPI"
    },
    "4456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4458": {
      "op": "DUP1"
    },
    "4459": {
      "op": "REVERT"
    },
    "4460": {
      "op": "JUMPDEST"
    },
    "4461": {
      "op": "DUP2"
    },
    "4462": {
      "op": "MLOAD"
    },
    "4463": {
      "op": "PUSH2",
      "value": "0x1115"
    },
    "4466": {
      "op": "DUP2"
    },
    "4467": {
      "op": "PUSH2",
      "value": "0xE6C"
    },
    "4470": {
      "jump": "i",
      "op": "JUMP"
    },
    "4471": {
      "op": "JUMPDEST"
    },
    "4472": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4479": {
      "op": "SHL"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4482": {
      "op": "MSTORE"
    },
    "4483": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4487": {
      "op": "MSTORE"
    },
    "4488": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4492": {
      "op": "REVERT"
    },
    "4493": {
      "op": "JUMPDEST"
    },
    "4494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4498": {
      "op": "DUP3"
    },
    "4499": {
      "op": "ADD"
    },
    "4500": {
      "op": "DUP8"
    },
    "4501": {
      "op": "DUP4"
    },
    "4502": {
      "op": "MSTORE"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4505": {
      "op": "DUP8"
    },
    "4506": {
      "op": "DUP2"
    },
    "4507": {
      "op": "DUP6"
    },
    "4508": {
      "op": "ADD"
    },
    "4509": {
      "op": "MSTORE"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4514": {
      "op": "DUP6"
    },
    "4515": {
      "op": "ADD"
    },
    "4516": {
      "op": "MSTORE"
    },
    "4517": {
      "op": "DUP2"
    },
    "4518": {
      "op": "DUP8"
    },
    "4519": {
      "op": "MLOAD"
    },
    "4520": {
      "op": "DUP1"
    },
    "4521": {
      "op": "DUP5"
    },
    "4522": {
      "op": "MSTORE"
    },
    "4523": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4525": {
      "op": "DUP7"
    },
    "4526": {
      "op": "ADD"
    },
    "4527": {
      "op": "SWAP2"
    },
    "4528": {
      "op": "POP"
    },
    "4529": {
      "op": "DUP3"
    },
    "4530": {
      "op": "DUP10"
    },
    "4531": {
      "op": "ADD"
    },
    "4532": {
      "op": "SWAP4"
    },
    "4533": {
      "op": "POP"
    },
    "4534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4536": {
      "op": "JUMPDEST"
    },
    "4537": {
      "op": "DUP2"
    },
    "4538": {
      "op": "DUP2"
    },
    "4539": {
      "op": "LT"
    },
    "4540": {
      "op": "ISZERO"
    },
    "4541": {
      "op": "PUSH2",
      "value": "0x11DD"
    },
    "4544": {
      "op": "JUMPI"
    },
    "4545": {
      "op": "DUP5"
    },
    "4546": {
      "op": "MLOAD"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4553": {
      "op": "SHL"
    },
    "4554": {
      "op": "SUB"
    },
    "4555": {
      "op": "AND"
    },
    "4556": {
      "op": "DUP4"
    },
    "4557": {
      "op": "MSTORE"
    },
    "4558": {
      "op": "SWAP4"
    },
    "4559": {
      "op": "DUP4"
    },
    "4560": {
      "op": "ADD"
    },
    "4561": {
      "op": "SWAP4"
    },
    "4562": {
      "op": "SWAP2"
    },
    "4563": {
      "op": "DUP4"
    },
    "4564": {
      "op": "ADD"
    },
    "4565": {
      "op": "SWAP2"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4568": {
      "op": "ADD"
    },
    "4569": {
      "op": "PUSH2",
      "value": "0x11B8"
    },
    "4572": {
      "op": "JUMP"
    },
    "4573": {
      "op": "JUMPDEST"
    },
    "4574": {
      "op": "POP"
    },
    "4575": {
      "op": "POP"
    },
    "4576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4582": {
      "op": "SHL"
    },
    "4583": {
      "op": "SUB"
    },
    "4584": {
      "op": "SWAP7"
    },
    "4585": {
      "op": "SWAP1"
    },
    "4586": {
      "op": "SWAP7"
    },
    "4587": {
      "op": "AND"
    },
    "4588": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4590": {
      "op": "DUP6"
    },
    "4591": {
      "op": "ADD"
    },
    "4592": {
      "op": "MSTORE"
    },
    "4593": {
      "op": "POP"
    },
    "4594": {
      "op": "POP"
    },
    "4595": {
      "op": "POP"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4598": {
      "op": "ADD"
    },
    "4599": {
      "op": "MSTORE"
    },
    "4600": {
      "op": "SWAP4"
    },
    "4601": {
      "op": "SWAP3"
    },
    "4602": {
      "op": "POP"
    },
    "4603": {
      "op": "POP"
    },
    "4604": {
      "op": "POP"
    },
    "4605": {
      "jump": "o",
      "op": "JUMP"
    },
    "4606": {
      "op": "JUMPDEST"
    },
    "4607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4611": {
      "op": "DUP1"
    },
    "4612": {
      "op": "DUP4"
    },
    "4613": {
      "op": "DUP6"
    },
    "4614": {
      "op": "SUB"
    },
    "4615": {
      "op": "SLT"
    },
    "4616": {
      "op": "ISZERO"
    },
    "4617": {
      "op": "PUSH2",
      "value": "0x1211"
    },
    "4620": {
      "op": "JUMPI"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4623": {
      "op": "DUP1"
    },
    "4624": {
      "op": "REVERT"
    },
    "4625": {
      "op": "JUMPDEST"
    },
    "4626": {
      "op": "DUP3"
    },
    "4627": {
      "op": "MLOAD"
    },
    "4628": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4637": {
      "op": "DUP2"
    },
    "4638": {
      "op": "GT"
    },
    "4639": {
      "op": "ISZERO"
    },
    "4640": {
      "op": "PUSH2",
      "value": "0x1228"
    },
    "4643": {
      "op": "JUMPI"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4646": {
      "op": "DUP1"
    },
    "4647": {
      "op": "REVERT"
    },
    "4648": {
      "op": "JUMPDEST"
    },
    "4649": {
      "op": "DUP4"
    },
    "4650": {
      "op": "ADD"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4653": {
      "op": "DUP2"
    },
    "4654": {
      "op": "ADD"
    },
    "4655": {
      "op": "DUP6"
    },
    "4656": {
      "op": "SGT"
    },
    "4657": {
      "op": "PUSH2",
      "value": "0x1239"
    },
    "4660": {
      "op": "JUMPI"
    },
    "4661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4663": {
      "op": "DUP1"
    },
    "4664": {
      "op": "REVERT"
    },
    "4665": {
      "op": "JUMPDEST"
    },
    "4666": {
      "op": "DUP1"
    },
    "4667": {
      "op": "MLOAD"
    },
    "4668": {
      "op": "PUSH2",
      "value": "0x1247"
    },
    "4671": {
      "op": "PUSH2",
      "value": "0xF78"
    },
    "4674": {
      "op": "DUP3"
    },
    "4675": {
      "op": "PUSH2",
      "value": "0xF33"
    },
    "4678": {
      "jump": "i",
      "op": "JUMP"
    },
    "4679": {
      "op": "JUMPDEST"
    },
    "4680": {
      "op": "DUP2"
    },
    "4681": {
      "op": "DUP2"
    },
    "4682": {
      "op": "MSTORE"
    },
    "4683": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4685": {
      "op": "SWAP2"
    },
    "4686": {
      "op": "SWAP1"
    },
    "4687": {
      "op": "SWAP2"
    },
    "4688": {
      "op": "SHL"
    },
    "4689": {
      "op": "DUP3"
    },
    "4690": {
      "op": "ADD"
    },
    "4691": {
      "op": "DUP4"
    },
    "4692": {
      "op": "ADD"
    },
    "4693": {
      "op": "SWAP1"
    },
    "4694": {
      "op": "DUP4"
    },
    "4695": {
      "op": "DUP2"
    },
    "4696": {
      "op": "ADD"
    },
    "4697": {
      "op": "SWAP1"
    },
    "4698": {
      "op": "DUP8"
    },
    "4699": {
      "op": "DUP4"
    },
    "4700": {
      "op": "GT"
    },
    "4701": {
      "op": "ISZERO"
    },
    "4702": {
      "op": "PUSH2",
      "value": "0x1266"
    },
    "4705": {
      "op": "JUMPI"
    },
    "4706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4708": {
      "op": "DUP1"
    },
    "4709": {
      "op": "REVERT"
    },
    "4710": {
      "op": "JUMPDEST"
    },
    "4711": {
      "op": "SWAP3"
    },
    "4712": {
      "op": "DUP5"
    },
    "4713": {
      "op": "ADD"
    },
    "4714": {
      "op": "SWAP3"
    },
    "4715": {
      "op": "JUMPDEST"
    },
    "4716": {
      "op": "DUP3"
    },
    "4717": {
      "op": "DUP5"
    },
    "4718": {
      "op": "LT"
    },
    "4719": {
      "op": "ISZERO"
    },
    "4720": {
      "op": "PUSH2",
      "value": "0x1284"
    },
    "4723": {
      "op": "JUMPI"
    },
    "4724": {
      "op": "DUP4"
    },
    "4725": {
      "op": "MLOAD"
    },
    "4726": {
      "op": "DUP3"
    },
    "4727": {
      "op": "MSTORE"
    },
    "4728": {
      "op": "SWAP3"
    },
    "4729": {
      "op": "DUP5"
    },
    "4730": {
      "op": "ADD"
    },
    "4731": {
      "op": "SWAP3"
    },
    "4732": {
      "op": "SWAP1"
    },
    "4733": {
      "op": "DUP5"
    },
    "4734": {
      "op": "ADD"
    },
    "4735": {
      "op": "SWAP1"
    },
    "4736": {
      "op": "PUSH2",
      "value": "0x126B"
    },
    "4739": {
      "op": "JUMP"
    },
    "4740": {
      "op": "JUMPDEST"
    },
    "4741": {
      "op": "SWAP8"
    },
    "4742": {
      "op": "SWAP7"
    },
    "4743": {
      "op": "POP"
    },
    "4744": {
      "op": "POP"
    },
    "4745": {
      "op": "POP"
    },
    "4746": {
      "op": "POP"
    },
    "4747": {
      "op": "POP"
    },
    "4748": {
      "op": "POP"
    },
    "4749": {
      "op": "POP"
    },
    "4750": {
      "jump": "o",
      "op": "JUMP"
    },
    "4751": {
      "op": "JUMPDEST"
    },
    "4752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4754": {
      "op": "DUP3"
    },
    "4755": {
      "op": "DUP3"
    },
    "4756": {
      "op": "LT"
    },
    "4757": {
      "op": "ISZERO"
    },
    "4758": {
      "op": "PUSH2",
      "value": "0x12AF"
    },
    "4761": {
      "op": "JUMPI"
    },
    "4762": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4769": {
      "op": "SHL"
    },
    "4770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4772": {
      "op": "MSTORE"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4777": {
      "op": "MSTORE"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4782": {
      "op": "REVERT"
    },
    "4783": {
      "op": "JUMPDEST"
    },
    "4784": {
      "op": "POP"
    },
    "4785": {
      "op": "SUB"
    },
    "4786": {
      "op": "SWAP1"
    },
    "4787": {
      "jump": "o",
      "op": "JUMP"
    },
    "4788": {
      "op": "JUMPDEST"
    },
    "4789": {
      "op": "DUP1"
    },
    "4790": {
      "op": "MLOAD"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4797": {
      "op": "SHL"
    },
    "4798": {
      "op": "SUB"
    },
    "4799": {
      "op": "DUP2"
    },
    "4800": {
      "op": "AND"
    },
    "4801": {
      "op": "DUP2"
    },
    "4802": {
      "op": "EQ"
    },
    "4803": {
      "op": "PUSH2",
      "value": "0x12CB"
    },
    "4806": {
      "op": "JUMPI"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4809": {
      "op": "DUP1"
    },
    "4810": {
      "op": "REVERT"
    },
    "4811": {
      "op": "JUMPDEST"
    },
    "4812": {
      "op": "SWAP2"
    },
    "4813": {
      "op": "SWAP1"
    },
    "4814": {
      "op": "POP"
    },
    "4815": {
      "jump": "o",
      "op": "JUMP"
    },
    "4816": {
      "op": "JUMPDEST"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4819": {
      "op": "DUP1"
    },
    "4820": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4822": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4824": {
      "op": "DUP5"
    },
    "4825": {
      "op": "DUP7"
    },
    "4826": {
      "op": "SUB"
    },
    "4827": {
      "op": "SLT"
    },
    "4828": {
      "op": "ISZERO"
    },
    "4829": {
      "op": "PUSH2",
      "value": "0x12E5"
    },
    "4832": {
      "op": "JUMPI"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4835": {
      "op": "DUP1"
    },
    "4836": {
      "op": "REVERT"
    },
    "4837": {
      "op": "JUMPDEST"
    },
    "4838": {
      "op": "PUSH2",
      "value": "0x12EE"
    },
    "4841": {
      "op": "DUP5"
    },
    "4842": {
      "op": "PUSH2",
      "value": "0x12B4"
    },
    "4845": {
      "jump": "i",
      "op": "JUMP"
    },
    "4846": {
      "op": "JUMPDEST"
    },
    "4847": {
      "op": "SWAP3"
    },
    "4848": {
      "op": "POP"
    },
    "4849": {
      "op": "PUSH2",
      "value": "0x12FC"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4854": {
      "op": "DUP6"
    },
    "4855": {
      "op": "ADD"
    },
    "4856": {
      "op": "PUSH2",
      "value": "0x12B4"
    },
    "4859": {
      "jump": "i",
      "op": "JUMP"
    },
    "4860": {
      "op": "JUMPDEST"
    },
    "4861": {
      "op": "SWAP2"
    },
    "4862": {
      "op": "POP"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4865": {
      "op": "DUP5"
    },
    "4866": {
      "op": "ADD"
    },
    "4867": {
      "op": "MLOAD"
    },
    "4868": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4873": {
      "op": "DUP2"
    },
    "4874": {
      "op": "AND"
    },
    "4875": {
      "op": "DUP2"
    },
    "4876": {
      "op": "EQ"
    },
    "4877": {
      "op": "PUSH2",
      "value": "0x1315"
    },
    "4880": {
      "op": "JUMPI"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4883": {
      "op": "DUP1"
    },
    "4884": {
      "op": "REVERT"
    },
    "4885": {
      "op": "JUMPDEST"
    },
    "4886": {
      "op": "DUP1"
    },
    "4887": {
      "op": "SWAP2"
    },
    "4888": {
      "op": "POP"
    },
    "4889": {
      "op": "POP"
    },
    "4890": {
      "op": "SWAP3"
    },
    "4891": {
      "op": "POP"
    },
    "4892": {
      "op": "SWAP3"
    },
    "4893": {
      "op": "POP"
    },
    "4894": {
      "op": "SWAP3"
    },
    "4895": {
      "jump": "o",
      "op": "JUMP"
    },
    "4896": {
      "op": "JUMPDEST"
    },
    "4897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4899": {
      "op": "DUP2"
    },
    "4900": {
      "op": "MLOAD"
    },
    "4901": {
      "op": "DUP1"
    },
    "4902": {
      "op": "DUP5"
    },
    "4903": {
      "op": "MSTORE"
    },
    "4904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4906": {
      "op": "DUP1"
    },
    "4907": {
      "op": "DUP6"
    },
    "4908": {
      "op": "ADD"
    },
    "4909": {
      "op": "SWAP5"
    },
    "4910": {
      "op": "POP"
    },
    "4911": {
      "op": "DUP1"
    },
    "4912": {
      "op": "DUP5"
    },
    "4913": {
      "op": "ADD"
    },
    "4914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4916": {
      "op": "JUMPDEST"
    },
    "4917": {
      "op": "DUP4"
    },
    "4918": {
      "op": "DUP2"
    },
    "4919": {
      "op": "LT"
    },
    "4920": {
      "op": "ISZERO"
    },
    "4921": {
      "op": "PUSH2",
      "value": "0x1350"
    },
    "4924": {
      "op": "JUMPI"
    },
    "4925": {
      "op": "DUP2"
    },
    "4926": {
      "op": "MLOAD"
    },
    "4927": {
      "op": "DUP8"
    },
    "4928": {
      "op": "MSTORE"
    },
    "4929": {
      "op": "SWAP6"
    },
    "4930": {
      "op": "DUP3"
    },
    "4931": {
      "op": "ADD"
    },
    "4932": {
      "op": "SWAP6"
    },
    "4933": {
      "op": "SWAP1"
    },
    "4934": {
      "op": "DUP3"
    },
    "4935": {
      "op": "ADD"
    },
    "4936": {
      "op": "SWAP1"
    },
    "4937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4939": {
      "op": "ADD"
    },
    "4940": {
      "op": "PUSH2",
      "value": "0x1334"
    },
    "4943": {
      "op": "JUMP"
    },
    "4944": {
      "op": "JUMPDEST"
    },
    "4945": {
      "op": "POP"
    },
    "4946": {
      "op": "SWAP5"
    },
    "4947": {
      "op": "SWAP6"
    },
    "4948": {
      "op": "SWAP5"
    },
    "4949": {
      "op": "POP"
    },
    "4950": {
      "op": "POP"
    },
    "4951": {
      "op": "POP"
    },
    "4952": {
      "op": "POP"
    },
    "4953": {
      "op": "POP"
    },
    "4954": {
      "jump": "o",
      "op": "JUMP"
    },
    "4955": {
      "op": "JUMPDEST"
    },
    "4956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4962": {
      "op": "SHL"
    },
    "4963": {
      "op": "SUB"
    },
    "4964": {
      "op": "DUP9"
    },
    "4965": {
      "op": "DUP2"
    },
    "4966": {
      "op": "AND"
    },
    "4967": {
      "op": "DUP3"
    },
    "4968": {
      "op": "MSTORE"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4971": {
      "op": "DUP3"
    },
    "4972": {
      "op": "ADD"
    },
    "4973": {
      "op": "DUP9"
    },
    "4974": {
      "op": "SWAP1"
    },
    "4975": {
      "op": "MSTORE"
    },
    "4976": {
      "op": "DUP7"
    },
    "4977": {
      "op": "DUP2"
    },
    "4978": {
      "op": "AND"
    },
    "4979": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4981": {
      "op": "DUP4"
    },
    "4982": {
      "op": "ADD"
    },
    "4983": {
      "op": "MSTORE"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4986": {
      "op": "DUP3"
    },
    "4987": {
      "op": "ADD"
    },
    "4988": {
      "op": "DUP7"
    },
    "4989": {
      "op": "SWAP1"
    },
    "4990": {
      "op": "MSTORE"
    },
    "4991": {
      "op": "DUP5"
    },
    "4992": {
      "op": "AND"
    },
    "4993": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4995": {
      "op": "DUP3"
    },
    "4996": {
      "op": "ADD"
    },
    "4997": {
      "op": "MSTORE"
    },
    "4998": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5002": {
      "op": "DUP3"
    },
    "5003": {
      "op": "ADD"
    },
    "5004": {
      "op": "DUP2"
    },
    "5005": {
      "op": "SWAP1"
    },
    "5006": {
      "op": "MSTORE"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5009": {
      "op": "SWAP1"
    },
    "5010": {
      "op": "PUSH2",
      "value": "0x139D"
    },
    "5013": {
      "op": "SWAP1"
    },
    "5014": {
      "op": "DUP4"
    },
    "5015": {
      "op": "ADD"
    },
    "5016": {
      "op": "DUP6"
    },
    "5017": {
      "op": "PUSH2",
      "value": "0x1320"
    },
    "5020": {
      "jump": "i",
      "op": "JUMP"
    },
    "5021": {
      "op": "JUMPDEST"
    },
    "5022": {
      "op": "DUP3"
    },
    "5023": {
      "op": "DUP2"
    },
    "5024": {
      "op": "SUB"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5027": {
      "op": "DUP5"
    },
    "5028": {
      "op": "ADD"
    },
    "5029": {
      "op": "MSTORE"
    },
    "5030": {
      "op": "PUSH2",
      "value": "0x13AF"
    },
    "5033": {
      "op": "DUP2"
    },
    "5034": {
      "op": "DUP6"
    },
    "5035": {
      "op": "PUSH2",
      "value": "0x1320"
    },
    "5038": {
      "jump": "i",
      "op": "JUMP"
    },
    "5039": {
      "op": "JUMPDEST"
    },
    "5040": {
      "op": "SWAP11"
    },
    "5041": {
      "op": "SWAP10"
    },
    "5042": {
      "op": "POP"
    },
    "5043": {
      "op": "POP"
    },
    "5044": {
      "op": "POP"
    },
    "5045": {
      "op": "POP"
    },
    "5046": {
      "op": "POP"
    },
    "5047": {
      "op": "POP"
    },
    "5048": {
      "op": "POP"
    },
    "5049": {
      "op": "POP"
    },
    "5050": {
      "op": "POP"
    },
    "5051": {
      "op": "POP"
    },
    "5052": {
      "jump": "o",
      "op": "JUMP"
    },
    "5053": {
      "op": "JUMPDEST"
    },
    "5054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5056": {
      "op": "DUP1"
    },
    "5057": {
      "op": "DUP4"
    },
    "5058": {
      "op": "SLOAD"
    },
    "5059": {
      "op": "DUP2"
    },
    "5060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5062": {
      "op": "DUP3"
    },
    "5063": {
      "op": "DUP2"
    },
    "5064": {
      "op": "SHR"
    },
    "5065": {
      "op": "SWAP2"
    },
    "5066": {
      "op": "POP"
    },
    "5067": {
      "op": "DUP1"
    },
    "5068": {
      "op": "DUP4"
    },
    "5069": {
      "op": "AND"
    },
    "5070": {
      "op": "DUP1"
    },
    "5071": {
      "op": "PUSH2",
      "value": "0x13D9"
    },
    "5074": {
      "op": "JUMPI"
    },
    "5075": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5077": {
      "op": "DUP4"
    },
    "5078": {
      "op": "AND"
    },
    "5079": {
      "op": "SWAP3"
    },
    "5080": {
      "op": "POP"
    },
    "5081": {
      "op": "JUMPDEST"
    },
    "5082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5084": {
      "op": "DUP1"
    },
    "5085": {
      "op": "DUP5"
    },
    "5086": {
      "op": "LT"
    },
    "5087": {
      "op": "DUP3"
    },
    "5088": {
      "op": "EQ"
    },
    "5089": {
      "op": "ISZERO"
    },
    "5090": {
      "op": "PUSH2",
      "value": "0x13F9"
    },
    "5093": {
      "op": "JUMPI"
    },
    "5094": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5099": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5101": {
      "op": "SHL"
    },
    "5102": {
      "op": "DUP7"
    },
    "5103": {
      "op": "MSTORE"
    },
    "5104": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5106": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5108": {
      "op": "MSTORE"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5111": {
      "op": "DUP7"
    },
    "5112": {
      "op": "REVERT"
    },
    "5113": {
      "op": "JUMPDEST"
    },
    "5114": {
      "op": "DUP2"
    },
    "5115": {
      "op": "DUP1"
    },
    "5116": {
      "op": "ISZERO"
    },
    "5117": {
      "op": "PUSH2",
      "value": "0x140D"
    },
    "5120": {
      "op": "JUMPI"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5123": {
      "op": "DUP2"
    },
    "5124": {
      "op": "EQ"
    },
    "5125": {
      "op": "PUSH2",
      "value": "0x141E"
    },
    "5128": {
      "op": "JUMPI"
    },
    "5129": {
      "op": "PUSH2",
      "value": "0x144B"
    },
    "5132": {
      "op": "JUMP"
    },
    "5133": {
      "op": "JUMPDEST"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5136": {
      "op": "NOT"
    },
    "5137": {
      "op": "DUP7"
    },
    "5138": {
      "op": "AND"
    },
    "5139": {
      "op": "DUP10"
    },
    "5140": {
      "op": "MSTORE"
    },
    "5141": {
      "op": "DUP5"
    },
    "5142": {
      "op": "DUP10"
    },
    "5143": {
      "op": "ADD"
    },
    "5144": {
      "op": "SWAP7"
    },
    "5145": {
      "op": "POP"
    },
    "5146": {
      "op": "PUSH2",
      "value": "0x144B"
    },
    "5149": {
      "op": "JUMP"
    },
    "5150": {
      "op": "JUMPDEST"
    },
    "5151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5153": {
      "op": "DUP11"
    },
    "5154": {
      "op": "DUP2"
    },
    "5155": {
      "op": "MSTORE"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5158": {
      "op": "SWAP1"
    },
    "5159": {
      "op": "KECCAK256"
    },
    "5160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5162": {
      "op": "JUMPDEST"
    },
    "5163": {
      "op": "DUP7"
    },
    "5164": {
      "op": "DUP2"
    },
    "5165": {
      "op": "LT"
    },
    "5166": {
      "op": "ISZERO"
    },
    "5167": {
      "op": "PUSH2",
      "value": "0x1443"
    },
    "5170": {
      "op": "JUMPI"
    },
    "5171": {
      "op": "DUP2"
    },
    "5172": {
      "op": "SLOAD"
    },
    "5173": {
      "op": "DUP12"
    },
    "5174": {
      "op": "DUP3"
    },
    "5175": {
      "op": "ADD"
    },
    "5176": {
      "op": "MSTORE"
    },
    "5177": {
      "op": "SWAP1"
    },
    "5178": {
      "op": "DUP6"
    },
    "5179": {
      "op": "ADD"
    },
    "5180": {
      "op": "SWAP1"
    },
    "5181": {
      "op": "DUP4"
    },
    "5182": {
      "op": "ADD"
    },
    "5183": {
      "op": "PUSH2",
      "value": "0x142A"
    },
    "5186": {
      "op": "JUMP"
    },
    "5187": {
      "op": "JUMPDEST"
    },
    "5188": {
      "op": "POP"
    },
    "5189": {
      "op": "POP"
    },
    "5190": {
      "op": "DUP5"
    },
    "5191": {
      "op": "DUP10"
    },
    "5192": {
      "op": "ADD"
    },
    "5193": {
      "op": "SWAP7"
    },
    "5194": {
      "op": "POP"
    },
    "5195": {
      "op": "JUMPDEST"
    },
    "5196": {
      "op": "POP"
    },
    "5197": {
      "op": "SWAP5"
    },
    "5198": {
      "op": "SWAP9"
    },
    "5199": {
      "op": "SWAP8"
    },
    "5200": {
      "op": "POP"
    },
    "5201": {
      "op": "POP"
    },
    "5202": {
      "op": "POP"
    },
    "5203": {
      "op": "POP"
    },
    "5204": {
      "op": "POP"
    },
    "5205": {
      "op": "POP"
    },
    "5206": {
      "op": "POP"
    },
    "5207": {
      "op": "POP"
    },
    "5208": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "15f98fa515e78d773c1b6c09c87929b65048c2f8",
  "source": "/* SPDX-License-Identifier: MIT */\npragma solidity =0.8.10;\n\n/* Package Imports */\nimport {PRBMathUD60x18} from \"@hifi-finance/prb-math/contracts/PRBMathUD60x18.sol\";\n\n/* Package Interface Imports */\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IUniswapV2Pair} from \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\";\nimport {IUniswapV2Factory} from \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\";\nimport {IUniswapV2Router02} from \"../../../../interfaces/libs/IUniswapV2Router02.sol\";\n\n/* Internal Imports */\nimport {PhantomStorageMixin} from \"../../../mixins/PhantomStorageMixin.sol\";\n\n/* Internal Interface Imports */\nimport {IPhantomDexRouter} from \"../../../../interfaces/level0/finance/routers/IPhantomDexRouter.sol\";\n\n/**\n * @title PhantomDexRouter\n * @author PhantomDao Team\n * @notice Communicate with a UniSwap dex\n */\ncontract PhantomDexRouter is PhantomStorageMixin, IPhantomDexRouter {\n    using PRBMathUD60x18 for uint256;\n\n    constructor(address storageFactoryAddress) PhantomStorageMixin(storageFactoryAddress) {\n        return;\n    }\n\n    //=================================================================================================================\n    // External Functions\n    //=================================================================================================================\n\n    function getQuote(\n        address dexRouter,\n        address dexFactory,\n        uint256 inAmount,\n        address inToken,\n        address outToken\n    ) external view virtual override returns (uint256) {\n        (uint256 inReserves, uint256 outReserves) = getReserves(dexFactory, inToken, outToken);\n        uint256 quote = IUniswapV2Router02(dexRouter).quote(inAmount, inReserves, outReserves);\n        return (quote);\n    }\n\n    function swapReceiveMinimum(\n        address dexRouter,\n        uint256 inAmount,\n        uint256 minOutAmount,\n        address[] memory path,\n        uint256 deadline,\n        bytes32[] memory keys,\n        uint256[] memory percentages\n    ) external virtual override onlyRegisteredContracts {\n        preSwap(inAmount, path[0], keys, percentages);\n        IUniswapV2Router02(dexRouter).swapExactTokensForTokens(\n            inAmount, \n            minOutAmount, \n            path,\n            address(this), \n            deadline\n        );\n        postSwap(path[0], path[path.length - 1], keys, percentages);\n    }\n\n    function swapSpendMaximum(\n        address dexRouter,\n        uint256 outAmount,\n        uint256 maxInAmount,\n        address[] memory path,\n        uint256 deadline,\n        bytes32[] memory keys,\n        uint256[] memory percentages\n    ) external virtual override onlyRegisteredContracts {\n        preSwap(maxInAmount, path[0], keys, percentages);\n        IUniswapV2Router02(dexRouter).swapExactTokensForTokensSupportingFeeOnTransferTokens(\n            outAmount,\n            maxInAmount,\n            path,\n            address(this),\n            deadline\n        );\n        postSwap(path[0], path[path.length - 1], keys, percentages);\n    }\n\n    //=================================================================================================================\n    // Internal Functions\n    //=================================================================================================================\n\n    function preSwap(\n        uint256 requiredFunds,\n        address requiredToken,\n        bytes32[] memory keys,\n        uint256[] memory percentages\n    ) internal {\n        PhantomTreasury().swap(address(this), 0, address(0), requiredFunds, requiredToken, keys, percentages);\n    }\n\n    function postSwap(\n        address sentToken,\n        address receivedToken,\n        bytes32[] memory keys,\n        uint256[] memory percentages\n    ) internal {\n        uint256 sentBalance = IERC20(sentToken).balanceOf(address(this));\n        uint256 receivedBalance = IERC20(receivedToken).balanceOf(address(this));\n\n        if (sentBalance != 0) {\n            IERC20(sentToken).approve(address(PhantomTreasury()), sentBalance);\n            PhantomTreasury().swap(\n                address(this),\n                sentBalance,\n                address(PhantomTreasury()),\n                0,\n                address(0),\n                keys,\n                percentages\n            );\n        }\n\n        if (receivedBalance != 0) {\n            IERC20(receivedToken).approve(address(PhantomTreasury()), receivedBalance);\n            PhantomTreasury().swap(\n                address(this),\n                receivedBalance,\n                address(PhantomTreasury()),\n                0,\n                address(0),\n                keys,\n                percentages\n            );\n        }\n    }\n\n    //=================================================================================================================\n    // UniswapV2 Library\n    //=================================================================================================================\n\n    function getReserves(\n        address factory,\n        address tokenA,\n        address tokenB\n    ) internal view returns (uint256 reserveA, uint256 reserveB) {\n        (address token0, ) = sortTokens(tokenA, tokenB);\n        (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(pairFor(factory, tokenA, tokenB)).getReserves();\n        (reserveA, reserveB) = tokenA == token0 ? (reserve0, reserve1) : (reserve1, reserve0);\n    }\n\n    function sortTokens(address tokenA, address tokenB) internal pure returns (address token0, address token1) {\n        require(tokenA != tokenB, \"UniswapV2Library: IDENTICAL_ADDRESSES\");\n        (token0, token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), \"UniswapV2Library: ZERO_ADDRESS\");\n    }\n\n    function pairFor(\n        address factory,\n        address tokenA,\n        address tokenB\n    ) internal pure returns (address pair) {\n        (address token0, address token1) = sortTokens(tokenA, tokenB);\n        pair = address(\n            uint160(\n                uint256(\n                    keccak256(\n                        abi.encodePacked(\n                            hex\"ff\",\n                            factory,\n                            keccak256(abi.encodePacked(token0, token1)),\n                            hex\"96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f\" // init code hash\n                        )\n                    )\n                )\n            )\n        );\n    }\n}\n",
  "sourceMap": "533:71:75:-:0;;;;;-1:-1:-1;;;533:71:75;;;;885:5613:49;533:71:75;;;;;;;;-1:-1:-1;;;533:71:75;;;;;885:5613:49;533:71:75;;;;;;;;;-1:-1:-1;533:71:75;885:5613:49;;-1:-1:-1;;503:101:75;;-1:-1:-1;;533:71:75;503:101;:::i;:::-;-1:-1:-1;503:101:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;503:101:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;647:4181:75;;;669:930;;;;;;;;;;;;;;;;;647:4181;;;669:930;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;669:930:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;669:930:75;;;;;;;;;;;;;;;;-1:-1:-1;;;669:930:75;647:4181;;;1613:367;;-1:-1:-1;1613:367:75;;;;;;;;;;;;647:4181;;-1:-1:-1;647:4181:75;;;;1613:367;;;;;;;;;;;;1702:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:367;;;;;;;;;;;;;;;;;;;;;;;;;;647:4181;;;1994:687;;2051:366;;;;;;;;;;;;;647:4181;;;;1994:687;;;;;;;2022:645;;;;;;2051:366;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2022:645;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1994:687;;;647:4181;;;;2695:848;;;;;;;;2721:237;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2695:848;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:4181;;;;3557:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:4181;;3650:434;;;3676:268;;;;;;;;;;;;;647:4181;;;;;3650:434;;;;;;;;3676:268;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3650:434;;;3962:59;;;;;;;;;;;;;;;;;;;;3650:434;;;;;;;;;;;;;;;;;;;;;;;;;;647:4181;;;4098:479;;;;;;;;;;;;;;;647:4181;;;;;4098:479;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:4181;;;;4591:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:4181;;611:4217;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;611:4217:75;;;;;;;;;;;;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;2283:41:68;;998:109:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1637:1:11;1742:7;:22;2845:15:68;:32;;-1:-1:-1;;;;;2845:32:68;;-1:-1:-1;;;;;;2845:32:68;;;;;;998:109:49;885:5613;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;885:5613:49;;;-1:-1:-1;885:5613:49;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:290:104;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:104;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:104:o;309:380::-;388:1;384:12;;;;431;;;452:61;;506:4;498:6;494:17;484:27;;452:61;559:2;551:6;548:14;528:18;525:38;522:161;;;605:10;600:3;596:20;593:1;586:31;640:4;637:1;630:15;668:4;665:1;658:15;522:161;;309:380;;;:::o;:::-;885:5613:49;;;;;;",
  "sourcePath": "contracts/level0/finance/routers/PhantomDexRouter.sol",
  "type": "contract"
}