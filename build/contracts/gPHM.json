{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "storageFactoryAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prod1",
          "type": "uint256"
        }
      ],
      "name": "PRBMath__MulDivFixedPointOverflow",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prod1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        }
      ],
      "name": "PRBMath__MulDivOverflow",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "PhantomStorageMixin__ContractNotFoundByAddressOrIsOutdated",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "contractName",
          "type": "bytes32"
        }
      ],
      "name": "PhantomStorageMixin__ContractNotFoundByNameOrIsOutdated",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "PhantomStorageMixin__UserIsNotGuardian",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DELEGATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "addApprovedDelegatee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "balanceFromPHM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "balanceToPHM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pos",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint224",
              "name": "votes",
              "type": "uint224"
            }
          ],
          "internalType": "struct gPHM.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableTransfers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedDelegatee",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "101": "interfaces/mixins/IPhantomStorageMixin.sol",
    "11": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/security/ReentrancyGuard.sol",
    "13": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
    "17": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
    "28": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/math/Math.sol",
    "29": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/math/SafeCast.sol",
    "30": "/Users/admin/.brownie/packages/hifi-finance/prb-math@2.4.1/contracts/PRBMath.sol",
    "32": "/Users/admin/.brownie/packages/hifi-finance/prb-math@2.4.1/contracts/PRBMathUD60x18.sol",
    "42": "contracts/core/erc20/SolmateERC20.sol",
    "45": "contracts/core/erc20/gPHM.sol",
    "68": "contracts/mixins/PhantomStorageMixin.sol",
    "75": "contracts/storage/PhantomStorageKeys.sol",
    "81": "interfaces/core/erc20/IPhantomERC20.sol",
    "84": "interfaces/core/erc20/IgPHM.sol"
  },
  "ast": {
    "absolutePath": "contracts/core/erc20/gPHM.sol",
    "exportedSymbols": {
      "ERC20": [
        3681
      ],
      "IgPHM": [
        18037
      ],
      "Math": [
        17545
      ],
      "PRBMathUD60x18": [
        16365
      ],
      "PhantomStorageMixin": [
        14011
      ],
      "SafeCast": [
        17938
      ],
      "gPHM": [
        5069
      ]
    },
    "id": 5070,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4209,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:24:45"
      },
      {
        "absolutePath": "contracts/core/erc20/SolmateERC20.sol",
        "file": "./SolmateERC20.sol",
        "id": 4211,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5070,
        "sourceUnit": 3682,
        "src": "83:41:45",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4210,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "91:5:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/admin/.brownie/packages/hifi-finance/prb-math@2.4.1/contracts/PRBMathUD60x18.sol",
        "file": "@hifi-finance/prb-math/contracts/PRBMathUD60x18.sol",
        "id": 4213,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5070,
        "sourceUnit": 16366,
        "src": "125:83:45",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4212,
              "name": "PRBMathUD60x18",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "133:14:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "id": 4215,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5070,
        "sourceUnit": 17546,
        "src": "209:65:45",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4214,
              "name": "Math",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "217:4:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/math/SafeCast.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeCast.sol",
        "id": 4217,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5070,
        "sourceUnit": 17939,
        "src": "275:73:45",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4216,
              "name": "SafeCast",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "283:8:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/mixins/PhantomStorageMixin.sol",
        "file": "../../mixins/PhantomStorageMixin.sol",
        "id": 4219,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5070,
        "sourceUnit": 14012,
        "src": "373:73:45",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4218,
              "name": "PhantomStorageMixin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "381:19:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/core/erc20/IgPHM.sol",
        "file": "../../../interfaces/core/erc20/IgPHM.sol",
        "id": 4221,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5070,
        "sourceUnit": 18038,
        "src": "481:63:45",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4220,
              "name": "IgPHM",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "489:5:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4223,
              "name": "IgPHM",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18037,
              "src": "653:5:45"
            },
            "id": 4224,
            "nodeType": "InheritanceSpecifier",
            "src": "653:5:45"
          },
          {
            "baseName": {
              "id": 4225,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3681,
              "src": "660:5:45"
            },
            "id": 4226,
            "nodeType": "InheritanceSpecifier",
            "src": "660:5:45"
          },
          {
            "baseName": {
              "id": 4227,
              "name": "PhantomStorageMixin",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14011,
              "src": "667:19:45"
            },
            "id": 4228,
            "nodeType": "InheritanceSpecifier",
            "src": "667:19:45"
          }
        ],
        "canonicalName": "gPHM",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4222,
          "nodeType": "StructuredDocumentation",
          "src": "546:89:45",
          "text": " @title gPHM\n @author PhantomDao Team\n @notice The Governance Phantom Token"
        },
        "fullyImplemented": true,
        "id": 5069,
        "linearizedBaseContracts": [
          5069,
          14011,
          22619,
          22603,
          15621,
          3681,
          18037,
          17259,
          17389,
          15755
        ],
        "name": "gPHM",
        "nameLocation": "645:4:45",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4231,
            "libraryName": {
              "id": 4229,
              "name": "PRBMathUD60x18",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16365,
              "src": "699:14:45"
            },
            "nodeType": "UsingForDirective",
            "src": "693:33:45",
            "typeName": {
              "id": 4230,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "718:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 4234,
            "mutability": "mutable",
            "name": "transfersFrozen",
            "nameLocation": "737:15:45",
            "nodeType": "VariableDeclaration",
            "scope": 5069,
            "src": "732:27:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4232,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "732:4:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 4233,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "755:4:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4248,
              "nodeType": "Block",
              "src": "912:23:45",
              "statements": [
                {
                  "functionReturnParameters": 4246,
                  "id": 4247,
                  "nodeType": "Return",
                  "src": "922:7:45"
                }
              ]
            },
            "id": 4249,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "476f7665726e616e6365205068616e746f6d",
                    "id": 4239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "823:20:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b6b25490e3796d31753eb1880f33ed7d9bc13482bf62b3e53de97ae11fc6da39",
                      "typeString": "literal_string \"Governance Phantom\""
                    },
                    "value": "Governance Phantom"
                  },
                  {
                    "hexValue": "6750484d",
                    "id": 4240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "845:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9809a9afed5533d6c4da9d19d5c6a46c518b4feb6d0cff7d166353682c30a0ce",
                      "typeString": "literal_string \"gPHM\""
                    },
                    "value": "gPHM"
                  },
                  {
                    "hexValue": "3138",
                    "id": 4241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "853:2:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 4242,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4238,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3681,
                  "src": "817:5:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "817:39:45"
              },
              {
                "arguments": [
                  {
                    "id": 4244,
                    "name": "storageFactoryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4236,
                    "src": "885:21:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 4245,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4243,
                  "name": "PhantomStorageMixin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14011,
                  "src": "865:19:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "865:42:45"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4236,
                  "mutability": "mutable",
                  "name": "storageFactoryAddress",
                  "nameLocation": "786:21:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4249,
                  "src": "778:29:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "777:31:45"
            },
            "returnParameters": {
              "id": 4246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "912:0:45"
            },
            "scope": 5069,
            "src": "766:169:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e7a324dc",
            "id": 4254,
            "mutability": "constant",
            "name": "DELEGATION_TYPEHASH",
            "nameLocation": "965:19:45",
            "nodeType": "VariableDeclaration",
            "scope": 5069,
            "src": "941:125:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 4250,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "941:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
                  "id": 4252,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1005:60:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
                    "typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
                  },
                  "value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
                    "typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
                  }
                ],
                "id": 4251,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "995:9:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 4253,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "995:71:45",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3cead841",
            "id": 4258,
            "mutability": "mutable",
            "name": "isApprovedDelegatee",
            "nameLocation": "1105:19:45",
            "nodeType": "VariableDeclaration",
            "scope": 5069,
            "src": "1073:51:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 4257,
              "keyType": {
                "id": 4255,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1081:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1073:24:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 4256,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1092:4:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4262,
            "mutability": "mutable",
            "name": "_delegates",
            "nameLocation": "1166:10:45",
            "nodeType": "VariableDeclaration",
            "scope": 5069,
            "src": "1130:46:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 4261,
              "keyType": {
                "id": 4259,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1138:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1130:27:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 4260,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1149:7:45",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4268,
            "mutability": "mutable",
            "name": "_checkpoints",
            "nameLocation": "1223:12:45",
            "nodeType": "VariableDeclaration",
            "scope": 5069,
            "src": "1182:53:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct gPHM.Checkpoint[])"
            },
            "typeName": {
              "id": 4267,
              "keyType": {
                "id": 4263,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1190:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1182:32:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct gPHM.Checkpoint[])"
              },
              "valueType": {
                "baseType": {
                  "id": 4265,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 4264,
                    "name": "Checkpoint",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4277,
                    "src": "1201:10:45"
                  },
                  "referencedDeclaration": 4277,
                  "src": "1201:10:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$4277_storage_ptr",
                    "typeString": "struct gPHM.Checkpoint"
                  }
                },
                "id": 4266,
                "nodeType": "ArrayTypeName",
                "src": "1201:12:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr",
                  "typeString": "struct gPHM.Checkpoint[]"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4272,
            "mutability": "mutable",
            "name": "_totalSupplyCheckpoints",
            "nameLocation": "1262:23:45",
            "nodeType": "VariableDeclaration",
            "scope": 5069,
            "src": "1241:44:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage",
              "typeString": "struct gPHM.Checkpoint[]"
            },
            "typeName": {
              "baseType": {
                "id": 4270,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4269,
                  "name": "Checkpoint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4277,
                  "src": "1241:10:45"
                },
                "referencedDeclaration": 4277,
                "src": "1241:10:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Checkpoint_$4277_storage_ptr",
                  "typeString": "struct gPHM.Checkpoint"
                }
              },
              "id": 4271,
              "nodeType": "ArrayTypeName",
              "src": "1241:12:45",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr",
                "typeString": "struct gPHM.Checkpoint[]"
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "gPHM.Checkpoint",
            "id": 4277,
            "members": [
              {
                "constant": false,
                "id": 4274,
                "mutability": "mutable",
                "name": "fromBlock",
                "nameLocation": "1327:9:45",
                "nodeType": "VariableDeclaration",
                "scope": 4277,
                "src": "1320:16:45",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 4273,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1320:6:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4276,
                "mutability": "mutable",
                "name": "votes",
                "nameLocation": "1354:5:45",
                "nodeType": "VariableDeclaration",
                "scope": 4277,
                "src": "1346:13:45",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint224",
                  "typeString": "uint224"
                },
                "typeName": {
                  "id": 4275,
                  "name": "uint224",
                  "nodeType": "ElementaryTypeName",
                  "src": "1346:7:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint224",
                    "typeString": "uint224"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Checkpoint",
            "nameLocation": "1299:10:45",
            "nodeType": "StructDefinition",
            "scope": 5069,
            "src": "1292:74:45",
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17948
            ],
            "body": {
              "id": 4287,
              "nodeType": "Block",
              "src": "1788:40:45",
              "statements": [
                {
                  "expression": {
                    "id": 4285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4283,
                      "name": "transfersFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4234,
                      "src": "1798:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 4284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1816:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1798:23:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4286,
                  "nodeType": "ExpressionStatement",
                  "src": "1798:23:45"
                }
              ]
            },
            "documentation": {
              "id": 4278,
              "nodeType": "StructuredDocumentation",
              "src": "1639:84:45",
              "text": " @dev turn on transfers for this token. This is a one-time action."
            },
            "functionSelector": "af35c6c7",
            "id": 4288,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4281,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4280,
                  "name": "onlyRegisteredContracts",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13961,
                  "src": "1764:23:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "1764:23:45"
              }
            ],
            "name": "enableTransfers",
            "nameLocation": "1737:15:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1752:2:45"
            },
            "returnParameters": {
              "id": 4282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1788:0:45"
            },
            "scope": 5069,
            "src": "1728:100:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4300,
              "nodeType": "Block",
              "src": "1970:49:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4297,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4291,
                        "src": "2002:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4296,
                      "name": "_addApprovedDelegatee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4755,
                      "src": "1980:21:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1980:32:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4299,
                  "nodeType": "ExpressionStatement",
                  "src": "1980:32:45"
                }
              ]
            },
            "documentation": {
              "id": 4289,
              "nodeType": "StructuredDocumentation",
              "src": "1834:49:45",
              "text": " @dev add an approved delegate."
            },
            "functionSelector": "df835446",
            "id": 4301,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4294,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4293,
                  "name": "onlyRegisteredContracts",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13961,
                  "src": "1946:23:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "1946:23:45"
              }
            ],
            "name": "addApprovedDelegatee",
            "nameLocation": "1897:20:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4291,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "1926:9:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4301,
                  "src": "1918:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1917:19:45"
            },
            "returnParameters": {
              "id": 4295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1970:0:45"
            },
            "scope": 5069,
            "src": "1888:131:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              18014
            ],
            "body": {
              "id": 4326,
              "nodeType": "Block",
              "src": "2376:122:45",
              "statements": [
                {
                  "assignments": [
                    4309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4309,
                      "mutability": "mutable",
                      "name": "current",
                      "nameLocation": "2394:7:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 4326,
                      "src": "2386:15:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4308,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2386:7:45",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4313,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4310,
                      "name": "_delegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4262,
                      "src": "2404:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 4312,
                    "indexExpression": {
                      "id": 4311,
                      "name": "delegator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4303,
                      "src": "2415:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2404:21:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2386:39:45"
                },
                {
                  "expression": {
                    "id": 4324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4314,
                      "name": "delegatee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4306,
                      "src": "2436:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4315,
                          "name": "current",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4309,
                          "src": "2448:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2467:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2459:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4316,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2459:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2459:10:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2448:21:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "id": 4322,
                        "name": "current",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4309,
                        "src": "2484:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 4323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "2448:43:45",
                      "trueExpression": {
                        "id": 4321,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4303,
                        "src": "2472:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2436:55:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4325,
                  "nodeType": "ExpressionStatement",
                  "src": "2436:55:45"
                }
              ]
            },
            "functionSelector": "587cde1e",
            "id": 4327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegates",
            "nameLocation": "2299:9:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4303,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nameLocation": "2317:9:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4327,
                  "src": "2309:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2308:19:45"
            },
            "returnParameters": {
              "id": 4307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4306,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "2365:9:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4327,
                  "src": "2357:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2356:19:45"
            },
            "scope": 5069,
            "src": "2290:208:45",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              18020
            ],
            "body": {
              "id": 4338,
              "nodeType": "Block",
              "src": "2556:49:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4333,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2576:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2576:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4335,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4329,
                        "src": "2588:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4332,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4810,
                      "src": "2566:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 4336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2566:32:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4337,
                  "nodeType": "ExpressionStatement",
                  "src": "2566:32:45"
                }
              ]
            },
            "functionSelector": "5c19a95c",
            "id": 4339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegate",
            "nameLocation": "2513:8:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4329,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "2530:9:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4339,
                  "src": "2522:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2522:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2521:19:45"
            },
            "returnParameters": {
              "id": 4331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2556:0:45"
            },
            "scope": 5069,
            "src": "2504:101:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17988
            ],
            "body": {
              "id": 4369,
              "nodeType": "Block",
              "src": "2766:127:45",
              "statements": [
                {
                  "assignments": [
                    4349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4349,
                      "mutability": "mutable",
                      "name": "pos",
                      "nameLocation": "2784:3:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 4369,
                      "src": "2776:11:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4348,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2776:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4354,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 4350,
                        "name": "_checkpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4268,
                        "src": "2790:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct gPHM.Checkpoint storage ref[] storage ref)"
                        }
                      },
                      "id": 4352,
                      "indexExpression": {
                        "id": 4351,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4342,
                        "src": "2803:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2790:21:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage",
                        "typeString": "struct gPHM.Checkpoint storage ref[] storage ref"
                      }
                    },
                    "id": 4353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2790:28:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2776:42:45"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4355,
                        "name": "pos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4349,
                        "src": "2835:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 4356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2842:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2835:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 4359,
                            "name": "_checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4268,
                            "src": "2850:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct gPHM.Checkpoint storage ref[] storage ref)"
                            }
                          },
                          "id": 4361,
                          "indexExpression": {
                            "id": 4360,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4342,
                            "src": "2863:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2850:21:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage",
                            "typeString": "struct gPHM.Checkpoint storage ref[] storage ref"
                          }
                        },
                        "id": 4365,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4362,
                            "name": "pos",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4349,
                            "src": "2872:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 4363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2878:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2872:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2850:30:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$4277_storage",
                          "typeString": "struct gPHM.Checkpoint storage ref"
                        }
                      },
                      "id": 4366,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "votes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4276,
                      "src": "2850:36:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      }
                    },
                    "id": 4367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2835:51:45",
                    "trueExpression": {
                      "hexValue": "30",
                      "id": 4358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2846:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  },
                  "functionReturnParameters": 4347,
                  "id": 4368,
                  "nodeType": "Return",
                  "src": "2828:58:45"
                }
              ]
            },
            "documentation": {
              "id": 4340,
              "nodeType": "StructuredDocumentation",
              "src": "2611:68:45",
              "text": " @dev Gets the current votes balance for `account`"
            },
            "functionSelector": "9ab24eb0",
            "id": 4370,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "2693:8:45",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4344,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2739:8:45"
            },
            "parameters": {
              "id": 4343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4342,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2710:7:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4370,
                  "src": "2702:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2702:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2701:17:45"
            },
            "returnParameters": {
              "id": 4347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4346,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4370,
                  "src": "2757:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2757:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2756:9:45"
            },
            "scope": 5069,
            "src": "2684:209:45",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              18036
            ],
            "body": {
              "id": 4452,
              "nodeType": "Block",
              "src": "3072:701:45",
              "statements": [
                {
                  "assignments": [
                    4386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4386,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nameLocation": "3090:10:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 4452,
                      "src": "3082:18:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4385,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3082:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4396,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4390,
                            "name": "DELEGATION_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4254,
                            "src": "3124:19:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 4391,
                            "name": "delegatee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4372,
                            "src": "3145:9:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4392,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4374,
                            "src": "3156:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4393,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4376,
                            "src": "3163:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 4388,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3113:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "3113:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 4394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3113:57:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4387,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3103:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3103:68:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3082:89:45"
                },
                {
                  "assignments": [
                    4398
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4398,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "3189:6:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 4452,
                      "src": "3181:14:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4397,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3181:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4408,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 4402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3225:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4403,
                              "name": "DOMAIN_SEPARATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3562,
                              "src": "3237:16:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                                "typeString": "function () view returns (bytes32)"
                              }
                            },
                            "id": 4404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3237:18:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 4405,
                            "name": "structHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4386,
                            "src": "3257:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 4400,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3208:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3208:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 4406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3208:60:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4399,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3198:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3198:71:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3181:88:45"
                },
                {
                  "assignments": [
                    4410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4410,
                      "mutability": "mutable",
                      "name": "signatory",
                      "nameLocation": "3287:9:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 4452,
                      "src": "3279:17:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4409,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3279:7:45",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4417,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4412,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4398,
                        "src": "3309:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4413,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4378,
                        "src": "3317:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 4414,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4380,
                        "src": "3320:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4415,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4382,
                        "src": "3323:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 4411,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "3299:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 4416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3299:26:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3279:46:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4419,
                          "name": "signatory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4410,
                          "src": "3344:9:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3365:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3357:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4420,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3357:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3357:10:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3344:23:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a45524f5f41444452455353",
                        "id": 4425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3369:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71869b3729b99fadce3ee30cb1aa2a0d639e6a2d24158c1ae1ae0059e81b72af",
                          "typeString": "literal_string \"ZERO_ADDRESS\""
                        },
                        "value": "ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71869b3729b99fadce3ee30cb1aa2a0d639e6a2d24158c1ae1ae0059e81b72af",
                          "typeString": "literal_string \"ZERO_ADDRESS\""
                        }
                      ],
                      "id": 4418,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3336:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3336:48:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4427,
                  "nodeType": "ExpressionStatement",
                  "src": "3336:48:45"
                },
                {
                  "id": 4438,
                  "nodeType": "UncheckedBlock",
                  "src": "3570:89:45",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4429,
                              "name": "nonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4374,
                              "src": "3602:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 4433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "3611:19:45",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 4430,
                                  "name": "nonces",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3270,
                                  "src": "3611:6:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 4432,
                                "indexExpression": {
                                  "id": 4431,
                                  "name": "signatory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4410,
                                  "src": "3618:9:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "3611:17:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3602:28:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "494e56414c49445f4e4f4e4345",
                            "id": 4435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3632:15:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a19e25beaf00f467d35fbe7e167b5794fca796dbfd417dd2accc8f5303300b99",
                              "typeString": "literal_string \"INVALID_NONCE\""
                            },
                            "value": "INVALID_NONCE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_a19e25beaf00f467d35fbe7e167b5794fca796dbfd417dd2accc8f5303300b99",
                              "typeString": "literal_string \"INVALID_NONCE\""
                            }
                          ],
                          "id": 4428,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "3594:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 4436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3594:54:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4437,
                      "nodeType": "ExpressionStatement",
                      "src": "3594:54:45"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4440,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3677:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 4441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3677:15:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 4442,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4376,
                          "src": "3696:6:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3677:25:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5349474e41545552455f45585049524544",
                        "id": 4444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3704:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69b69acc789b1625d57116a0ee5167f36941572c30c7430e2553533f34f5963f",
                          "typeString": "literal_string \"SIGNATURE_EXPIRED\""
                        },
                        "value": "SIGNATURE_EXPIRED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_69b69acc789b1625d57116a0ee5167f36941572c30c7430e2553533f34f5963f",
                          "typeString": "literal_string \"SIGNATURE_EXPIRED\""
                        }
                      ],
                      "id": 4439,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3669:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3669:55:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4446,
                  "nodeType": "ExpressionStatement",
                  "src": "3669:55:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4448,
                        "name": "signatory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4410,
                        "src": "3745:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4449,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4372,
                        "src": "3756:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4447,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4810,
                      "src": "3735:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 4450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3735:31:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4451,
                  "nodeType": "ExpressionStatement",
                  "src": "3735:31:45"
                }
              ]
            },
            "functionSelector": "c3cda520",
            "id": 4453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateBySig",
            "nameLocation": "2908:13:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4372,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "2939:9:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4453,
                  "src": "2931:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2931:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4374,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "2966:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4453,
                  "src": "2958:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2958:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4376,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "2989:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4453,
                  "src": "2981:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2981:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4378,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "3011:1:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4453,
                  "src": "3005:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4377,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3005:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4380,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "3030:1:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4453,
                  "src": "3022:9:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4379,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3022:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4382,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "3049:1:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4453,
                  "src": "3041:9:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4381,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3041:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2921:135:45"
            },
            "returnParameters": {
              "id": 4384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3072:0:45"
            },
            "scope": 5069,
            "src": "2899:874:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17998
            ],
            "body": {
              "id": 4479,
              "nodeType": "Block",
              "src": "4083:158:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4465,
                          "name": "blockNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4458,
                          "src": "4101:11:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 4466,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4115:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 4467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "4115:12:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4101:26:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564",
                        "id": 4469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4129:33:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d",
                          "typeString": "literal_string \"ERC20Votes: block not yet mined\""
                        },
                        "value": "ERC20Votes: block not yet mined"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d",
                          "typeString": "literal_string \"ERC20Votes: block not yet mined\""
                        }
                      ],
                      "id": 4464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4093:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4093:70:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4471,
                  "nodeType": "ExpressionStatement",
                  "src": "4093:70:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 4473,
                          "name": "_checkpoints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4268,
                          "src": "4199:12:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct gPHM.Checkpoint storage ref[] storage ref)"
                          }
                        },
                        "id": 4475,
                        "indexExpression": {
                          "id": 4474,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4456,
                          "src": "4212:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4199:21:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage",
                          "typeString": "struct gPHM.Checkpoint storage ref[] storage ref"
                        }
                      },
                      {
                        "id": 4476,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4458,
                        "src": "4222:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage",
                          "typeString": "struct gPHM.Checkpoint storage ref[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4472,
                      "name": "_checkpointsLookup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4946,
                      "src": "4180:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (struct gPHM.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"
                      }
                    },
                    "id": 4477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4180:54:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4463,
                  "id": 4478,
                  "nodeType": "Return",
                  "src": "4173:61:45"
                }
              ]
            },
            "documentation": {
              "id": 4454,
              "nodeType": "StructuredDocumentation",
              "src": "3779:182:45",
              "text": " @dev Retrieve the number of votes for `account` at the end of `blockNumber`.\n Requirements:\n - `blockNumber` must have been already mined"
            },
            "functionSelector": "3a46b1a8",
            "id": 4480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPastVotes",
            "nameLocation": "3979:12:45",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4460,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4050:8:45"
            },
            "parameters": {
              "id": 4459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4456,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4000:7:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4480,
                  "src": "3992:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3992:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4458,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "4017:11:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4480,
                  "src": "4009:19:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4009:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3991:38:45"
            },
            "returnParameters": {
              "id": 4463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4462,
                  "mutability": "mutable",
                  "name": "votes",
                  "nameLocation": "4076:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4480,
                  "src": "4068:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4068:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4067:15:45"
            },
            "scope": 5069,
            "src": "3970:271:45",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              18006
            ],
            "body": {
              "id": 4502,
              "nodeType": "Block",
              "src": "4616:160:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4490,
                          "name": "blockNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4483,
                          "src": "4634:11:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 4491,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4648:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 4492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "4648:12:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4634:26:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564",
                        "id": 4494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4662:33:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d",
                          "typeString": "literal_string \"ERC20Votes: block not yet mined\""
                        },
                        "value": "ERC20Votes: block not yet mined"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d",
                          "typeString": "literal_string \"ERC20Votes: block not yet mined\""
                        }
                      ],
                      "id": 4489,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4626:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4626:70:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4496,
                  "nodeType": "ExpressionStatement",
                  "src": "4626:70:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4498,
                        "name": "_totalSupplyCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4272,
                        "src": "4732:23:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage",
                          "typeString": "struct gPHM.Checkpoint storage ref[] storage ref"
                        }
                      },
                      {
                        "id": 4499,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4483,
                        "src": "4757:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage",
                          "typeString": "struct gPHM.Checkpoint storage ref[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4497,
                      "name": "_checkpointsLookup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4946,
                      "src": "4713:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (struct gPHM.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"
                      }
                    },
                    "id": 4500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4713:56:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4488,
                  "id": 4501,
                  "nodeType": "Return",
                  "src": "4706:63:45"
                }
              ]
            },
            "documentation": {
              "id": 4481,
              "nodeType": "StructuredDocumentation",
              "src": "4247:268:45",
              "text": " @dev Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances.\n It is but NOT the sum of all the delegated votes!\n Requirements:\n - `blockNumber` must have been already mined"
            },
            "functionSelector": "8e539e8c",
            "id": 4503,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPastTotalSupply",
            "nameLocation": "4529:18:45",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4485,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4589:8:45"
            },
            "parameters": {
              "id": 4484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4483,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "4556:11:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4503,
                  "src": "4548:19:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4548:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4547:21:45"
            },
            "returnParameters": {
              "id": 4488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4487,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4503,
                  "src": "4607:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4607:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4606:9:45"
            },
            "scope": 5069,
            "src": "4520:256:45",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17962
            ],
            "body": {
              "id": 4519,
              "nodeType": "Block",
              "src": "5027:58:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4513,
                              "name": "sPHM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13466,
                              "src": "5055:4:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IsPHM_$18094_$",
                                "typeString": "function () view returns (contract IsPHM)"
                              }
                            },
                            "id": 4514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5055:6:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IsPHM_$18094",
                              "typeString": "contract IsPHM"
                            }
                          },
                          "id": 4515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "scalingFactor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18093,
                          "src": "5055:20:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 4516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5055:22:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4511,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4506,
                        "src": "5044:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16198,
                      "src": "5044:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 4517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5044:34:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4510,
                  "id": 4518,
                  "nodeType": "Return",
                  "src": "5037:41:45"
                }
              ]
            },
            "documentation": {
              "id": 4504,
              "nodeType": "StructuredDocumentation",
              "src": "4782:172:45",
              "text": " @notice calculate conversion between an amount of gPHM to (s)PHM\n @param amount uint amount of gPHM\n @return uint equivalent amount of (s)PHM"
            },
            "functionSelector": "d4ff9a2c",
            "id": 4520,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceToPHM",
            "nameLocation": "4968:12:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4506,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4989:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4520,
                  "src": "4981:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4981:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4980:16:45"
            },
            "returnParameters": {
              "id": 4510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4509,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4520,
                  "src": "5018:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5018:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5017:9:45"
            },
            "scope": 5069,
            "src": "4959:126:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17955
            ],
            "body": {
              "id": 4536,
              "nodeType": "Block",
              "src": "5338:58:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4530,
                              "name": "sPHM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13466,
                              "src": "5366:4:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IsPHM_$18094_$",
                                "typeString": "function () view returns (contract IsPHM)"
                              }
                            },
                            "id": 4531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5366:6:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IsPHM_$18094",
                              "typeString": "contract IsPHM"
                            }
                          },
                          "id": 4532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "scalingFactor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18093,
                          "src": "5366:20:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 4533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5366:22:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4528,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4523,
                        "src": "5355:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15849,
                      "src": "5355:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 4534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5355:34:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4527,
                  "id": 4535,
                  "nodeType": "Return",
                  "src": "5348:41:45"
                }
              ]
            },
            "documentation": {
              "id": 4521,
              "nodeType": "StructuredDocumentation",
              "src": "5091:172:45",
              "text": " @notice calculate conversion between an amount of (s)PHM to gPHM\n @param amount uint amount of (s)PHM\n @return uint equivalent amount of gPHM"
            },
            "functionSelector": "223966ed",
            "id": 4537,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceFromPHM",
            "nameLocation": "5277:14:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4523,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5300:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4537,
                  "src": "5292:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5292:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5291:16:45"
            },
            "returnParameters": {
              "id": 4527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4526,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4537,
                  "src": "5329:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5329:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5328:9:45"
            },
            "scope": 5069,
            "src": "5268:128:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4554,
              "nodeType": "Block",
              "src": "5571:50:45",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4548,
                        "name": "_checkpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4268,
                        "src": "5588:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct gPHM.Checkpoint storage ref[] storage ref)"
                        }
                      },
                      "id": 4550,
                      "indexExpression": {
                        "id": 4549,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4540,
                        "src": "5601:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5588:21:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage",
                        "typeString": "struct gPHM.Checkpoint storage ref[] storage ref"
                      }
                    },
                    "id": 4552,
                    "indexExpression": {
                      "id": 4551,
                      "name": "pos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4542,
                      "src": "5610:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5588:26:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Checkpoint_$4277_storage",
                      "typeString": "struct gPHM.Checkpoint storage ref"
                    }
                  },
                  "functionReturnParameters": 4547,
                  "id": 4553,
                  "nodeType": "Return",
                  "src": "5581:33:45"
                }
              ]
            },
            "documentation": {
              "id": 4538,
              "nodeType": "StructuredDocumentation",
              "src": "5402:66:45",
              "text": " @dev Get the `pos`-th checkpoint for `account`."
            },
            "functionSelector": "f1127ed8",
            "id": 4555,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkpoints",
            "nameLocation": "5482:11:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4540,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5502:7:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4555,
                  "src": "5494:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5494:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4542,
                  "mutability": "mutable",
                  "name": "pos",
                  "nameLocation": "5518:3:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4555,
                  "src": "5511:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 4541,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5511:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5493:29:45"
            },
            "returnParameters": {
              "id": 4547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4546,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4555,
                  "src": "5552:17:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$4277_memory_ptr",
                    "typeString": "struct gPHM.Checkpoint"
                  },
                  "typeName": {
                    "id": 4545,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4544,
                      "name": "Checkpoint",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4277,
                      "src": "5552:10:45"
                    },
                    "referencedDeclaration": 4277,
                    "src": "5552:10:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Checkpoint_$4277_storage_ptr",
                      "typeString": "struct gPHM.Checkpoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5551:19:45"
            },
            "scope": 5069,
            "src": "5473:148:45",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4571,
              "nodeType": "Block",
              "src": "5774:71:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 4565,
                            "name": "_checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4268,
                            "src": "5809:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct gPHM.Checkpoint storage ref[] storage ref)"
                            }
                          },
                          "id": 4567,
                          "indexExpression": {
                            "id": 4566,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4558,
                            "src": "5822:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5809:21:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage",
                            "typeString": "struct gPHM.Checkpoint storage ref[] storage ref"
                          }
                        },
                        "id": 4568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5809:28:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4563,
                        "name": "SafeCast",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17938,
                        "src": "5791:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeCast_$17938_$",
                          "typeString": "type(library SafeCast)"
                        }
                      },
                      "id": 4564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toUint32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17673,
                      "src": "5791:17:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$",
                        "typeString": "function (uint256) pure returns (uint32)"
                      }
                    },
                    "id": 4569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5791:47:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 4562,
                  "id": 4570,
                  "nodeType": "Return",
                  "src": "5784:54:45"
                }
              ]
            },
            "documentation": {
              "id": 4556,
              "nodeType": "StructuredDocumentation",
              "src": "5627:64:45",
              "text": " @dev Get number of checkpoints for `account`."
            },
            "functionSelector": "6fcfff45",
            "id": 4572,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numCheckpoints",
            "nameLocation": "5705:14:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4558,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5728:7:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4572,
                  "src": "5720:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5720:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5719:17:45"
            },
            "returnParameters": {
              "id": 4562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4561,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4572,
                  "src": "5766:6:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 4560,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5766:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5765:8:45"
            },
            "scope": 5069,
            "src": "5696:149:45",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3680
            ],
            "body": {
              "id": 4654,
              "nodeType": "Block",
              "src": "6339:521:45",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4584,
                      "name": "transfersFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4234,
                      "src": "6353:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 4585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6372:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6353:23:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 4618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4605,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4577,
                          "src": "6488:2:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4608,
                                "name": "PhantomVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13675,
                                "src": "6502:12:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPhantomVault_$17323_$",
                                  "typeString": "function () view returns (contract IPhantomVault)"
                                }
                              },
                              "id": 4609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6502:14:45",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPhantomVault_$17323",
                                "typeString": "contract IPhantomVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IPhantomVault_$17323",
                                "typeString": "contract IPhantomVault"
                              }
                            ],
                            "id": 4607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6494:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4606,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6494:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6494:23:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6488:29:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4612,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4577,
                          "src": "6521:2:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6535:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6527:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4613,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6527:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6527:10:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6521:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "6488:49:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 4634,
                    "nodeType": "IfStatement",
                    "src": "6484:251:45",
                    "trueBody": {
                      "id": 4633,
                      "nodeType": "Block",
                      "src": "6539:196:45",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4629,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 4623,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4577,
                                      "src": "6601:2:45",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 4620,
                                        "name": "PHM",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13447,
                                        "src": "6578:3:45",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPHM_$17353_$",
                                          "typeString": "function () view returns (contract IPHM)"
                                        }
                                      },
                                      "id": 4621,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6578:5:45",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IPHM_$17353",
                                        "typeString": "contract IPHM"
                                      }
                                    },
                                    "id": 4622,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceAllDenoms",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17347,
                                    "src": "6578:22:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 4624,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6578:26:45",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 4625,
                                        "name": "PHM",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13447,
                                        "src": "6607:3:45",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IPHM_$17353_$",
                                          "typeString": "function () view returns (contract IPHM)"
                                        }
                                      },
                                      "id": 4626,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6607:5:45",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IPHM_$17353",
                                        "typeString": "contract IPHM"
                                      }
                                    },
                                    "id": 4627,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "maxBalancePerWallet",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17352,
                                    "src": "6607:25:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 4628,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6607:27:45",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6578:56:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "6750484d207472616e7366657220626c6f636b65642064756520746f206f776e696e67206f76657220342e373625206f6620737570706c79",
                                "id": 4630,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6652:58:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_2822a00c950576905a35a4898a0829f4a60220d8d674281730441e1a399a7a62",
                                  "typeString": "literal_string \"gPHM transfer blocked due to owning over 4.76% of supply\""
                                },
                                "value": "gPHM transfer blocked due to owning over 4.76% of supply"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2822a00c950576905a35a4898a0829f4a60220d8d674281730441e1a399a7a62",
                                  "typeString": "literal_string \"gPHM transfer blocked due to owning over 4.76% of supply\""
                                }
                              ],
                              "id": 4619,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "6553:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 4631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6553:171:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 4632,
                          "nodeType": "ExpressionStatement",
                          "src": "6553:171:45"
                        }
                      ]
                    }
                  },
                  "id": 4635,
                  "nodeType": "IfStatement",
                  "src": "6349:386:45",
                  "trueBody": {
                    "id": 4604,
                    "nodeType": "Block",
                    "src": "6378:100:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 4600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 4593,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4588,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4575,
                                  "src": "6400:4:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 4591,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6416:1:45",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 4590,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6408:7:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 4589,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6408:7:45",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 4592,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6408:10:45",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6400:18:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 4599,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4594,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4577,
                                  "src": "6422:2:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 4597,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6436:1:45",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 4596,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6428:7:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 4595,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6428:7:45",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 4598,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6428:10:45",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6422:16:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6400:38:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6750484d206973206e6f74207472616e7366657261626c65",
                              "id": 4601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6440:26:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c935286cb08fbba59b942293aa570f25ced6bb0bf88f82b895d0057e6fc89240",
                                "typeString": "literal_string \"gPHM is not transferable\""
                              },
                              "value": "gPHM is not transferable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c935286cb08fbba59b942293aa570f25ced6bb0bf88f82b895d0057e6fc89240",
                                "typeString": "literal_string \"gPHM is not transferable\""
                              }
                            ],
                            "id": 4587,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6392:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6392:75:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4603,
                        "nodeType": "ExpressionStatement",
                        "src": "6392:75:45"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4639,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4575,
                        "src": "6771:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4640,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4577,
                        "src": "6777:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4641,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4579,
                        "src": "6781:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4636,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "6745:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_gPHM_$5069_$",
                          "typeString": "type(contract super gPHM)"
                        }
                      },
                      "id": 4638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_afterTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3680,
                      "src": "6745:25:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6745:43:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4643,
                  "nodeType": "ExpressionStatement",
                  "src": "6745:43:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4646,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4575,
                            "src": "6824:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4645,
                          "name": "delegates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4327,
                          "src": "6814:9:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
                            "typeString": "function (address) view returns (address)"
                          }
                        },
                        "id": 4647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6814:15:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4649,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4577,
                            "src": "6841:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4648,
                          "name": "delegates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4327,
                          "src": "6831:9:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
                            "typeString": "function (address) view returns (address)"
                          }
                        },
                        "id": 4650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6831:13:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4651,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4579,
                        "src": "6846:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4644,
                      "name": "_moveDelegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4880,
                      "src": "6799:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6799:54:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4653,
                  "nodeType": "ExpressionStatement",
                  "src": "6799:54:45"
                }
              ]
            },
            "documentation": {
              "id": 4573,
              "nodeType": "StructuredDocumentation",
              "src": "6115:85:45",
              "text": " @dev prevent more than 4.76% ownership unless you are the treasury"
            },
            "id": 4655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "6214:19:45",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4582,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 4581,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3681,
                  "src": "6332:5:45"
                }
              ],
              "src": "6323:15:45"
            },
            "parameters": {
              "id": 4580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4575,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6251:4:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4655,
                  "src": "6243:12:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6243:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4577,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6273:2:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4655,
                  "src": "6265:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6265:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4579,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6293:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4655,
                  "src": "6285:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6285:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6233:72:45"
            },
            "returnParameters": {
              "id": 4583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6339:0:45"
            },
            "scope": 5069,
            "src": "6205:655:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3632
            ],
            "body": {
              "id": 4689,
              "nodeType": "Block",
              "src": "7023:216:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4667,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4658,
                        "src": "7045:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4668,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4660,
                        "src": "7054:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4664,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7033:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_gPHM_$5069_$",
                          "typeString": "type(contract super gPHM)"
                        }
                      },
                      "id": 4666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3632,
                      "src": "7033:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7033:28:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4670,
                  "nodeType": "ExpressionStatement",
                  "src": "7033:28:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4672,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3311,
                            "src": "7079:11:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 4673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7079:13:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 4676,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7101:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint224_$",
                                  "typeString": "type(uint224)"
                                },
                                "typeName": {
                                  "id": 4675,
                                  "name": "uint224",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7101:7:45",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint224_$",
                                  "typeString": "type(uint224)"
                                }
                              ],
                              "id": 4674,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "7096:4:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 4677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7096:13:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint224",
                              "typeString": "type(uint224)"
                            }
                          },
                          "id": 4678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "7096:17:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "src": "7079:34:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230566f7465733a20746f74616c20737570706c79207269736b73206f766572666c6f77696e6720766f746573",
                        "id": 4680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7115:50:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699",
                          "typeString": "literal_string \"ERC20Votes: total supply risks overflowing votes\""
                        },
                        "value": "ERC20Votes: total supply risks overflowing votes"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699",
                          "typeString": "literal_string \"ERC20Votes: total supply risks overflowing votes\""
                        }
                      ],
                      "id": 4671,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7071:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7071:95:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4682,
                  "nodeType": "ExpressionStatement",
                  "src": "7071:95:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4684,
                        "name": "_totalSupplyCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4272,
                        "src": "7194:23:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage",
                          "typeString": "struct gPHM.Checkpoint storage ref[] storage ref"
                        }
                      },
                      {
                        "id": 4685,
                        "name": "_add",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5054,
                        "src": "7219:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      {
                        "id": 4686,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4660,
                        "src": "7225:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage",
                          "typeString": "struct gPHM.Checkpoint storage ref[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4683,
                      "name": "_writeCheckpoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5040,
                      "src": "7177:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct gPHM.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 4687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7177:55:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 4688,
                  "nodeType": "ExpressionStatement",
                  "src": "7177:55:45"
                }
              ]
            },
            "documentation": {
              "id": 4656,
              "nodeType": "StructuredDocumentation",
              "src": "6866:78:45",
              "text": " @dev Snapshots the totalSupply after it has been increased."
            },
            "id": 4690,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "6958:5:45",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4662,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7014:8:45"
            },
            "parameters": {
              "id": 4661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4658,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6972:7:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4690,
                  "src": "6964:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6964:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4660,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6989:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4690,
                  "src": "6981:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6981:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6963:33:45"
            },
            "returnParameters": {
              "id": 4663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7023:0:45"
            },
            "scope": 5069,
            "src": "6949:290:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              17250
            ],
            "body": {
              "id": 4704,
              "nodeType": "Block",
              "src": "7320:34:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4700,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4692,
                        "src": "7336:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4701,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4694,
                        "src": "7340:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4699,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4690
                      ],
                      "referencedDeclaration": 4690,
                      "src": "7330:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7330:17:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4703,
                  "nodeType": "ExpressionStatement",
                  "src": "7330:17:45"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 4705,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4697,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4696,
                  "name": "onlyRegisteredContracts",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13961,
                  "src": "7296:23:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "7296:23:45"
              }
            ],
            "name": "mint",
            "nameLocation": "7254:4:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4692,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7267:2:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4705,
                  "src": "7259:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7259:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4694,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7279:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4705,
                  "src": "7271:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7271:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7258:28:45"
            },
            "returnParameters": {
              "id": 4698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7320:0:45"
            },
            "scope": 5069,
            "src": "7245:109:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3669
            ],
            "body": {
              "id": 4727,
              "nodeType": "Block",
              "src": "7517:116:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4717,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4708,
                        "src": "7539:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4718,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4710,
                        "src": "7548:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4714,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7527:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_gPHM_$5069_$",
                          "typeString": "type(contract super gPHM)"
                        }
                      },
                      "id": 4716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3669,
                      "src": "7527:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7527:28:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4720,
                  "nodeType": "ExpressionStatement",
                  "src": "7527:28:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4722,
                        "name": "_totalSupplyCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4272,
                        "src": "7583:23:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage",
                          "typeString": "struct gPHM.Checkpoint storage ref[] storage ref"
                        }
                      },
                      {
                        "id": 4723,
                        "name": "_subtract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5068,
                        "src": "7608:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      {
                        "id": 4724,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4710,
                        "src": "7619:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage",
                          "typeString": "struct gPHM.Checkpoint storage ref[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4721,
                      "name": "_writeCheckpoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5040,
                      "src": "7566:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct gPHM.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 4725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7566:60:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 4726,
                  "nodeType": "ExpressionStatement",
                  "src": "7566:60:45"
                }
              ]
            },
            "documentation": {
              "id": 4706,
              "nodeType": "StructuredDocumentation",
              "src": "7360:78:45",
              "text": " @dev Snapshots the totalSupply after it has been decreased."
            },
            "id": 4728,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "7452:5:45",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4712,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7508:8:45"
            },
            "parameters": {
              "id": 4711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4708,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7466:7:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4728,
                  "src": "7458:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7458:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4710,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7483:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4728,
                  "src": "7475:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7475:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7457:33:45"
            },
            "returnParameters": {
              "id": 4713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7517:0:45"
            },
            "scope": 5069,
            "src": "7443:190:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              17258
            ],
            "body": {
              "id": 4742,
              "nodeType": "Block",
              "src": "7719:39:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4738,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4730,
                        "src": "7735:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4739,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4732,
                        "src": "7744:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4737,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4728
                      ],
                      "referencedDeclaration": 4728,
                      "src": "7729:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7729:22:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4741,
                  "nodeType": "ExpressionStatement",
                  "src": "7729:22:45"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "id": 4743,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4735,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4734,
                  "name": "onlyRegisteredContracts",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13961,
                  "src": "7695:23:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "7695:23:45"
              }
            ],
            "name": "burn",
            "nameLocation": "7648:4:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4730,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7661:7:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4743,
                  "src": "7653:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7653:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4732,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7678:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4743,
                  "src": "7670:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4731,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7670:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7652:33:45"
            },
            "returnParameters": {
              "id": 4736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7719:0:45"
            },
            "scope": 5069,
            "src": "7639:119:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4754,
              "nodeType": "Block",
              "src": "8090:54:45",
              "statements": [
                {
                  "expression": {
                    "id": 4752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4748,
                        "name": "isApprovedDelegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4258,
                        "src": "8100:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4750,
                      "indexExpression": {
                        "id": 4749,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4745,
                        "src": "8120:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8100:30:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8133:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8100:37:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4753,
                  "nodeType": "ExpressionStatement",
                  "src": "8100:37:45"
                }
              ]
            },
            "id": 4755,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addApprovedDelegatee",
            "nameLocation": "8040:21:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4745,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "8070:9:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4755,
                  "src": "8062:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8062:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8061:19:45"
            },
            "returnParameters": {
              "id": 4747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8090:0:45"
            },
            "scope": 5069,
            "src": "8031:113:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4809,
              "nodeType": "Block",
              "src": "8224:422:45",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 4764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4762,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4757,
                        "src": "8238:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 4763,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4759,
                        "src": "8251:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8238:22:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 4770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4765,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4759,
                        "src": "8264:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8285:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8277:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4766,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8277:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8277:10:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8264:23:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8238:49:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4782,
                  "nodeType": "IfStatement",
                  "src": "8234:159:45",
                  "trueBody": {
                    "id": 4781,
                    "nodeType": "Block",
                    "src": "8289:104:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 4777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 4773,
                                  "name": "isApprovedDelegatee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4258,
                                  "src": "8311:19:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 4775,
                                "indexExpression": {
                                  "id": 4774,
                                  "name": "delegatee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4759,
                                  "src": "8331:9:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8311:30:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 4776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8345:4:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "8311:38:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e27742064656c65746167746520746f2064656c656761746565",
                              "id": 4778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8351:30:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dfa81f847040116f18d2cf88a11124ae159c9c6cce72d2d50442e59c4d40a46c",
                                "typeString": "literal_string \"Can't deletagte to delegatee\""
                              },
                              "value": "Can't deletagte to delegatee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dfa81f847040116f18d2cf88a11124ae159c9c6cce72d2d50442e59c4d40a46c",
                                "typeString": "literal_string \"Can't deletagte to delegatee\""
                              }
                            ],
                            "id": 4772,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8303:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8303:79:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4780,
                        "nodeType": "ExpressionStatement",
                        "src": "8303:79:45"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4784,
                      "mutability": "mutable",
                      "name": "currentDelegate",
                      "nameLocation": "8410:15:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 4809,
                      "src": "8402:23:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4783,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8402:7:45",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4788,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4785,
                      "name": "_delegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4262,
                      "src": "8428:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 4787,
                    "indexExpression": {
                      "id": 4786,
                      "name": "delegator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4757,
                      "src": "8439:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8428:21:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8402:47:45"
                },
                {
                  "expression": {
                    "id": 4793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4789,
                        "name": "_delegates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4262,
                        "src": "8460:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 4791,
                      "indexExpression": {
                        "id": 4790,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4757,
                        "src": "8471:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8460:21:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4792,
                      "name": "delegatee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4759,
                      "src": "8484:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8460:33:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4794,
                  "nodeType": "ExpressionStatement",
                  "src": "8460:33:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4796,
                        "name": "currentDelegate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4784,
                        "src": "8519:15:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4797,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4759,
                        "src": "8536:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 4798,
                          "name": "_balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3251,
                          "src": "8547:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 4800,
                        "indexExpression": {
                          "id": 4799,
                          "name": "delegator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4757,
                          "src": "8558:9:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8547:21:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4795,
                      "name": "_moveDelegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4880,
                      "src": "8504:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8504:65:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4802,
                  "nodeType": "ExpressionStatement",
                  "src": "8504:65:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4804,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4757,
                        "src": "8601:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4805,
                        "name": "currentDelegate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4784,
                        "src": "8612:15:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4806,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4759,
                        "src": "8629:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4803,
                      "name": "DelegateChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17971,
                      "src": "8585:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 4807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8585:54:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4808,
                  "nodeType": "EmitStatement",
                  "src": "8580:59:45"
                }
              ]
            },
            "id": 4810,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_delegate",
            "nameLocation": "8159:9:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4757,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nameLocation": "8177:9:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4810,
                  "src": "8169:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8169:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4759,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "8196:9:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4810,
                  "src": "8188:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8188:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8168:38:45"
            },
            "returnParameters": {
              "id": 4761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8224:0:45"
            },
            "scope": 5069,
            "src": "8150:496:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4879,
              "nodeType": "Block",
              "src": "8765:507:45",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 4821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4819,
                        "name": "src",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4812,
                        "src": "8779:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 4820,
                        "name": "dst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4814,
                        "src": "8785:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8779:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4822,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4816,
                        "src": "8791:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 4823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8800:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8791:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8779:22:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4852,
                  "nodeType": "IfStatement",
                  "src": "8775:261:45",
                  "trueBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 4831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4826,
                        "name": "src",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4812,
                        "src": "8819:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8834:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8826:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4827,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8826:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8826:10:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8819:17:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 4851,
                    "nodeType": "IfStatement",
                    "src": "8815:221:45",
                    "trueBody": {
                      "id": 4850,
                      "nodeType": "Block",
                      "src": "8838:198:45",
                      "statements": [
                        {
                          "assignments": [
                            4833,
                            4835
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 4833,
                              "mutability": "mutable",
                              "name": "oldWeight",
                              "nameLocation": "8865:9:45",
                              "nodeType": "VariableDeclaration",
                              "scope": 4850,
                              "src": "8857:17:45",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 4832,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8857:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            },
                            {
                              "constant": false,
                              "id": 4835,
                              "mutability": "mutable",
                              "name": "newWeight",
                              "nameLocation": "8884:9:45",
                              "nodeType": "VariableDeclaration",
                              "scope": 4850,
                              "src": "8876:17:45",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 4834,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8876:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 4843,
                          "initialValue": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 4837,
                                  "name": "_checkpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4268,
                                  "src": "8914:12:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_$",
                                    "typeString": "mapping(address => struct gPHM.Checkpoint storage ref[] storage ref)"
                                  }
                                },
                                "id": 4839,
                                "indexExpression": {
                                  "id": 4838,
                                  "name": "src",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4812,
                                  "src": "8927:3:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8914:17:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage",
                                  "typeString": "struct gPHM.Checkpoint storage ref[] storage ref"
                                }
                              },
                              {
                                "id": 4840,
                                "name": "_subtract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5068,
                                "src": "8933:9:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              {
                                "id": 4841,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4816,
                                "src": "8944:6:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage",
                                  "typeString": "struct gPHM.Checkpoint storage ref[] storage ref"
                                },
                                {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4836,
                              "name": "_writeCheckpoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5040,
                              "src": "8897:16:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (struct gPHM.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"
                              }
                            },
                            "id": 4842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8897:54:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8856:95:45"
                        },
                        {
                          "eventCall": {
                            "arguments": [
                              {
                                "id": 4845,
                                "name": "src",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4812,
                                "src": "8995:3:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4846,
                                "name": "oldWeight",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4833,
                                "src": "9000:9:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4847,
                                "name": "newWeight",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4835,
                                "src": "9011:9:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4844,
                              "name": "DelegateVotesChanged",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17980,
                              "src": "8974:20:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (address,uint256,uint256)"
                              }
                            },
                            "id": 4848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8974:47:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 4849,
                          "nodeType": "EmitStatement",
                          "src": "8969:52:45"
                        }
                      ]
                    }
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4853,
                      "name": "dst",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4814,
                      "src": "9054:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9069:1:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9061:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4854,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9061:7:45",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9061:10:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9054:17:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4878,
                  "nodeType": "IfStatement",
                  "src": "9050:216:45",
                  "trueBody": {
                    "id": 4877,
                    "nodeType": "Block",
                    "src": "9073:193:45",
                    "statements": [
                      {
                        "assignments": [
                          4860,
                          4862
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4860,
                            "mutability": "mutable",
                            "name": "oldWeight",
                            "nameLocation": "9100:9:45",
                            "nodeType": "VariableDeclaration",
                            "scope": 4877,
                            "src": "9092:17:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4859,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9092:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 4862,
                            "mutability": "mutable",
                            "name": "newWeight",
                            "nameLocation": "9119:9:45",
                            "nodeType": "VariableDeclaration",
                            "scope": 4877,
                            "src": "9111:17:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4861,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9111:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4870,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 4864,
                                "name": "_checkpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4268,
                                "src": "9149:12:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct gPHM.Checkpoint storage ref[] storage ref)"
                                }
                              },
                              "id": 4866,
                              "indexExpression": {
                                "id": 4865,
                                "name": "dst",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4814,
                                "src": "9162:3:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9149:17:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage",
                                "typeString": "struct gPHM.Checkpoint storage ref[] storage ref"
                              }
                            },
                            {
                              "id": 4867,
                              "name": "_add",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5054,
                              "src": "9168:4:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            {
                              "id": 4868,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4816,
                              "src": "9174:6:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage",
                                "typeString": "struct gPHM.Checkpoint storage ref[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4863,
                            "name": "_writeCheckpoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5040,
                            "src": "9132:16:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (struct gPHM.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"
                            }
                          },
                          "id": 4869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9132:49:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9091:90:45"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 4872,
                              "name": "dst",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4814,
                              "src": "9225:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4873,
                              "name": "oldWeight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4860,
                              "src": "9230:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4874,
                              "name": "newWeight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4862,
                              "src": "9241:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4871,
                            "name": "DelegateVotesChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17980,
                            "src": "9204:20:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 4875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9204:47:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4876,
                        "nodeType": "EmitStatement",
                        "src": "9199:52:45"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 4880,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_moveDelegates",
            "nameLocation": "8661:14:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4812,
                  "mutability": "mutable",
                  "name": "src",
                  "nameLocation": "8693:3:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4880,
                  "src": "8685:11:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8685:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4814,
                  "mutability": "mutable",
                  "name": "dst",
                  "nameLocation": "8714:3:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4880,
                  "src": "8706:11:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8706:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4816,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8735:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4880,
                  "src": "8727:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8727:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8675:72:45"
            },
            "returnParameters": {
              "id": 4818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8765:0:45"
            },
            "scope": 5069,
            "src": "8652:620:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4945,
              "nodeType": "Block",
              "src": "9730:1350:45",
              "statements": [
                {
                  "assignments": [
                    4893
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4893,
                      "mutability": "mutable",
                      "name": "high",
                      "nameLocation": "10736:4:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 4945,
                      "src": "10728:12:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4892,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10728:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4896,
                  "initialValue": {
                    "expression": {
                      "id": 4894,
                      "name": "ckpts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4885,
                      "src": "10743:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr",
                        "typeString": "struct gPHM.Checkpoint storage ref[] storage pointer"
                      }
                    },
                    "id": 4895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "10743:12:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10728:27:45"
                },
                {
                  "assignments": [
                    4898
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4898,
                      "mutability": "mutable",
                      "name": "low",
                      "nameLocation": "10773:3:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 4945,
                      "src": "10765:11:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4897,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10765:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4900,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 4899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10779:1:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10765:15:45"
                },
                {
                  "body": {
                    "id": 4931,
                    "nodeType": "Block",
                    "src": "10809:210:45",
                    "statements": [
                      {
                        "assignments": [
                          4905
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4905,
                            "mutability": "mutable",
                            "name": "mid",
                            "nameLocation": "10831:3:45",
                            "nodeType": "VariableDeclaration",
                            "scope": 4931,
                            "src": "10823:11:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4904,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10823:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4911,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 4908,
                              "name": "low",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4898,
                              "src": "10850:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4909,
                              "name": "high",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4893,
                              "src": "10855:4:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4906,
                              "name": "Math",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17545,
                              "src": "10837:4:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Math_$17545_$",
                                "typeString": "type(library Math)"
                              }
                            },
                            "id": 4907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "average",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17519,
                            "src": "10837:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10837:23:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10823:37:45"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 4912,
                                "name": "ckpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4885,
                                "src": "10878:5:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr",
                                  "typeString": "struct gPHM.Checkpoint storage ref[] storage pointer"
                                }
                              },
                              "id": 4914,
                              "indexExpression": {
                                "id": 4913,
                                "name": "mid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4905,
                                "src": "10884:3:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10878:10:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$4277_storage",
                                "typeString": "struct gPHM.Checkpoint storage ref"
                              }
                            },
                            "id": 4915,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fromBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4274,
                            "src": "10878:20:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 4916,
                            "name": "blockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4887,
                            "src": "10901:11:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10878:34:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 4929,
                          "nodeType": "Block",
                          "src": "10963:46:45",
                          "statements": [
                            {
                              "expression": {
                                "id": 4927,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 4923,
                                  "name": "low",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4898,
                                  "src": "10981:3:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4926,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 4924,
                                    "name": "mid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4905,
                                    "src": "10987:3:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 4925,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10993:1:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "10987:7:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10981:13:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4928,
                              "nodeType": "ExpressionStatement",
                              "src": "10981:13:45"
                            }
                          ]
                        },
                        "id": 4930,
                        "nodeType": "IfStatement",
                        "src": "10874:135:45",
                        "trueBody": {
                          "id": 4922,
                          "nodeType": "Block",
                          "src": "10914:43:45",
                          "statements": [
                            {
                              "expression": {
                                "id": 4920,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 4918,
                                  "name": "high",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4893,
                                  "src": "10932:4:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 4919,
                                  "name": "mid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4905,
                                  "src": "10939:3:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10932:10:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4921,
                              "nodeType": "ExpressionStatement",
                              "src": "10932:10:45"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4901,
                      "name": "low",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4898,
                      "src": "10797:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 4902,
                      "name": "high",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4893,
                      "src": "10803:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10797:10:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4932,
                  "nodeType": "WhileStatement",
                  "src": "10790:229:45"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4933,
                        "name": "high",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4893,
                        "src": "11036:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 4934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11044:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "11036:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 4937,
                          "name": "ckpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4885,
                          "src": "11052:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr",
                            "typeString": "struct gPHM.Checkpoint storage ref[] storage pointer"
                          }
                        },
                        "id": 4941,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4938,
                            "name": "high",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4893,
                            "src": "11058:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 4939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11065:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "11058:8:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11052:15:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$4277_storage",
                          "typeString": "struct gPHM.Checkpoint storage ref"
                        }
                      },
                      "id": 4942,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "votes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4276,
                      "src": "11052:21:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      }
                    },
                    "id": 4943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "11036:37:45",
                    "trueExpression": {
                      "hexValue": "30",
                      "id": 4936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11048:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  },
                  "functionReturnParameters": 4891,
                  "id": 4944,
                  "nodeType": "Return",
                  "src": "11029:44:45"
                }
              ]
            },
            "documentation": {
              "id": 4881,
              "nodeType": "StructuredDocumentation",
              "src": "9544:73:45",
              "text": " @dev Lookup a value in a list of (sorted) checkpoints."
            },
            "id": 4946,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkpointsLookup",
            "nameLocation": "9631:18:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4885,
                  "mutability": "mutable",
                  "name": "ckpts",
                  "nameLocation": "9671:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4946,
                  "src": "9650:26:45",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr",
                    "typeString": "struct gPHM.Checkpoint[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4883,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4882,
                        "name": "Checkpoint",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4277,
                        "src": "9650:10:45"
                      },
                      "referencedDeclaration": 4277,
                      "src": "9650:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Checkpoint_$4277_storage_ptr",
                        "typeString": "struct gPHM.Checkpoint"
                      }
                    },
                    "id": 4884,
                    "nodeType": "ArrayTypeName",
                    "src": "9650:12:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr",
                      "typeString": "struct gPHM.Checkpoint[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4887,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "9686:11:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4946,
                  "src": "9678:19:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9678:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9649:49:45"
            },
            "returnParameters": {
              "id": 4891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4890,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4946,
                  "src": "9721:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9721:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9720:9:45"
            },
            "scope": 5069,
            "src": "9622:1458:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5039,
              "nodeType": "Block",
              "src": "11294:423:45",
              "statements": [
                {
                  "assignments": [
                    4970
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4970,
                      "mutability": "mutable",
                      "name": "pos",
                      "nameLocation": "11312:3:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 5039,
                      "src": "11304:11:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4969,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11304:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4973,
                  "initialValue": {
                    "expression": {
                      "id": 4971,
                      "name": "ckpts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4950,
                      "src": "11318:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr",
                        "typeString": "struct gPHM.Checkpoint storage ref[] storage pointer"
                      }
                    },
                    "id": 4972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "11318:12:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11304:26:45"
                },
                {
                  "expression": {
                    "id": 4986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4974,
                      "name": "oldWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4965,
                      "src": "11340:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4975,
                          "name": "pos",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4970,
                          "src": "11352:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11359:1:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11352:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 4979,
                            "name": "ckpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4950,
                            "src": "11367:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr",
                              "typeString": "struct gPHM.Checkpoint storage ref[] storage pointer"
                            }
                          },
                          "id": 4983,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4980,
                              "name": "pos",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4970,
                              "src": "11373:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 4981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11379:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11373:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11367:14:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$4277_storage",
                            "typeString": "struct gPHM.Checkpoint storage ref"
                          }
                        },
                        "id": 4984,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4276,
                        "src": "11367:20:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        }
                      },
                      "id": 4985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "11352:35:45",
                      "trueExpression": {
                        "hexValue": "30",
                        "id": 4978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11363:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      }
                    },
                    "src": "11340:47:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4987,
                  "nodeType": "ExpressionStatement",
                  "src": "11340:47:45"
                },
                {
                  "expression": {
                    "id": 4993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4988,
                      "name": "newWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4967,
                      "src": "11397:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4990,
                          "name": "oldWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4965,
                          "src": "11412:9:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4991,
                          "name": "delta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4962,
                          "src": "11423:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4989,
                        "name": "op",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4960,
                        "src": "11409:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 4992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11409:20:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11397:32:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4994,
                  "nodeType": "ExpressionStatement",
                  "src": "11397:32:45"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4995,
                        "name": "pos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4970,
                        "src": "11444:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 4996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11450:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "11444:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 4998,
                            "name": "ckpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4950,
                            "src": "11455:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr",
                              "typeString": "struct gPHM.Checkpoint storage ref[] storage pointer"
                            }
                          },
                          "id": 5002,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4999,
                              "name": "pos",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4970,
                              "src": "11461:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 5000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11467:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11461:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11455:14:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$4277_storage",
                            "typeString": "struct gPHM.Checkpoint storage ref"
                          }
                        },
                        "id": 5003,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fromBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4274,
                        "src": "11455:24:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 5004,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "11483:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 5005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "11483:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11455:40:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11444:51:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5037,
                    "nodeType": "Block",
                    "src": "11580:131:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 5027,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "11646:5:45",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 5028,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "number",
                                      "nodeType": "MemberAccess",
                                      "src": "11646:12:45",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 5025,
                                      "name": "SafeCast",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 17938,
                                      "src": "11628:8:45",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_SafeCast_$17938_$",
                                        "typeString": "type(library SafeCast)"
                                      }
                                    },
                                    "id": 5026,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toUint32",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17673,
                                    "src": "11628:17:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$",
                                      "typeString": "function (uint256) pure returns (uint32)"
                                    }
                                  },
                                  "id": 5029,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11628:31:45",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 5032,
                                      "name": "newWeight",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4967,
                                      "src": "11687:9:45",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 5030,
                                      "name": "SafeCast",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 17938,
                                      "src": "11668:8:45",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_SafeCast_$17938_$",
                                        "typeString": "type(library SafeCast)"
                                      }
                                    },
                                    "id": 5031,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toUint224",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17573,
                                    "src": "11668:18:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint224_$",
                                      "typeString": "function (uint256) pure returns (uint224)"
                                    }
                                  },
                                  "id": 5033,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11668:29:45",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint224",
                                    "typeString": "uint224"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint224",
                                    "typeString": "uint224"
                                  }
                                ],
                                "id": 5024,
                                "name": "Checkpoint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4277,
                                "src": "11605:10:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Checkpoint_$4277_storage_ptr_$",
                                  "typeString": "type(struct gPHM.Checkpoint storage pointer)"
                                }
                              },
                              "id": 5034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "fromBlock",
                                "votes"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "11605:94:45",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$4277_memory_ptr",
                                "typeString": "struct gPHM.Checkpoint memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Checkpoint_$4277_memory_ptr",
                                "typeString": "struct gPHM.Checkpoint memory"
                              }
                            ],
                            "expression": {
                              "id": 5021,
                              "name": "ckpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4950,
                              "src": "11594:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr",
                                "typeString": "struct gPHM.Checkpoint storage ref[] storage pointer"
                              }
                            },
                            "id": 5023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "11594:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$4277_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct gPHM.Checkpoint storage ref[] storage pointer,struct gPHM.Checkpoint storage ref)"
                            }
                          },
                          "id": 5035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11594:106:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5036,
                        "nodeType": "ExpressionStatement",
                        "src": "11594:106:45"
                      }
                    ]
                  },
                  "id": 5038,
                  "nodeType": "IfStatement",
                  "src": "11440:271:45",
                  "trueBody": {
                    "id": 5020,
                    "nodeType": "Block",
                    "src": "11497:77:45",
                    "statements": [
                      {
                        "expression": {
                          "id": 5018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 5008,
                                "name": "ckpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4950,
                                "src": "11511:5:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr",
                                  "typeString": "struct gPHM.Checkpoint storage ref[] storage pointer"
                                }
                              },
                              "id": 5012,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5011,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 5009,
                                  "name": "pos",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4970,
                                  "src": "11517:3:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 5010,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11523:1:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "11517:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11511:14:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$4277_storage",
                                "typeString": "struct gPHM.Checkpoint storage ref"
                              }
                            },
                            "id": 5013,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "votes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4276,
                            "src": "11511:20:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 5016,
                                "name": "newWeight",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4967,
                                "src": "11553:9:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 5014,
                                "name": "SafeCast",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17938,
                                "src": "11534:8:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_SafeCast_$17938_$",
                                  "typeString": "type(library SafeCast)"
                                }
                              },
                              "id": 5015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toUint224",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17573,
                              "src": "11534:18:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint224_$",
                                "typeString": "function (uint256) pure returns (uint224)"
                              }
                            },
                            "id": 5017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11534:29:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "src": "11511:52:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "id": 5019,
                        "nodeType": "ExpressionStatement",
                        "src": "11511:52:45"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 5040,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_writeCheckpoint",
            "nameLocation": "11095:16:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4950,
                  "mutability": "mutable",
                  "name": "ckpts",
                  "nameLocation": "11142:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 5040,
                  "src": "11121:26:45",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr",
                    "typeString": "struct gPHM.Checkpoint[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4948,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4947,
                        "name": "Checkpoint",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4277,
                        "src": "11121:10:45"
                      },
                      "referencedDeclaration": 4277,
                      "src": "11121:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Checkpoint_$4277_storage_ptr",
                        "typeString": "struct gPHM.Checkpoint"
                      }
                    },
                    "id": 4949,
                    "nodeType": "ArrayTypeName",
                    "src": "11121:12:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4277_storage_$dyn_storage_ptr",
                      "typeString": "struct gPHM.Checkpoint[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4960,
                  "mutability": "mutable",
                  "name": "op",
                  "nameLocation": "11207:2:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 5040,
                  "src": "11157:52:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                    "typeString": "function (uint256,uint256) view returns (uint256)"
                  },
                  "typeName": {
                    "id": 4959,
                    "nodeType": "FunctionTypeName",
                    "parameterTypes": {
                      "id": 4955,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 4952,
                          "mutability": "mutable",
                          "name": "",
                          "nameLocation": "-1:-1:-1",
                          "nodeType": "VariableDeclaration",
                          "scope": 4959,
                          "src": "11166:7:45",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 4951,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11166:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 4954,
                          "mutability": "mutable",
                          "name": "",
                          "nameLocation": "-1:-1:-1",
                          "nodeType": "VariableDeclaration",
                          "scope": 4959,
                          "src": "11175:7:45",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 4953,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11175:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "11165:18:45"
                    },
                    "returnParameterTypes": {
                      "id": 4958,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 4957,
                          "mutability": "mutable",
                          "name": "",
                          "nameLocation": "-1:-1:-1",
                          "nodeType": "VariableDeclaration",
                          "scope": 4959,
                          "src": "11198:7:45",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 4956,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11198:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "11197:9:45"
                    },
                    "src": "11157:52:45",
                    "stateMutability": "view",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                      "typeString": "function (uint256,uint256) view returns (uint256)"
                    },
                    "visibility": "internal"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4962,
                  "mutability": "mutable",
                  "name": "delta",
                  "nameLocation": "11227:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 5040,
                  "src": "11219:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11219:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11111:127:45"
            },
            "returnParameters": {
              "id": 4968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4965,
                  "mutability": "mutable",
                  "name": "oldWeight",
                  "nameLocation": "11264:9:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 5040,
                  "src": "11256:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11256:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4967,
                  "mutability": "mutable",
                  "name": "newWeight",
                  "nameLocation": "11283:9:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 5040,
                  "src": "11275:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4966,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11275:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11255:38:45"
            },
            "scope": 5069,
            "src": "11086:631:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5053,
              "nodeType": "Block",
              "src": "11790:29:45",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5049,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5042,
                      "src": "11807:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 5050,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5044,
                      "src": "11811:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11807:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5048,
                  "id": 5052,
                  "nodeType": "Return",
                  "src": "11800:12:45"
                }
              ]
            },
            "id": 5054,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_add",
            "nameLocation": "11732:4:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5042,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "11745:1:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 5054,
                  "src": "11737:9:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5041,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11737:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5044,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "11756:1:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 5054,
                  "src": "11748:9:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11748:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11736:22:45"
            },
            "returnParameters": {
              "id": 5048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5047,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5054,
                  "src": "11781:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11781:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11780:9:45"
            },
            "scope": 5069,
            "src": "11723:96:45",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5067,
              "nodeType": "Block",
              "src": "11897:29:45",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5063,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5056,
                      "src": "11914:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 5064,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5058,
                      "src": "11918:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11914:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5062,
                  "id": 5066,
                  "nodeType": "Return",
                  "src": "11907:12:45"
                }
              ]
            },
            "id": 5068,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_subtract",
            "nameLocation": "11834:9:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5056,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "11852:1:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 5068,
                  "src": "11844:9:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11844:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5058,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "11863:1:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 5068,
                  "src": "11855:9:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11855:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11843:22:45"
            },
            "returnParameters": {
              "id": 5062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5061,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5068,
                  "src": "11888:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11888:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11887:9:45"
            },
            "scope": 5069,
            "src": "11825:101:45",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 5070,
        "src": "636:11292:45",
        "usedErrors": [
          22610,
          22614,
          22618,
          23559,
          23566
        ]
      }
    ],
    "src": "35:11894:45"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "gPHM",
  "coverageMap": {
    "branches": {
      "101": {},
      "11": {},
      "13": {},
      "17": {},
      "28": {},
      "29": {
        "SafeCast.toUint224": {
          "137": [
            1160,
            1186,
            true
          ]
        },
        "SafeCast.toUint32": {
          "136": [
            3068,
            3093,
            true
          ]
        }
      },
      "30": {
        "PRBMath.mulDiv": {
          "128": [
            15860,
            15870,
            false
          ],
          "129": [
            16092,
            16112,
            false
          ]
        },
        "PRBMath.mulDivFixedPoint": {
          "130": [
            20498,
            20512,
            false
          ],
          "131": [
            20792,
            20802,
            false
          ]
        }
      },
      "32": {},
      "42": {
        "ERC20.DOMAIN_SEPARATOR": {
          "124": [
            5084,
            5117,
            true
          ]
        },
        "ERC20.permit": {
          "125": [
            4200,
            4227,
            true
          ],
          "126": [
            4784,
            4814,
            false
          ],
          "127": [
            4818,
            4843,
            true
          ]
        },
        "ERC20.transferFrom": {
          "123": [
            3346,
            3394,
            false
          ]
        }
      },
      "45": {
        "gPHM._afterTokenTransfer": {
          "104": [
            6353,
            6376,
            false
          ],
          "105": [
            6400,
            6418,
            true
          ],
          "106": [
            6422,
            6438,
            true
          ],
          "107": [
            6488,
            6517,
            false
          ],
          "108": [
            6521,
            6537,
            false
          ],
          "109": [
            6578,
            6634,
            true
          ]
        },
        "gPHM._checkpointsLookup": {
          "110": [
            10878,
            10912,
            false
          ],
          "111": [
            11036,
            11045,
            true
          ]
        },
        "gPHM._delegate": {
          "113": [
            8238,
            8260,
            false
          ],
          "114": [
            8264,
            8287,
            false
          ],
          "115": [
            8311,
            8349,
            true
          ]
        },
        "gPHM._mint": {
          "112": [
            7079,
            7113,
            true
          ]
        },
        "gPHM._moveDelegates": {
          "116": [
            8779,
            8788,
            false
          ],
          "117": [
            8791,
            8801,
            false
          ],
          "118": [
            8819,
            8836,
            false
          ],
          "119": [
            9054,
            9071,
            false
          ]
        },
        "gPHM._writeCheckpoint": {
          "120": [
            11352,
            11360,
            true
          ],
          "121": [
            11444,
            11451,
            false
          ],
          "122": [
            11455,
            11495,
            false
          ]
        },
        "gPHM.delegateBySig": {
          "101": [
            3344,
            3367,
            true
          ],
          "102": [
            3602,
            3630,
            true
          ],
          "103": [
            3677,
            3702,
            true
          ]
        },
        "gPHM.delegates": {
          "98": [
            2448,
            2469,
            true
          ]
        },
        "gPHM.getPastTotalSupply": {
          "99": [
            4634,
            4660,
            true
          ]
        },
        "gPHM.getPastVotes": {
          "97": [
            4101,
            4127,
            true
          ]
        },
        "gPHM.getVotes": {
          "100": [
            2835,
            2843,
            true
          ]
        }
      },
      "68": {
        "PhantomStorageMixin.PhantomStorage": {
          "132": [
            8008,
            8027,
            false
          ],
          "133": [
            8143,
            8239,
            false
          ],
          "134": [
            8525,
            8621,
            true
          ],
          "135": [
            8645,
            8688,
            false
          ]
        }
      },
      "75": {},
      "81": {},
      "84": {}
    },
    "statements": {
      "101": {},
      "11": {},
      "13": {},
      "17": {},
      "28": {
        "Math.average": {
          "78": [
            726,
            754
          ]
        }
      },
      "29": {
        "SafeCast.toUint224": {
          "96": [
            1152,
            1230
          ]
        },
        "SafeCast.toUint32": {
          "58": [
            3060,
            3136
          ],
          "59": [
            3146,
            3166
          ]
        }
      },
      "30": {
        "PRBMath.mulDiv": {
          "63": [
            15914,
            15942
          ],
          "64": [
            15970,
            15983
          ],
          "65": [
            16088,
            16189
          ],
          "66": [
            18174,
            18210
          ],
          "67": [
            18243,
            18279
          ],
          "68": [
            18313,
            18349
          ],
          "69": [
            18383,
            18419
          ],
          "70": [
            18453,
            18489
          ],
          "71": [
            18524,
            18560
          ],
          "72": [
            17576,
            17600
          ],
          "73": [
            18994,
            19018
          ]
        },
        "PRBMath.mulDivFixedPoint": {
          "93": [
            20494,
            20586
          ],
          "94": [
            20846,
            20884
          ],
          "95": [
            20902,
            20915
          ]
        }
      },
      "32": {
        "PRBMathUD60x18.div": {
          "43": [
            3923,
            3959
          ]
        },
        "PRBMathUD60x18.mul": {
          "62": [
            21354,
            21393
          ]
        }
      },
      "42": {
        "ERC20.DOMAIN_SEPARATOR": {
          "12": [
            5077,
            5171
          ]
        },
        "ERC20._burn": {
          "88": [
            6290,
            6316
          ],
          "89": [
            6459,
            6481
          ],
          "90": [
            6502,
            6541
          ],
          "91": [
            6552,
            6597
          ]
        },
        "ERC20._mint": {
          "79": [
            5901,
            5923
          ],
          "80": [
            6069,
            6093
          ],
          "81": [
            6114,
            6151
          ],
          "82": [
            6162,
            6205
          ]
        },
        "ERC20.approve": {
          "2": [
            2628,
            2667
          ],
          "3": [
            2678,
            2720
          ],
          "4": [
            2731,
            2742
          ]
        },
        "ERC20.balanceOf": {
          "1": [
            2493,
            2516
          ]
        },
        "ERC20.computeDomainSeparator": {
          "47": [
            5268,
            5630
          ]
        },
        "ERC20.permit": {
          "35": [
            4192,
            4255
          ],
          "36": [
            4776,
            4872
          ],
          "37": [
            4887,
            4931
          ],
          "38": [
            4952,
            4988
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            2371,
            2390
          ]
        },
        "ERC20.transfer": {
          "24": [
            2850,
            2882
          ],
          "25": [
            3028,
            3052
          ],
          "26": [
            3073,
            3110
          ],
          "27": [
            3121,
            3164
          ],
          "28": [
            3175,
            3186
          ]
        },
        "ERC20.transferFrom": {
          "6": [
            3410,
            3447
          ],
          "7": [
            3468,
            3494
          ],
          "8": [
            3640,
            3664
          ],
          "9": [
            3685,
            3716
          ],
          "10": [
            3727,
            3764
          ],
          "11": [
            3775,
            3786
          ]
        }
      },
      "45": {
        "gPHM._add": {
          "83": [
            11800,
            11812
          ]
        },
        "gPHM._addApprovedDelegatee": {
          "40": [
            8100,
            8137
          ]
        },
        "gPHM._afterTokenTransfer": {
          "44": [
            6392,
            6467
          ],
          "45": [
            6553,
            6724
          ],
          "46": [
            6799,
            6853
          ]
        },
        "gPHM._burn": {
          "60": [
            7527,
            7555
          ],
          "61": [
            7566,
            7626
          ]
        },
        "gPHM._checkpointsLookup": {
          "48": [
            10932,
            10942
          ],
          "49": [
            10981,
            10994
          ],
          "50": [
            11029,
            11073
          ]
        },
        "gPHM._delegate": {
          "54": [
            8303,
            8382
          ],
          "55": [
            8460,
            8493
          ],
          "56": [
            8504,
            8569
          ],
          "57": [
            8580,
            8639
          ]
        },
        "gPHM._mint": {
          "51": [
            7033,
            7061
          ],
          "52": [
            7071,
            7166
          ],
          "53": [
            7177,
            7232
          ]
        },
        "gPHM._moveDelegates": {
          "76": [
            8969,
            9021
          ],
          "77": [
            9199,
            9251
          ]
        },
        "gPHM._subtract": {
          "92": [
            11907,
            11919
          ]
        },
        "gPHM._writeCheckpoint": {
          "84": [
            11340,
            11387
          ],
          "85": [
            11397,
            11429
          ],
          "86": [
            11511,
            11563
          ],
          "87": [
            11594,
            11700
          ]
        },
        "gPHM.addApprovedDelegatee": {
          "39": [
            1980,
            2012
          ]
        },
        "gPHM.balanceFromPHM": {
          "5": [
            5348,
            5389
          ]
        },
        "gPHM.balanceToPHM": {
          "34": [
            5037,
            5078
          ]
        },
        "gPHM.burn": {
          "23": [
            7729,
            7751
          ]
        },
        "gPHM.checkpoints": {
          "41": [
            5581,
            5614
          ]
        },
        "gPHM.delegate": {
          "18": [
            2566,
            2598
          ]
        },
        "gPHM.delegateBySig": {
          "30": [
            3336,
            3384
          ],
          "31": [
            3594,
            3648
          ],
          "32": [
            3669,
            3724
          ],
          "33": [
            3735,
            3766
          ]
        },
        "gPHM.delegates": {
          "17": [
            2436,
            2491
          ]
        },
        "gPHM.enableTransfers": {
          "29": [
            1798,
            1821
          ]
        },
        "gPHM.getPastTotalSupply": {
          "20": [
            4626,
            4696
          ],
          "21": [
            4706,
            4769
          ]
        },
        "gPHM.getPastVotes": {
          "13": [
            4093,
            4163
          ],
          "14": [
            4173,
            4234
          ]
        },
        "gPHM.getVotes": {
          "22": [
            2828,
            2886
          ]
        },
        "gPHM.mint": {
          "16": [
            7330,
            7347
          ]
        },
        "gPHM.numCheckpoints": {
          "19": [
            5784,
            5838
          ]
        }
      },
      "68": {
        "PhantomStorageMixin.PHM": {
          "75": [
            3702,
            3776
          ]
        },
        "PhantomStorageMixin.PhantomStorage": {
          "15": [
            2447,
            2486
          ]
        },
        "PhantomStorageMixin.PhantomVault": {
          "74": [
            5716,
            5801
          ]
        },
        "PhantomStorageMixin.sPHM": {
          "42": [
            3845,
            3921
          ]
        }
      },
      "75": {},
      "81": {},
      "84": {}
    }
  },
  "dependencies": [
    "ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20Permit",
    "IPhantomERC20",
    "IPhantomStorageMixin",
    "IgPHM",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Math",
    "hifi-finance/prb-math@2.4.1/PRBMath",
    "hifi-finance/prb-math@2.4.1/PRBMathUD60x18",
    "PhantomStorageKeys",
    "PhantomStorageMixin",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/SafeCast"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101da5760003560e01c80637ecebe0011610104578063c3cda520116100a2578063dd62ed3e11610071578063dd62ed3e1461046f578063df8354461461049a578063e7a324dc146104ad578063f1127ed8146104d457600080fd5b8063c3cda52014610416578063cca3e83214610429578063d4ff9a2c14610449578063d505accf1461045c57600080fd5b80639ab24eb0116100de5780639ab24eb0146103d55780639dc29fac146103e8578063a9059cbb146103fb578063af35c6c71461040e57600080fd5b80637ecebe001461039a5780638e539e8c146103ba57806395d89b41146103cd57600080fd5b80633644e5151161017c578063587cde1e1161014b578063587cde1e1461030b5780635c19a95c146103365780636fcfff451461034957806370a082311461037157600080fd5b80633644e515146102b85780633a46b1a8146102c05780633cead841146102d357806340c10f19146102f657600080fd5b8063223966ed116101b8578063223966ed1461023257806323b872dd1461024557806330adf81f14610258578063313ce5671461027f57600080fd5b806306fdde03146101df578063095ea7b3146101fd57806318160ddd14610220575b600080fd5b6101e7610511565b6040516101f491906126b1565b60405180910390f35b61021061020b36600461271b565b61059f565b60405190151581526020016101f4565b6002545b6040519081526020016101f4565b610224610240366004612747565b61060c565b610210610253366004612760565b610681565b6102247f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6102a67f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016101f4565b610224610775565b6102246102ce36600461271b565b6107d0565b6102106102e13660046127a1565b60526020526000908152604090205460ff1681565b61030961030436600461271b565b610848565b005b61031e6103193660046127a1565b610ae4565b6040516001600160a01b0390911681526020016101f4565b6103096103443660046127a1565b610b14565b61035c6103573660046127a1565b610b21565b60405163ffffffff90911681526020016101f4565b61022461037f3660046127a1565b6001600160a01b031660009081526003602052604090205490565b6102246103a83660046127a1565b60056020526000908152604090205481565b6102246103c8366004612747565b610b43565b6101e7610b9f565b6102246103e33660046127a1565b610bac565b6103096103f636600461271b565b610c33565b61021061040936600461271b565b610eca565b610309610f4c565b6103096104243660046127d4565b6111e6565b6102246104373660046127a1565b60036020526000908152604090205481565b610224610457366004612747565b6113ec565b61030961046a36600461282e565b611461565b61022461047d36600461289c565b600460209081526000928352604080842090915290825290205481565b6103096104a83660046127a1565b6116c1565b6102247fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b6104e76104e23660046128d5565b61197a565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016101f4565b6000805461051e9061290c565b80601f016020809104026020016040519081016040528092919081815260200182805461054a9061290c565b80156105975780601f1061056c57610100808354040283529160200191610597565b820191906000526020600020905b81548152906001019060200180831161057a57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105fa9086815260200190565b60405180910390a35060015b92915050565b60006106066106196119fe565b6001600160a01b031663ed3437f86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067a9190612947565b8390611a98565b6001600160a01b0383166000908152600460209081526040808320338452909152812054600019146106e6576001600160a01b0384166000908152600460209081526040808320338452909152812080548492906106e0908490612976565b90915550505b6001600160a01b0384166000908152600360205260408120805484929061070e908490612976565b90915550506001600160a01b0380841660008181526003602052604090819020805486019055519091861690600080516020612b1b833981519152906107579086815260200190565b60405180910390a361076a848484611aad565b5060015b9392505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146107ab576107a6611ccc565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b60004382106108265760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b038316600090815260546020526040902061076e9083611d7b565b600061085c604f546001600160a01b031690565b6001600160a01b0316631bed52416040518163ffffffff1660e01b8152600401602060405180830381865afa158015610899573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bd919061298d565b90506001811515141561098e57604f546001600160a01b03166001600160a01b0316637ae1cfca336040516020016108f591906129af565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161092991815260200190565b602060405180830381865afa158015610946573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096a919061298d565b6109895760405163372463e360e01b815233600482015260240161081d565b610ad5565b604f546001600160a01b03166001600160a01b0316637ae1cfca336040516020016109b991906129af565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016109ed91815260200190565b602060405180830381865afa158015610a0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2e919061298d565b80610ab65750604f546001600160a01b03166001600160a01b031663a75b87d26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa191906129f2565b6001600160a01b0316326001600160a01b0316145b610ad55760405163372463e360e01b815233600482015260240161081d565b610adf8383611e38565b505050565b6001600160a01b038082166000908152605360205260408120549091168015610b0d578061076e565b5090919050565b610b1e3382611ece565b50565b6001600160a01b03811660009081526054602052604081205461060690612002565b6000438210610b945760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604482015260640161081d565b610606605583611d7b565b6001805461051e9061290c565b6001600160a01b0381166000908152605460205260408120548015610c20576001600160a01b0383166000908152605460205260409020610bee600183612976565b81548110610bfe57610bfe612a0f565b60009182526020909120015464010000000090046001600160e01b0316610c23565b60005b6001600160e01b03169392505050565b6000610c47604f546001600160a01b031690565b6001600160a01b0316631bed52416040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca8919061298d565b905060018115151415610d7957604f546001600160a01b03166001600160a01b0316637ae1cfca33604051602001610ce091906129af565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610d1491815260200190565b602060405180830381865afa158015610d31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d55919061298d565b610d745760405163372463e360e01b815233600482015260240161081d565b610ec0565b604f546001600160a01b03166001600160a01b0316637ae1cfca33604051602001610da491906129af565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610dd891815260200190565b602060405180830381865afa158015610df5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e19919061298d565b80610ea15750604f546001600160a01b03166001600160a01b031663a75b87d26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8c91906129f2565b6001600160a01b0316326001600160a01b0316145b610ec05760405163372463e360e01b815233600482015260240161081d565b610adf838361206b565b33600090815260036020526040812080548391908390610eeb908490612976565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020612b1b83398151915290610f309086815260200190565b60405180910390a3610f43338484611aad565b50600192915050565b6000610f60604f546001600160a01b031690565b6001600160a01b0316631bed52416040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc1919061298d565b90506001811515141561109257604f546001600160a01b03166001600160a01b0316637ae1cfca33604051602001610ff991906129af565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161102d91815260200190565b602060405180830381865afa15801561104a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106e919061298d565b61108d5760405163372463e360e01b815233600482015260240161081d565b6111d9565b604f546001600160a01b03166001600160a01b0316637ae1cfca336040516020016110bd91906129af565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016110f191815260200190565b602060405180830381865afa15801561110e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611132919061298d565b806111ba5750604f546001600160a01b03166001600160a01b031663a75b87d26040518163ffffffff1660e01b8152600401602060405180830381865afa158015611181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a591906129f2565b6001600160a01b0316326001600160a01b0316145b6111d95760405163372463e360e01b815233600482015260240161081d565b506051805460ff19169055565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b03881691810191909152606081018690526080810185905260009060a0016040516020818303038152906040528051906020012090506000611257610775565b60405161190160f01b602082015260228101919091526042810183905260620160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa1580156112e2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166113345760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015260640161081d565b6001600160a01b038116600090815260056020526040902080546001810190915588146113935760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f4e4f4e434560981b604482015260640161081d565b864211156113d75760405162461bcd60e51b815260206004820152601160248201527014d251d3905515549157d1561412549151607a1b604482015260640161081d565b6113e1818a611ece565b505050505050505050565b60006106066113f96119fe565b6001600160a01b031663ed3437f86040518163ffffffff1660e01b8152600401602060405180830381865afa158015611436573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145a9190612947565b8390612083565b428410156114b15760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f45585049524544000000000000000000604482015260640161081d565b60006114bb610775565b6001600160a01b0389811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938c166060840152608083018b905260a083019390935260c08083018a90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156115d4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061160a5750886001600160a01b0316816001600160a01b0316145b6116565760405162461bcd60e51b815260206004820152601860248201527f494e56414c49445f5045524d49545f5349474e41545552450000000000000000604482015260640161081d565b6001600160a01b0390811660009081526004602090815260408083208b8516808552908352928190208a905551898152919350918a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60006116d5604f546001600160a01b031690565b6001600160a01b0316631bed52416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611712573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611736919061298d565b90506001811515141561180757604f546001600160a01b03166001600160a01b0316637ae1cfca3360405160200161176e91906129af565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016117a291815260200190565b602060405180830381865afa1580156117bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e3919061298d565b6118025760405163372463e360e01b815233600482015260240161081d565b61194e565b604f546001600160a01b03166001600160a01b0316637ae1cfca3360405160200161183291906129af565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161186691815260200190565b602060405180830381865afa158015611883573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a7919061298d565b8061192f5750604f546001600160a01b03166001600160a01b031663a75b87d26040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191a91906129f2565b6001600160a01b0316326001600160a01b0316145b61194e5760405163372463e360e01b815233600482015260240161081d565b611976826001600160a01b03166000908152605260205260409020805460ff19166001179055565b5050565b60408051808201909152600080825260208201526001600160a01b0383166000908152605460205260409020805463ffffffff84169081106119be576119be612a0f565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6000611a12604f546001600160a01b031690565b6001600160a01b03166321f8a7216009600001600601604051611a359190612abe565b60405190819003812060e083901b6001600160e01b03191682526004820152602401602060405180830381865afa158015611a74573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a691906129f2565b600061076e83670de0b6b3a76400008461208f565b60515460ff16151560011415611b2b576001600160a01b0383161580611ada57506001600160a01b038216155b611b265760405162461bcd60e51b815260206004820152601860248201527f6750484d206973206e6f74207472616e7366657261626c650000000000000000604482015260640161081d565b611cb1565b611b3361215d565b6001600160a01b0316826001600160a01b031614158015611b5c57506001600160a01b03821615155b15611cb157611b69612194565b6001600160a01b03166301ba79116040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ba6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bca9190612947565b611bd2612194565b60405163acc9d9df60e01b81526001600160a01b038581166004830152919091169063acc9d9df90602401602060405180830381865afa158015611c1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c3e9190612947565b10611cb15760405162461bcd60e51b815260206004820152603860248201527f6750484d207472616e7366657220626c6f636b65642064756520746f206f776e60448201527f696e67206f76657220342e373625206f6620737570706c790000000000000000606482015260840161081d565b610adf611cbd84610ae4565b611cc684610ae4565b836121cb565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051611cfe9190612abe565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8154600090815b81811015611ddf576000611d968284612308565b905084868281548110611dab57611dab612a0f565b60009182526020909120015463ffffffff161115611dcb57809250611dd9565b611dd6816001612aca565b91505b50611d82565b8115611e235784611df1600184612976565b81548110611e0157611e01612a0f565b60009182526020909120015464010000000090046001600160e01b0316611e26565b60005b6001600160e01b031695945050505050565b611e428282612323565b6001600160e01b03611e5360025490565b1115611eba5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b606482015260840161081d565b611ec8605561238483612390565b50505050565b806001600160a01b0316826001600160a01b031614158015611ef857506001600160a01b03811615155b15611f6a576001600160a01b03811660009081526052602052604090205460ff161515600114611f6a5760405162461bcd60e51b815260206004820152601c60248201527f43616e27742064656c65746167746520746f2064656c65676174656500000000604482015260640161081d565b6001600160a01b03808316600090815260536020908152604080832080548686166001600160a01b0319821617909155600390925290912054911690611fb390829084906121cb565b816001600160a01b0316816001600160a01b0316846001600160a01b03167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a4505050565b600063ffffffff8211156120675760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840161081d565b5090565b6120758282612509565b611ec8605561257a83612390565b600061076e8383612586565b6000808060001985870985870292508281108382030391505080600014156120ca578382816120c0576120c0612ae2565b049250505061076e565b8381106120f457604051631dcf306360e21b8152600481018290526024810185905260440161081d565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000612171604f546001600160a01b031690565b6001600160a01b03166321f8a7216009600001600a01604051611a359190612abe565b60006121a8604f546001600160a01b031690565b6001600160a01b03166321f8a7216009600001600501604051611a359190612abe565b816001600160a01b0316836001600160a01b0316141580156121ed5750600081115b1561227b576001600160a01b0383161561227b576001600160a01b038316600090815260546020526040812081906122289061257a85612390565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612270929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610adf576001600160a01b038216600090815260546020526040812081906122b19061238485612390565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516122f9929190918252602082015260400190565b60405180910390a25050505050565b60006123176002848418612af8565b61076e90848416612aca565b80600260008282546123359190612aca565b90915550506001600160a01b038216600081815260036020908152604080832080548601905551848152600080516020612b1b833981519152910160405180910390a361197660008383611aad565b600061076e8284612aca565b8254600090819080156123db57856123a9600183612976565b815481106123b9576123b9612a0f565b60009182526020909120015464010000000090046001600160e01b03166123de565b60005b6001600160e01b031692506123f783858763ffffffff16565b915060008111801561243557504386612411600184612976565b8154811061242157612421612a0f565b60009182526020909120015463ffffffff16145b156124955761244382612648565b8661244f600184612976565b8154811061245f5761245f612a0f565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550612500565b8560405180604001604052806124aa43612002565b63ffffffff1681526020016124be85612648565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b6001600160a01b03821660009081526003602052604081208054839290612531908490612976565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020612b1b8339815191529060200160405180910390a361197682600083611aad565b600061076e8284612976565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106125ca5760405163698d9a0160e11b81526004810182905260240161081d565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826126045780670de0b6b3a7640000850401945050505050610606565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b60006001600160e01b038211156120675760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840161081d565b600060208083528351808285015260005b818110156126de578581018301518582016040015282016126c2565b818111156126f0576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610b1e57600080fd5b6000806040838503121561272e57600080fd5b823561273981612706565b946020939093013593505050565b60006020828403121561275957600080fd5b5035919050565b60008060006060848603121561277557600080fd5b833561278081612706565b9250602084013561279081612706565b929592945050506040919091013590565b6000602082840312156127b357600080fd5b813561076e81612706565b803560ff811681146127cf57600080fd5b919050565b60008060008060008060c087890312156127ed57600080fd5b86356127f881612706565b95506020870135945060408701359350612814606088016127be565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561284957600080fd5b873561285481612706565b9650602088013561286481612706565b95506040880135945060608801359350612880608089016127be565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156128af57600080fd5b82356128ba81612706565b915060208301356128ca81612706565b809150509250929050565b600080604083850312156128e857600080fd5b82356128f381612706565b9150602083013563ffffffff811681146128ca57600080fd5b600181811c9082168061292057607f821691505b6020821081141561294157634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561295957600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561298857612988612960565b500390565b60006020828403121561299f57600080fd5b8151801515811461076e57600080fd5b7f7068616e746f6d2e636f6e74726163742e726567697374657265640000000000815260609190911b6bffffffffffffffffffffffff1916601b820152602f0190565b600060208284031215612a0457600080fd5b815161076e81612706565b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c9080831680612a3f57607f831692505b6020808410821415612a6157634e487b7160e01b600052602260045260246000fd5b818015612a755760018114612a8657612ab2565b60ff19861689528489019650612ab2565b876000528160002060005b86811015612aaa5781548b820152908501908301612a91565b505084890196505b50505050505092915050565b600061076e8284612a25565b60008219821115612add57612add612960565b500190565b634e487b7160e01b600052601260045260246000fd5b600082612b1557634e487b7160e01b600052601260045260246000fd5b50049056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220cde97c0066aebcce06ed9e156491364835e10155c6e5a744ccc677b46fe2636d64736f6c634300080a0033",
  "deployedSourceMap": "636:11292:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;703:18:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2529:220;;;;;;:::i;:::-;;:::i;:::-;;;1237:14:104;;1230:22;1212:41;;1200:2;1185:18;2529:220:42;1072:187:104;2291:106:42;2378:12;;2291:106;;;1410:25:104;;;1398:2;1383:18;2291:106:42;1264:177:104;5268:128:45;;;;;;:::i;:::-;;:::i;3199:594:42:-;;;;;;:::i;:::-;;:::i;1320:145::-;;1370:95;1320:145;;755:31;;;;;;;;2446:4:104;2434:17;;;2416:36;;2404:2;2389:18;755:31:42;2274:184:104;5001:177:42;;;:::i;3970:271:45:-;;;;;;:::i;:::-;;:::i;1073:51::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7245:109;;;;;;:::i;:::-;;:::i;:::-;;2290:208;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2879:32:104;;;2861:51;;2849:2;2834:18;2290:208:45;2715:203:104;2504:101:45;;;;;;:::i;:::-;;:::i;5696:149::-;;;;;;:::i;:::-;;:::i;:::-;;;3097:10:104;3085:23;;;3067:42;;3055:2;3040:18;5696:149:45;2923:192:104;2403:120:42;;;;;;:::i;:::-;-1:-1:-1;;;;;2500:16:42;2474:7;2500:16;;;:10;:16;;;;;;;2403:120;1580:41;;;;;;:::i;:::-;;;;;;;;;;;;;;4520:256:45;;;;;;:::i;:::-;;:::i;728:20:42:-;;;:::i;2684:209:45:-;;;;;;:::i;:::-;;:::i;7639:119::-;;;;;;:::i;:::-;;:::i;2755:438:42:-;;;;;;:::i;:::-;;:::i;1728:100:45:-;;;:::i;2899:874::-;;;;;;:::i;:::-;;:::i;1013:45:42:-;;;;;;:::i;:::-;;;;;;;;;;;;;;4959:126:45;;;;;;:::i;:::-;;:::i;3984:1011:42:-;;;;;;:::i;:::-;;:::i;1065:64::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1888:131:45;;;;;;:::i;:::-;;:::i;941:125::-;;995:71;941:125;;5473:148;;;;;;:::i;:::-;;:::i;:::-;;;;5658:13:104;;5673:10;5654:30;5636:49;;5745:4;5733:17;;;5727:24;-1:-1:-1;;;;;5723:50:104;5701:20;;;5694:80;;;;5609:18;5473:148:45;5434:346:104;703:18:42;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2529:220::-;2638:10;2612:4;2628:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;2628:30:42;;;;;;;;;;:39;;;2683:37;2612:4;;2628:30;;2683:37;;;;2661:6;1410:25:104;;1398:2;1383:18;;1264:177;2683:37:42;;;;;;;;-1:-1:-1;2738:4:42;2529:220;;;;;:::o;5268:128:45:-;5329:7;5355:34;5366:6;:4;:6::i;:::-;-1:-1:-1;;;;;5366:20:45;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5355:6;;:10;:34::i;3199:594:42:-;-1:-1:-1;;;;;3346:15:42;;3326:4;3346:15;;;:9;:15;;;;;;;;3362:10;3346:27;;;;;;;;-1:-1:-1;;3346:48:42;3342:116;;-1:-1:-1;;;;;3410:15:42;;;;;;:9;:15;;;;;;;;3426:10;3410:27;;;;;;;:37;;3441:6;;3410:15;:37;;3441:6;;3410:37;:::i;:::-;;;;-1:-1:-1;;3342:116:42;-1:-1:-1;;;;;3468:16:42;;;;;;:10;:16;;;;;:26;;3488:6;;3468:16;:26;;3488:6;;3468:26;:::i;:::-;;;;-1:-1:-1;;;;;;;3640:14:42;;;;;;;:10;:14;;;;;;;:24;;;;;;3690:26;3640:14;;3690:26;;;-1:-1:-1;;;;;;;;;;;3690:26:42;;;3658:6;1410:25:104;;1398:2;1383:18;;1264:177;3690:26:42;;;;;;;;3727:37;3747:4;3753:2;3757:6;3727:19;:37::i;:::-;-1:-1:-1;3782:4:42;3199:594;;;;;;:::o;5001:177::-;5058:7;5101:16;5084:13;:33;:87;;5147:24;:22;:24::i;:::-;5077:94;;5001:177;:::o;5084:87::-;-1:-1:-1;5120:24:42;;5001:177::o;3970:271:45:-;4068:13;4115:12;4101:11;:26;4093:70;;;;-1:-1:-1;;;4093:70:45;;6823:2:104;4093:70:45;;;6805:21:104;6862:2;6842:18;;;6835:30;6901:33;6881:18;;;6874:61;6952:18;;4093:70:45;;;;;;;;;-1:-1:-1;;;;;4199:21:45;;;;;;:12;:21;;;;;4180:54;;4222:11;4180:18;:54::i;7245:109::-;7939:16:68;7958;2470:15;;-1:-1:-1;;;;;2470:15:68;;2371:122;7958:16;-1:-1:-1;;;;;7958:34:68;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7939:55;-1:-1:-1;8023:4:68;8008:19;;;;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8143:24:68;;8226:10;8178:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8168:70;;;;;;8143:96;;;;;;;;;;;;;1410:25:104;;1398:2;1383:18;;1264:177;8143:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8138:213;;8266:70;;-1:-1:-1;;;8266:70:68;;8325:10;8266:70;;;2861:51:104;2834:18;;8266:70:68;2715:203:104;8138:213:68;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8525:24:68;;8608:10;8560:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8550:70;;;;;;8525:96;;;;;;;;;;;;;1410:25:104;;1398:2;1383:18;;1264:177;8525:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:163;;;-1:-1:-1;2470:15:68;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8658:28:68;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8645:43:68;:9;-1:-1:-1;;;;;8645:43:68;;8525:163;8502:312;;8729:70;;-1:-1:-1;;;8729:70:68;;8788:10;8729:70;;;2861:51:104;2834:18;;8729:70:68;2715:203:104;8502:312:68;7330:17:45::1;7336:2;7340:6;7330:5;:17::i;:::-;7929:912:68::0;7245:109:45;;:::o;2290:208::-;-1:-1:-1;;;;;2404:21:45;;;2357:17;2404:21;;;:10;:21;;;;;;2357:17;;2404:21;2448;;:43;;2484:7;2448:43;;;-1:-1:-1;2472:9:45;;2436:55;-1:-1:-1;2290:208:45:o;2504:101::-;2566:32;2576:10;2588:9;2566;:32::i;:::-;2504:101;:::o;5696:149::-;-1:-1:-1;;;;;5809:21:45;;5766:6;5809:21;;;:12;:21;;;;;:28;5791:47;;:17;:47::i;4520:256::-;4607:7;4648:12;4634:11;:26;4626:70;;;;-1:-1:-1;;;4626:70:45;;6823:2:104;4626:70:45;;;6805:21:104;6862:2;6842:18;;;6835:30;6901:33;6881:18;;;6874:61;6952:18;;4626:70:45;6621:355:104;4626:70:45;4713:56;4732:23;4757:11;4713:18;:56::i;728:20:42:-;;;;;;;:::i;2684:209:45:-;-1:-1:-1;;;;;2790:21:45;;2757:7;2790:21;;;:12;:21;;;;;:28;2835:8;;:51;;-1:-1:-1;;;;;2850:21:45;;;;;;:12;:21;;;;;2872:7;2878:1;2872:3;:7;:::i;:::-;2850:30;;;;;;;;:::i;:::-;;;;;;;;;;:36;;;;-1:-1:-1;;;;;2850:36:45;2835:51;;;2846:1;2835:51;-1:-1:-1;;;;;2828:58:45;;2684:209;-1:-1:-1;;;2684:209:45:o;7639:119::-;7939:16:68;7958;2470:15;;-1:-1:-1;;;;;2470:15:68;;2371:122;7958:16;-1:-1:-1;;;;;7958:34:68;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7939:55;-1:-1:-1;8023:4:68;8008:19;;;;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8143:24:68;;8226:10;8178:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8168:70;;;;;;8143:96;;;;;;;;;;;;;1410:25:104;;1398:2;1383:18;;1264:177;8143:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8138:213;;8266:70;;-1:-1:-1;;;8266:70:68;;8325:10;8266:70;;;2861:51:104;2834:18;;8266:70:68;2715:203:104;8138:213:68;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8525:24:68;;8608:10;8560:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8550:70;;;;;;8525:96;;;;;;;;;;;;;1410:25:104;;1398:2;1383:18;;1264:177;8525:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:163;;;-1:-1:-1;2470:15:68;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8658:28:68;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8645:43:68;:9;-1:-1:-1;;;;;8645:43:68;;8525:163;8502:312;;8729:70;;-1:-1:-1;;;8729:70:68;;8788:10;8729:70;;;2861:51:104;2834:18;;8729:70:68;2715:203:104;8502:312:68;7729:22:45::1;7735:7;7744:6;7729:5;:22::i;2755:438:42:-:0;2861:10;2834:4;2850:22;;;:10;:22;;;;;:32;;2876:6;;2850:22;2834:4;;2850:32;;2876:6;;2850:32;:::i;:::-;;;;-1:-1:-1;;;;;;;3028:14:42;;;;;;:10;:14;;;;;;;:24;;;;;;3078:32;3087:10;;-1:-1:-1;;;;;;;;;;;3078:32:42;;;3046:6;1410:25:104;;1398:2;1383:18;;1264:177;3078:32:42;;;;;;;;3121:43;3141:10;3153:2;3157:6;3121:19;:43::i;:::-;-1:-1:-1;3182:4:42;2755:438;;;;:::o;1728:100:45:-;7939:16:68;7958;2470:15;;-1:-1:-1;;;;;2470:15:68;;2371:122;7958:16;-1:-1:-1;;;;;7958:34:68;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7939:55;-1:-1:-1;8023:4:68;8008:19;;;;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8143:24:68;;8226:10;8178:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8168:70;;;;;;8143:96;;;;;;;;;;;;;1410:25:104;;1398:2;1383:18;;1264:177;8143:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8138:213;;8266:70;;-1:-1:-1;;;8266:70:68;;8325:10;8266:70;;;2861:51:104;2834:18;;8266:70:68;2715:203:104;8138:213:68;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8525:24:68;;8608:10;8560:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8550:70;;;;;;8525:96;;;;;;;;;;;;;1410:25:104;;1398:2;1383:18;;1264:177;8525:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:163;;;-1:-1:-1;2470:15:68;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8658:28:68;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8645:43:68;:9;-1:-1:-1;;;;;8645:43:68;;8525:163;8502:312;;8729:70;;-1:-1:-1;;;8729:70:68;;8788:10;8729:70;;;2861:51:104;2834:18;;8729:70:68;2715:203:104;8502:312:68;-1:-1:-1;1798:15:45::1;:23:::0;;-1:-1:-1;;1798:23:45::1;::::0;;1728:100::o;2899:874::-;3113:57;;;995:71;3113:57;;;8277:25:104;-1:-1:-1;;;;;8338:32:104;;8318:18;;;8311:60;;;;8387:18;;;8380:34;;;8430:18;;;8423:34;;;3082:18:45;;8249:19:104;;3113:57:45;;;;;;;;;;;;3103:68;;;;;;3082:89;;3181:14;3237:18;:16;:18::i;:::-;3208:60;;-1:-1:-1;;;3208:60:45;;;8726:27:104;8769:11;;;8762:27;;;;8805:12;;;8798:28;;;8842:12;;3208:60:45;;;-1:-1:-1;;3208:60:45;;;;;;;;;3198:71;;3208:60;3198:71;;;;3279:17;3299:26;;;;;;;;;9092:25:104;;;9165:4;9153:17;;9133:18;;;9126:45;;;;9187:18;;;9180:34;;;9230:18;;;9223:34;;;3198:71:45;;-1:-1:-1;3279:17:45;3299:26;;9064:19:104;;3299:26:45;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3299:26:45;;-1:-1:-1;;3299:26:45;;;-1:-1:-1;;;;;;;3344:23:45;;3336:48;;;;-1:-1:-1;;;3336:48:45;;9470:2:104;3336:48:45;;;9452:21:104;9509:2;9489:18;;;9482:30;-1:-1:-1;;;9528:18:104;;;9521:42;9580:18;;3336:48:45;9268:336:104;3336:48:45;-1:-1:-1;;;;;3611:17:45;;;;;;:6;:17;;;;;:19;;;;;;;;3602:28;;3594:54;;;;-1:-1:-1;;;3594:54:45;;9811:2:104;3594:54:45;;;9793:21:104;9850:2;9830:18;;;9823:30;-1:-1:-1;;;9869:18:104;;;9862:43;9922:18;;3594:54:45;9609:337:104;3594:54:45;3696:6;3677:15;:25;;3669:55;;;;-1:-1:-1;;;3669:55:45;;10153:2:104;3669:55:45;;;10135:21:104;10192:2;10172:18;;;10165:30;-1:-1:-1;;;10211:18:104;;;10204:47;10268:18;;3669:55:45;9951:341:104;3669:55:45;3735:31;3745:9;3756;3735;:31::i;:::-;3072:701;;;2899:874;;;;;;:::o;4959:126::-;5018:7;5044:34;5055:6;:4;:6::i;:::-;-1:-1:-1;;;;;5055:20:45;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5044:6;;:10;:34::i;3984:1011:42:-;4212:15;4200:8;:27;;4192:63;;;;-1:-1:-1;;;4192:63:42;;10499:2:104;4192:63:42;;;10481:21:104;10538:2;10518:18;;;10511:30;10577:25;10557:18;;;10550:53;10620:18;;4192:63:42;10297:347:104;4192:63:42;4420:14;4534:18;:16;:18::i;:::-;-1:-1:-1;;;;;4635:13:42;;;;;;;:6;:13;;;;;;;;;:15;;;;;;;;4584:77;;1370:95;4584:77;;;10936:25:104;11015:18;;;11008:43;;;;11087:15;;;11067:18;;;11060:43;11119:18;;;11112:34;;;11162:19;;;11155:35;;;;11206:19;;;;11199:35;;;4584:77:42;;;;;;;;;;10908:19:104;;;4584:77:42;;;4574:88;;;;;;;;-1:-1:-1;;;4464:216:42;;;8726:27:104;8769:11;;;8762:27;;;;8805:12;;;8798:28;;;;8842:12;;4464:216:42;;;-1:-1:-1;;4464:216:42;;;;;;;;;4437:257;;4464:216;4437:257;;;;4709:24;4736:26;;;;;;;;;9092:25:104;;;9165:4;9153:17;;9133:18;;;9126:45;;;;9187:18;;;9180:34;;;9230:18;;;9223:34;;;4437:257:42;;-1:-1:-1;4709:24:42;4736:26;;9064:19:104;;4736:26:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4736:26:42;;-1:-1:-1;;4736:26:42;;;-1:-1:-1;;;;;;;4784:30:42;;;;;;:59;;;4838:5;-1:-1:-1;;;;;4818:25:42;:16;-1:-1:-1;;;;;4818:25:42;;4784:59;4776:96;;;;-1:-1:-1;;;4776:96:42;;11447:2:104;4776:96:42;;;11429:21:104;11486:2;11466:18;;;11459:30;11525:26;11505:18;;;11498:54;11569:18;;4776:96:42;11245:348:104;4776:96:42;-1:-1:-1;;;;;4887:27:42;;;;;;;:9;:27;;;;;;;;:36;;;;;;;;;;;;;:44;;;4957:31;1410:25:104;;;4887:36:42;;-1:-1:-1;4957:31:42;;;;;;1383:18:104;4957:31:42;;;;;;;3984:1011;;;;;;;:::o;1888:131:45:-;7939:16:68;7958;2470:15;;-1:-1:-1;;;;;2470:15:68;;2371:122;7958:16;-1:-1:-1;;;;;7958:34:68;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7939:55;-1:-1:-1;8023:4:68;8008:19;;;;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8143:24:68;;8226:10;8178:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8168:70;;;;;;8143:96;;;;;;;;;;;;;1410:25:104;;1398:2;1383:18;;1264:177;8143:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8138:213;;8266:70;;-1:-1:-1;;;8266:70:68;;8325:10;8266:70;;;2861:51:104;2834:18;;8266:70:68;2715:203:104;8138:213:68;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8525:24:68;;8608:10;8560:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8550:70;;;;;;8525:96;;;;;;;;;;;;;1410:25:104;;1398:2;1383:18;;1264:177;8525:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:163;;;-1:-1:-1;2470:15:68;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8658:28:68;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8645:43:68;:9;-1:-1:-1;;;;;8645:43:68;;8525:163;8502:312;;8729:70;;-1:-1:-1;;;8729:70:68;;8788:10;8729:70;;;2861:51:104;2834:18;;8729:70:68;2715:203:104;8502:312:68;1980:32:45::1;2002:9;-1:-1:-1::0;;;;;8100:30:45;;;;;:19;:30;;;;;:37;;-1:-1:-1;;8100:37:45;8133:4;8100:37;;;8031:113;1980:32:::1;7929:912:68::0;1888:131:45;:::o;5473:148::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;5588:21:45;;;;;;:12;:21;;;;;:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5581:33;;;;;;;;;5588:26;;5581:33;;;;;;;;;-1:-1:-1;;;;;5581:33:45;;;;;;;;;5473:148;-1:-1:-1;;;5473:148:45:o;3789:139:68:-;3828:5;3858:16;2470:15;;-1:-1:-1;;;;;2470:15:68;;2371:122;3858:16;-1:-1:-1;;;;;3858:27:68;;3896:7;:17;;:22;;3886:33;;;;;;:::i;:::-;;;;;;;;;3858:62;;;;-1:-1:-1;;;;;;3858:62:68;;;;;;1410:25:104;1383:18;;3858:62:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3839:127:32:-;3897:14;3932:27;3947:1;1359:4;3957:1;3932:14;:27::i;6205:655:45:-;6353:15;;;;:23;;:15;:23;6349:386;;;-1:-1:-1;;;;;6400:18:45;;;;:38;;-1:-1:-1;;;;;;6422:16:45;;;6400:38;6392:75;;;;-1:-1:-1;;;6392:75:45;;12985:2:104;6392:75:45;;;12967:21:104;13024:2;13004:18;;;12997:30;13063:26;13043:18;;;13036:54;13107:18;;6392:75:45;12783:348:104;6392:75:45;6349:386;;;6502:14;:12;:14::i;:::-;-1:-1:-1;;;;;6488:29:45;:2;-1:-1:-1;;;;;6488:29:45;;;:49;;;;-1:-1:-1;;;;;;6521:16:45;;;;6488:49;6484:251;;;6607:5;:3;:5::i;:::-;-1:-1:-1;;;;;6607:25:45;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6578:5;:3;:5::i;:::-;:26;;-1:-1:-1;;;6578:26:45;;-1:-1:-1;;;;;2879:32:104;;;6578:26:45;;;2861:51:104;6578:22:45;;;;;;;2834:18:104;;6578:26:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;6553:171;;;;-1:-1:-1;;;6553:171:45;;13338:2:104;6553:171:45;;;13320:21:104;13377:2;13357:18;;;13350:30;13416:34;13396:18;;;13389:62;13487:26;13467:18;;;13460:54;13531:19;;6553:171:45;13136:420:104;6553:171:45;6799:54;6814:15;6824:4;6814:9;:15::i;:::-;6831:13;6841:2;6831:9;:13::i;:::-;6846:6;6799:14;:54::i;5184:453:42:-;5249:7;5346:95;5479:4;5463:22;;;;;;:::i;:::-;;;;;;;;;;5517:10;;;;;;;;-1:-1:-1;;;5517:10:42;;;;;5314:302;;;;;14023:25:104;;;;14064:18;;14057:34;;;;5507:21:42;14107:18:104;;;14100:34;5550:13:42;14150:18:104;;;14143:34;5593:4:42;14193:19:104;;;14186:61;13995:19;;5314:302:42;;;;;;;;;;;;5287:343;;;;;;5268:362;;5184:453;:::o;9622:1458:45:-;10743:12;;9721:7;;;10790:229;10803:4;10797:3;:10;10790:229;;;10823:11;10837:23;10850:3;10855:4;10837:12;:23::i;:::-;10823:37;;10901:11;10878:5;10884:3;10878:10;;;;;;;;:::i;:::-;;;;;;;;;;:20;;;:34;10874:135;;;10939:3;10932:10;;10874:135;;;10987:7;:3;10993:1;10987:7;:::i;:::-;10981:13;;10874:135;10809:210;10790:229;;;11036:9;;:37;;11052:5;11058:8;11065:1;11058:4;:8;:::i;:::-;11052:15;;;;;;;;:::i;:::-;;;;;;;;;;:21;;;;-1:-1:-1;;;;;11052:21:45;11036:37;;;11048:1;11036:37;-1:-1:-1;;;;;11029:44:45;;9622:1458;-1:-1:-1;;;;;9622:1458:45:o;6949:290::-;7033:28;7045:7;7054:6;7033:11;:28::i;:::-;-1:-1:-1;;;;;7079:13:45;2378:12:42;;;2291:106;7079:13:45;:34;;7071:95;;;;-1:-1:-1;;;7071:95:45;;14593:2:104;7071:95:45;;;14575:21:104;14632:2;14612:18;;;14605:30;14671:34;14651:18;;;14644:62;-1:-1:-1;;;14722:18:104;;;14715:46;14778:19;;7071:95:45;14391:412:104;7071:95:45;7177:55;7194:23;7219:4;7225:6;7177:16;:55::i;:::-;;;6949:290;;:::o;8150:496::-;8251:9;-1:-1:-1;;;;;8238:22:45;:9;-1:-1:-1;;;;;8238:22:45;;;:49;;;;-1:-1:-1;;;;;;8264:23:45;;;;8238:49;8234:159;;;-1:-1:-1;;;;;8311:30:45;;;;;;:19;:30;;;;;;;;:38;;:30;:38;8303:79;;;;-1:-1:-1;;;8303:79:45;;15010:2:104;8303:79:45;;;14992:21:104;15049:2;15029:18;;;15022:30;15088;15068:18;;;15061:58;15136:18;;8303:79:45;14808:352:104;8303:79:45;-1:-1:-1;;;;;8428:21:45;;;8402:23;8428:21;;;:10;:21;;;;;;;;;;8460:33;;;-1:-1:-1;;;;;;8460:33:45;;;;;;8547:10;:21;;;;;;;8428;;;8504:65;;8428:21;;8484:9;;8504:14;:65::i;:::-;8629:9;-1:-1:-1;;;;;8585:54:45;8612:15;-1:-1:-1;;;;;8585:54:45;8601:9;-1:-1:-1;;;;;8585:54:45;;;;;;;;;;;8224:422;8150:496;;:::o;2986:187:29:-;3042:6;3077:16;3068:25;;;3060:76;;;;-1:-1:-1;;;3060:76:29;;15367:2:104;3060:76:29;;;15349:21:104;15406:2;15386:18;;;15379:30;15445:34;15425:18;;;15418:62;-1:-1:-1;;;15496:18:104;;;15489:36;15542:19;;3060:76:29;15165:402:104;3060:76:29;-1:-1:-1;3160:5:29;2986:187::o;7443:190:45:-;7527:28;7539:7;7548:6;7527:11;:28::i;:::-;7566:60;7583:23;7608:9;7619:6;7566:16;:60::i;21270:130:32:-;21328:14;21363:30;21388:1;21391;21363:24;:30::i;15079:3983:30:-;15191:14;;;-1:-1:-1;;15680:1:30;15677;15670:20;15719:1;15716;15712:9;15703:18;;15770:5;15766:2;15763:13;15755:5;15751:2;15747:14;15743:34;15734:43;;;15860:5;15869:1;15860:10;15856:138;;;15931:11;15923:5;:19;;;;;:::i;:::-;;15914:28;;15970:13;;;;15856:138;16101:11;16092:5;:20;16088:101;;16135:43;;-1:-1:-1;;;16135:43:30;;;;;15878:25:104;;;15919:18;;;15912:34;;;15851:18;;16135:43:30;15704:248:104;16088:101:30;16424:17;16547:11;16544:1;16541;16534:25;17956:1;17093;17078:12;;:16;;17063:32;;17201:25;;;;17937:1;:15;;17936:21;;18189;;;18185:25;;18174:36;18258:21;;;18254:25;;18243:36;18328:21;;;18324:25;;18313:36;18398:21;;;18394:25;;18383:36;18468:21;;;18464:25;;18453:36;18539:21;;;18535:25;;;18524:36;;;17045:15;17467;;;17463:29;;;17459:37;;;16653:20;;;16642:32;;;17585:15;;;;16696:21;;17305:19;;;;17576:24;;;;19003:15;;;-1:-1:-1;;;;15079:3983:30:o;5644:164:68:-;5691:13;5737:16;2470:15;;-1:-1:-1;;;;;2470:15:68;;2371:122;5737:16;-1:-1:-1;;;;;5737:27:68;;5775:7;:17;;:23;;5765:34;;;;;;:::i;3648:135::-;3686:4;3714:16;2470:15;;-1:-1:-1;;;;;2470:15:68;;2371:122;3714:16;-1:-1:-1;;;;;3714:27:68;;3752:7;:17;;:21;;3742:32;;;;;;:::i;8652:620:45:-;8785:3;-1:-1:-1;;;;;8779:9:45;:3;-1:-1:-1;;;;;8779:9:45;;;:22;;;;;8800:1;8791:6;:10;8779:22;8775:261;;;-1:-1:-1;;;;;8819:17:45;;;8815:221;;-1:-1:-1;;;;;8914:17:45;;8857;8914;;;:12;:17;;;;;8857;;8897:54;;8933:9;8944:6;8897:16;:54::i;:::-;8856:95;;;;8995:3;-1:-1:-1;;;;;8974:47:45;;9000:9;9011;8974:47;;;;;;15878:25:104;;;15934:2;15919:18;;15912:34;15866:2;15851:18;;15704:248;8974:47:45;;;;;;;;8838:198;;8815:221;-1:-1:-1;;;;;9054:17:45;;;9050:216;;-1:-1:-1;;;;;9149:17:45;;9092;9149;;;:12;:17;;;;;9092;;9132:49;;9168:4;9174:6;9132:16;:49::i;:::-;9091:90;;;;9225:3;-1:-1:-1;;;;;9204:47:45;;9230:9;9241;9204:47;;;;;;15878:25:104;;;15934:2;15919:18;;15912:34;15866:2;15851:18;;15704:248;9204:47:45;;;;;;;;9073:193;;8652:620;;;:::o;608:153:28:-;670:7;743:11;753:1;744:5;;;743:11;:::i;:::-;733:21;;734:5;;;733:21;:::i;5831:381:42:-;5917:6;5901:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6069:14:42;;;;;;:10;:14;;;;;;;;:24;;;;;;6119:32;1410:25:104;;;-1:-1:-1;;;;;;;;;;;6119:32:42;1383:18:104;6119:32:42;;;;;;;6162:43;6190:1;6194:2;6198:6;6162:19;:43::i;11723:96:45:-;11781:7;11807:5;11811:1;11807;:5;:::i;11086:631::-;11318:12;;11256:17;;;;11352:8;;:35;;11367:5;11373:7;11379:1;11373:3;:7;:::i;:::-;11367:14;;;;;;;;:::i;:::-;;;;;;;;;;:20;;;;-1:-1:-1;;;;;11367:20:45;11352:35;;;11363:1;11352:35;-1:-1:-1;;;;;11340:47:45;;;11409:20;11412:9;11423:5;11409:2;:20;;:::i;:::-;11397:32;;11450:1;11444:3;:7;:51;;;;-1:-1:-1;11483:12:45;11455:5;11461:7;11467:1;11461:3;:7;:::i;:::-;11455:14;;;;;;;;:::i;:::-;;;;;;;;;;:24;;;:40;11444:51;11440:271;;;11534:29;11553:9;11534:18;:29::i;:::-;11511:5;11517:7;11523:1;11517:3;:7;:::i;:::-;11511:14;;;;;;;;:::i;:::-;;;;;;;;:20;;;:52;;;;;-1:-1:-1;;;;;11511:52:45;;;;;-1:-1:-1;;;;;11511:52:45;;;;;;11440:271;;;11594:5;11605:94;;;;;;;;11628:31;11646:12;11628:17;:31::i;:::-;11605:94;;;;;;11668:29;11687:9;11668:18;:29::i;:::-;-1:-1:-1;;;;;11605:94:45;;;;;;11594:106;;;;;;;-1:-1:-1;11594:106:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11440:271;11294:423;11086:631;;;;;;:::o;6218:386:42:-;-1:-1:-1;;;;;6290:16:42;;;;;;:10;:16;;;;;:26;;6310:6;;6290:16;:26;;6310:6;;6290:26;:::i;:::-;;;;-1:-1:-1;;6459:12:42;:22;;;;;;;6507:34;;1410:25:104;;;-1:-1:-1;;;;;;;6507:34:42;;;-1:-1:-1;;;;;;;;;;;6507:34:42;1398:2:104;1383:18;6507:34:42;;;;;;;6552:45;6572:4;6586:1;6590:6;6552:19;:45::i;11825:101:45:-;11888:7;11914:5;11918:1;11914;:5;:::i;20191:1149:30:-;20262:14;;;-1:-1:-1;;20377:1:30;20374;20367:20;20416:1;20413;20409:9;20400:18;;20467:5;20463:2;20460:13;20452:5;20448:2;20444:14;20440:34;20431:43;;;4210:4;20498:5;:14;20494:92;;20535:40;;-1:-1:-1;;;20535:40:30;;;;;1410:25:104;;;1383:18;;20535:40:30;1264:177:104;20494:92:30;20596:17;20623:19;20701:5;20698:1;20695;20688:19;20675:32;-1:-1:-1;;20749:18:30;20735:33;;20792:10;20788:152;;20873:11;4210:4;20856:5;:13;20855:29;20846:38;;20902:13;;;;;;20788:152;21189:11;21061:21;;;21057:39;21137:20;;;;21126:32;;;-1:-1:-1;;;21122:84:30;21029:199;;;;21250:13;21004:277;20983:341;;-1:-1:-1;20191:1149:30;;;;:::o;1076:192:29:-;1133:7;-1:-1:-1;;;;;1160:26:29;;;1152:78;;;;-1:-1:-1;;;1152:78:29;;16381:2:104;1152:78:29;;;16363:21:104;16420:2;16400:18;;;16393:30;16459:34;16439:18;;;16432:62;-1:-1:-1;;;16510:18:104;;;16503:37;16557:19;;1152:78:29;16179:403:104;14:597;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:104;574:15;-1:-1:-1;;570:29:104;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:104:o;616:131::-;-1:-1:-1;;;;;691:31:104;;681:42;;671:70;;737:1;734;727:12;752:315;820:6;828;881:2;869:9;860:7;856:23;852:32;849:52;;;897:1;894;887:12;849:52;936:9;923:23;955:31;980:5;955:31;:::i;:::-;1005:5;1057:2;1042:18;;;;1029:32;;-1:-1:-1;;;752:315:104:o;1446:180::-;1505:6;1558:2;1546:9;1537:7;1533:23;1529:32;1526:52;;;1574:1;1571;1564:12;1526:52;-1:-1:-1;1597:23:104;;1446:180;-1:-1:-1;1446:180:104:o;1631:456::-;1708:6;1716;1724;1777:2;1765:9;1756:7;1752:23;1748:32;1745:52;;;1793:1;1790;1783:12;1745:52;1832:9;1819:23;1851:31;1876:5;1851:31;:::i;:::-;1901:5;-1:-1:-1;1958:2:104;1943:18;;1930:32;1971:33;1930:32;1971:33;:::i;:::-;1631:456;;2023:7;;-1:-1:-1;;;2077:2:104;2062:18;;;;2049:32;;1631:456::o;2463:247::-;2522:6;2575:2;2563:9;2554:7;2550:23;2546:32;2543:52;;;2591:1;2588;2581:12;2543:52;2630:9;2617:23;2649:31;2674:5;2649:31;:::i;3120:156::-;3186:20;;3246:4;3235:16;;3225:27;;3215:55;;3266:1;3263;3256:12;3215:55;3120:156;;;:::o;3281:592::-;3383:6;3391;3399;3407;3415;3423;3476:3;3464:9;3455:7;3451:23;3447:33;3444:53;;;3493:1;3490;3483:12;3444:53;3532:9;3519:23;3551:31;3576:5;3551:31;:::i;:::-;3601:5;-1:-1:-1;3653:2:104;3638:18;;3625:32;;-1:-1:-1;3704:2:104;3689:18;;3676:32;;-1:-1:-1;3727:36:104;3759:2;3744:18;;3727:36;:::i;:::-;3717:46;;3810:3;3799:9;3795:19;3782:33;3772:43;;3862:3;3851:9;3847:19;3834:33;3824:43;;3281:592;;;;;;;;:::o;3878:734::-;3989:6;3997;4005;4013;4021;4029;4037;4090:3;4078:9;4069:7;4065:23;4061:33;4058:53;;;4107:1;4104;4097:12;4058:53;4146:9;4133:23;4165:31;4190:5;4165:31;:::i;:::-;4215:5;-1:-1:-1;4272:2:104;4257:18;;4244:32;4285:33;4244:32;4285:33;:::i;:::-;4337:7;-1:-1:-1;4391:2:104;4376:18;;4363:32;;-1:-1:-1;4442:2:104;4427:18;;4414:32;;-1:-1:-1;4465:37:104;4497:3;4482:19;;4465:37;:::i;:::-;4455:47;;4549:3;4538:9;4534:19;4521:33;4511:43;;4601:3;4590:9;4586:19;4573:33;4563:43;;3878:734;;;;;;;;;;:::o;4617:388::-;4685:6;4693;4746:2;4734:9;4725:7;4721:23;4717:32;4714:52;;;4762:1;4759;4752:12;4714:52;4801:9;4788:23;4820:31;4845:5;4820:31;:::i;:::-;4870:5;-1:-1:-1;4927:2:104;4912:18;;4899:32;4940:33;4899:32;4940:33;:::i;:::-;4992:7;4982:17;;;4617:388;;;;;:::o;5010:419::-;5077:6;5085;5138:2;5126:9;5117:7;5113:23;5109:32;5106:52;;;5154:1;5151;5144:12;5106:52;5193:9;5180:23;5212:31;5237:5;5212:31;:::i;:::-;5262:5;-1:-1:-1;5319:2:104;5304:18;;5291:32;5367:10;5354:24;;5342:37;;5332:65;;5393:1;5390;5383:12;5785:380;5864:1;5860:12;;;;5907;;;5928:61;;5982:4;5974:6;5970:17;5960:27;;5928:61;6035:2;6027:6;6024:14;6004:18;6001:38;5998:161;;;6081:10;6076:3;6072:20;6069:1;6062:31;6116:4;6113:1;6106:15;6144:4;6141:1;6134:15;5998:161;;5785:380;;;:::o;6170:184::-;6240:6;6293:2;6281:9;6272:7;6268:23;6264:32;6261:52;;;6309:1;6306;6299:12;6261:52;-1:-1:-1;6332:16:104;;6170:184;-1:-1:-1;6170:184:104:o;6359:127::-;6420:10;6415:3;6411:20;6408:1;6401:31;6451:4;6448:1;6441:15;6475:4;6472:1;6465:15;6491:125;6531:4;6559:1;6556;6553:8;6550:34;;;6564:18;;:::i;:::-;-1:-1:-1;6601:9:104;;6491:125::o;6981:277::-;7048:6;7101:2;7089:9;7080:7;7076:23;7072:32;7069:52;;;7117:1;7114;7107:12;7069:52;7149:9;7143:16;7202:5;7195:13;7188:21;7181:5;7178:32;7168:60;;7224:1;7221;7214:12;7263:390;7505:29;7493:42;;7573:2;7569:15;;;;-1:-1:-1;;7565:53:104;7560:2;7551:12;;7544:75;7644:2;7635:12;;7263:390::o;7658:251::-;7728:6;7781:2;7769:9;7760:7;7756:23;7752:32;7749:52;;;7797:1;7794;7787:12;7749:52;7829:9;7823:16;7848:31;7873:5;7848:31;:::i;7914:127::-;7975:10;7970:3;7966:20;7963:1;7956:31;8006:4;8003:1;7996:15;8030:4;8027:1;8020:15;11598:981;11682:12;;11647:3;;11737:1;11757:18;;;;11810;;;;11837:61;;11891:4;11883:6;11879:17;11869:27;;11837:61;11917:2;11965;11957:6;11954:14;11934:18;11931:38;11928:161;;;12011:10;12006:3;12002:20;11999:1;11992:31;12046:4;12043:1;12036:15;12074:4;12071:1;12064:15;11928:161;12105:18;12132:104;;;;12250:1;12245:328;;;;12098:475;;12132:104;-1:-1:-1;;12165:24:104;;12153:37;;12210:16;;;;-1:-1:-1;12132:104:104;;12245:328;12276:5;12273:1;12266:16;12323:2;12320:1;12310:16;12348:1;12362:165;12376:6;12373:1;12370:13;12362:165;;;12454:14;;12441:11;;;12434:35;12497:16;;;;12391:10;;12362:165;;;12366:3;;12556:6;12551:3;12547:16;12540:23;;12098:475;;;;;;;11598:981;;;;:::o;12584:194::-;12710:3;12735:37;12768:3;12760:6;12735:37;:::i;14258:128::-;14298:3;14329:1;14325:6;14322:1;14319:13;14316:39;;;14335:18;;:::i;:::-;-1:-1:-1;14371:9:104;;14258:128::o;15572:127::-;15633:10;15628:3;15624:20;15621:1;15614:31;15664:4;15661:1;15654:15;15688:4;15685:1;15678:15;15957:217;15997:1;16023;16013:132;;16067:10;16062:3;16058:20;16055:1;16048:31;16102:4;16099:1;16092:15;16130:4;16127:1;16120:15;16013:132;-1:-1:-1;16159:9:104;;15957:217::o",
  "language": "Solidity",
  "natspec": {
    "author": "PhantomDao Team",
    "errors": {
      "PRBMath__MulDivFixedPointOverflow(uint256)": [
        {
          "notice": "Emitted when the result overflows uint256."
        }
      ],
      "PRBMath__MulDivOverflow(uint256,uint256)": [
        {
          "notice": "Emitted when the result overflows uint256."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "DOMAIN_SEPARATOR()": {
        "details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
      },
      "addApprovedDelegatee(address)": {
        "details": "add an approved delegate."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "balanceFromPHM(uint256)": {
        "notice": "calculate conversion between an amount of (s)PHM to gPHM",
        "params": {
          "amount": "uint amount of (s)PHM"
        },
        "returns": {
          "_0": "uint equivalent amount of gPHM"
        }
      },
      "balanceToPHM(uint256)": {
        "notice": "calculate conversion between an amount of gPHM to (s)PHM",
        "params": {
          "amount": "uint amount of gPHM"
        },
        "returns": {
          "_0": "uint equivalent amount of (s)PHM"
        }
      },
      "checkpoints(address,uint32)": {
        "details": "Get the `pos`-th checkpoint for `account`."
      },
      "delegate(address)": {
        "details": "Delegates votes from the sender to `delegatee`."
      },
      "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "Delegates votes from signer to `delegatee`."
      },
      "enableTransfers()": {
        "details": "turn on transfers for this token. This is a one-time action."
      },
      "getPastTotalSupply(uint256)": {
        "details": "Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined"
      },
      "getPastVotes(address,uint256)": {
        "details": "Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined"
      },
      "getVotes(address)": {
        "details": "Gets the current votes balance for `account`"
      },
      "numCheckpoints(address)": {
        "details": "Get number of checkpoints for `account`."
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      }
    },
    "notice": "The Governance Phantom Token",
    "title": "gPHM",
    "version": 1
  },
  "offset": [
    636,
    11928
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xC3CDA520 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0xDF835446 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x4D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0xCCA3E832 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xD4FF9A2C EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9AB24EB0 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xAF35C6C7 EQ PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x587CDE1E GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x3CEAD841 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x223966ED GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x223966ED EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x220 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0x271B JUMP JUMPDEST PUSH2 0x59F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x2747 JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH2 0x210 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x2760 JUMP JUMPDEST PUSH2 0x681 JUMP JUMPDEST PUSH2 0x224 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH2 0x2A6 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x271B JUMP JUMPDEST PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x210 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x27A1 JUMP JUMPDEST PUSH1 0x52 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x309 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x271B JUMP JUMPDEST PUSH2 0x848 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31E PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x27A1 JUMP JUMPDEST PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x309 PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x27A1 JUMP JUMPDEST PUSH2 0xB14 JUMP JUMPDEST PUSH2 0x35C PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x27A1 JUMP JUMPDEST PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x27A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x27A1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2747 JUMP JUMPDEST PUSH2 0xB43 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x224 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x27A1 JUMP JUMPDEST PUSH2 0xBAC JUMP JUMPDEST PUSH2 0x309 PUSH2 0x3F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x271B JUMP JUMPDEST PUSH2 0xC33 JUMP JUMPDEST PUSH2 0x210 PUSH2 0x409 CALLDATASIZE PUSH1 0x4 PUSH2 0x271B JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST PUSH2 0x309 PUSH2 0xF4C JUMP JUMPDEST PUSH2 0x309 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D4 JUMP JUMPDEST PUSH2 0x11E6 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x27A1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x457 CALLDATASIZE PUSH1 0x4 PUSH2 0x2747 JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST PUSH2 0x309 PUSH2 0x46A CALLDATASIZE PUSH1 0x4 PUSH2 0x282E JUMP JUMPDEST PUSH2 0x1461 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x47D CALLDATASIZE PUSH1 0x4 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x309 PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x27A1 JUMP JUMPDEST PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0x224 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH2 0x4E7 PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x28D5 JUMP JUMPDEST PUSH2 0x197A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x51E SWAP1 PUSH2 0x290C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x54A SWAP1 PUSH2 0x290C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x597 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x597 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x57A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x5FA SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x606 PUSH2 0x619 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xED3437F8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x656 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x2947 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x6E6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6E0 SWAP1 DUP5 SWAP1 PUSH2 0x2976 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x70E SWAP1 DUP5 SWAP1 PUSH2 0x2976 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD SWAP1 SWAP2 DUP7 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x757 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x76A DUP5 DUP5 DUP5 PUSH2 0x1AAD JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ PUSH2 0x7AB JUMPI PUSH2 0x7A6 PUSH2 0x1CCC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x826 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x54 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x76E SWAP1 DUP4 PUSH2 0x1D7B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85C PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BED5241 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x899 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8BD SWAP2 SWAP1 PUSH2 0x298D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x98E JUMPI PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8F5 SWAP2 SWAP1 PUSH2 0x29AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x929 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x946 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x96A SWAP2 SWAP1 PUSH2 0x298D JUMP JUMPDEST PUSH2 0x989 JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x81D JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9B9 SWAP2 SWAP1 PUSH2 0x29AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9ED SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0x298D JUMP JUMPDEST DUP1 PUSH2 0xAB6 JUMPI POP PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA75B87D2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA1 SWAP2 SWAP1 PUSH2 0x29F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ORIGIN PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x81D JUMP JUMPDEST PUSH2 0xADF DUP4 DUP4 PUSH2 0x1E38 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x53 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 ISZERO PUSH2 0xB0D JUMPI DUP1 PUSH2 0x76E JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB1E CALLER DUP3 PUSH2 0x1ECE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x54 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x606 SWAP1 PUSH2 0x2002 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xB94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x81D JUMP JUMPDEST PUSH2 0x606 PUSH1 0x55 DUP4 PUSH2 0x1D7B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x51E SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x54 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xC20 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x54 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xBEE PUSH1 0x1 DUP4 PUSH2 0x2976 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xBFE JUMPI PUSH2 0xBFE PUSH2 0x2A0F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC47 PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BED5241 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCA8 SWAP2 SWAP1 PUSH2 0x298D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0xD79 JUMPI PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCE0 SWAP2 SWAP1 PUSH2 0x29AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD14 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD55 SWAP2 SWAP1 PUSH2 0x298D JUMP JUMPDEST PUSH2 0xD74 JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x81D JUMP JUMPDEST PUSH2 0xEC0 JUMP JUMPDEST PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDA4 SWAP2 SWAP1 PUSH2 0x29AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE19 SWAP2 SWAP1 PUSH2 0x298D JUMP JUMPDEST DUP1 PUSH2 0xEA1 JUMPI POP PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA75B87D2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE8C SWAP2 SWAP1 PUSH2 0x29F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ORIGIN PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xEC0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x81D JUMP JUMPDEST PUSH2 0xADF DUP4 DUP4 PUSH2 0x206B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0xEEB SWAP1 DUP5 SWAP1 PUSH2 0x2976 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xF30 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xF43 CALLER DUP5 DUP5 PUSH2 0x1AAD JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF60 PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BED5241 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x298D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x1092 JUMPI PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFF9 SWAP2 SWAP1 PUSH2 0x29AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x104A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x106E SWAP2 SWAP1 PUSH2 0x298D JUMP JUMPDEST PUSH2 0x108D JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x81D JUMP JUMPDEST PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10BD SWAP2 SWAP1 PUSH2 0x29AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x110E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1132 SWAP2 SWAP1 PUSH2 0x298D JUMP JUMPDEST DUP1 PUSH2 0x11BA JUMPI POP PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA75B87D2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1181 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11A5 SWAP2 SWAP1 PUSH2 0x29F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ORIGIN PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x11D9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x81D JUMP JUMPDEST POP PUSH1 0x51 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1257 PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x42 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x62 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1334 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A45524F5F41444452455353 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x81D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP9 EQ PUSH2 0x1393 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x494E56414C49445F4E4F4E4345 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x81D JUMP JUMPDEST DUP7 TIMESTAMP GT ISZERO PUSH2 0x13D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14D251D3905515549157D1561412549151 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x81D JUMP JUMPDEST PUSH2 0x13E1 DUP2 DUP11 PUSH2 0x1ECE JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x606 PUSH2 0x13F9 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xED3437F8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1436 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x145A SWAP2 SWAP1 PUSH2 0x2947 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x2083 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x14B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5045524D49545F444541444C494E455F45585049524544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x81D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BB PUSH2 0x775 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP5 ADD MSTORE DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 DUP13 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP1 DUP4 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x102 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x122 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x142 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x160A JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5045524D49545F5349474E41545552450000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x81D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 DUP6 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP11 SWAP1 SSTORE MLOAD DUP10 DUP2 MSTORE SWAP2 SWAP4 POP SWAP2 DUP11 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D5 PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BED5241 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1712 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1736 SWAP2 SWAP1 PUSH2 0x298D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x1807 JUMPI PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x176E SWAP2 SWAP1 PUSH2 0x29AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17E3 SWAP2 SWAP1 PUSH2 0x298D JUMP JUMPDEST PUSH2 0x1802 JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x81D JUMP JUMPDEST PUSH2 0x194E JUMP JUMPDEST PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1832 SWAP2 SWAP1 PUSH2 0x29AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1866 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1883 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18A7 SWAP2 SWAP1 PUSH2 0x298D JUMP JUMPDEST DUP1 PUSH2 0x192F JUMPI POP PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA75B87D2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x191A SWAP2 SWAP1 PUSH2 0x29F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ORIGIN PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x194E JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x81D JUMP JUMPDEST PUSH2 0x1976 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x52 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x54 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x19BE JUMPI PUSH2 0x19BE PUSH2 0x2A0F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A12 PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x21F8A721 PUSH1 0x9 PUSH1 0x0 ADD PUSH1 0x6 ADD PUSH1 0x40 MLOAD PUSH2 0x1A35 SWAP2 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH1 0xE0 DUP4 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A6 SWAP2 SWAP1 PUSH2 0x29F2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76E DUP4 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x51 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x1B2B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0x1ADA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST PUSH2 0x1B26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6750484D206973206E6F74207472616E7366657261626C650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x81D JUMP JUMPDEST PUSH2 0x1CB1 JUMP JUMPDEST PUSH2 0x1B33 PUSH2 0x215D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1B5C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1CB1 JUMPI PUSH2 0x1B69 PUSH2 0x2194 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BA7911 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BCA SWAP2 SWAP1 PUSH2 0x2947 JUMP JUMPDEST PUSH2 0x1BD2 PUSH2 0x2194 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xACC9D9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xACC9D9DF SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C3E SWAP2 SWAP1 PUSH2 0x2947 JUMP JUMPDEST LT PUSH2 0x1CB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6750484D207472616E7366657220626C6F636B65642064756520746F206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696E67206F76657220342E373625206F6620737570706C790000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x81D JUMP JUMPDEST PUSH2 0xADF PUSH2 0x1CBD DUP5 PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x1CC6 DUP5 PUSH2 0xAE4 JUMP JUMPDEST DUP4 PUSH2 0x21CB JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x1CFE SWAP2 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD SWAP3 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DDF JUMPI PUSH1 0x0 PUSH2 0x1D96 DUP3 DUP5 PUSH2 0x2308 JUMP JUMPDEST SWAP1 POP DUP5 DUP7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1DAB JUMPI PUSH2 0x1DAB PUSH2 0x2A0F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1DCB JUMPI DUP1 SWAP3 POP PUSH2 0x1DD9 JUMP JUMPDEST PUSH2 0x1DD6 DUP2 PUSH1 0x1 PUSH2 0x2ACA JUMP JUMPDEST SWAP2 POP JUMPDEST POP PUSH2 0x1D82 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1E23 JUMPI DUP5 PUSH2 0x1DF1 PUSH1 0x1 DUP5 PUSH2 0x2976 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1E01 JUMPI PUSH2 0x1E01 PUSH2 0x2A0F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E42 DUP3 DUP3 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH2 0x1E53 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x1EBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x766572666C6F77696E6720766F746573 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x81D JUMP JUMPDEST PUSH2 0x1EC8 PUSH1 0x55 PUSH2 0x2384 DUP4 PUSH2 0x2390 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1EF8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1F6A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x52 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1F6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E27742064656C65746167746520746F2064656C65676174656500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x81D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x53 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 AND SWAP1 PUSH2 0x1FB3 SWAP1 DUP3 SWAP1 DUP5 SWAP1 PUSH2 0x21CB JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x2067 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x322062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x81D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x2075 DUP3 DUP3 PUSH2 0x2509 JUMP JUMPDEST PUSH2 0x1EC8 PUSH1 0x55 PUSH2 0x257A DUP4 PUSH2 0x2390 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76E DUP4 DUP4 PUSH2 0x2586 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 PUSH1 0x0 EQ ISZERO PUSH2 0x20CA JUMPI DUP4 DUP3 DUP2 PUSH2 0x20C0 JUMPI PUSH2 0x20C0 PUSH2 0x2AE2 JUMP JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x76E JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x20F4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1DCF3063 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x81D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x2 PUSH1 0x1 DUP8 NOT DUP2 ADD DUP9 AND SWAP8 DUP9 SWAP1 DIV PUSH1 0x3 DUP2 MUL DUP4 XOR DUP1 DUP3 MUL DUP5 SUB MUL DUP1 DUP3 MUL DUP5 SUB MUL DUP1 DUP3 MUL DUP5 SUB MUL DUP1 DUP3 MUL DUP5 SUB MUL DUP1 DUP3 MUL DUP5 SUB MUL SWAP1 DUP2 MUL SWAP1 SWAP3 SUB SWAP1 SWAP2 MUL PUSH1 0x0 DUP9 SWAP1 SUB DUP9 SWAP1 DIV SWAP1 SWAP2 ADD DUP6 DUP4 GT SWAP1 SWAP5 SUB SWAP4 SWAP1 SWAP4 MUL SWAP4 SUB SWAP5 SWAP1 SWAP5 DIV SWAP2 SWAP1 SWAP2 OR MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2171 PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x21F8A721 PUSH1 0x9 PUSH1 0x0 ADD PUSH1 0xA ADD PUSH1 0x40 MLOAD PUSH2 0x1A35 SWAP2 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A8 PUSH1 0x4F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x21F8A721 PUSH1 0x9 PUSH1 0x0 ADD PUSH1 0x5 ADD PUSH1 0x40 MLOAD PUSH2 0x1A35 SWAP2 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x21ED JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x227B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x227B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x54 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x2228 SWAP1 PUSH2 0x257A DUP6 PUSH2 0x2390 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2270 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xADF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x54 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x22B1 SWAP1 PUSH2 0x2384 DUP6 PUSH2 0x2390 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x22F9 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2317 PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x2AF8 JUMP JUMPDEST PUSH2 0x76E SWAP1 DUP5 DUP5 AND PUSH2 0x2ACA JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2335 SWAP2 SWAP1 PUSH2 0x2ACA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1976 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1AAD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76E DUP3 DUP5 PUSH2 0x2ACA JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP1 ISZERO PUSH2 0x23DB JUMPI DUP6 PUSH2 0x23A9 PUSH1 0x1 DUP4 PUSH2 0x2976 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x23B9 JUMPI PUSH2 0x23B9 PUSH2 0x2A0F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x23DE JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP3 POP PUSH2 0x23F7 DUP4 DUP6 DUP8 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x2435 JUMPI POP NUMBER DUP7 PUSH2 0x2411 PUSH1 0x1 DUP5 PUSH2 0x2976 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2421 JUMPI PUSH2 0x2421 PUSH2 0x2A0F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x2495 JUMPI PUSH2 0x2443 DUP3 PUSH2 0x2648 JUMP JUMPDEST DUP7 PUSH2 0x244F PUSH1 0x1 DUP5 PUSH2 0x2976 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x245F JUMPI PUSH2 0x245F PUSH2 0x2A0F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x2500 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x24AA NUMBER PUSH2 0x2002 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24BE DUP6 PUSH2 0x2648 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD SWAP5 SWAP1 SWAP4 ADD MLOAD SWAP1 SWAP2 AND PUSH5 0x100000000 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 ADD SSTORE JUMPDEST POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x2531 SWAP1 DUP5 SWAP1 PUSH2 0x2976 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1976 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1AAD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76E DUP3 DUP5 PUSH2 0x2976 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP5 DUP7 MULMOD DUP5 DUP7 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH8 0xDE0B6B3A7640000 DUP2 LT PUSH2 0x25CA JUMPI PUSH1 0x40 MLOAD PUSH4 0x698D9A01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x81D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 DUP7 DUP9 MULMOD SWAP2 POP POP PUSH8 0x6F05B59D3B1FFFF DUP2 GT DUP3 PUSH2 0x2604 JUMPI DUP1 PUSH8 0xDE0B6B3A7640000 DUP6 DIV ADD SWAP5 POP POP POP POP POP PUSH2 0x606 JUMP JUMPDEST PUSH3 0x40000 DUP3 DUP6 SUB DIV SWAP4 SWAP1 SWAP2 GT SWAP1 SWAP2 SUB PUSH1 0x1 PUSH1 0xEE SHL MUL SWAP2 SWAP1 SWAP2 OR PUSH32 0xACCB18165BD6FE31AE1CF318DC5B51EEE0E1BA569B88CD74C1773B91FAC10669 MUL ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP3 GT ISZERO PUSH2 0x2067 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32342062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x81D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x26DE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x26C2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x26F0 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x272E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2739 DUP2 PUSH2 0x2706 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2780 DUP2 PUSH2 0x2706 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2790 DUP2 PUSH2 0x2706 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x76E DUP2 PUSH2 0x2706 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x27CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x27ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x27F8 DUP2 PUSH2 0x2706 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2814 PUSH1 0x60 DUP9 ADD PUSH2 0x27BE JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2849 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x2854 DUP2 PUSH2 0x2706 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x2864 DUP2 PUSH2 0x2706 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2880 PUSH1 0x80 DUP10 ADD PUSH2 0x27BE JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x28BA DUP2 PUSH2 0x2706 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x28CA DUP2 PUSH2 0x2706 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x28F3 DUP2 PUSH2 0x2706 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x28CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2920 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2941 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2959 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2988 JUMPI PUSH2 0x2988 PUSH2 0x2960 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x299F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x76E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x7068616E746F6D2E636F6E74726163742E726567697374657265640000000000 DUP2 MSTORE PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1B DUP3 ADD MSTORE PUSH1 0x2F ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x76E DUP2 PUSH2 0x2706 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x2A3F JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x2A61 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x2A75 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2A86 JUMPI PUSH2 0x2AB2 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x2AB2 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2AAA JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x2A91 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76E DUP3 DUP5 PUSH2 0x2A25 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2ADD JUMPI PUSH2 0x2ADD PUSH2 0x2960 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2B15 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xE9 PUSH29 0x66AEBCCE06ED9E156491364835E10155C6E5A744CCC677B46FE2636D PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        636,
        11928
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "6": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "8": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "12": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "REVERT",
      "path": "45"
    },
    "16": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "17": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "POP",
      "path": "45"
    },
    "18": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "21": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "LT",
      "path": "45"
    },
    "22": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1DA"
    },
    "25": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "26": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "29": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "SHR",
      "path": "45"
    },
    "32": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "33": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x7ECEBE00"
    },
    "38": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "GT",
      "path": "45"
    },
    "39": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x104"
    },
    "42": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "43": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "44": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xC3CDA520"
    },
    "49": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "GT",
      "path": "45"
    },
    "50": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xA2"
    },
    "53": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "54": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "55": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xDD62ED3E"
    },
    "60": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "GT",
      "path": "45"
    },
    "61": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "65": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "66": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xDD62ED3E"
    },
    "71": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "72": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x46F"
    },
    "75": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "76": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "77": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xDF835446"
    },
    "82": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "83": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x49A"
    },
    "86": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "87": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "88": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xE7A324DC"
    },
    "93": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "94": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x4AD"
    },
    "97": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "98": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "99": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xF1127ED8"
    },
    "104": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "105": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x4D4"
    },
    "108": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "109": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "112": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "REVERT",
      "path": "45"
    },
    "113": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "114": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "115": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xC3CDA520"
    },
    "120": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "121": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x416"
    },
    "124": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "125": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "126": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xCCA3E832"
    },
    "131": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "132": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x429"
    },
    "135": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "136": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "137": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xD4FF9A2C"
    },
    "142": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "143": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x449"
    },
    "146": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "147": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "148": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xD505ACCF"
    },
    "153": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "154": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x45C"
    },
    "157": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "158": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "161": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "REVERT",
      "path": "45"
    },
    "162": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "163": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "164": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x9AB24EB0"
    },
    "169": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "GT",
      "path": "45"
    },
    "170": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "174": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "175": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x9AB24EB0"
    },
    "180": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "181": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x3D5"
    },
    "184": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "185": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "186": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x9DC29FAC"
    },
    "191": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "192": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x3E8"
    },
    "195": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "196": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "197": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xA9059CBB"
    },
    "202": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "203": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x3FB"
    },
    "206": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "207": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "208": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xAF35C6C7"
    },
    "213": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "214": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x40E"
    },
    "217": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "218": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "221": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "REVERT",
      "path": "45"
    },
    "222": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "223": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "224": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x7ECEBE00"
    },
    "229": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "230": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x39A"
    },
    "233": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "234": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "235": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x8E539E8C"
    },
    "240": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "241": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x3BA"
    },
    "244": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "245": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "246": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x95D89B41"
    },
    "251": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "252": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x3CD"
    },
    "255": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "256": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "258": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "259": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "REVERT",
      "path": "45"
    },
    "260": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "261": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "262": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x3644E515"
    },
    "267": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "GT",
      "path": "45"
    },
    "268": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x17C"
    },
    "271": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "272": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "273": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x587CDE1E"
    },
    "278": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "GT",
      "path": "45"
    },
    "279": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x14B"
    },
    "282": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "283": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "284": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x587CDE1E"
    },
    "289": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "290": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x30B"
    },
    "293": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "294": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "295": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x5C19A95C"
    },
    "300": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "301": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x336"
    },
    "304": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "305": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "306": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x6FCFFF45"
    },
    "311": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "312": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x349"
    },
    "315": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "316": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "317": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x70A08231"
    },
    "322": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "323": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x371"
    },
    "326": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "327": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "329": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "330": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "REVERT",
      "path": "45"
    },
    "331": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "332": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "333": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x3644E515"
    },
    "338": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "339": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2B8"
    },
    "342": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "343": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "344": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x3A46B1A8"
    },
    "349": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "350": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2C0"
    },
    "353": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "354": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "355": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x3CEAD841"
    },
    "360": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "361": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2D3"
    },
    "364": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "365": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "366": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x40C10F19"
    },
    "371": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "372": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2F6"
    },
    "375": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "376": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "378": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "379": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "REVERT",
      "path": "45"
    },
    "380": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "381": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "382": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x223966ED"
    },
    "387": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "GT",
      "path": "45"
    },
    "388": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1B8"
    },
    "391": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "392": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "393": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x223966ED"
    },
    "398": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "399": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x232"
    },
    "402": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "403": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "404": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x23B872DD"
    },
    "409": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "410": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x245"
    },
    "413": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "414": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "415": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x30ADF81F"
    },
    "420": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "421": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x258"
    },
    "424": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "425": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "426": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x313CE567"
    },
    "431": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "432": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x27F"
    },
    "435": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "436": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "438": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "439": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "REVERT",
      "path": "45"
    },
    "440": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "441": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "442": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x6FDDE03"
    },
    "447": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "448": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1DF"
    },
    "451": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "452": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "453": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x95EA7B3"
    },
    "458": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "459": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1FD"
    },
    "462": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "463": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "464": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x18160DDD"
    },
    "469": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "EQ",
      "path": "45"
    },
    "470": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x220"
    },
    "473": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "474": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "475": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "477": {
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "DUP1",
      "path": "45"
    },
    "478": {
      "first_revert": true,
      "fn": null,
      "offset": [
        636,
        11928
      ],
      "op": "REVERT",
      "path": "45"
    },
    "479": {
      "offset": [
        703,
        721
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "480": {
      "fn": null,
      "offset": [
        703,
        721
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1E7"
    },
    "483": {
      "fn": null,
      "offset": [
        703,
        721
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x511"
    },
    "486": {
      "fn": null,
      "jump": "i",
      "offset": [
        703,
        721
      ],
      "op": "JUMP",
      "path": "42"
    },
    "487": {
      "fn": null,
      "offset": [
        703,
        721
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "488": {
      "fn": null,
      "offset": [
        703,
        721
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "490": {
      "fn": null,
      "offset": [
        703,
        721
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "491": {
      "fn": null,
      "offset": [
        703,
        721
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1F4"
    },
    "494": {
      "fn": null,
      "offset": [
        703,
        721
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "495": {
      "fn": null,
      "offset": [
        703,
        721
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "496": {
      "fn": null,
      "offset": [
        703,
        721
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x26B1"
    },
    "499": {
      "fn": null,
      "jump": "i",
      "offset": [
        703,
        721
      ],
      "op": "JUMP",
      "path": "42"
    },
    "500": {
      "fn": null,
      "offset": [
        703,
        721
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "501": {
      "fn": null,
      "offset": [
        703,
        721
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "503": {
      "fn": null,
      "offset": [
        703,
        721
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "504": {
      "fn": null,
      "offset": [
        703,
        721
      ],
      "op": "DUP1",
      "path": "42"
    },
    "505": {
      "fn": null,
      "offset": [
        703,
        721
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "506": {
      "fn": null,
      "offset": [
        703,
        721
      ],
      "op": "SUB",
      "path": "42"
    },
    "507": {
      "fn": null,
      "offset": [
        703,
        721
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "508": {
      "fn": null,
      "offset": [
        703,
        721
      ],
      "op": "RETURN",
      "path": "42"
    },
    "509": {
      "fn": "ERC20.approve",
      "offset": [
        2529,
        2749
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "510": {
      "fn": "ERC20.approve",
      "offset": [
        2529,
        2749
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x210"
    },
    "513": {
      "fn": "ERC20.approve",
      "offset": [
        2529,
        2749
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x20B"
    },
    "516": {
      "fn": "ERC20.approve",
      "offset": [
        2529,
        2749
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "517": {
      "fn": "ERC20.approve",
      "offset": [
        2529,
        2749
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "519": {
      "fn": "ERC20.approve",
      "offset": [
        2529,
        2749
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x271B"
    },
    "522": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2529,
        2749
      ],
      "op": "JUMP",
      "path": "42"
    },
    "523": {
      "fn": "ERC20.approve",
      "offset": [
        2529,
        2749
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "524": {
      "fn": "ERC20.approve",
      "offset": [
        2529,
        2749
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x59F"
    },
    "527": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2529,
        2749
      ],
      "op": "JUMP",
      "path": "42"
    },
    "528": {
      "fn": "ERC20.approve",
      "offset": [
        2529,
        2749
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "529": {
      "fn": "ERC20.approve",
      "offset": [
        2529,
        2749
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "531": {
      "fn": "ERC20.approve",
      "offset": [
        2529,
        2749
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "532": {
      "op": "SWAP1"
    },
    "533": {
      "op": "ISZERO"
    },
    "534": {
      "op": "ISZERO"
    },
    "535": {
      "op": "DUP2"
    },
    "536": {
      "op": "MSTORE"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "539": {
      "op": "ADD"
    },
    "540": {
      "fn": "ERC20.approve",
      "offset": [
        2529,
        2749
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1F4"
    },
    "543": {
      "op": "JUMP"
    },
    "544": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2291,
        2397
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "545": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2378,
        2390
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 0,
      "value": "0x2"
    },
    "547": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2378,
        2390
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "548": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2291,
        2397
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "549": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2291,
        2397
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "551": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2291,
        2397
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "552": {
      "op": "SWAP1"
    },
    "553": {
      "op": "DUP2"
    },
    "554": {
      "op": "MSTORE"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "557": {
      "op": "ADD"
    },
    "558": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2291,
        2397
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1F4"
    },
    "561": {
      "op": "JUMP"
    },
    "562": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5268,
        5396
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "563": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5268,
        5396
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x224"
    },
    "566": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5268,
        5396
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x240"
    },
    "569": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5268,
        5396
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "570": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5268,
        5396
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "572": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5268,
        5396
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2747"
    },
    "575": {
      "fn": "gPHM.balanceFromPHM",
      "jump": "i",
      "offset": [
        5268,
        5396
      ],
      "op": "JUMP",
      "path": "45"
    },
    "576": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5268,
        5396
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "577": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5268,
        5396
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x60C"
    },
    "580": {
      "fn": "gPHM.balanceFromPHM",
      "jump": "i",
      "offset": [
        5268,
        5396
      ],
      "op": "JUMP",
      "path": "45"
    },
    "581": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3199,
        3793
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "582": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3199,
        3793
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x210"
    },
    "585": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3199,
        3793
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x253"
    },
    "588": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3199,
        3793
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "589": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3199,
        3793
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "591": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3199,
        3793
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2760"
    },
    "594": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3199,
        3793
      ],
      "op": "JUMP",
      "path": "42"
    },
    "595": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3199,
        3793
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "596": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3199,
        3793
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x681"
    },
    "599": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3199,
        3793
      ],
      "op": "JUMP",
      "path": "42"
    },
    "600": {
      "offset": [
        1320,
        1465
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "601": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1320,
        1465
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x224"
    },
    "604": {
      "offset": [
        1370,
        1465
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
    },
    "637": {
      "offset": [
        1320,
        1465
      ],
      "op": "DUP2",
      "path": "42"
    },
    "638": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1320,
        1465
      ],
      "op": "JUMP",
      "path": "42"
    },
    "639": {
      "offset": [
        755,
        786
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "640": {
      "fn": "ERC20.transferFrom",
      "offset": [
        755,
        786
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2A6"
    },
    "643": {
      "fn": "ERC20.transferFrom",
      "offset": [
        755,
        786
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x0"
    },
    "676": {
      "fn": "ERC20.transferFrom",
      "offset": [
        755,
        786
      ],
      "op": "DUP2",
      "path": "42"
    },
    "677": {
      "fn": "ERC20.transferFrom",
      "offset": [
        755,
        786
      ],
      "op": "JUMP",
      "path": "42"
    },
    "678": {
      "fn": "ERC20.transferFrom",
      "offset": [
        755,
        786
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "679": {
      "fn": "ERC20.transferFrom",
      "offset": [
        755,
        786
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "681": {
      "fn": "ERC20.transferFrom",
      "offset": [
        755,
        786
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "682": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "684": {
      "op": "SWAP1"
    },
    "685": {
      "op": "SWAP2"
    },
    "686": {
      "op": "AND"
    },
    "687": {
      "op": "DUP2"
    },
    "688": {
      "op": "MSTORE"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "691": {
      "op": "ADD"
    },
    "692": {
      "offset": [
        755,
        786
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1F4"
    },
    "695": {
      "op": "JUMP"
    },
    "696": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5001,
        5178
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "697": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5001,
        5178
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x224"
    },
    "700": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5001,
        5178
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x775"
    },
    "703": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "jump": "i",
      "offset": [
        5001,
        5178
      ],
      "op": "JUMP",
      "path": "42"
    },
    "704": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        3970,
        4241
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "705": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        3970,
        4241
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x224"
    },
    "708": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        3970,
        4241
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2CE"
    },
    "711": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        3970,
        4241
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "712": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        3970,
        4241
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "714": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        3970,
        4241
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x271B"
    },
    "717": {
      "fn": "gPHM.getPastVotes",
      "jump": "i",
      "offset": [
        3970,
        4241
      ],
      "op": "JUMP",
      "path": "45"
    },
    "718": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        3970,
        4241
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "719": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        3970,
        4241
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x7D0"
    },
    "722": {
      "fn": "gPHM.getPastVotes",
      "jump": "i",
      "offset": [
        3970,
        4241
      ],
      "op": "JUMP",
      "path": "45"
    },
    "723": {
      "offset": [
        1073,
        1124
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "724": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x210"
    },
    "727": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2E1"
    },
    "730": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "731": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "733": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x27A1"
    },
    "736": {
      "fn": "gPHM.getPastVotes",
      "jump": "i",
      "offset": [
        1073,
        1124
      ],
      "op": "JUMP",
      "path": "45"
    },
    "737": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "738": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x52"
    },
    "740": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "742": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "743": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "745": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "746": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "DUP2",
      "path": "45"
    },
    "747": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "748": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "750": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "751": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "752": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "753": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xFF"
    },
    "755": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "AND",
      "path": "45"
    },
    "756": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "DUP2",
      "path": "45"
    },
    "757": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        1073,
        1124
      ],
      "op": "JUMP",
      "path": "45"
    },
    "758": {
      "fn": "gPHM.mint",
      "offset": [
        7245,
        7354
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "759": {
      "fn": "gPHM.mint",
      "offset": [
        7245,
        7354
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x309"
    },
    "762": {
      "fn": "gPHM.mint",
      "offset": [
        7245,
        7354
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x304"
    },
    "765": {
      "fn": "gPHM.mint",
      "offset": [
        7245,
        7354
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "766": {
      "fn": "gPHM.mint",
      "offset": [
        7245,
        7354
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "768": {
      "fn": "gPHM.mint",
      "offset": [
        7245,
        7354
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x271B"
    },
    "771": {
      "fn": "gPHM.mint",
      "jump": "i",
      "offset": [
        7245,
        7354
      ],
      "op": "JUMP",
      "path": "45"
    },
    "772": {
      "fn": "gPHM.mint",
      "offset": [
        7245,
        7354
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "773": {
      "fn": "gPHM.mint",
      "offset": [
        7245,
        7354
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x848"
    },
    "776": {
      "fn": "gPHM.mint",
      "jump": "i",
      "offset": [
        7245,
        7354
      ],
      "op": "JUMP",
      "path": "45"
    },
    "777": {
      "fn": "gPHM.mint",
      "offset": [
        7245,
        7354
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "778": {
      "fn": "gPHM.mint",
      "offset": [
        7245,
        7354
      ],
      "op": "STOP",
      "path": "45"
    },
    "779": {
      "fn": "gPHM.delegates",
      "offset": [
        2290,
        2498
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "780": {
      "fn": "gPHM.delegates",
      "offset": [
        2290,
        2498
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x31E"
    },
    "783": {
      "fn": "gPHM.delegates",
      "offset": [
        2290,
        2498
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x319"
    },
    "786": {
      "fn": "gPHM.delegates",
      "offset": [
        2290,
        2498
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "787": {
      "fn": "gPHM.delegates",
      "offset": [
        2290,
        2498
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "789": {
      "fn": "gPHM.delegates",
      "offset": [
        2290,
        2498
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x27A1"
    },
    "792": {
      "fn": "gPHM.delegates",
      "jump": "i",
      "offset": [
        2290,
        2498
      ],
      "op": "JUMP",
      "path": "45"
    },
    "793": {
      "fn": "gPHM.delegates",
      "offset": [
        2290,
        2498
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "794": {
      "fn": "gPHM.delegates",
      "offset": [
        2290,
        2498
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xAE4"
    },
    "797": {
      "fn": "gPHM.delegates",
      "jump": "i",
      "offset": [
        2290,
        2498
      ],
      "op": "JUMP",
      "path": "45"
    },
    "798": {
      "fn": "gPHM.delegates",
      "offset": [
        2290,
        2498
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "799": {
      "fn": "gPHM.delegates",
      "offset": [
        2290,
        2498
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "801": {
      "fn": "gPHM.delegates",
      "offset": [
        2290,
        2498
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "808": {
      "op": "SHL"
    },
    "809": {
      "op": "SUB"
    },
    "810": {
      "op": "SWAP1"
    },
    "811": {
      "op": "SWAP2"
    },
    "812": {
      "op": "AND"
    },
    "813": {
      "op": "DUP2"
    },
    "814": {
      "op": "MSTORE"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "817": {
      "op": "ADD"
    },
    "818": {
      "fn": "gPHM.delegates",
      "offset": [
        2290,
        2498
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1F4"
    },
    "821": {
      "op": "JUMP"
    },
    "822": {
      "fn": "gPHM.delegate",
      "offset": [
        2504,
        2605
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "823": {
      "fn": "gPHM.delegate",
      "offset": [
        2504,
        2605
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x309"
    },
    "826": {
      "fn": "gPHM.delegate",
      "offset": [
        2504,
        2605
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x344"
    },
    "829": {
      "fn": "gPHM.delegate",
      "offset": [
        2504,
        2605
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "830": {
      "fn": "gPHM.delegate",
      "offset": [
        2504,
        2605
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "832": {
      "fn": "gPHM.delegate",
      "offset": [
        2504,
        2605
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x27A1"
    },
    "835": {
      "fn": "gPHM.delegate",
      "jump": "i",
      "offset": [
        2504,
        2605
      ],
      "op": "JUMP",
      "path": "45"
    },
    "836": {
      "fn": "gPHM.delegate",
      "offset": [
        2504,
        2605
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "837": {
      "fn": "gPHM.delegate",
      "offset": [
        2504,
        2605
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB14"
    },
    "840": {
      "fn": "gPHM.delegate",
      "jump": "i",
      "offset": [
        2504,
        2605
      ],
      "op": "JUMP",
      "path": "45"
    },
    "841": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5696,
        5845
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "842": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5696,
        5845
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x35C"
    },
    "845": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5696,
        5845
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x357"
    },
    "848": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5696,
        5845
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "849": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5696,
        5845
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "851": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5696,
        5845
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x27A1"
    },
    "854": {
      "fn": "gPHM.numCheckpoints",
      "jump": "i",
      "offset": [
        5696,
        5845
      ],
      "op": "JUMP",
      "path": "45"
    },
    "855": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5696,
        5845
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "856": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5696,
        5845
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB21"
    },
    "859": {
      "fn": "gPHM.numCheckpoints",
      "jump": "i",
      "offset": [
        5696,
        5845
      ],
      "op": "JUMP",
      "path": "45"
    },
    "860": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5696,
        5845
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "861": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5696,
        5845
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "863": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5696,
        5845
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "864": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "869": {
      "op": "SWAP1"
    },
    "870": {
      "op": "SWAP2"
    },
    "871": {
      "op": "AND"
    },
    "872": {
      "op": "DUP2"
    },
    "873": {
      "op": "MSTORE"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "876": {
      "op": "ADD"
    },
    "877": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5696,
        5845
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1F4"
    },
    "880": {
      "op": "JUMP"
    },
    "881": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2403,
        2523
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "882": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2403,
        2523
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x224"
    },
    "885": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2403,
        2523
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x37F"
    },
    "888": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2403,
        2523
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "889": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2403,
        2523
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "891": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2403,
        2523
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x27A1"
    },
    "894": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        2403,
        2523
      ],
      "op": "JUMP",
      "path": "42"
    },
    "895": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2403,
        2523
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "902": {
      "op": "SHL"
    },
    "903": {
      "op": "SUB"
    },
    "904": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2500,
        2516
      ],
      "op": "AND",
      "path": "42",
      "statement": 1
    },
    "905": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2474,
        2481
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "907": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2500,
        2516
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "908": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2500,
        2516
      ],
      "op": "DUP2",
      "path": "42"
    },
    "909": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2500,
        2516
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "910": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2500,
        2510
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x3"
    },
    "912": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2500,
        2516
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "914": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2500,
        2516
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "915": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2500,
        2516
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "917": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2500,
        2516
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "918": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2500,
        2516
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "919": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2500,
        2516
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "920": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2500,
        2516
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "921": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2403,
        2523
      ],
      "op": "JUMP",
      "path": "42"
    },
    "922": {
      "offset": [
        1580,
        1621
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "923": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x224"
    },
    "926": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3A8"
    },
    "929": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "930": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "932": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x27A1"
    },
    "935": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        1580,
        1621
      ],
      "op": "JUMP",
      "path": "42"
    },
    "936": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "937": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x5"
    },
    "939": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "941": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "942": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "944": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "945": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "DUP2",
      "path": "42"
    },
    "946": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "947": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "949": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "950": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "951": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "952": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "DUP2",
      "path": "42"
    },
    "953": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1580,
        1621
      ],
      "op": "JUMP",
      "path": "42"
    },
    "954": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4520,
        4776
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "955": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4520,
        4776
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x224"
    },
    "958": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4520,
        4776
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x3C8"
    },
    "961": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4520,
        4776
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "962": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4520,
        4776
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "964": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4520,
        4776
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2747"
    },
    "967": {
      "fn": "gPHM.getPastTotalSupply",
      "jump": "i",
      "offset": [
        4520,
        4776
      ],
      "op": "JUMP",
      "path": "45"
    },
    "968": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4520,
        4776
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "969": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4520,
        4776
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB43"
    },
    "972": {
      "fn": "gPHM.getPastTotalSupply",
      "jump": "i",
      "offset": [
        4520,
        4776
      ],
      "op": "JUMP",
      "path": "45"
    },
    "973": {
      "offset": [
        728,
        748
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "974": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        728,
        748
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1E7"
    },
    "977": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        728,
        748
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xB9F"
    },
    "980": {
      "fn": "gPHM.getPastTotalSupply",
      "jump": "i",
      "offset": [
        728,
        748
      ],
      "op": "JUMP",
      "path": "42"
    },
    "981": {
      "fn": "gPHM.getVotes",
      "offset": [
        2684,
        2893
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "982": {
      "fn": "gPHM.getVotes",
      "offset": [
        2684,
        2893
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x224"
    },
    "985": {
      "fn": "gPHM.getVotes",
      "offset": [
        2684,
        2893
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x3E3"
    },
    "988": {
      "fn": "gPHM.getVotes",
      "offset": [
        2684,
        2893
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "989": {
      "fn": "gPHM.getVotes",
      "offset": [
        2684,
        2893
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "991": {
      "fn": "gPHM.getVotes",
      "offset": [
        2684,
        2893
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x27A1"
    },
    "994": {
      "fn": "gPHM.getVotes",
      "jump": "i",
      "offset": [
        2684,
        2893
      ],
      "op": "JUMP",
      "path": "45"
    },
    "995": {
      "fn": "gPHM.getVotes",
      "offset": [
        2684,
        2893
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "996": {
      "fn": "gPHM.getVotes",
      "offset": [
        2684,
        2893
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xBAC"
    },
    "999": {
      "fn": "gPHM.getVotes",
      "jump": "i",
      "offset": [
        2684,
        2893
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1000": {
      "fn": "gPHM.burn",
      "offset": [
        7639,
        7758
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1001": {
      "fn": "gPHM.burn",
      "offset": [
        7639,
        7758
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x309"
    },
    "1004": {
      "fn": "gPHM.burn",
      "offset": [
        7639,
        7758
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x3F6"
    },
    "1007": {
      "fn": "gPHM.burn",
      "offset": [
        7639,
        7758
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "1008": {
      "fn": "gPHM.burn",
      "offset": [
        7639,
        7758
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1010": {
      "fn": "gPHM.burn",
      "offset": [
        7639,
        7758
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x271B"
    },
    "1013": {
      "fn": "gPHM.burn",
      "jump": "i",
      "offset": [
        7639,
        7758
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1014": {
      "fn": "gPHM.burn",
      "offset": [
        7639,
        7758
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1015": {
      "fn": "gPHM.burn",
      "offset": [
        7639,
        7758
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xC33"
    },
    "1018": {
      "fn": "gPHM.burn",
      "jump": "i",
      "offset": [
        7639,
        7758
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1019": {
      "fn": "ERC20.transfer",
      "offset": [
        2755,
        3193
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1020": {
      "fn": "ERC20.transfer",
      "offset": [
        2755,
        3193
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x210"
    },
    "1023": {
      "fn": "ERC20.transfer",
      "offset": [
        2755,
        3193
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x409"
    },
    "1026": {
      "fn": "ERC20.transfer",
      "offset": [
        2755,
        3193
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "1027": {
      "fn": "ERC20.transfer",
      "offset": [
        2755,
        3193
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "1029": {
      "fn": "ERC20.transfer",
      "offset": [
        2755,
        3193
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x271B"
    },
    "1032": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2755,
        3193
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1033": {
      "fn": "ERC20.transfer",
      "offset": [
        2755,
        3193
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1034": {
      "fn": "ERC20.transfer",
      "offset": [
        2755,
        3193
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xECA"
    },
    "1037": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2755,
        3193
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1038": {
      "fn": "gPHM.enableTransfers",
      "offset": [
        1728,
        1828
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1039": {
      "fn": "gPHM.enableTransfers",
      "offset": [
        1728,
        1828
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x309"
    },
    "1042": {
      "fn": "gPHM.enableTransfers",
      "offset": [
        1728,
        1828
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xF4C"
    },
    "1045": {
      "fn": "gPHM.enableTransfers",
      "jump": "i",
      "offset": [
        1728,
        1828
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1046": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        2899,
        3773
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1047": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        2899,
        3773
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x309"
    },
    "1050": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        2899,
        3773
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x424"
    },
    "1053": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        2899,
        3773
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "1054": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        2899,
        3773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1056": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        2899,
        3773
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x27D4"
    },
    "1059": {
      "fn": "gPHM.delegateBySig",
      "jump": "i",
      "offset": [
        2899,
        3773
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1060": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        2899,
        3773
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1061": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        2899,
        3773
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x11E6"
    },
    "1064": {
      "fn": "gPHM.delegateBySig",
      "jump": "i",
      "offset": [
        2899,
        3773
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1065": {
      "offset": [
        1013,
        1058
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1066": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x224"
    },
    "1069": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x437"
    },
    "1072": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "1073": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "1075": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x27A1"
    },
    "1078": {
      "fn": "gPHM.delegateBySig",
      "jump": "i",
      "offset": [
        1013,
        1058
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1079": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1080": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x3"
    },
    "1082": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "1084": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1085": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1087": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1088": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1089": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1090": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "1092": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1093": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "1094": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "1095": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1096": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        1013,
        1058
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1097": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        4959,
        5085
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1098": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        4959,
        5085
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x224"
    },
    "1101": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        4959,
        5085
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x457"
    },
    "1104": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        4959,
        5085
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "1105": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        4959,
        5085
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1107": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        4959,
        5085
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2747"
    },
    "1110": {
      "fn": "gPHM.balanceToPHM",
      "jump": "i",
      "offset": [
        4959,
        5085
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1111": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        4959,
        5085
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1112": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        4959,
        5085
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x13EC"
    },
    "1115": {
      "fn": "gPHM.balanceToPHM",
      "jump": "i",
      "offset": [
        4959,
        5085
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1116": {
      "fn": "ERC20.permit",
      "offset": [
        3984,
        4995
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1117": {
      "fn": "ERC20.permit",
      "offset": [
        3984,
        4995
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x309"
    },
    "1120": {
      "fn": "ERC20.permit",
      "offset": [
        3984,
        4995
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x46A"
    },
    "1123": {
      "fn": "ERC20.permit",
      "offset": [
        3984,
        4995
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "1124": {
      "fn": "ERC20.permit",
      "offset": [
        3984,
        4995
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "1126": {
      "fn": "ERC20.permit",
      "offset": [
        3984,
        4995
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x282E"
    },
    "1129": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        3984,
        4995
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1130": {
      "fn": "ERC20.permit",
      "offset": [
        3984,
        4995
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1131": {
      "fn": "ERC20.permit",
      "offset": [
        3984,
        4995
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1461"
    },
    "1134": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        3984,
        4995
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1135": {
      "offset": [
        1065,
        1129
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1136": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x224"
    },
    "1139": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x47D"
    },
    "1142": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "CALLDATASIZE",
      "path": "42"
    },
    "1143": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "1145": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x289C"
    },
    "1148": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        1065,
        1129
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1149": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1150": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "1152": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "1154": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1155": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1156": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1157": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1159": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "1160": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "DUP4",
      "path": "42"
    },
    "1161": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1162": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "1164": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1165": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "DUP5",
      "path": "42"
    },
    "1166": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "1167": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1168": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1169": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1170": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1171": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "DUP3",
      "path": "42"
    },
    "1172": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1173": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1174": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "1175": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "1176": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1177": {
      "fn": "ERC20.permit",
      "offset": [
        1065,
        1129
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1178": {
      "fn": "gPHM.addApprovedDelegatee",
      "offset": [
        1888,
        2019
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1179": {
      "fn": "gPHM.addApprovedDelegatee",
      "offset": [
        1888,
        2019
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x309"
    },
    "1182": {
      "fn": "gPHM.addApprovedDelegatee",
      "offset": [
        1888,
        2019
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x4A8"
    },
    "1185": {
      "fn": "gPHM.addApprovedDelegatee",
      "offset": [
        1888,
        2019
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "1186": {
      "fn": "gPHM.addApprovedDelegatee",
      "offset": [
        1888,
        2019
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1188": {
      "fn": "gPHM.addApprovedDelegatee",
      "offset": [
        1888,
        2019
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x27A1"
    },
    "1191": {
      "fn": "gPHM.addApprovedDelegatee",
      "jump": "i",
      "offset": [
        1888,
        2019
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1192": {
      "fn": "gPHM.addApprovedDelegatee",
      "offset": [
        1888,
        2019
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1193": {
      "fn": "gPHM.addApprovedDelegatee",
      "offset": [
        1888,
        2019
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x16C1"
    },
    "1196": {
      "fn": "gPHM.addApprovedDelegatee",
      "jump": "i",
      "offset": [
        1888,
        2019
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1197": {
      "offset": [
        941,
        1066
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1198": {
      "fn": "gPHM.addApprovedDelegatee",
      "offset": [
        941,
        1066
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x224"
    },
    "1201": {
      "offset": [
        995,
        1066
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
    },
    "1234": {
      "offset": [
        941,
        1066
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1235": {
      "fn": "gPHM.addApprovedDelegatee",
      "offset": [
        941,
        1066
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1236": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5473,
        5621
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1237": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5473,
        5621
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x4E7"
    },
    "1240": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5473,
        5621
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x4E2"
    },
    "1243": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5473,
        5621
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "1244": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5473,
        5621
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1246": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5473,
        5621
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x28D5"
    },
    "1249": {
      "fn": "gPHM.checkpoints",
      "jump": "i",
      "offset": [
        5473,
        5621
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1250": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5473,
        5621
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1251": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5473,
        5621
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x197A"
    },
    "1254": {
      "fn": "gPHM.checkpoints",
      "jump": "i",
      "offset": [
        5473,
        5621
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1255": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5473,
        5621
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1256": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5473,
        5621
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1258": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5473,
        5621
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1259": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5473,
        5621
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1260": {
      "op": "DUP3"
    },
    "1261": {
      "op": "MLOAD"
    },
    "1262": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1267": {
      "op": "AND"
    },
    "1268": {
      "op": "DUP2"
    },
    "1269": {
      "op": "MSTORE"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1272": {
      "op": "SWAP3"
    },
    "1273": {
      "op": "DUP4"
    },
    "1274": {
      "op": "ADD"
    },
    "1275": {
      "op": "MLOAD"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1282": {
      "op": "SHL"
    },
    "1283": {
      "op": "SUB"
    },
    "1284": {
      "op": "AND"
    },
    "1285": {
      "op": "SWAP3"
    },
    "1286": {
      "op": "DUP2"
    },
    "1287": {
      "op": "ADD"
    },
    "1288": {
      "op": "SWAP3"
    },
    "1289": {
      "op": "SWAP1"
    },
    "1290": {
      "op": "SWAP3"
    },
    "1291": {
      "op": "MSTORE"
    },
    "1292": {
      "op": "ADD"
    },
    "1293": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5473,
        5621
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1F4"
    },
    "1296": {
      "op": "JUMP"
    },
    "1297": {
      "offset": [
        703,
        721
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1298": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1300": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1301": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "1302": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x51E"
    },
    "1305": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1306": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x290C"
    },
    "1309": {
      "fn": "gPHM.checkpoints",
      "jump": "i",
      "offset": [
        703,
        721
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1310": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1311": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1312": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "1314": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "ADD",
      "path": "42"
    },
    "1315": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "1317": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1318": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1319": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DIV",
      "path": "42"
    },
    "1320": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "MUL",
      "path": "42"
    },
    "1321": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "1323": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "ADD",
      "path": "42"
    },
    "1324": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "1326": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "1327": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1328": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1329": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "ADD",
      "path": "42"
    },
    "1330": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "1332": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1333": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1334": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "1335": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1336": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1337": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1338": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1339": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1340": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "1342": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "ADD",
      "path": "42"
    },
    "1343": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP3",
      "path": "42"
    },
    "1344": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1345": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "1346": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x54A"
    },
    "1349": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1350": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x290C"
    },
    "1353": {
      "fn": "gPHM.checkpoints",
      "jump": "i",
      "offset": [
        703,
        721
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1354": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1355": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1356": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1357": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x597"
    },
    "1360": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1361": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1362": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "1364": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "LT",
      "path": "42"
    },
    "1365": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x56C"
    },
    "1368": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1369": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "1372": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1373": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP4",
      "path": "42"
    },
    "1374": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "1375": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DIV",
      "path": "42"
    },
    "1376": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "MUL",
      "path": "42"
    },
    "1377": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP4",
      "path": "42"
    },
    "1378": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1379": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1380": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "1382": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "ADD",
      "path": "42"
    },
    "1383": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1384": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x597"
    },
    "1387": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1388": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1389": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP3",
      "path": "42"
    },
    "1390": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "ADD",
      "path": "42"
    },
    "1391": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1392": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1393": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1395": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1396": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "1398": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1400": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "1401": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1402": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1403": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1404": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "1405": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1406": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1407": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1408": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "1410": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "ADD",
      "path": "42"
    },
    "1411": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1412": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "1414": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "ADD",
      "path": "42"
    },
    "1415": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1416": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP4",
      "path": "42"
    },
    "1417": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "GT",
      "path": "42"
    },
    "1418": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x57A"
    },
    "1421": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1422": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP3",
      "path": "42"
    },
    "1423": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1424": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SUB",
      "path": "42"
    },
    "1425": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "1427": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "AND",
      "path": "42"
    },
    "1428": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP3",
      "path": "42"
    },
    "1429": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "ADD",
      "path": "42"
    },
    "1430": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1431": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1432": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "POP",
      "path": "42"
    },
    "1433": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "POP",
      "path": "42"
    },
    "1434": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "POP",
      "path": "42"
    },
    "1435": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "POP",
      "path": "42"
    },
    "1436": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "POP",
      "path": "42"
    },
    "1437": {
      "fn": "gPHM.checkpoints",
      "offset": [
        703,
        721
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1438": {
      "fn": "gPHM.checkpoints",
      "jump": "o",
      "offset": [
        703,
        721
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1439": {
      "fn": "ERC20.approve",
      "offset": [
        2529,
        2749
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1440": {
      "fn": "ERC20.approve",
      "offset": [
        2638,
        2648
      ],
      "op": "CALLER",
      "path": "42",
      "statement": 2
    },
    "1441": {
      "fn": "ERC20.approve",
      "offset": [
        2612,
        2616
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1443": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2649
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1444": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2649
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1445": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2649
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1446": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2637
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "1448": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2649
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "1450": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2649
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1451": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2649
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1452": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2649
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1453": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2649
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "1455": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2649
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1456": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2649
      ],
      "op": "DUP4",
      "path": "42"
    },
    "1457": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2649
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1464": {
      "op": "SHL"
    },
    "1465": {
      "op": "SUB"
    },
    "1466": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2658
      ],
      "op": "DUP8",
      "path": "42"
    },
    "1467": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2658
      ],
      "op": "AND",
      "path": "42"
    },
    "1468": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2658
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1469": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2658
      ],
      "op": "DUP6",
      "path": "42"
    },
    "1470": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2658
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1471": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2658
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "1472": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2658
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1473": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2658
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1474": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2658
      ],
      "op": "DUP4",
      "path": "42"
    },
    "1475": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2658
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "1476": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2667
      ],
      "op": "DUP6",
      "path": "42"
    },
    "1477": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2667
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1478": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2667
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "1479": {
      "fn": "ERC20.approve",
      "offset": [
        2683,
        2720
      ],
      "op": "MLOAD",
      "path": "42",
      "statement": 3
    },
    "1480": {
      "fn": "ERC20.approve",
      "offset": [
        2612,
        2616
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1481": {
      "fn": "ERC20.approve",
      "offset": [
        2612,
        2616
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "1482": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2658
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1483": {
      "fn": "ERC20.approve",
      "offset": [
        2628,
        2658
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1484": {
      "fn": "ERC20.approve",
      "offset": [
        2683,
        2720
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1517": {
      "fn": "ERC20.approve",
      "offset": [
        2683,
        2720
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1518": {
      "fn": "ERC20.approve",
      "offset": [
        2683,
        2720
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x5FA"
    },
    "1521": {
      "fn": "ERC20.approve",
      "offset": [
        2683,
        2720
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1522": {
      "fn": "ERC20.approve",
      "offset": [
        2661,
        2667
      ],
      "op": "DUP7",
      "path": "42"
    },
    "1523": {
      "op": "DUP2"
    },
    "1524": {
      "op": "MSTORE"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1527": {
      "op": "ADD"
    },
    "1528": {
      "op": "SWAP1"
    },
    "1529": {
      "op": "JUMP"
    },
    "1530": {
      "fn": "ERC20.approve",
      "offset": [
        2683,
        2720
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1531": {
      "fn": "ERC20.approve",
      "offset": [
        2683,
        2720
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "1533": {
      "fn": "ERC20.approve",
      "offset": [
        2683,
        2720
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "1534": {
      "fn": "ERC20.approve",
      "offset": [
        2683,
        2720
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1535": {
      "fn": "ERC20.approve",
      "offset": [
        2683,
        2720
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1536": {
      "fn": "ERC20.approve",
      "offset": [
        2683,
        2720
      ],
      "op": "SUB",
      "path": "42"
    },
    "1537": {
      "fn": "ERC20.approve",
      "offset": [
        2683,
        2720
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1538": {
      "fn": "ERC20.approve",
      "offset": [
        2683,
        2720
      ],
      "op": "LOG3",
      "path": "42"
    },
    "1539": {
      "op": "POP"
    },
    "1540": {
      "fn": "ERC20.approve",
      "offset": [
        2738,
        2742
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 4,
      "value": "0x1"
    },
    "1542": {
      "fn": "ERC20.approve",
      "offset": [
        2529,
        2749
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1543": {
      "fn": "ERC20.approve",
      "offset": [
        2529,
        2749
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "1544": {
      "fn": "ERC20.approve",
      "offset": [
        2529,
        2749
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1545": {
      "fn": "ERC20.approve",
      "offset": [
        2529,
        2749
      ],
      "op": "POP",
      "path": "42"
    },
    "1546": {
      "fn": "ERC20.approve",
      "offset": [
        2529,
        2749
      ],
      "op": "POP",
      "path": "42"
    },
    "1547": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        2529,
        2749
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1548": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5268,
        5396
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1549": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5329,
        5336
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1551": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5355,
        5389
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 5,
      "value": "0x606"
    },
    "1554": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5372
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x619"
    },
    "1557": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5370
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x19FE"
    },
    "1560": {
      "fn": "gPHM.balanceFromPHM",
      "jump": "i",
      "offset": [
        5366,
        5372
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1561": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5372
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1568": {
      "op": "SHL"
    },
    "1569": {
      "op": "SUB"
    },
    "1570": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5386
      ],
      "op": "AND",
      "path": "45"
    },
    "1571": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5386
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xED3437F8"
    },
    "1576": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1578": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1579": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1580": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "1585": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "AND",
      "path": "45"
    },
    "1586": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xE0"
    },
    "1588": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "SHL",
      "path": "45"
    },
    "1589": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1590": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1591": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1593": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "ADD",
      "path": "45"
    },
    "1594": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1596": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1598": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1599": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1600": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1601": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "SUB",
      "path": "45"
    },
    "1602": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1603": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "DUP7",
      "path": "45"
    },
    "1604": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "GAS",
      "path": "45"
    },
    "1605": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "STATICCALL",
      "path": "45"
    },
    "1606": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1607": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1608": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1609": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x656"
    },
    "1612": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1613": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "1614": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1616": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1617": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "1618": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "1619": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1621": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1622": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1623": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "POP",
      "path": "45"
    },
    "1624": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "POP",
      "path": "45"
    },
    "1625": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "POP",
      "path": "45"
    },
    "1626": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "POP",
      "path": "45"
    },
    "1627": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1629": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1630": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "1631": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "1633": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "NOT",
      "path": "45"
    },
    "1634": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "1636": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1637": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "ADD",
      "path": "45"
    },
    "1638": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "AND",
      "path": "45"
    },
    "1639": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1640": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "ADD",
      "path": "45"
    },
    "1641": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1642": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1644": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1645": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "POP",
      "path": "45"
    },
    "1646": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1647": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "ADD",
      "path": "45"
    },
    "1648": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1649": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x67A"
    },
    "1652": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1653": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1654": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2947"
    },
    "1657": {
      "fn": "gPHM.balanceFromPHM",
      "jump": "i",
      "offset": [
        5366,
        5388
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1658": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5366,
        5388
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1659": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5355,
        5361
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1660": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5355,
        5361
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1661": {
      "fn": "gPHM.balanceFromPHM",
      "offset": [
        5355,
        5365
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1A98"
    },
    "1664": {
      "fn": "gPHM.balanceFromPHM",
      "jump": "i",
      "offset": [
        5355,
        5389
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3199,
        3793
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1672": {
      "op": "SHL"
    },
    "1673": {
      "op": "SUB"
    },
    "1674": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3361
      ],
      "op": "DUP4",
      "path": "42"
    },
    "1675": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3361
      ],
      "op": "AND",
      "path": "42"
    },
    "1676": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3326,
        3330
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1678": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3361
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1679": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3361
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1680": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3361
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1681": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3355
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "1683": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3361
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "1685": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3361
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1686": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3361
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1687": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3361
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1688": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3361
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "1690": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3361
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1691": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3361
      ],
      "op": "DUP4",
      "path": "42"
    },
    "1692": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3361
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "1693": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3362,
        3372
      ],
      "op": "CALLER",
      "path": "42"
    },
    "1694": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3373
      ],
      "op": "DUP5",
      "path": "42"
    },
    "1695": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3373
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1696": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3373
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1697": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3373
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1698": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3373
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1699": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3373
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1700": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3373
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "1701": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3373
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1704": {
      "op": "NOT"
    },
    "1705": {
      "branch": 123,
      "fn": "ERC20.transferFrom",
      "offset": [
        3346,
        3394
      ],
      "op": "EQ",
      "path": "42"
    },
    "1706": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3342,
        3458
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x6E6"
    },
    "1709": {
      "branch": 123,
      "fn": "ERC20.transferFrom",
      "offset": [
        3342,
        3458
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1716": {
      "op": "SHL"
    },
    "1717": {
      "op": "SUB"
    },
    "1718": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3425
      ],
      "op": "DUP5",
      "path": "42",
      "statement": 6
    },
    "1719": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3425
      ],
      "op": "AND",
      "path": "42"
    },
    "1720": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3425
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1722": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3425
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1723": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3425
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1724": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3425
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1725": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3419
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "1727": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3425
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "1729": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3425
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1730": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3425
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1731": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3425
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1732": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3425
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "1734": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3425
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1735": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3425
      ],
      "op": "DUP4",
      "path": "42"
    },
    "1736": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3425
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "1737": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3426,
        3436
      ],
      "op": "CALLER",
      "path": "42"
    },
    "1738": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3437
      ],
      "op": "DUP5",
      "path": "42"
    },
    "1739": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3437
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1740": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3437
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1741": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3437
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1742": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3437
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1743": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3437
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1744": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3437
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "1745": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3447
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1746": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3447
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "1747": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3441,
        3447
      ],
      "op": "DUP5",
      "path": "42"
    },
    "1748": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3441,
        3447
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "1749": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3425
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1750": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3447
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x6E0"
    },
    "1753": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3447
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1754": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3441,
        3447
      ],
      "op": "DUP5",
      "path": "42"
    },
    "1755": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3441,
        3447
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1756": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3447
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2976"
    },
    "1759": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3410,
        3447
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1760": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3447
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1761": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3447
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1762": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3447
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1763": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3410,
        3447
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "1764": {
      "op": "POP"
    },
    "1765": {
      "op": "POP"
    },
    "1766": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3342,
        3458
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1773": {
      "op": "SHL"
    },
    "1774": {
      "op": "SUB"
    },
    "1775": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3484
      ],
      "op": "DUP5",
      "path": "42",
      "statement": 7
    },
    "1776": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3484
      ],
      "op": "AND",
      "path": "42"
    },
    "1777": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3484
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1779": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3484
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1780": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3484
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1781": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3484
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1782": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3478
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x3"
    },
    "1784": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3484
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "1786": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3484
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1787": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3484
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "1789": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3484
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1790": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3484
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "1791": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3494
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1792": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3494
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "1793": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3488,
        3494
      ],
      "op": "DUP5",
      "path": "42"
    },
    "1794": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3488,
        3494
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "1795": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3484
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1796": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3494
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x70E"
    },
    "1799": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3494
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1800": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3488,
        3494
      ],
      "op": "DUP5",
      "path": "42"
    },
    "1801": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3488,
        3494
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1802": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3494
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2976"
    },
    "1805": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3468,
        3494
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1806": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3494
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1807": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3494
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1808": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3494
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1809": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3468,
        3494
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "1810": {
      "op": "POP"
    },
    "1811": {
      "op": "POP"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1818": {
      "op": "SHL"
    },
    "1819": {
      "op": "SUB"
    },
    "1820": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3654
      ],
      "op": "DUP1",
      "path": "42",
      "statement": 8
    },
    "1821": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3654
      ],
      "op": "DUP5",
      "path": "42"
    },
    "1822": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3654
      ],
      "op": "AND",
      "path": "42"
    },
    "1823": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3654
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1825": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3654
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1826": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3654
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1827": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3654
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1828": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3650
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x3"
    },
    "1830": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3654
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "1832": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3654
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "1833": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3654
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "1835": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3654
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1836": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3654
      ],
      "op": "DUP2",
      "path": "42"
    },
    "1837": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3654
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1838": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3654
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "1839": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3664
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1840": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3664
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "1841": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3664
      ],
      "op": "DUP7",
      "path": "42"
    },
    "1842": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3664
      ],
      "op": "ADD",
      "path": "42"
    },
    "1843": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3664
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1844": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3664
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "1845": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3690,
        3716
      ],
      "op": "MLOAD",
      "path": "42",
      "statement": 9
    },
    "1846": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3654
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1847": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3640,
        3654
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1848": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3690,
        3716
      ],
      "op": "DUP7",
      "path": "42"
    },
    "1849": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3690,
        3716
      ],
      "op": "AND",
      "path": "42"
    },
    "1850": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3690,
        3716
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1853": {
      "op": "DUP1"
    },
    "1854": {
      "op": "MLOAD"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1857": {
      "op": "PUSH2",
      "value": "0x2B1B"
    },
    "1860": {
      "op": "DUP4"
    },
    "1861": {
      "op": "CODECOPY"
    },
    "1862": {
      "op": "DUP2"
    },
    "1863": {
      "op": "MLOAD"
    },
    "1864": {
      "op": "SWAP2"
    },
    "1865": {
      "op": "MSTORE"
    },
    "1866": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3690,
        3716
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1867": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3690,
        3716
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x757"
    },
    "1870": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3690,
        3716
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1871": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3658,
        3664
      ],
      "op": "DUP7",
      "path": "42"
    },
    "1872": {
      "op": "DUP2"
    },
    "1873": {
      "op": "MSTORE"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1876": {
      "op": "ADD"
    },
    "1877": {
      "op": "SWAP1"
    },
    "1878": {
      "op": "JUMP"
    },
    "1879": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3690,
        3716
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1880": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3690,
        3716
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "1882": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3690,
        3716
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "1883": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3690,
        3716
      ],
      "op": "DUP1",
      "path": "42"
    },
    "1884": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3690,
        3716
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "1885": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3690,
        3716
      ],
      "op": "SUB",
      "path": "42"
    },
    "1886": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3690,
        3716
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1887": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3690,
        3716
      ],
      "op": "LOG3",
      "path": "42"
    },
    "1888": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3727,
        3764
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 10,
      "value": "0x76A"
    },
    "1891": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3747,
        3751
      ],
      "op": "DUP5",
      "path": "42"
    },
    "1892": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3753,
        3755
      ],
      "op": "DUP5",
      "path": "42"
    },
    "1893": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3757,
        3763
      ],
      "op": "DUP5",
      "path": "42"
    },
    "1894": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3727,
        3746
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1AAD"
    },
    "1897": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3727,
        3764
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1898": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3727,
        3764
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1899": {
      "op": "POP"
    },
    "1900": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3782,
        3786
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 11,
      "value": "0x1"
    },
    "1902": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3199,
        3793
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1903": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3199,
        3793
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "1904": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3199,
        3793
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "1905": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3199,
        3793
      ],
      "op": "POP",
      "path": "42"
    },
    "1906": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3199,
        3793
      ],
      "op": "POP",
      "path": "42"
    },
    "1907": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3199,
        3793
      ],
      "op": "POP",
      "path": "42"
    },
    "1908": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        3199,
        3793
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1909": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5001,
        5178
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1910": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5058,
        5065
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1912": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5101,
        5117
      ],
      "op": "PUSH32",
      "path": "42",
      "statement": 12,
      "value": "0x0"
    },
    "1945": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5084,
        5097
      ],
      "op": "CHAINID",
      "path": "42"
    },
    "1946": {
      "branch": 124,
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5084,
        5117
      ],
      "op": "EQ",
      "path": "42"
    },
    "1947": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5084,
        5171
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x7AB"
    },
    "1950": {
      "branch": 124,
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5084,
        5171
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1951": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5147,
        5171
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x7A6"
    },
    "1954": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5147,
        5169
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1CCC"
    },
    "1957": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "jump": "i",
      "offset": [
        5147,
        5171
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1958": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5147,
        5171
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1959": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5077,
        5171
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1960": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5077,
        5171
      ],
      "op": "POP",
      "path": "42"
    },
    "1961": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5001,
        5178
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1962": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "jump": "o",
      "offset": [
        5001,
        5178
      ],
      "op": "JUMP",
      "path": "42"
    },
    "1963": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5084,
        5171
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1964": {
      "op": "POP"
    },
    "1965": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5120,
        5144
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x0"
    },
    "1998": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5120,
        5144
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "1999": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "jump": "o",
      "offset": [
        5001,
        5178
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2000": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        3970,
        4241
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2001": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4068,
        4081
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2003": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4115,
        4127
      ],
      "op": "NUMBER",
      "path": "45",
      "statement": 13
    },
    "2004": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4101,
        4112
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2005": {
      "branch": 97,
      "fn": "gPHM.getPastVotes",
      "offset": [
        4101,
        4127
      ],
      "op": "LT",
      "path": "45"
    },
    "2006": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4093,
        4163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x826"
    },
    "2009": {
      "branch": 97,
      "fn": "gPHM.getPastVotes",
      "offset": [
        4093,
        4163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2010": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4093,
        4163
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2012": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4093,
        4163
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2013": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2019": {
      "op": "SHL"
    },
    "2020": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4093,
        4163
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2021": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4093,
        4163
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2024": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4093,
        4163
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "2026": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4093,
        4163
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2027": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4093,
        4163
      ],
      "op": "ADD",
      "path": "45"
    },
    "2028": {
      "op": "MSTORE"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2033": {
      "op": "DUP3"
    },
    "2034": {
      "op": "ADD"
    },
    "2035": {
      "op": "MSTORE"
    },
    "2036": {
      "op": "PUSH32",
      "value": "0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2071": {
      "op": "DUP3"
    },
    "2072": {
      "op": "ADD"
    },
    "2073": {
      "op": "MSTORE"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2076": {
      "op": "ADD"
    },
    "2077": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4093,
        4163
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2078": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4093,
        4163
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2080": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4093,
        4163
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2081": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4093,
        4163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2082": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4093,
        4163
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2083": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4093,
        4163
      ],
      "op": "SUB",
      "path": "45"
    },
    "2084": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4093,
        4163
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2085": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4093,
        4163
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "45"
    },
    "2086": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4093,
        4163
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2093": {
      "op": "SHL"
    },
    "2094": {
      "op": "SUB"
    },
    "2095": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4199,
        4220
      ],
      "op": "DUP4",
      "path": "45",
      "statement": 14
    },
    "2096": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4199,
        4220
      ],
      "op": "AND",
      "path": "45"
    },
    "2097": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4199,
        4220
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2099": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4199,
        4220
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2100": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4199,
        4220
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2101": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4199,
        4220
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2102": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4199,
        4211
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x54"
    },
    "2104": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4199,
        4220
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2106": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4199,
        4220
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2107": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4199,
        4220
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2109": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4199,
        4220
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2110": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4199,
        4220
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "2111": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4180,
        4234
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x76E"
    },
    "2114": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4180,
        4234
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2115": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4222,
        4233
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2116": {
      "fn": "gPHM.getPastVotes",
      "offset": [
        4180,
        4198
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1D7B"
    },
    "2119": {
      "fn": "gPHM.getPastVotes",
      "jump": "i",
      "offset": [
        4180,
        4234
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2120": {
      "fn": "gPHM.mint",
      "offset": [
        7245,
        7354
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2121": {
      "offset": [
        7939,
        7955
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "2123": {
      "offset": [
        7958,
        7974
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x85C"
    },
    "2126": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "statement": 15,
      "value": "0x4F"
    },
    "2128": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2135": {
      "op": "SHL"
    },
    "2136": {
      "op": "SUB"
    },
    "2137": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "2138": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "2139": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2371,
        2493
      ],
      "op": "JUMP",
      "path": "68"
    },
    "2140": {
      "offset": [
        7958,
        7974
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2147": {
      "op": "SHL"
    },
    "2148": {
      "op": "SUB"
    },
    "2149": {
      "offset": [
        7958,
        7992
      ],
      "op": "AND",
      "path": "68"
    },
    "2150": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7992
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x1BED5241"
    },
    "2155": {
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2157": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2158": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2159": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "2164": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "2165": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "2167": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SHL",
      "path": "68"
    },
    "2168": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2169": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "2170": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "2172": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "2173": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "2175": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2177": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2178": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2179": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP4",
      "path": "68"
    },
    "2180": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SUB",
      "path": "68"
    },
    "2181": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2182": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP7",
      "path": "68"
    },
    "2183": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "GAS",
      "path": "68"
    },
    "2184": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "2185": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "2186": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2187": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "2188": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x899"
    },
    "2191": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "2192": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "2193": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "2195": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2196": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "2197": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "2198": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "2200": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "REVERT",
      "path": "68"
    },
    "2201": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2202": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "2203": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "2204": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "2205": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "2206": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2208": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2209": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "2210": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "2212": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "NOT",
      "path": "68"
    },
    "2213": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "2215": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "2216": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "2217": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "2218": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "2219": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "2220": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2221": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2223": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "2224": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "2225": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2226": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "2227": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "2228": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x8BD"
    },
    "2231": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "2232": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "2233": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x298D"
    },
    "2236": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMP",
      "path": "68"
    },
    "2237": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2238": {
      "offset": [
        7939,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "2239": {
      "op": "POP"
    },
    "2240": {
      "offset": [
        8023,
        8027
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1"
    },
    "2242": {
      "offset": [
        8008,
        8027
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2243": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "2244": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "2245": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "EQ",
      "path": "68"
    },
    "2246": {
      "offset": [
        8004,
        8824
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "2247": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x98E"
    },
    "2250": {
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "2251": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4F"
    },
    "2253": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2260": {
      "op": "SHL"
    },
    "2261": {
      "op": "SUB"
    },
    "2262": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2269": {
      "op": "SHL"
    },
    "2270": {
      "op": "SUB"
    },
    "2271": {
      "offset": [
        8143,
        8167
      ],
      "op": "AND",
      "path": "68"
    },
    "2272": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8167
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "2277": {
      "offset": [
        8226,
        8236
      ],
      "op": "CALLER",
      "path": "68"
    },
    "2278": {
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2280": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2281": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "2283": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "ADD",
      "path": "68"
    },
    "2284": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x8F5"
    },
    "2287": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "2288": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "2289": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x29AF"
    },
    "2292": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMP",
      "path": "68"
    },
    "2293": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2294": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2296": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2297": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "2299": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2300": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP4",
      "path": "68"
    },
    "2301": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "2302": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "2303": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2304": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "2305": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "2306": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2308": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "2309": {
      "offset": [
        8168,
        8238
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2310": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2311": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "2312": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "2314": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "ADD",
      "path": "68"
    },
    "2315": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "2316": {
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2318": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2319": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "2320": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "2325": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "2326": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "2328": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SHL",
      "path": "68"
    },
    "2329": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2330": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "2331": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "2333": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "2334": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x929"
    },
    "2337": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "2338": {
      "op": "DUP2"
    },
    "2339": {
      "op": "MSTORE"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2342": {
      "op": "ADD"
    },
    "2343": {
      "op": "SWAP1"
    },
    "2344": {
      "op": "JUMP"
    },
    "2345": {
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2346": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "2348": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2350": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2351": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2352": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP4",
      "path": "68"
    },
    "2353": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SUB",
      "path": "68"
    },
    "2354": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2355": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP7",
      "path": "68"
    },
    "2356": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "GAS",
      "path": "68"
    },
    "2357": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "2358": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "2359": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2360": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "2361": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x946"
    },
    "2364": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "2365": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "2366": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "2368": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2369": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "2370": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "2371": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "2373": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "REVERT",
      "path": "68"
    },
    "2374": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2375": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "2376": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "2377": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "2378": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "2379": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2381": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2382": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "2383": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "2385": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "NOT",
      "path": "68"
    },
    "2386": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "2388": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "2389": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "2390": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "2391": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "2392": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "2393": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2394": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2396": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "2397": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "2398": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2399": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "2400": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "2401": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x96A"
    },
    "2404": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "2405": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "2406": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x298D"
    },
    "2409": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMP",
      "path": "68"
    },
    "2410": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2411": {
      "offset": [
        8138,
        8351
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x989"
    },
    "2414": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "2415": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2417": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2418": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2425": {
      "op": "SHL"
    },
    "2426": {
      "offset": [
        8266,
        8336
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2427": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "2428": {
      "offset": [
        8325,
        8335
      ],
      "op": "CALLER",
      "path": "68"
    },
    "2429": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "2431": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "DUP3",
      "path": "68"
    },
    "2432": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "ADD",
      "path": "68"
    },
    "2433": {
      "op": "MSTORE"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2436": {
      "op": "ADD"
    },
    "2437": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x81D"
    },
    "2440": {
      "op": "JUMP"
    },
    "2441": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2442": {
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xAD5"
    },
    "2445": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMP",
      "path": "68"
    },
    "2446": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2447": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4F"
    },
    "2449": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2456": {
      "op": "SHL"
    },
    "2457": {
      "op": "SUB"
    },
    "2458": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2465": {
      "op": "SHL"
    },
    "2466": {
      "op": "SUB"
    },
    "2467": {
      "offset": [
        8525,
        8549
      ],
      "op": "AND",
      "path": "68"
    },
    "2468": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8549
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "2473": {
      "offset": [
        8608,
        8618
      ],
      "op": "CALLER",
      "path": "68"
    },
    "2474": {
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2476": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2477": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "2479": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "ADD",
      "path": "68"
    },
    "2480": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x9B9"
    },
    "2483": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "2484": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "2485": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x29AF"
    },
    "2488": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMP",
      "path": "68"
    },
    "2489": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2490": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2492": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2493": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "2495": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2496": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP4",
      "path": "68"
    },
    "2497": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "2498": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "2499": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2500": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "2501": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "2502": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2504": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "2505": {
      "offset": [
        8550,
        8620
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2506": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2507": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "2508": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "2510": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "ADD",
      "path": "68"
    },
    "2511": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "2512": {
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2514": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2515": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "2516": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "2521": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "2522": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "2524": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SHL",
      "path": "68"
    },
    "2525": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2526": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "2527": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "2529": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "2530": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x9ED"
    },
    "2533": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "2534": {
      "op": "DUP2"
    },
    "2535": {
      "op": "MSTORE"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2538": {
      "op": "ADD"
    },
    "2539": {
      "op": "SWAP1"
    },
    "2540": {
      "op": "JUMP"
    },
    "2541": {
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2542": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "2544": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2546": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2547": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2548": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP4",
      "path": "68"
    },
    "2549": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SUB",
      "path": "68"
    },
    "2550": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2551": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP7",
      "path": "68"
    },
    "2552": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "GAS",
      "path": "68"
    },
    "2553": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "2554": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "2555": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2556": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "2557": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xA0A"
    },
    "2560": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "2561": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "2562": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "2564": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2565": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "2566": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "2567": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "2569": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "REVERT",
      "path": "68"
    },
    "2570": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2571": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "2572": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "2573": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "2574": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "2575": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2577": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2578": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "2579": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "2581": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "NOT",
      "path": "68"
    },
    "2582": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "2584": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "2585": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "2586": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "2587": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "2588": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "2589": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2590": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2592": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "2593": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "2594": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2595": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "2596": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "2597": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xA2E"
    },
    "2600": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "2601": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "2602": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x298D"
    },
    "2605": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMP",
      "path": "68"
    },
    "2606": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2607": {
      "offset": [
        8525,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2608": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xAB6"
    },
    "2611": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "2612": {
      "op": "POP"
    },
    "2613": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4F"
    },
    "2615": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2622": {
      "op": "SHL"
    },
    "2623": {
      "op": "SUB"
    },
    "2624": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2631": {
      "op": "SHL"
    },
    "2632": {
      "op": "SUB"
    },
    "2633": {
      "offset": [
        8658,
        8686
      ],
      "op": "AND",
      "path": "68"
    },
    "2634": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xA75B87D2"
    },
    "2639": {
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2641": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2642": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2643": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "2648": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "2649": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "2651": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SHL",
      "path": "68"
    },
    "2652": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2653": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "2654": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "2656": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "2657": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "2659": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2661": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2662": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2663": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP4",
      "path": "68"
    },
    "2664": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SUB",
      "path": "68"
    },
    "2665": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2666": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP7",
      "path": "68"
    },
    "2667": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "GAS",
      "path": "68"
    },
    "2668": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "2669": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "2670": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2671": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "2672": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xA7D"
    },
    "2675": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "2676": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "2677": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "2679": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2680": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "2681": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "2682": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "2684": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "REVERT",
      "path": "68"
    },
    "2685": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2686": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "2687": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "2688": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "2689": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "2690": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2692": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2693": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "2694": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "2696": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "NOT",
      "path": "68"
    },
    "2697": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "2699": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "2700": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "2701": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "2702": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "2703": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "2704": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2705": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2707": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "2708": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "2709": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2710": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "2711": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "2712": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xAA1"
    },
    "2715": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "2716": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "2717": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x29F2"
    },
    "2720": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMP",
      "path": "68"
    },
    "2721": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2728": {
      "op": "SHL"
    },
    "2729": {
      "op": "SUB"
    },
    "2730": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "2731": {
      "offset": [
        8645,
        8654
      ],
      "op": "ORIGIN",
      "path": "68"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2738": {
      "op": "SHL"
    },
    "2739": {
      "op": "SUB"
    },
    "2740": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "2741": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8645,
        8688
      ],
      "op": "EQ",
      "path": "68"
    },
    "2742": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2743": {
      "offset": [
        8502,
        8814
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xAD5"
    },
    "2746": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "2747": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2749": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2750": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2757": {
      "op": "SHL"
    },
    "2758": {
      "offset": [
        8729,
        8799
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2759": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "2760": {
      "offset": [
        8788,
        8798
      ],
      "op": "CALLER",
      "path": "68"
    },
    "2761": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "2763": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "DUP3",
      "path": "68"
    },
    "2764": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "ADD",
      "path": "68"
    },
    "2765": {
      "op": "MSTORE"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2768": {
      "op": "ADD"
    },
    "2769": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x81D"
    },
    "2772": {
      "op": "JUMP"
    },
    "2773": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2774": {
      "fn": "gPHM.mint",
      "offset": [
        7330,
        7347
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 16,
      "value": "0xADF"
    },
    "2777": {
      "fn": "gPHM.mint",
      "offset": [
        7336,
        7338
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2778": {
      "fn": "gPHM.mint",
      "offset": [
        7340,
        7346
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2779": {
      "fn": "gPHM.mint",
      "offset": [
        7330,
        7335
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1E38"
    },
    "2782": {
      "fn": "gPHM.mint",
      "jump": "i",
      "offset": [
        7330,
        7347
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2783": {
      "fn": "gPHM.mint",
      "offset": [
        7330,
        7347
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2784": {
      "offset": [
        7929,
        8841
      ],
      "op": "POP",
      "path": "68"
    },
    "2785": {
      "fn": "gPHM.mint",
      "offset": [
        7245,
        7354
      ],
      "op": "POP",
      "path": "45"
    },
    "2786": {
      "fn": "gPHM.mint",
      "offset": [
        7245,
        7354
      ],
      "op": "POP",
      "path": "45"
    },
    "2787": {
      "fn": "gPHM.mint",
      "jump": "o",
      "offset": [
        7245,
        7354
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2788": {
      "fn": "gPHM.delegates",
      "offset": [
        2290,
        2498
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2795": {
      "op": "SHL"
    },
    "2796": {
      "op": "SUB"
    },
    "2797": {
      "fn": "gPHM.delegates",
      "offset": [
        2404,
        2425
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2798": {
      "fn": "gPHM.delegates",
      "offset": [
        2404,
        2425
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2799": {
      "fn": "gPHM.delegates",
      "offset": [
        2404,
        2425
      ],
      "op": "AND",
      "path": "45"
    },
    "2800": {
      "fn": "gPHM.delegates",
      "offset": [
        2357,
        2374
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2802": {
      "fn": "gPHM.delegates",
      "offset": [
        2404,
        2425
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2803": {
      "fn": "gPHM.delegates",
      "offset": [
        2404,
        2425
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2804": {
      "fn": "gPHM.delegates",
      "offset": [
        2404,
        2425
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2805": {
      "fn": "gPHM.delegates",
      "offset": [
        2404,
        2414
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x53"
    },
    "2807": {
      "fn": "gPHM.delegates",
      "offset": [
        2404,
        2425
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2809": {
      "fn": "gPHM.delegates",
      "offset": [
        2404,
        2425
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2810": {
      "fn": "gPHM.delegates",
      "offset": [
        2404,
        2425
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2812": {
      "fn": "gPHM.delegates",
      "offset": [
        2404,
        2425
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2813": {
      "fn": "gPHM.delegates",
      "offset": [
        2404,
        2425
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "2814": {
      "fn": "gPHM.delegates",
      "offset": [
        2404,
        2425
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2815": {
      "fn": "gPHM.delegates",
      "offset": [
        2357,
        2374
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2816": {
      "fn": "gPHM.delegates",
      "offset": [
        2357,
        2374
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2817": {
      "fn": "gPHM.delegates",
      "offset": [
        2404,
        2425
      ],
      "op": "AND",
      "path": "45"
    },
    "2818": {
      "fn": "gPHM.delegates",
      "offset": [
        2448,
        2469
      ],
      "op": "DUP1",
      "path": "45",
      "statement": 17
    },
    "2819": {
      "branch": 98,
      "fn": "gPHM.delegates",
      "offset": [
        2448,
        2469
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2820": {
      "fn": "gPHM.delegates",
      "offset": [
        2448,
        2491
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB0D"
    },
    "2823": {
      "branch": 98,
      "fn": "gPHM.delegates",
      "offset": [
        2448,
        2491
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2824": {
      "fn": "gPHM.delegates",
      "offset": [
        2484,
        2491
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2825": {
      "fn": "gPHM.delegates",
      "offset": [
        2448,
        2491
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x76E"
    },
    "2828": {
      "fn": "gPHM.delegates",
      "offset": [
        2448,
        2491
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2829": {
      "fn": "gPHM.delegates",
      "offset": [
        2448,
        2491
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2830": {
      "op": "POP"
    },
    "2831": {
      "fn": "gPHM.delegates",
      "offset": [
        2472,
        2481
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2832": {
      "fn": "gPHM.delegates",
      "offset": [
        2472,
        2481
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2833": {
      "fn": "gPHM.delegates",
      "offset": [
        2436,
        2491
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2834": {
      "op": "POP"
    },
    "2835": {
      "fn": "gPHM.delegates",
      "jump": "o",
      "offset": [
        2290,
        2498
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2836": {
      "fn": "gPHM.delegate",
      "offset": [
        2504,
        2605
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2837": {
      "fn": "gPHM.delegate",
      "offset": [
        2566,
        2598
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 18,
      "value": "0xB1E"
    },
    "2840": {
      "fn": "gPHM.delegate",
      "offset": [
        2576,
        2586
      ],
      "op": "CALLER",
      "path": "45"
    },
    "2841": {
      "fn": "gPHM.delegate",
      "offset": [
        2588,
        2597
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2842": {
      "fn": "gPHM.delegate",
      "offset": [
        2566,
        2575
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1ECE"
    },
    "2845": {
      "fn": "gPHM.delegate",
      "jump": "i",
      "offset": [
        2566,
        2598
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2846": {
      "fn": "gPHM.delegate",
      "offset": [
        2566,
        2598
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2847": {
      "fn": "gPHM.delegate",
      "offset": [
        2504,
        2605
      ],
      "op": "POP",
      "path": "45"
    },
    "2848": {
      "fn": "gPHM.delegate",
      "jump": "o",
      "offset": [
        2504,
        2605
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2849": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5696,
        5845
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2856": {
      "op": "SHL"
    },
    "2857": {
      "op": "SUB"
    },
    "2858": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5809,
        5830
      ],
      "op": "DUP2",
      "path": "45",
      "statement": 19
    },
    "2859": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5809,
        5830
      ],
      "op": "AND",
      "path": "45"
    },
    "2860": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5766,
        5772
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2862": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5809,
        5830
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2863": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5809,
        5830
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2864": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5809,
        5830
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2865": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5809,
        5821
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x54"
    },
    "2867": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5809,
        5830
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2869": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5809,
        5830
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2870": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5809,
        5830
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2872": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5809,
        5830
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2873": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5809,
        5830
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "2874": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5809,
        5837
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2875": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5791,
        5838
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x606"
    },
    "2878": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5791,
        5838
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2879": {
      "fn": "gPHM.numCheckpoints",
      "offset": [
        5791,
        5808
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2002"
    },
    "2882": {
      "fn": "gPHM.numCheckpoints",
      "jump": "i",
      "offset": [
        5791,
        5838
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2883": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4520,
        4776
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2884": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4607,
        4614
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2886": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4648,
        4660
      ],
      "op": "NUMBER",
      "path": "45",
      "statement": 20
    },
    "2887": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4634,
        4645
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2888": {
      "branch": 99,
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4634,
        4660
      ],
      "op": "LT",
      "path": "45"
    },
    "2889": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4626,
        4696
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB94"
    },
    "2892": {
      "branch": 99,
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4626,
        4696
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2893": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4626,
        4696
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2895": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4626,
        4696
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2896": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2902": {
      "op": "SHL"
    },
    "2903": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4626,
        4696
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2904": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4626,
        4696
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2907": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4626,
        4696
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "2909": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4626,
        4696
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2910": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4626,
        4696
      ],
      "op": "ADD",
      "path": "45"
    },
    "2911": {
      "op": "MSTORE"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2916": {
      "op": "DUP3"
    },
    "2917": {
      "op": "ADD"
    },
    "2918": {
      "op": "MSTORE"
    },
    "2919": {
      "op": "PUSH32",
      "value": "0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2954": {
      "op": "DUP3"
    },
    "2955": {
      "op": "ADD"
    },
    "2956": {
      "op": "MSTORE"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2959": {
      "op": "ADD"
    },
    "2960": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4626,
        4696
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x81D"
    },
    "2963": {
      "op": "JUMP"
    },
    "2964": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4626,
        4696
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2965": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4713,
        4769
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 21,
      "value": "0x606"
    },
    "2968": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4732,
        4755
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x55"
    },
    "2970": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4757,
        4768
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2971": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        4713,
        4731
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1D7B"
    },
    "2974": {
      "fn": "gPHM.getPastTotalSupply",
      "jump": "i",
      "offset": [
        4713,
        4769
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2975": {
      "offset": [
        728,
        748
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2976": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        728,
        748
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "2978": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        728,
        748
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2979": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        728,
        748
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "2980": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        728,
        748
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x51E"
    },
    "2983": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        728,
        748
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2984": {
      "fn": "gPHM.getPastTotalSupply",
      "offset": [
        728,
        748
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x290C"
    },
    "2987": {
      "fn": "gPHM.getPastTotalSupply",
      "jump": "i",
      "offset": [
        728,
        748
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2988": {
      "fn": "gPHM.getVotes",
      "offset": [
        2684,
        2893
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2995": {
      "op": "SHL"
    },
    "2996": {
      "op": "SUB"
    },
    "2997": {
      "fn": "gPHM.getVotes",
      "offset": [
        2790,
        2811
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2998": {
      "fn": "gPHM.getVotes",
      "offset": [
        2790,
        2811
      ],
      "op": "AND",
      "path": "45"
    },
    "2999": {
      "fn": "gPHM.getVotes",
      "offset": [
        2757,
        2764
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3001": {
      "fn": "gPHM.getVotes",
      "offset": [
        2790,
        2811
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3002": {
      "fn": "gPHM.getVotes",
      "offset": [
        2790,
        2811
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3003": {
      "fn": "gPHM.getVotes",
      "offset": [
        2790,
        2811
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3004": {
      "fn": "gPHM.getVotes",
      "offset": [
        2790,
        2802
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x54"
    },
    "3006": {
      "fn": "gPHM.getVotes",
      "offset": [
        2790,
        2811
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3008": {
      "fn": "gPHM.getVotes",
      "offset": [
        2790,
        2811
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3009": {
      "fn": "gPHM.getVotes",
      "offset": [
        2790,
        2811
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3011": {
      "fn": "gPHM.getVotes",
      "offset": [
        2790,
        2811
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3012": {
      "fn": "gPHM.getVotes",
      "offset": [
        2790,
        2811
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "3013": {
      "fn": "gPHM.getVotes",
      "offset": [
        2790,
        2818
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "3014": {
      "fn": "gPHM.getVotes",
      "offset": [
        2835,
        2843
      ],
      "op": "DUP1",
      "path": "45",
      "statement": 22
    },
    "3015": {
      "branch": 100,
      "fn": "gPHM.getVotes",
      "offset": [
        2835,
        2843
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3016": {
      "fn": "gPHM.getVotes",
      "offset": [
        2835,
        2886
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xC20"
    },
    "3019": {
      "branch": 100,
      "fn": "gPHM.getVotes",
      "offset": [
        2835,
        2886
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3026": {
      "op": "SHL"
    },
    "3027": {
      "op": "SUB"
    },
    "3028": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2871
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3029": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2871
      ],
      "op": "AND",
      "path": "45"
    },
    "3030": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2871
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3032": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2871
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3033": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2871
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3034": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2871
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3035": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2862
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x54"
    },
    "3037": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2871
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3039": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2871
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3040": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2871
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3042": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2871
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3043": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2871
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "3044": {
      "fn": "gPHM.getVotes",
      "offset": [
        2872,
        2879
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xBEE"
    },
    "3047": {
      "fn": "gPHM.getVotes",
      "offset": [
        2878,
        2879
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "3049": {
      "fn": "gPHM.getVotes",
      "offset": [
        2872,
        2875
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3050": {
      "fn": "gPHM.getVotes",
      "offset": [
        2872,
        2879
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2976"
    },
    "3053": {
      "fn": "gPHM.getVotes",
      "jump": "i",
      "offset": [
        2872,
        2879
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3054": {
      "fn": "gPHM.getVotes",
      "offset": [
        2872,
        2879
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3055": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2880
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3056": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2880
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "3057": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2880
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3058": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2880
      ],
      "op": "LT",
      "path": "45"
    },
    "3059": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2880
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xBFE"
    },
    "3062": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2880
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3063": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2880
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xBFE"
    },
    "3066": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2880
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2A0F"
    },
    "3069": {
      "fn": "gPHM.getVotes",
      "jump": "i",
      "offset": [
        2850,
        2880
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3070": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2880
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3071": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2880
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3073": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2880
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3074": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2880
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3075": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2880
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3076": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2880
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3078": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2880
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3079": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2880
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3080": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2880
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "3081": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2880
      ],
      "op": "ADD",
      "path": "45"
    },
    "3082": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2886
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "3083": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2886
      ],
      "op": "PUSH5",
      "path": "45",
      "value": "0x100000000"
    },
    "3089": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2886
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3090": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2886
      ],
      "op": "DIV",
      "path": "45"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3097": {
      "op": "SHL"
    },
    "3098": {
      "op": "SUB"
    },
    "3099": {
      "fn": "gPHM.getVotes",
      "offset": [
        2850,
        2886
      ],
      "op": "AND",
      "path": "45"
    },
    "3100": {
      "fn": "gPHM.getVotes",
      "offset": [
        2835,
        2886
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xC23"
    },
    "3103": {
      "fn": "gPHM.getVotes",
      "offset": [
        2835,
        2886
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3104": {
      "fn": "gPHM.getVotes",
      "offset": [
        2835,
        2886
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3105": {
      "fn": "gPHM.getVotes",
      "offset": [
        2846,
        2847
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3107": {
      "fn": "gPHM.getVotes",
      "offset": [
        2835,
        2886
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3114": {
      "op": "SHL"
    },
    "3115": {
      "op": "SUB"
    },
    "3116": {
      "fn": "gPHM.getVotes",
      "offset": [
        2828,
        2886
      ],
      "op": "AND",
      "path": "45"
    },
    "3117": {
      "fn": "gPHM.getVotes",
      "offset": [
        2828,
        2886
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "3118": {
      "fn": "gPHM.getVotes",
      "offset": [
        2684,
        2893
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "3119": {
      "op": "POP"
    },
    "3120": {
      "op": "POP"
    },
    "3121": {
      "op": "POP"
    },
    "3122": {
      "fn": "gPHM.getVotes",
      "jump": "o",
      "offset": [
        2684,
        2893
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3123": {
      "fn": "gPHM.burn",
      "offset": [
        7639,
        7758
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3124": {
      "offset": [
        7939,
        7955
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3126": {
      "offset": [
        7958,
        7974
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xC47"
    },
    "3129": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4F"
    },
    "3131": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3138": {
      "op": "SHL"
    },
    "3139": {
      "op": "SUB"
    },
    "3140": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "3141": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3142": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2371,
        2493
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3143": {
      "offset": [
        7958,
        7974
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3150": {
      "op": "SHL"
    },
    "3151": {
      "op": "SUB"
    },
    "3152": {
      "offset": [
        7958,
        7992
      ],
      "op": "AND",
      "path": "68"
    },
    "3153": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7992
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x1BED5241"
    },
    "3158": {
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3160": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3161": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3162": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "3167": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "3168": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "3170": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SHL",
      "path": "68"
    },
    "3171": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3172": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3173": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "3175": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "3176": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3178": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3180": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3181": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3182": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP4",
      "path": "68"
    },
    "3183": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SUB",
      "path": "68"
    },
    "3184": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3185": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP7",
      "path": "68"
    },
    "3186": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "GAS",
      "path": "68"
    },
    "3187": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "3188": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3189": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3190": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3191": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xC84"
    },
    "3194": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3195": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3196": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3198": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3199": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "3200": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3201": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3203": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "REVERT",
      "path": "68"
    },
    "3204": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3205": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "3206": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "3207": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "3208": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "3209": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3211": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3212": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3213": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3215": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "NOT",
      "path": "68"
    },
    "3216": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3218": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3219": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "3220": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "3221": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3222": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "3223": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3224": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3226": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3227": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "3228": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3229": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "3230": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3231": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xCA8"
    },
    "3234": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3235": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3236": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x298D"
    },
    "3239": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3240": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3241": {
      "offset": [
        7939,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3242": {
      "op": "POP"
    },
    "3243": {
      "offset": [
        8023,
        8027
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1"
    },
    "3245": {
      "offset": [
        8008,
        8027
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3246": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3247": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3248": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "EQ",
      "path": "68"
    },
    "3249": {
      "offset": [
        8004,
        8824
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3250": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xD79"
    },
    "3253": {
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3254": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4F"
    },
    "3256": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3263": {
      "op": "SHL"
    },
    "3264": {
      "op": "SUB"
    },
    "3265": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "3266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3272": {
      "op": "SHL"
    },
    "3273": {
      "op": "SUB"
    },
    "3274": {
      "offset": [
        8143,
        8167
      ],
      "op": "AND",
      "path": "68"
    },
    "3275": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8167
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "3280": {
      "offset": [
        8226,
        8236
      ],
      "op": "CALLER",
      "path": "68"
    },
    "3281": {
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3283": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3284": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3286": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "ADD",
      "path": "68"
    },
    "3287": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xCE0"
    },
    "3290": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3291": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3292": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x29AF"
    },
    "3295": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3296": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3297": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3299": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3300": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3302": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3303": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP4",
      "path": "68"
    },
    "3304": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "3305": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "3306": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3307": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3308": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3309": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3311": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3312": {
      "offset": [
        8168,
        8238
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3313": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3314": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3315": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3317": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "ADD",
      "path": "68"
    },
    "3318": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "3319": {
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3321": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3322": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3323": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "3328": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "3329": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "3331": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SHL",
      "path": "68"
    },
    "3332": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3333": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3334": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "3336": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "3337": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xD14"
    },
    "3340": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3341": {
      "op": "DUP2"
    },
    "3342": {
      "op": "MSTORE"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3345": {
      "op": "ADD"
    },
    "3346": {
      "op": "SWAP1"
    },
    "3347": {
      "op": "JUMP"
    },
    "3348": {
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3349": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3351": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3353": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3354": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3355": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP4",
      "path": "68"
    },
    "3356": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SUB",
      "path": "68"
    },
    "3357": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3358": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP7",
      "path": "68"
    },
    "3359": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "GAS",
      "path": "68"
    },
    "3360": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "3361": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3362": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3363": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3364": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xD31"
    },
    "3367": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3368": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3369": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3371": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3372": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "3373": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3374": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3376": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "REVERT",
      "path": "68"
    },
    "3377": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3378": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "3379": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "3380": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "3381": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "3382": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3384": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3385": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3386": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3388": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "NOT",
      "path": "68"
    },
    "3389": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3391": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3392": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "3393": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "3394": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3395": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "3396": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3397": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3399": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3400": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "3401": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3402": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "3403": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3404": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xD55"
    },
    "3407": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3408": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3409": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x298D"
    },
    "3412": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3413": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3414": {
      "offset": [
        8138,
        8351
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xD74"
    },
    "3417": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3418": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3420": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3421": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3428": {
      "op": "SHL"
    },
    "3429": {
      "offset": [
        8266,
        8336
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3430": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3431": {
      "offset": [
        8325,
        8335
      ],
      "op": "CALLER",
      "path": "68"
    },
    "3432": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "3434": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3435": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "ADD",
      "path": "68"
    },
    "3436": {
      "op": "MSTORE"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3439": {
      "op": "ADD"
    },
    "3440": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x81D"
    },
    "3443": {
      "op": "JUMP"
    },
    "3444": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3445": {
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xEC0"
    },
    "3448": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3449": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3450": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4F"
    },
    "3452": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3459": {
      "op": "SHL"
    },
    "3460": {
      "op": "SUB"
    },
    "3461": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "3462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3468": {
      "op": "SHL"
    },
    "3469": {
      "op": "SUB"
    },
    "3470": {
      "offset": [
        8525,
        8549
      ],
      "op": "AND",
      "path": "68"
    },
    "3471": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8549
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "3476": {
      "offset": [
        8608,
        8618
      ],
      "op": "CALLER",
      "path": "68"
    },
    "3477": {
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3479": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3480": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3482": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "ADD",
      "path": "68"
    },
    "3483": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xDA4"
    },
    "3486": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3487": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3488": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x29AF"
    },
    "3491": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3492": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3493": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3495": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3496": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3498": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3499": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP4",
      "path": "68"
    },
    "3500": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "3501": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "3502": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3503": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3504": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3505": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3507": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3508": {
      "offset": [
        8550,
        8620
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3509": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3510": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3511": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3513": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "ADD",
      "path": "68"
    },
    "3514": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "3515": {
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3517": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3518": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3519": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "3524": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "3525": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "3527": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SHL",
      "path": "68"
    },
    "3528": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3529": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3530": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "3532": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "3533": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xDD8"
    },
    "3536": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3537": {
      "op": "DUP2"
    },
    "3538": {
      "op": "MSTORE"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3541": {
      "op": "ADD"
    },
    "3542": {
      "op": "SWAP1"
    },
    "3543": {
      "op": "JUMP"
    },
    "3544": {
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3545": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3547": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3549": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3550": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3551": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP4",
      "path": "68"
    },
    "3552": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SUB",
      "path": "68"
    },
    "3553": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3554": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP7",
      "path": "68"
    },
    "3555": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "GAS",
      "path": "68"
    },
    "3556": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "3557": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3558": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3559": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3560": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xDF5"
    },
    "3563": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3564": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3565": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3567": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3568": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "3569": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3570": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3572": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "REVERT",
      "path": "68"
    },
    "3573": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3574": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "3575": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "3576": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "3577": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "3578": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3580": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3581": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3582": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3584": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "NOT",
      "path": "68"
    },
    "3585": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3587": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3588": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "3589": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "3590": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3591": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "3592": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3593": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3595": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3596": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "3597": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3598": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "3599": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3600": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xE19"
    },
    "3603": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3604": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3605": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x298D"
    },
    "3608": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3609": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3610": {
      "offset": [
        8525,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3611": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xEA1"
    },
    "3614": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3615": {
      "op": "POP"
    },
    "3616": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4F"
    },
    "3618": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3625": {
      "op": "SHL"
    },
    "3626": {
      "op": "SUB"
    },
    "3627": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3634": {
      "op": "SHL"
    },
    "3635": {
      "op": "SUB"
    },
    "3636": {
      "offset": [
        8658,
        8686
      ],
      "op": "AND",
      "path": "68"
    },
    "3637": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xA75B87D2"
    },
    "3642": {
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3644": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3645": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3646": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "3651": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "3652": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "3654": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SHL",
      "path": "68"
    },
    "3655": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3656": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3657": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "3659": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "3660": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3662": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3664": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3665": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3666": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP4",
      "path": "68"
    },
    "3667": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SUB",
      "path": "68"
    },
    "3668": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3669": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP7",
      "path": "68"
    },
    "3670": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "GAS",
      "path": "68"
    },
    "3671": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "3672": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3673": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3674": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3675": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xE68"
    },
    "3678": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3679": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3680": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3682": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3683": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "3684": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3685": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3687": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "REVERT",
      "path": "68"
    },
    "3688": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3689": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "3690": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "3691": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "3692": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "3693": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3695": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3696": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3697": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3699": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "NOT",
      "path": "68"
    },
    "3700": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3702": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3703": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "3704": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "3705": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3706": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "3707": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3708": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3710": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3711": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "3712": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3713": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "3714": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3715": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xE8C"
    },
    "3718": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3719": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3720": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x29F2"
    },
    "3723": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3724": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3731": {
      "op": "SHL"
    },
    "3732": {
      "op": "SUB"
    },
    "3733": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "3734": {
      "offset": [
        8645,
        8654
      ],
      "op": "ORIGIN",
      "path": "68"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3741": {
      "op": "SHL"
    },
    "3742": {
      "op": "SUB"
    },
    "3743": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "3744": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8645,
        8688
      ],
      "op": "EQ",
      "path": "68"
    },
    "3745": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3746": {
      "offset": [
        8502,
        8814
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xEC0"
    },
    "3749": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3750": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3752": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3753": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3760": {
      "op": "SHL"
    },
    "3761": {
      "offset": [
        8729,
        8799
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3762": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3763": {
      "offset": [
        8788,
        8798
      ],
      "op": "CALLER",
      "path": "68"
    },
    "3764": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "3766": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3767": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "ADD",
      "path": "68"
    },
    "3768": {
      "op": "MSTORE"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3771": {
      "op": "ADD"
    },
    "3772": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x81D"
    },
    "3775": {
      "op": "JUMP"
    },
    "3776": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3777": {
      "fn": "gPHM.burn",
      "offset": [
        7729,
        7751
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 23,
      "value": "0xADF"
    },
    "3780": {
      "fn": "gPHM.burn",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3781": {
      "fn": "gPHM.burn",
      "offset": [
        7744,
        7750
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3782": {
      "fn": "gPHM.burn",
      "offset": [
        7729,
        7734
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x206B"
    },
    "3785": {
      "fn": "gPHM.burn",
      "jump": "i",
      "offset": [
        7729,
        7751
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3786": {
      "fn": "ERC20.transfer",
      "offset": [
        2755,
        3193
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3787": {
      "fn": "ERC20.transfer",
      "offset": [
        2861,
        2871
      ],
      "op": "CALLER",
      "path": "42",
      "statement": 24
    },
    "3788": {
      "fn": "ERC20.transfer",
      "offset": [
        2834,
        2838
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3790": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2872
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3791": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2872
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3792": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2872
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3793": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2860
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x3"
    },
    "3795": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2872
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "3797": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2872
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3798": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2872
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3800": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2872
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3801": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2872
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "3802": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2882
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3803": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2882
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "3804": {
      "fn": "ERC20.transfer",
      "offset": [
        2876,
        2882
      ],
      "op": "DUP4",
      "path": "42"
    },
    "3805": {
      "fn": "ERC20.transfer",
      "offset": [
        2876,
        2882
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3806": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2872
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3807": {
      "fn": "ERC20.transfer",
      "offset": [
        2834,
        2838
      ],
      "op": "DUP4",
      "path": "42"
    },
    "3808": {
      "fn": "ERC20.transfer",
      "offset": [
        2834,
        2838
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3809": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2882
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xEEB"
    },
    "3812": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2882
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3813": {
      "fn": "ERC20.transfer",
      "offset": [
        2876,
        2882
      ],
      "op": "DUP5",
      "path": "42"
    },
    "3814": {
      "fn": "ERC20.transfer",
      "offset": [
        2876,
        2882
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3815": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2882
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2976"
    },
    "3818": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2850,
        2882
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3819": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2882
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3820": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2882
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3821": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2882
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3822": {
      "fn": "ERC20.transfer",
      "offset": [
        2850,
        2882
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "3823": {
      "op": "POP"
    },
    "3824": {
      "op": "POP"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3831": {
      "op": "SHL"
    },
    "3832": {
      "op": "SUB"
    },
    "3833": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3042
      ],
      "op": "DUP4",
      "path": "42",
      "statement": 25
    },
    "3834": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3042
      ],
      "op": "AND",
      "path": "42"
    },
    "3835": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3042
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3837": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3042
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3838": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3042
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3839": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3042
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3840": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3038
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x3"
    },
    "3842": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3042
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "3844": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3042
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3845": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3042
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3847": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3042
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3848": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3042
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3849": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3042
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3850": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3042
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "3851": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3052
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3852": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3052
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "3853": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3052
      ],
      "op": "DUP6",
      "path": "42"
    },
    "3854": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3052
      ],
      "op": "ADD",
      "path": "42"
    },
    "3855": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3052
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3856": {
      "fn": "ERC20.transfer",
      "offset": [
        3028,
        3052
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "3857": {
      "fn": "ERC20.transfer",
      "offset": [
        3078,
        3110
      ],
      "op": "MLOAD",
      "path": "42",
      "statement": 26
    },
    "3858": {
      "fn": "ERC20.transfer",
      "offset": [
        3087,
        3097
      ],
      "op": "CALLER",
      "path": "42"
    },
    "3859": {
      "fn": "ERC20.transfer",
      "offset": [
        3087,
        3097
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3862": {
      "op": "DUP1"
    },
    "3863": {
      "op": "MLOAD"
    },
    "3864": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3866": {
      "op": "PUSH2",
      "value": "0x2B1B"
    },
    "3869": {
      "op": "DUP4"
    },
    "3870": {
      "op": "CODECOPY"
    },
    "3871": {
      "op": "DUP2"
    },
    "3872": {
      "op": "MLOAD"
    },
    "3873": {
      "op": "SWAP2"
    },
    "3874": {
      "op": "MSTORE"
    },
    "3875": {
      "fn": "ERC20.transfer",
      "offset": [
        3078,
        3110
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3876": {
      "fn": "ERC20.transfer",
      "offset": [
        3078,
        3110
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xF30"
    },
    "3879": {
      "fn": "ERC20.transfer",
      "offset": [
        3078,
        3110
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3880": {
      "fn": "ERC20.transfer",
      "offset": [
        3046,
        3052
      ],
      "op": "DUP7",
      "path": "42"
    },
    "3881": {
      "op": "DUP2"
    },
    "3882": {
      "op": "MSTORE"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3885": {
      "op": "ADD"
    },
    "3886": {
      "op": "SWAP1"
    },
    "3887": {
      "op": "JUMP"
    },
    "3888": {
      "fn": "ERC20.transfer",
      "offset": [
        3078,
        3110
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3889": {
      "fn": "ERC20.transfer",
      "offset": [
        3078,
        3110
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3891": {
      "fn": "ERC20.transfer",
      "offset": [
        3078,
        3110
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3892": {
      "fn": "ERC20.transfer",
      "offset": [
        3078,
        3110
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3893": {
      "fn": "ERC20.transfer",
      "offset": [
        3078,
        3110
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3894": {
      "fn": "ERC20.transfer",
      "offset": [
        3078,
        3110
      ],
      "op": "SUB",
      "path": "42"
    },
    "3895": {
      "fn": "ERC20.transfer",
      "offset": [
        3078,
        3110
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3896": {
      "fn": "ERC20.transfer",
      "offset": [
        3078,
        3110
      ],
      "op": "LOG3",
      "path": "42"
    },
    "3897": {
      "fn": "ERC20.transfer",
      "offset": [
        3121,
        3164
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 27,
      "value": "0xF43"
    },
    "3900": {
      "fn": "ERC20.transfer",
      "offset": [
        3141,
        3151
      ],
      "op": "CALLER",
      "path": "42"
    },
    "3901": {
      "fn": "ERC20.transfer",
      "offset": [
        3153,
        3155
      ],
      "op": "DUP5",
      "path": "42"
    },
    "3902": {
      "fn": "ERC20.transfer",
      "offset": [
        3157,
        3163
      ],
      "op": "DUP5",
      "path": "42"
    },
    "3903": {
      "fn": "ERC20.transfer",
      "offset": [
        3121,
        3140
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1AAD"
    },
    "3906": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3121,
        3164
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3907": {
      "fn": "ERC20.transfer",
      "offset": [
        3121,
        3164
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3908": {
      "op": "POP"
    },
    "3909": {
      "fn": "ERC20.transfer",
      "offset": [
        3182,
        3186
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 28,
      "value": "0x1"
    },
    "3911": {
      "fn": "ERC20.transfer",
      "offset": [
        2755,
        3193
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "3912": {
      "fn": "ERC20.transfer",
      "offset": [
        2755,
        3193
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3913": {
      "fn": "ERC20.transfer",
      "offset": [
        2755,
        3193
      ],
      "op": "POP",
      "path": "42"
    },
    "3914": {
      "fn": "ERC20.transfer",
      "offset": [
        2755,
        3193
      ],
      "op": "POP",
      "path": "42"
    },
    "3915": {
      "fn": "ERC20.transfer",
      "jump": "o",
      "offset": [
        2755,
        3193
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3916": {
      "fn": "gPHM.enableTransfers",
      "offset": [
        1728,
        1828
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3917": {
      "offset": [
        7939,
        7955
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3919": {
      "offset": [
        7958,
        7974
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xF60"
    },
    "3922": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4F"
    },
    "3924": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3931": {
      "op": "SHL"
    },
    "3932": {
      "op": "SUB"
    },
    "3933": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "3934": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3935": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2371,
        2493
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3936": {
      "offset": [
        7958,
        7974
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3943": {
      "op": "SHL"
    },
    "3944": {
      "op": "SUB"
    },
    "3945": {
      "offset": [
        7958,
        7992
      ],
      "op": "AND",
      "path": "68"
    },
    "3946": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7992
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x1BED5241"
    },
    "3951": {
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3953": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3954": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3955": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "3960": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "3961": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "3963": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SHL",
      "path": "68"
    },
    "3964": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3965": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3966": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "3968": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "3969": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3971": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3973": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3974": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3975": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP4",
      "path": "68"
    },
    "3976": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SUB",
      "path": "68"
    },
    "3977": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3978": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP7",
      "path": "68"
    },
    "3979": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "GAS",
      "path": "68"
    },
    "3980": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "3981": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3982": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3983": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3984": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xF9D"
    },
    "3987": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3988": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3989": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3991": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3992": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "3993": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3994": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3996": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "REVERT",
      "path": "68"
    },
    "3997": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3998": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "3999": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "4000": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "4001": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "4002": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4004": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4005": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4006": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "4008": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "NOT",
      "path": "68"
    },
    "4009": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "4011": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4012": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "4013": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "4014": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4015": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "4016": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4017": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4019": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4020": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "4021": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4022": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "4023": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4024": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xFC1"
    },
    "4027": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "4028": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4029": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x298D"
    },
    "4032": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMP",
      "path": "68"
    },
    "4033": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4034": {
      "offset": [
        7939,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4035": {
      "op": "POP"
    },
    "4036": {
      "offset": [
        8023,
        8027
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1"
    },
    "4038": {
      "offset": [
        8008,
        8027
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4039": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4040": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4041": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "EQ",
      "path": "68"
    },
    "4042": {
      "offset": [
        8004,
        8824
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4043": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1092"
    },
    "4046": {
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "4047": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4F"
    },
    "4049": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4056": {
      "op": "SHL"
    },
    "4057": {
      "op": "SUB"
    },
    "4058": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4065": {
      "op": "SHL"
    },
    "4066": {
      "op": "SUB"
    },
    "4067": {
      "offset": [
        8143,
        8167
      ],
      "op": "AND",
      "path": "68"
    },
    "4068": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8167
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "4073": {
      "offset": [
        8226,
        8236
      ],
      "op": "CALLER",
      "path": "68"
    },
    "4074": {
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4076": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4077": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4079": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "ADD",
      "path": "68"
    },
    "4080": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xFF9"
    },
    "4083": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "4084": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4085": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x29AF"
    },
    "4088": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMP",
      "path": "68"
    },
    "4089": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4090": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4092": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4093": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4095": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4096": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP4",
      "path": "68"
    },
    "4097": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "4098": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "4099": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4100": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4101": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4102": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4104": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4105": {
      "offset": [
        8168,
        8238
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4106": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4107": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4108": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4110": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "ADD",
      "path": "68"
    },
    "4111": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "4112": {
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4114": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4115": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4116": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "4121": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "4122": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "4124": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SHL",
      "path": "68"
    },
    "4125": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4126": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4127": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "4129": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "4130": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x102D"
    },
    "4133": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "4134": {
      "op": "DUP2"
    },
    "4135": {
      "op": "MSTORE"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4138": {
      "op": "ADD"
    },
    "4139": {
      "op": "SWAP1"
    },
    "4140": {
      "op": "JUMP"
    },
    "4141": {
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4142": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4144": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4146": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4147": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4148": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP4",
      "path": "68"
    },
    "4149": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SUB",
      "path": "68"
    },
    "4150": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4151": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP7",
      "path": "68"
    },
    "4152": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "GAS",
      "path": "68"
    },
    "4153": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "4154": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4155": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4156": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4157": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x104A"
    },
    "4160": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "4161": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4162": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4164": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4165": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "4166": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4167": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4169": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "REVERT",
      "path": "68"
    },
    "4170": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4171": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "4172": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "4173": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "4174": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "4175": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4177": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4178": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4179": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "4181": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "NOT",
      "path": "68"
    },
    "4182": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "4184": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4185": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "4186": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "4187": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4188": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "4189": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4190": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4192": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4193": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "4194": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4195": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "4196": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4197": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x106E"
    },
    "4200": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "4201": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4202": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x298D"
    },
    "4205": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMP",
      "path": "68"
    },
    "4206": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4207": {
      "offset": [
        8138,
        8351
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x108D"
    },
    "4210": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "4211": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4213": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4214": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4221": {
      "op": "SHL"
    },
    "4222": {
      "offset": [
        8266,
        8336
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4223": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4224": {
      "offset": [
        8325,
        8335
      ],
      "op": "CALLER",
      "path": "68"
    },
    "4225": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "4227": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4228": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "ADD",
      "path": "68"
    },
    "4229": {
      "op": "MSTORE"
    },
    "4230": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4232": {
      "op": "ADD"
    },
    "4233": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x81D"
    },
    "4236": {
      "op": "JUMP"
    },
    "4237": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4238": {
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x11D9"
    },
    "4241": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMP",
      "path": "68"
    },
    "4242": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4243": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4F"
    },
    "4245": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4252": {
      "op": "SHL"
    },
    "4253": {
      "op": "SUB"
    },
    "4254": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4261": {
      "op": "SHL"
    },
    "4262": {
      "op": "SUB"
    },
    "4263": {
      "offset": [
        8525,
        8549
      ],
      "op": "AND",
      "path": "68"
    },
    "4264": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8549
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "4269": {
      "offset": [
        8608,
        8618
      ],
      "op": "CALLER",
      "path": "68"
    },
    "4270": {
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4272": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4273": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4275": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "ADD",
      "path": "68"
    },
    "4276": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x10BD"
    },
    "4279": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "4280": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4281": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x29AF"
    },
    "4284": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMP",
      "path": "68"
    },
    "4285": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4286": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4288": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4289": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4291": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4292": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP4",
      "path": "68"
    },
    "4293": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "4294": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "4295": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4296": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4297": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4298": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4300": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4301": {
      "offset": [
        8550,
        8620
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4302": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4303": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4304": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4306": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "ADD",
      "path": "68"
    },
    "4307": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "4308": {
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4310": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4311": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4312": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "4317": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "4318": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "4320": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SHL",
      "path": "68"
    },
    "4321": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4322": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4323": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "4325": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "4326": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x10F1"
    },
    "4329": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "4330": {
      "op": "DUP2"
    },
    "4331": {
      "op": "MSTORE"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4334": {
      "op": "ADD"
    },
    "4335": {
      "op": "SWAP1"
    },
    "4336": {
      "op": "JUMP"
    },
    "4337": {
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4338": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4340": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4342": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4343": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4344": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP4",
      "path": "68"
    },
    "4345": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SUB",
      "path": "68"
    },
    "4346": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4347": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP7",
      "path": "68"
    },
    "4348": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "GAS",
      "path": "68"
    },
    "4349": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "4350": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4351": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4352": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4353": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x110E"
    },
    "4356": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "4357": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4358": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4360": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4361": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "4362": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4363": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4365": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "REVERT",
      "path": "68"
    },
    "4366": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4367": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "4368": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "4369": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "4370": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "4371": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4373": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4374": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4375": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "4377": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "NOT",
      "path": "68"
    },
    "4378": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "4380": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4381": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "4382": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "4383": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4384": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "4385": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4386": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4388": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4389": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "4390": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4391": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "4392": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4393": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1132"
    },
    "4396": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "4397": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4398": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x298D"
    },
    "4401": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMP",
      "path": "68"
    },
    "4402": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4403": {
      "offset": [
        8525,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4404": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x11BA"
    },
    "4407": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "4408": {
      "op": "POP"
    },
    "4409": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4F"
    },
    "4411": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4418": {
      "op": "SHL"
    },
    "4419": {
      "op": "SUB"
    },
    "4420": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4427": {
      "op": "SHL"
    },
    "4428": {
      "op": "SUB"
    },
    "4429": {
      "offset": [
        8658,
        8686
      ],
      "op": "AND",
      "path": "68"
    },
    "4430": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xA75B87D2"
    },
    "4435": {
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4437": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4438": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4439": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "4444": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "4445": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "4447": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SHL",
      "path": "68"
    },
    "4448": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4449": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4450": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "4452": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "4453": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4455": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4457": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4458": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4459": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP4",
      "path": "68"
    },
    "4460": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SUB",
      "path": "68"
    },
    "4461": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4462": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP7",
      "path": "68"
    },
    "4463": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "GAS",
      "path": "68"
    },
    "4464": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "4465": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4466": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4467": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4468": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1181"
    },
    "4471": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "4472": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4473": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4475": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4476": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "4477": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4478": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4480": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "REVERT",
      "path": "68"
    },
    "4481": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4482": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "4483": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "4484": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "4485": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "4486": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4488": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4489": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4490": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "4492": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "NOT",
      "path": "68"
    },
    "4493": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "4495": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4496": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "4497": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "4498": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4499": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "4500": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4501": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4503": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4504": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "4505": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4506": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "4507": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4508": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x11A5"
    },
    "4511": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "4512": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4513": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x29F2"
    },
    "4516": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMP",
      "path": "68"
    },
    "4517": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4524": {
      "op": "SHL"
    },
    "4525": {
      "op": "SUB"
    },
    "4526": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "4527": {
      "offset": [
        8645,
        8654
      ],
      "op": "ORIGIN",
      "path": "68"
    },
    "4528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4534": {
      "op": "SHL"
    },
    "4535": {
      "op": "SUB"
    },
    "4536": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "4537": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8645,
        8688
      ],
      "op": "EQ",
      "path": "68"
    },
    "4538": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4539": {
      "offset": [
        8502,
        8814
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x11D9"
    },
    "4542": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "4543": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4545": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4546": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4553": {
      "op": "SHL"
    },
    "4554": {
      "offset": [
        8729,
        8799
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4555": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4556": {
      "offset": [
        8788,
        8798
      ],
      "op": "CALLER",
      "path": "68"
    },
    "4557": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "4559": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4560": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "ADD",
      "path": "68"
    },
    "4561": {
      "op": "MSTORE"
    },
    "4562": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4564": {
      "op": "ADD"
    },
    "4565": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x81D"
    },
    "4568": {
      "op": "JUMP"
    },
    "4569": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4570": {
      "op": "POP"
    },
    "4571": {
      "fn": "gPHM.enableTransfers",
      "offset": [
        1798,
        1813
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 29,
      "value": "0x51"
    },
    "4573": {
      "fn": "gPHM.enableTransfers",
      "offset": [
        1798,
        1821
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4574": {
      "fn": "gPHM.enableTransfers",
      "offset": [
        1798,
        1821
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4577": {
      "op": "NOT"
    },
    "4578": {
      "fn": "gPHM.enableTransfers",
      "offset": [
        1798,
        1821
      ],
      "op": "AND",
      "path": "45"
    },
    "4579": {
      "fn": "gPHM.enableTransfers",
      "offset": [
        1798,
        1821
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4580": {
      "fn": "gPHM.enableTransfers",
      "offset": [
        1798,
        1821
      ],
      "op": "SSTORE",
      "path": "45"
    },
    "4581": {
      "fn": "gPHM.enableTransfers",
      "jump": "o",
      "offset": [
        1728,
        1828
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4582": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        2899,
        3773
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4583": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3113,
        3170
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4585": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3113,
        3170
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4586": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3113,
        3170
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4587": {
      "offset": [
        995,
        1066
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
    },
    "4620": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3113,
        3170
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4622": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3113,
        3170
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4623": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3113,
        3170
      ],
      "op": "ADD",
      "path": "45"
    },
    "4624": {
      "op": "MSTORE"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4631": {
      "op": "SHL"
    },
    "4632": {
      "op": "SUB"
    },
    "4633": {
      "op": "DUP9"
    },
    "4634": {
      "op": "AND"
    },
    "4635": {
      "op": "SWAP2"
    },
    "4636": {
      "op": "DUP2"
    },
    "4637": {
      "op": "ADD"
    },
    "4638": {
      "op": "SWAP2"
    },
    "4639": {
      "op": "SWAP1"
    },
    "4640": {
      "op": "SWAP2"
    },
    "4641": {
      "op": "MSTORE"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4644": {
      "op": "DUP2"
    },
    "4645": {
      "op": "ADD"
    },
    "4646": {
      "op": "DUP7"
    },
    "4647": {
      "op": "SWAP1"
    },
    "4648": {
      "op": "MSTORE"
    },
    "4649": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4651": {
      "op": "DUP2"
    },
    "4652": {
      "op": "ADD"
    },
    "4653": {
      "op": "DUP6"
    },
    "4654": {
      "op": "SWAP1"
    },
    "4655": {
      "op": "MSTORE"
    },
    "4656": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3082,
        3100
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4658": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3082,
        3100
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4661": {
      "op": "ADD"
    },
    "4662": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3113,
        3170
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4664": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3113,
        3170
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4665": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3113,
        3170
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4667": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3113,
        3170
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4668": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3113,
        3170
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4669": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3113,
        3170
      ],
      "op": "SUB",
      "path": "45"
    },
    "4670": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3113,
        3170
      ],
      "op": "SUB",
      "path": "45"
    },
    "4671": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3113,
        3170
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4672": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3113,
        3170
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4673": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3113,
        3170
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4674": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3113,
        3170
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4676": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3113,
        3170
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4677": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3103,
        3171
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4678": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3103,
        3171
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4679": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3103,
        3171
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4680": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3103,
        3171
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4682": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3103,
        3171
      ],
      "op": "ADD",
      "path": "45"
    },
    "4683": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3103,
        3171
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "4684": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3082,
        3171
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4685": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3082,
        3171
      ],
      "op": "POP",
      "path": "45"
    },
    "4686": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3181,
        3195
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4688": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3237,
        3255
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1257"
    },
    "4691": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3237,
        3253
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x775"
    },
    "4694": {
      "fn": "gPHM.delegateBySig",
      "jump": "i",
      "offset": [
        3237,
        3255
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4695": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3237,
        3255
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4696": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3208,
        3268
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4698": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3208,
        3268
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4699": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "4702": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4704": {
      "op": "SHL"
    },
    "4705": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3208,
        3268
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4707": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3208,
        3268
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4708": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3208,
        3268
      ],
      "op": "ADD",
      "path": "45"
    },
    "4709": {
      "op": "MSTORE"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4712": {
      "op": "DUP2"
    },
    "4713": {
      "op": "ADD"
    },
    "4714": {
      "op": "SWAP2"
    },
    "4715": {
      "op": "SWAP1"
    },
    "4716": {
      "op": "SWAP2"
    },
    "4717": {
      "op": "MSTORE"
    },
    "4718": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "4720": {
      "op": "DUP2"
    },
    "4721": {
      "op": "ADD"
    },
    "4722": {
      "op": "DUP4"
    },
    "4723": {
      "op": "SWAP1"
    },
    "4724": {
      "op": "MSTORE"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "4727": {
      "op": "ADD"
    },
    "4728": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3208,
        3268
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4730": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3208,
        3268
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4731": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3208,
        3268
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4732": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4734": {
      "op": "NOT"
    },
    "4735": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3208,
        3268
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4736": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3208,
        3268
      ],
      "op": "DUP5",
      "path": "45"
    },
    "4737": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3208,
        3268
      ],
      "op": "SUB",
      "path": "45"
    },
    "4738": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3208,
        3268
      ],
      "op": "ADD",
      "path": "45"
    },
    "4739": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3208,
        3268
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4740": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3208,
        3268
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4741": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3208,
        3268
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4742": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3208,
        3268
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4743": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3208,
        3268
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4744": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3198,
        3269
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4745": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3198,
        3269
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4746": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3208,
        3268
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4748": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3198,
        3269
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4749": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3198,
        3269
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4750": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3198,
        3269
      ],
      "op": "ADD",
      "path": "45"
    },
    "4751": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3198,
        3269
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "4752": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3279,
        3296
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4754": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4755": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "DUP6",
      "path": "45"
    },
    "4756": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4757": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4758": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "DUP5",
      "path": "45"
    },
    "4759": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "ADD",
      "path": "45"
    },
    "4760": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4761": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "DUP5",
      "path": "45"
    },
    "4762": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4763": {
      "op": "DUP2"
    },
    "4764": {
      "op": "SWAP1"
    },
    "4765": {
      "op": "MSTORE"
    },
    "4766": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4768": {
      "op": "DUP10"
    },
    "4769": {
      "op": "AND"
    },
    "4770": {
      "op": "SWAP3"
    },
    "4771": {
      "op": "DUP5"
    },
    "4772": {
      "op": "ADD"
    },
    "4773": {
      "op": "SWAP3"
    },
    "4774": {
      "op": "SWAP1"
    },
    "4775": {
      "op": "SWAP3"
    },
    "4776": {
      "op": "MSTORE"
    },
    "4777": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4779": {
      "op": "DUP4"
    },
    "4780": {
      "op": "ADD"
    },
    "4781": {
      "op": "DUP8"
    },
    "4782": {
      "op": "SWAP1"
    },
    "4783": {
      "op": "MSTORE"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4786": {
      "op": "DUP4"
    },
    "4787": {
      "op": "ADD"
    },
    "4788": {
      "op": "DUP7"
    },
    "4789": {
      "op": "SWAP1"
    },
    "4790": {
      "op": "MSTORE"
    },
    "4791": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3198,
        3269
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4792": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3198,
        3269
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "4793": {
      "op": "POP"
    },
    "4794": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3279,
        3296
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4795": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "4797": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4800": {
      "op": "ADD"
    },
    "4801": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4803": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4805": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4806": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4808": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4809": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "SUB",
      "path": "45"
    },
    "4810": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4811": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4812": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "DUP5",
      "path": "45"
    },
    "4813": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "SUB",
      "path": "45"
    },
    "4814": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4815": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "DUP6",
      "path": "45"
    },
    "4816": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "GAS",
      "path": "45"
    },
    "4817": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "STATICCALL",
      "path": "45"
    },
    "4818": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4819": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4820": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4821": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x12E2"
    },
    "4824": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4825": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "4826": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4828": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4829": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "4830": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "4831": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4833": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "REVERT",
      "path": "45"
    },
    "4834": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4835": {
      "op": "POP"
    },
    "4836": {
      "op": "POP"
    },
    "4837": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4839": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4842": {
      "op": "NOT"
    },
    "4843": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "ADD",
      "path": "45"
    },
    "4844": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4845": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3299,
        3325
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4846": {
      "op": "POP"
    },
    "4847": {
      "op": "POP"
    },
    "4848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4854": {
      "op": "SHL"
    },
    "4855": {
      "op": "SUB"
    },
    "4856": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3344,
        3367
      ],
      "op": "DUP2",
      "path": "45",
      "statement": 30
    },
    "4857": {
      "branch": 101,
      "fn": "gPHM.delegateBySig",
      "offset": [
        3344,
        3367
      ],
      "op": "AND",
      "path": "45"
    },
    "4858": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3336,
        3384
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1334"
    },
    "4861": {
      "branch": 101,
      "fn": "gPHM.delegateBySig",
      "offset": [
        3336,
        3384
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4862": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3336,
        3384
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4864": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3336,
        3384
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4865": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4869": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4871": {
      "op": "SHL"
    },
    "4872": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3336,
        3384
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4873": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3336,
        3384
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4876": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3336,
        3384
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "4878": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3336,
        3384
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4879": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3336,
        3384
      ],
      "op": "ADD",
      "path": "45"
    },
    "4880": {
      "op": "MSTORE"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4885": {
      "op": "DUP3"
    },
    "4886": {
      "op": "ADD"
    },
    "4887": {
      "op": "MSTORE"
    },
    "4888": {
      "op": "PUSH12",
      "value": "0x5A45524F5F41444452455353"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4903": {
      "op": "SHL"
    },
    "4904": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4906": {
      "op": "DUP3"
    },
    "4907": {
      "op": "ADD"
    },
    "4908": {
      "op": "MSTORE"
    },
    "4909": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4911": {
      "op": "ADD"
    },
    "4912": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3336,
        3384
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x81D"
    },
    "4915": {
      "op": "JUMP"
    },
    "4916": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3336,
        3384
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4923": {
      "op": "SHL"
    },
    "4924": {
      "op": "SUB"
    },
    "4925": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3628
      ],
      "op": "DUP2",
      "path": "45",
      "statement": 31
    },
    "4926": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3628
      ],
      "op": "AND",
      "path": "45"
    },
    "4927": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3628
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4929": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3628
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4930": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3628
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4931": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3628
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4932": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3617
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x5"
    },
    "4934": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3628
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4936": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3628
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4937": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3628
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4939": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3628
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4940": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3628
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "4941": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3630
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4942": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3630
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "4943": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3630
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "4945": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3630
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4946": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3630
      ],
      "op": "ADD",
      "path": "45"
    },
    "4947": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3630
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4948": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3630
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4949": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3611,
        3630
      ],
      "op": "SSTORE",
      "path": "45"
    },
    "4950": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3602,
        3630
      ],
      "op": "DUP9",
      "path": "45"
    },
    "4951": {
      "branch": 102,
      "fn": "gPHM.delegateBySig",
      "offset": [
        3602,
        3630
      ],
      "op": "EQ",
      "path": "45"
    },
    "4952": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3594,
        3648
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1393"
    },
    "4955": {
      "branch": 102,
      "fn": "gPHM.delegateBySig",
      "offset": [
        3594,
        3648
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4956": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3594,
        3648
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4958": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3594,
        3648
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4959": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4963": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4965": {
      "op": "SHL"
    },
    "4966": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3594,
        3648
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4967": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3594,
        3648
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4970": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3594,
        3648
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "4972": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3594,
        3648
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4973": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3594,
        3648
      ],
      "op": "ADD",
      "path": "45"
    },
    "4974": {
      "op": "MSTORE"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "4977": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4979": {
      "op": "DUP3"
    },
    "4980": {
      "op": "ADD"
    },
    "4981": {
      "op": "MSTORE"
    },
    "4982": {
      "op": "PUSH13",
      "value": "0x494E56414C49445F4E4F4E4345"
    },
    "4996": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "4998": {
      "op": "SHL"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5001": {
      "op": "DUP3"
    },
    "5002": {
      "op": "ADD"
    },
    "5003": {
      "op": "MSTORE"
    },
    "5004": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5006": {
      "op": "ADD"
    },
    "5007": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3594,
        3648
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x81D"
    },
    "5010": {
      "op": "JUMP"
    },
    "5011": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3594,
        3648
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5012": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3696,
        3702
      ],
      "op": "DUP7",
      "path": "45",
      "statement": 32
    },
    "5013": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3677,
        3692
      ],
      "op": "TIMESTAMP",
      "path": "45"
    },
    "5014": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3677,
        3702
      ],
      "op": "GT",
      "path": "45"
    },
    "5015": {
      "branch": 103,
      "fn": "gPHM.delegateBySig",
      "offset": [
        3677,
        3702
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "5016": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3669,
        3724
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x13D7"
    },
    "5019": {
      "branch": 103,
      "fn": "gPHM.delegateBySig",
      "offset": [
        3669,
        3724
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "5020": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3669,
        3724
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "5022": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3669,
        3724
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5023": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5029": {
      "op": "SHL"
    },
    "5030": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3669,
        3724
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5031": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3669,
        3724
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5034": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3669,
        3724
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "5036": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3669,
        3724
      ],
      "op": "DUP3",
      "path": "45"
    },
    "5037": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3669,
        3724
      ],
      "op": "ADD",
      "path": "45"
    },
    "5038": {
      "op": "MSTORE"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5041": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5043": {
      "op": "DUP3"
    },
    "5044": {
      "op": "ADD"
    },
    "5045": {
      "op": "MSTORE"
    },
    "5046": {
      "op": "PUSH17",
      "value": "0x14D251D3905515549157D1561412549151"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "5066": {
      "op": "SHL"
    },
    "5067": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5069": {
      "op": "DUP3"
    },
    "5070": {
      "op": "ADD"
    },
    "5071": {
      "op": "MSTORE"
    },
    "5072": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5074": {
      "op": "ADD"
    },
    "5075": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3669,
        3724
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x81D"
    },
    "5078": {
      "op": "JUMP"
    },
    "5079": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3669,
        3724
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5080": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3735,
        3766
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 33,
      "value": "0x13E1"
    },
    "5083": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3745,
        3754
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5084": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3756,
        3765
      ],
      "op": "DUP11",
      "path": "45"
    },
    "5085": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3735,
        3744
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1ECE"
    },
    "5088": {
      "fn": "gPHM.delegateBySig",
      "jump": "i",
      "offset": [
        3735,
        3766
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5089": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3735,
        3766
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5090": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3072,
        3773
      ],
      "op": "POP",
      "path": "45"
    },
    "5091": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3072,
        3773
      ],
      "op": "POP",
      "path": "45"
    },
    "5092": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        3072,
        3773
      ],
      "op": "POP",
      "path": "45"
    },
    "5093": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        2899,
        3773
      ],
      "op": "POP",
      "path": "45"
    },
    "5094": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        2899,
        3773
      ],
      "op": "POP",
      "path": "45"
    },
    "5095": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        2899,
        3773
      ],
      "op": "POP",
      "path": "45"
    },
    "5096": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        2899,
        3773
      ],
      "op": "POP",
      "path": "45"
    },
    "5097": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        2899,
        3773
      ],
      "op": "POP",
      "path": "45"
    },
    "5098": {
      "fn": "gPHM.delegateBySig",
      "offset": [
        2899,
        3773
      ],
      "op": "POP",
      "path": "45"
    },
    "5099": {
      "fn": "gPHM.delegateBySig",
      "jump": "o",
      "offset": [
        2899,
        3773
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5100": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        4959,
        5085
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5101": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5018,
        5025
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "5103": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5044,
        5078
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 34,
      "value": "0x606"
    },
    "5106": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5061
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x13F9"
    },
    "5109": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5059
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x19FE"
    },
    "5112": {
      "fn": "gPHM.balanceToPHM",
      "jump": "i",
      "offset": [
        5055,
        5061
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5113": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5061
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5120": {
      "op": "SHL"
    },
    "5121": {
      "op": "SUB"
    },
    "5122": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5075
      ],
      "op": "AND",
      "path": "45"
    },
    "5123": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5075
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xED3437F8"
    },
    "5128": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "5130": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5131": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5132": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "5137": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "AND",
      "path": "45"
    },
    "5138": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xE0"
    },
    "5140": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "SHL",
      "path": "45"
    },
    "5141": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5142": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5143": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "5145": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "ADD",
      "path": "45"
    },
    "5146": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "5148": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "5150": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5151": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5152": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5153": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "SUB",
      "path": "45"
    },
    "5154": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5155": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "DUP7",
      "path": "45"
    },
    "5156": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "GAS",
      "path": "45"
    },
    "5157": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "STATICCALL",
      "path": "45"
    },
    "5158": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "5159": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5160": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "5161": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1436"
    },
    "5164": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "5165": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "5166": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "5168": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5169": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "5170": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "5171": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "5173": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "REVERT",
      "path": "45"
    },
    "5174": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5175": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "POP",
      "path": "45"
    },
    "5176": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "POP",
      "path": "45"
    },
    "5177": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "POP",
      "path": "45"
    },
    "5178": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "POP",
      "path": "45"
    },
    "5179": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "5181": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5182": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "5183": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "5185": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "NOT",
      "path": "45"
    },
    "5186": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "5188": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "DUP3",
      "path": "45"
    },
    "5189": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "ADD",
      "path": "45"
    },
    "5190": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "AND",
      "path": "45"
    },
    "5191": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "DUP3",
      "path": "45"
    },
    "5192": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "ADD",
      "path": "45"
    },
    "5193": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5194": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "5196": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5197": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "POP",
      "path": "45"
    },
    "5198": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5199": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "ADD",
      "path": "45"
    },
    "5200": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5201": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x145A"
    },
    "5204": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5205": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5206": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2947"
    },
    "5209": {
      "fn": "gPHM.balanceToPHM",
      "jump": "i",
      "offset": [
        5055,
        5077
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5210": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5055,
        5077
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5211": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5044,
        5050
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5212": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5044,
        5050
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5213": {
      "fn": "gPHM.balanceToPHM",
      "offset": [
        5044,
        5054
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2083"
    },
    "5216": {
      "fn": "gPHM.balanceToPHM",
      "jump": "i",
      "offset": [
        5044,
        5078
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5217": {
      "fn": "ERC20.permit",
      "offset": [
        3984,
        4995
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5218": {
      "fn": "ERC20.permit",
      "offset": [
        4212,
        4227
      ],
      "op": "TIMESTAMP",
      "path": "42",
      "statement": 35
    },
    "5219": {
      "fn": "ERC20.permit",
      "offset": [
        4200,
        4208
      ],
      "op": "DUP5",
      "path": "42"
    },
    "5220": {
      "fn": "ERC20.permit",
      "offset": [
        4200,
        4227
      ],
      "op": "LT",
      "path": "42"
    },
    "5221": {
      "branch": 125,
      "fn": "ERC20.permit",
      "offset": [
        4200,
        4227
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "5222": {
      "fn": "ERC20.permit",
      "offset": [
        4192,
        4255
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x14B1"
    },
    "5225": {
      "branch": 125,
      "fn": "ERC20.permit",
      "offset": [
        4192,
        4255
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "5226": {
      "fn": "ERC20.permit",
      "offset": [
        4192,
        4255
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5228": {
      "fn": "ERC20.permit",
      "offset": [
        4192,
        4255
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5229": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5233": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5235": {
      "op": "SHL"
    },
    "5236": {
      "fn": "ERC20.permit",
      "offset": [
        4192,
        4255
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5237": {
      "fn": "ERC20.permit",
      "offset": [
        4192,
        4255
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5240": {
      "fn": "ERC20.permit",
      "offset": [
        4192,
        4255
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "5242": {
      "fn": "ERC20.permit",
      "offset": [
        4192,
        4255
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5243": {
      "fn": "ERC20.permit",
      "offset": [
        4192,
        4255
      ],
      "op": "ADD",
      "path": "42"
    },
    "5244": {
      "op": "MSTORE"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5249": {
      "op": "DUP3"
    },
    "5250": {
      "op": "ADD"
    },
    "5251": {
      "op": "MSTORE"
    },
    "5252": {
      "op": "PUSH32",
      "value": "0x5045524D49545F444541444C494E455F45585049524544000000000000000000"
    },
    "5285": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5287": {
      "op": "DUP3"
    },
    "5288": {
      "op": "ADD"
    },
    "5289": {
      "op": "MSTORE"
    },
    "5290": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5292": {
      "op": "ADD"
    },
    "5293": {
      "fn": "ERC20.permit",
      "offset": [
        4192,
        4255
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x81D"
    },
    "5296": {
      "op": "JUMP"
    },
    "5297": {
      "fn": "ERC20.permit",
      "offset": [
        4192,
        4255
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5298": {
      "fn": "ERC20.permit",
      "offset": [
        4420,
        4434
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "5300": {
      "fn": "ERC20.permit",
      "offset": [
        4534,
        4552
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x14BB"
    },
    "5303": {
      "fn": "ERC20.permit",
      "offset": [
        4534,
        4550
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x775"
    },
    "5306": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        4534,
        4552
      ],
      "op": "JUMP",
      "path": "42"
    },
    "5307": {
      "fn": "ERC20.permit",
      "offset": [
        4534,
        4552
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5314": {
      "op": "SHL"
    },
    "5315": {
      "op": "SUB"
    },
    "5316": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4648
      ],
      "op": "DUP10",
      "path": "42"
    },
    "5317": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4648
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5318": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4648
      ],
      "op": "AND",
      "path": "42"
    },
    "5319": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4648
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "5321": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4648
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5322": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4648
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5323": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4648
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5324": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4641
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x5"
    },
    "5326": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4648
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "5328": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4648
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5329": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4648
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5330": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4648
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5331": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4648
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5333": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4648
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5334": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4648
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5335": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4648
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5336": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4648
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "5337": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4650
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5338": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4650
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "5339": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4650
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "5341": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4650
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5342": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4650
      ],
      "op": "ADD",
      "path": "42"
    },
    "5343": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4650
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5344": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4650
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5345": {
      "fn": "ERC20.permit",
      "offset": [
        4635,
        4650
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "5346": {
      "fn": "ERC20.permit",
      "offset": [
        4584,
        4661
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5347": {
      "fn": "ERC20.permit",
      "offset": [
        4584,
        4661
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5348": {
      "offset": [
        1370,
        1465
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
    },
    "5381": {
      "fn": "ERC20.permit",
      "offset": [
        4584,
        4661
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5382": {
      "fn": "ERC20.permit",
      "offset": [
        4584,
        4661
      ],
      "op": "DUP5",
      "path": "42"
    },
    "5383": {
      "fn": "ERC20.permit",
      "offset": [
        4584,
        4661
      ],
      "op": "ADD",
      "path": "42"
    },
    "5384": {
      "op": "MSTORE"
    },
    "5385": {
      "op": "DUP1"
    },
    "5386": {
      "op": "DUP5"
    },
    "5387": {
      "op": "ADD"
    },
    "5388": {
      "op": "SWAP5"
    },
    "5389": {
      "op": "SWAP1"
    },
    "5390": {
      "op": "SWAP5"
    },
    "5391": {
      "op": "MSTORE"
    },
    "5392": {
      "op": "SWAP4"
    },
    "5393": {
      "op": "DUP13"
    },
    "5394": {
      "op": "AND"
    },
    "5395": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5397": {
      "op": "DUP5"
    },
    "5398": {
      "op": "ADD"
    },
    "5399": {
      "op": "MSTORE"
    },
    "5400": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5402": {
      "op": "DUP4"
    },
    "5403": {
      "op": "ADD"
    },
    "5404": {
      "op": "DUP12"
    },
    "5405": {
      "op": "SWAP1"
    },
    "5406": {
      "op": "MSTORE"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5409": {
      "op": "DUP4"
    },
    "5410": {
      "op": "ADD"
    },
    "5411": {
      "op": "SWAP4"
    },
    "5412": {
      "op": "SWAP1"
    },
    "5413": {
      "op": "SWAP4"
    },
    "5414": {
      "op": "MSTORE"
    },
    "5415": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5417": {
      "op": "DUP1"
    },
    "5418": {
      "op": "DUP4"
    },
    "5419": {
      "op": "ADD"
    },
    "5420": {
      "op": "DUP11"
    },
    "5421": {
      "op": "SWAP1"
    },
    "5422": {
      "op": "MSTORE"
    },
    "5423": {
      "fn": "ERC20.permit",
      "offset": [
        4584,
        4661
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5424": {
      "fn": "ERC20.permit",
      "offset": [
        4584,
        4661
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5425": {
      "fn": "ERC20.permit",
      "offset": [
        4584,
        4661
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5426": {
      "fn": "ERC20.permit",
      "offset": [
        4584,
        4661
      ],
      "op": "DUP5",
      "path": "42"
    },
    "5427": {
      "fn": "ERC20.permit",
      "offset": [
        4584,
        4661
      ],
      "op": "SUB",
      "path": "42"
    },
    "5428": {
      "fn": "ERC20.permit",
      "offset": [
        4584,
        4661
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5429": {
      "fn": "ERC20.permit",
      "offset": [
        4584,
        4661
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5430": {
      "fn": "ERC20.permit",
      "offset": [
        4584,
        4661
      ],
      "op": "ADD",
      "path": "42"
    },
    "5431": {
      "fn": "ERC20.permit",
      "offset": [
        4584,
        4661
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5432": {
      "fn": "ERC20.permit",
      "offset": [
        4584,
        4661
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5433": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5435": {
      "op": "DUP4"
    },
    "5436": {
      "op": "ADD"
    },
    "5437": {
      "fn": "ERC20.permit",
      "offset": [
        4584,
        4661
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5438": {
      "fn": "ERC20.permit",
      "offset": [
        4584,
        4661
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5439": {
      "fn": "ERC20.permit",
      "offset": [
        4584,
        4661
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5440": {
      "fn": "ERC20.permit",
      "offset": [
        4574,
        4662
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5441": {
      "fn": "ERC20.permit",
      "offset": [
        4574,
        4662
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5442": {
      "fn": "ERC20.permit",
      "offset": [
        4574,
        4662
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "5443": {
      "fn": "ERC20.permit",
      "offset": [
        4574,
        4662
      ],
      "op": "ADD",
      "path": "42"
    },
    "5444": {
      "fn": "ERC20.permit",
      "offset": [
        4574,
        4662
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5445": {
      "fn": "ERC20.permit",
      "offset": [
        4574,
        4662
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5446": {
      "fn": "ERC20.permit",
      "offset": [
        4574,
        4662
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5447": {
      "fn": "ERC20.permit",
      "offset": [
        4574,
        4662
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "5448": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "5451": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5453": {
      "op": "SHL"
    },
    "5454": {
      "fn": "ERC20.permit",
      "offset": [
        4464,
        4680
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "5457": {
      "fn": "ERC20.permit",
      "offset": [
        4464,
        4680
      ],
      "op": "DUP4",
      "path": "42"
    },
    "5458": {
      "fn": "ERC20.permit",
      "offset": [
        4464,
        4680
      ],
      "op": "ADD",
      "path": "42"
    },
    "5459": {
      "op": "MSTORE"
    },
    "5460": {
      "op": "PUSH2",
      "value": "0x102"
    },
    "5463": {
      "op": "DUP3"
    },
    "5464": {
      "op": "ADD"
    },
    "5465": {
      "op": "SWAP3"
    },
    "5466": {
      "op": "SWAP1"
    },
    "5467": {
      "op": "SWAP3"
    },
    "5468": {
      "op": "MSTORE"
    },
    "5469": {
      "op": "PUSH2",
      "value": "0x122"
    },
    "5472": {
      "op": "DUP2"
    },
    "5473": {
      "op": "ADD"
    },
    "5474": {
      "op": "SWAP2"
    },
    "5475": {
      "op": "SWAP1"
    },
    "5476": {
      "op": "SWAP2"
    },
    "5477": {
      "op": "MSTORE"
    },
    "5478": {
      "op": "PUSH2",
      "value": "0x142"
    },
    "5481": {
      "op": "ADD"
    },
    "5482": {
      "fn": "ERC20.permit",
      "offset": [
        4464,
        4680
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5484": {
      "fn": "ERC20.permit",
      "offset": [
        4464,
        4680
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5485": {
      "fn": "ERC20.permit",
      "offset": [
        4464,
        4680
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5488": {
      "op": "NOT"
    },
    "5489": {
      "fn": "ERC20.permit",
      "offset": [
        4464,
        4680
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5490": {
      "fn": "ERC20.permit",
      "offset": [
        4464,
        4680
      ],
      "op": "DUP5",
      "path": "42"
    },
    "5491": {
      "fn": "ERC20.permit",
      "offset": [
        4464,
        4680
      ],
      "op": "SUB",
      "path": "42"
    },
    "5492": {
      "fn": "ERC20.permit",
      "offset": [
        4464,
        4680
      ],
      "op": "ADD",
      "path": "42"
    },
    "5493": {
      "fn": "ERC20.permit",
      "offset": [
        4464,
        4680
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5494": {
      "fn": "ERC20.permit",
      "offset": [
        4464,
        4680
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5495": {
      "fn": "ERC20.permit",
      "offset": [
        4464,
        4680
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5496": {
      "fn": "ERC20.permit",
      "offset": [
        4464,
        4680
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5497": {
      "fn": "ERC20.permit",
      "offset": [
        4464,
        4680
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5498": {
      "fn": "ERC20.permit",
      "offset": [
        4437,
        4694
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5499": {
      "fn": "ERC20.permit",
      "offset": [
        4437,
        4694
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5500": {
      "fn": "ERC20.permit",
      "offset": [
        4464,
        4680
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "5502": {
      "fn": "ERC20.permit",
      "offset": [
        4437,
        4694
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5503": {
      "fn": "ERC20.permit",
      "offset": [
        4437,
        4694
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5504": {
      "fn": "ERC20.permit",
      "offset": [
        4437,
        4694
      ],
      "op": "ADD",
      "path": "42"
    },
    "5505": {
      "fn": "ERC20.permit",
      "offset": [
        4437,
        4694
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "5506": {
      "fn": "ERC20.permit",
      "offset": [
        4709,
        4733
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "5508": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5509": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "DUP6",
      "path": "42"
    },
    "5510": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5511": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5512": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "DUP5",
      "path": "42"
    },
    "5513": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "ADD",
      "path": "42"
    },
    "5514": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5515": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "DUP5",
      "path": "42"
    },
    "5516": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5517": {
      "op": "DUP2"
    },
    "5518": {
      "op": "SWAP1"
    },
    "5519": {
      "op": "MSTORE"
    },
    "5520": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5522": {
      "op": "DUP9"
    },
    "5523": {
      "op": "AND"
    },
    "5524": {
      "op": "SWAP3"
    },
    "5525": {
      "op": "DUP5"
    },
    "5526": {
      "op": "ADD"
    },
    "5527": {
      "op": "SWAP3"
    },
    "5528": {
      "op": "SWAP1"
    },
    "5529": {
      "op": "SWAP3"
    },
    "5530": {
      "op": "MSTORE"
    },
    "5531": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5533": {
      "op": "DUP4"
    },
    "5534": {
      "op": "ADD"
    },
    "5535": {
      "op": "DUP7"
    },
    "5536": {
      "op": "SWAP1"
    },
    "5537": {
      "op": "MSTORE"
    },
    "5538": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5540": {
      "op": "DUP4"
    },
    "5541": {
      "op": "ADD"
    },
    "5542": {
      "op": "DUP6"
    },
    "5543": {
      "op": "SWAP1"
    },
    "5544": {
      "op": "MSTORE"
    },
    "5545": {
      "fn": "ERC20.permit",
      "offset": [
        4437,
        4694
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5546": {
      "fn": "ERC20.permit",
      "offset": [
        4437,
        4694
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "5547": {
      "op": "POP"
    },
    "5548": {
      "fn": "ERC20.permit",
      "offset": [
        4709,
        4733
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5549": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "5551": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5554": {
      "op": "ADD"
    },
    "5555": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "5557": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5559": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5560": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "5562": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5563": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "SUB",
      "path": "42"
    },
    "5564": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5565": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5566": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "DUP5",
      "path": "42"
    },
    "5567": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "SUB",
      "path": "42"
    },
    "5568": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5569": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "DUP6",
      "path": "42"
    },
    "5570": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "GAS",
      "path": "42"
    },
    "5571": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "STATICCALL",
      "path": "42"
    },
    "5572": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "5573": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5574": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "5575": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x15D4"
    },
    "5578": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "5579": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "5580": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "5582": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5583": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "RETURNDATACOPY",
      "path": "42"
    },
    "5584": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "RETURNDATASIZE",
      "path": "42"
    },
    "5585": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "5587": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "REVERT",
      "path": "42"
    },
    "5588": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5589": {
      "op": "POP"
    },
    "5590": {
      "op": "POP"
    },
    "5591": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5593": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5596": {
      "op": "NOT"
    },
    "5597": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "ADD",
      "path": "42"
    },
    "5598": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5599": {
      "fn": "ERC20.permit",
      "offset": [
        4736,
        4762
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5600": {
      "op": "POP"
    },
    "5601": {
      "op": "POP"
    },
    "5602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5606": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5608": {
      "op": "SHL"
    },
    "5609": {
      "op": "SUB"
    },
    "5610": {
      "fn": "ERC20.permit",
      "offset": [
        4784,
        4814
      ],
      "op": "DUP2",
      "path": "42",
      "statement": 36
    },
    "5611": {
      "fn": "ERC20.permit",
      "offset": [
        4784,
        4814
      ],
      "op": "AND",
      "path": "42"
    },
    "5612": {
      "fn": "ERC20.permit",
      "offset": [
        4784,
        4814
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "5613": {
      "fn": "ERC20.permit",
      "offset": [
        4784,
        4814
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5614": {
      "fn": "ERC20.permit",
      "offset": [
        4784,
        4814
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "5615": {
      "branch": 126,
      "fn": "ERC20.permit",
      "offset": [
        4784,
        4814
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5616": {
      "fn": "ERC20.permit",
      "offset": [
        4784,
        4843
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x160A"
    },
    "5619": {
      "branch": 126,
      "fn": "ERC20.permit",
      "offset": [
        4784,
        4843
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "5620": {
      "fn": "ERC20.permit",
      "offset": [
        4784,
        4843
      ],
      "op": "POP",
      "path": "42"
    },
    "5621": {
      "fn": "ERC20.permit",
      "offset": [
        4838,
        4843
      ],
      "op": "DUP9",
      "path": "42"
    },
    "5622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5628": {
      "op": "SHL"
    },
    "5629": {
      "op": "SUB"
    },
    "5630": {
      "fn": "ERC20.permit",
      "offset": [
        4818,
        4843
      ],
      "op": "AND",
      "path": "42"
    },
    "5631": {
      "fn": "ERC20.permit",
      "offset": [
        4818,
        4834
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5638": {
      "op": "SHL"
    },
    "5639": {
      "op": "SUB"
    },
    "5640": {
      "fn": "ERC20.permit",
      "offset": [
        4818,
        4843
      ],
      "op": "AND",
      "path": "42"
    },
    "5641": {
      "branch": 127,
      "fn": "ERC20.permit",
      "offset": [
        4818,
        4843
      ],
      "op": "EQ",
      "path": "42"
    },
    "5642": {
      "fn": "ERC20.permit",
      "offset": [
        4784,
        4843
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5643": {
      "fn": "ERC20.permit",
      "offset": [
        4776,
        4872
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1656"
    },
    "5646": {
      "branch": 127,
      "fn": "ERC20.permit",
      "offset": [
        4776,
        4872
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "5647": {
      "fn": "ERC20.permit",
      "offset": [
        4776,
        4872
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5649": {
      "fn": "ERC20.permit",
      "offset": [
        4776,
        4872
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5650": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5654": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5656": {
      "op": "SHL"
    },
    "5657": {
      "fn": "ERC20.permit",
      "offset": [
        4776,
        4872
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5658": {
      "fn": "ERC20.permit",
      "offset": [
        4776,
        4872
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5661": {
      "fn": "ERC20.permit",
      "offset": [
        4776,
        4872
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "5663": {
      "fn": "ERC20.permit",
      "offset": [
        4776,
        4872
      ],
      "op": "DUP3",
      "path": "42"
    },
    "5664": {
      "fn": "ERC20.permit",
      "offset": [
        4776,
        4872
      ],
      "op": "ADD",
      "path": "42"
    },
    "5665": {
      "op": "MSTORE"
    },
    "5666": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "5668": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5670": {
      "op": "DUP3"
    },
    "5671": {
      "op": "ADD"
    },
    "5672": {
      "op": "MSTORE"
    },
    "5673": {
      "op": "PUSH32",
      "value": "0x494E56414C49445F5045524D49545F5349474E41545552450000000000000000"
    },
    "5706": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5708": {
      "op": "DUP3"
    },
    "5709": {
      "op": "ADD"
    },
    "5710": {
      "op": "MSTORE"
    },
    "5711": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5713": {
      "op": "ADD"
    },
    "5714": {
      "fn": "ERC20.permit",
      "offset": [
        4776,
        4872
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x81D"
    },
    "5717": {
      "op": "JUMP"
    },
    "5718": {
      "fn": "ERC20.permit",
      "offset": [
        4776,
        4872
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5725": {
      "op": "SHL"
    },
    "5726": {
      "op": "SUB"
    },
    "5727": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4914
      ],
      "op": "SWAP1",
      "path": "42",
      "statement": 37
    },
    "5728": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4914
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5729": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4914
      ],
      "op": "AND",
      "path": "42"
    },
    "5730": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4914
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "5732": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4914
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5733": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4914
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5734": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4914
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5735": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4896
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "5737": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4914
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "5739": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4914
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5740": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4914
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5741": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4914
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5742": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4914
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5744": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4914
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5745": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4914
      ],
      "op": "DUP4",
      "path": "42"
    },
    "5746": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4914
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "5747": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4923
      ],
      "op": "DUP12",
      "path": "42"
    },
    "5748": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4923
      ],
      "op": "DUP6",
      "path": "42"
    },
    "5749": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4923
      ],
      "op": "AND",
      "path": "42"
    },
    "5750": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4923
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5751": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4923
      ],
      "op": "DUP6",
      "path": "42"
    },
    "5752": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4923
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5753": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4923
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5754": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4923
      ],
      "op": "DUP4",
      "path": "42"
    },
    "5755": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4923
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "5756": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4923
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "5757": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4923
      ],
      "op": "DUP2",
      "path": "42"
    },
    "5758": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4923
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5759": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4923
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "5760": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4931
      ],
      "op": "DUP11",
      "path": "42"
    },
    "5761": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4931
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5762": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4931
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "5763": {
      "fn": "ERC20.permit",
      "offset": [
        4957,
        4988
      ],
      "op": "MLOAD",
      "path": "42",
      "statement": 38
    },
    "5764": {
      "op": "DUP10"
    },
    "5765": {
      "op": "DUP2"
    },
    "5766": {
      "op": "MSTORE"
    },
    "5767": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4923
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5768": {
      "fn": "ERC20.permit",
      "offset": [
        4887,
        4923
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "5769": {
      "op": "POP"
    },
    "5770": {
      "fn": "ERC20.permit",
      "offset": [
        4957,
        4988
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5771": {
      "fn": "ERC20.permit",
      "offset": [
        4957,
        4988
      ],
      "op": "DUP11",
      "path": "42"
    },
    "5772": {
      "fn": "ERC20.permit",
      "offset": [
        4957,
        4988
      ],
      "op": "AND",
      "path": "42"
    },
    "5773": {
      "fn": "ERC20.permit",
      "offset": [
        4957,
        4988
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5774": {
      "fn": "ERC20.permit",
      "offset": [
        4957,
        4988
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "5807": {
      "fn": "ERC20.permit",
      "offset": [
        4957,
        4988
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5808": {
      "op": "ADD"
    },
    "5809": {
      "fn": "ERC20.permit",
      "offset": [
        4957,
        4988
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "5811": {
      "fn": "ERC20.permit",
      "offset": [
        4957,
        4988
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "5812": {
      "fn": "ERC20.permit",
      "offset": [
        4957,
        4988
      ],
      "op": "DUP1",
      "path": "42"
    },
    "5813": {
      "fn": "ERC20.permit",
      "offset": [
        4957,
        4988
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "5814": {
      "fn": "ERC20.permit",
      "offset": [
        4957,
        4988
      ],
      "op": "SUB",
      "path": "42"
    },
    "5815": {
      "fn": "ERC20.permit",
      "offset": [
        4957,
        4988
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "5816": {
      "fn": "ERC20.permit",
      "offset": [
        4957,
        4988
      ],
      "op": "LOG3",
      "path": "42"
    },
    "5817": {
      "fn": "ERC20.permit",
      "offset": [
        3984,
        4995
      ],
      "op": "POP",
      "path": "42"
    },
    "5818": {
      "fn": "ERC20.permit",
      "offset": [
        3984,
        4995
      ],
      "op": "POP",
      "path": "42"
    },
    "5819": {
      "fn": "ERC20.permit",
      "offset": [
        3984,
        4995
      ],
      "op": "POP",
      "path": "42"
    },
    "5820": {
      "fn": "ERC20.permit",
      "offset": [
        3984,
        4995
      ],
      "op": "POP",
      "path": "42"
    },
    "5821": {
      "fn": "ERC20.permit",
      "offset": [
        3984,
        4995
      ],
      "op": "POP",
      "path": "42"
    },
    "5822": {
      "fn": "ERC20.permit",
      "offset": [
        3984,
        4995
      ],
      "op": "POP",
      "path": "42"
    },
    "5823": {
      "fn": "ERC20.permit",
      "offset": [
        3984,
        4995
      ],
      "op": "POP",
      "path": "42"
    },
    "5824": {
      "fn": "ERC20.permit",
      "jump": "o",
      "offset": [
        3984,
        4995
      ],
      "op": "JUMP",
      "path": "42"
    },
    "5825": {
      "fn": "gPHM.addApprovedDelegatee",
      "offset": [
        1888,
        2019
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5826": {
      "offset": [
        7939,
        7955
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "5828": {
      "offset": [
        7958,
        7974
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x16D5"
    },
    "5831": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4F"
    },
    "5833": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "5834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5840": {
      "op": "SHL"
    },
    "5841": {
      "op": "SUB"
    },
    "5842": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "5843": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "5844": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2371,
        2493
      ],
      "op": "JUMP",
      "path": "68"
    },
    "5845": {
      "offset": [
        7958,
        7974
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "5846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5852": {
      "op": "SHL"
    },
    "5853": {
      "op": "SUB"
    },
    "5854": {
      "offset": [
        7958,
        7992
      ],
      "op": "AND",
      "path": "68"
    },
    "5855": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7992
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x1BED5241"
    },
    "5860": {
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "5862": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "5863": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "5864": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "5869": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "5870": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "5872": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SHL",
      "path": "68"
    },
    "5873": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "5874": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "5875": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "5877": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "5878": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "5880": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "5882": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "5883": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "5884": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP4",
      "path": "68"
    },
    "5885": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SUB",
      "path": "68"
    },
    "5886": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "5887": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP7",
      "path": "68"
    },
    "5888": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "GAS",
      "path": "68"
    },
    "5889": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "5890": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "5891": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "5892": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "5893": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1712"
    },
    "5896": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "5897": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "5898": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "5900": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "5901": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "5902": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "5903": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "5905": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "REVERT",
      "path": "68"
    },
    "5906": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "5907": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "5908": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "5909": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "5910": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "5911": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "5913": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "5914": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "5915": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "5917": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "NOT",
      "path": "68"
    },
    "5918": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "5920": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "5921": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "5922": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "5923": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "5924": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "5925": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "5926": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "5928": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "5929": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "5930": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "5931": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "5932": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "5933": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1736"
    },
    "5936": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "5937": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "5938": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x298D"
    },
    "5941": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMP",
      "path": "68"
    },
    "5942": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "5943": {
      "offset": [
        7939,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "5944": {
      "op": "POP"
    },
    "5945": {
      "offset": [
        8023,
        8027
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1"
    },
    "5947": {
      "offset": [
        8008,
        8027
      ],
      "op": "DUP2",
      "path": "68"
    },
    "5948": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "5949": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "5950": {
      "branch": 132,
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "EQ",
      "path": "68"
    },
    "5951": {
      "offset": [
        8004,
        8824
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "5952": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1807"
    },
    "5955": {
      "branch": 132,
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "5956": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4F"
    },
    "5958": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5965": {
      "op": "SHL"
    },
    "5966": {
      "op": "SUB"
    },
    "5967": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "5968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5974": {
      "op": "SHL"
    },
    "5975": {
      "op": "SUB"
    },
    "5976": {
      "offset": [
        8143,
        8167
      ],
      "op": "AND",
      "path": "68"
    },
    "5977": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8167
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "5982": {
      "offset": [
        8226,
        8236
      ],
      "op": "CALLER",
      "path": "68"
    },
    "5983": {
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "5985": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "5986": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "5988": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "ADD",
      "path": "68"
    },
    "5989": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x176E"
    },
    "5992": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "5993": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "5994": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x29AF"
    },
    "5997": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMP",
      "path": "68"
    },
    "5998": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "5999": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6001": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6002": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6004": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6005": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP4",
      "path": "68"
    },
    "6006": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "6007": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "6008": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6009": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6010": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6011": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6013": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6014": {
      "offset": [
        8168,
        8238
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6015": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6016": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6017": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6019": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "ADD",
      "path": "68"
    },
    "6020": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "6021": {
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6023": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6024": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6025": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "6030": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "6031": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "6033": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SHL",
      "path": "68"
    },
    "6034": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6035": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6036": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "6038": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "6039": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x17A2"
    },
    "6042": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6043": {
      "op": "DUP2"
    },
    "6044": {
      "op": "MSTORE"
    },
    "6045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6047": {
      "op": "ADD"
    },
    "6048": {
      "op": "SWAP1"
    },
    "6049": {
      "op": "JUMP"
    },
    "6050": {
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6051": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6053": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6055": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6056": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6057": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP4",
      "path": "68"
    },
    "6058": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SUB",
      "path": "68"
    },
    "6059": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6060": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP7",
      "path": "68"
    },
    "6061": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "GAS",
      "path": "68"
    },
    "6062": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "6063": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "6064": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6065": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "6066": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x17BF"
    },
    "6069": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "6070": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "6071": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "6073": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6074": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "6075": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "6076": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "6078": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "REVERT",
      "path": "68"
    },
    "6079": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6080": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "6081": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "6082": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "6083": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "6084": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6086": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6087": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "6088": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "6090": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "NOT",
      "path": "68"
    },
    "6091": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "6093": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6094": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "6095": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "6096": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6097": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "6098": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6099": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6101": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6102": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "6103": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6104": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "6105": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6106": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x17E3"
    },
    "6109": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6110": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6111": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x298D"
    },
    "6114": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6115": {
      "branch": 133,
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6116": {
      "offset": [
        8138,
        8351
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1802"
    },
    "6119": {
      "branch": 133,
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "6120": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6122": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6123": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "6128": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6130": {
      "op": "SHL"
    },
    "6131": {
      "offset": [
        8266,
        8336
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6132": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6133": {
      "offset": [
        8325,
        8335
      ],
      "op": "CALLER",
      "path": "68"
    },
    "6134": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "6136": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6137": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "ADD",
      "path": "68"
    },
    "6138": {
      "op": "MSTORE"
    },
    "6139": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6141": {
      "op": "ADD"
    },
    "6142": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x81D"
    },
    "6145": {
      "op": "JUMP"
    },
    "6146": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6147": {
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x194E"
    },
    "6150": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6151": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6152": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4F"
    },
    "6154": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "6155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6161": {
      "op": "SHL"
    },
    "6162": {
      "op": "SUB"
    },
    "6163": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "6164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6170": {
      "op": "SHL"
    },
    "6171": {
      "op": "SUB"
    },
    "6172": {
      "offset": [
        8525,
        8549
      ],
      "op": "AND",
      "path": "68"
    },
    "6173": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8549
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "6178": {
      "offset": [
        8608,
        8618
      ],
      "op": "CALLER",
      "path": "68"
    },
    "6179": {
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6181": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6182": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6184": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "ADD",
      "path": "68"
    },
    "6185": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1832"
    },
    "6188": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6189": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6190": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x29AF"
    },
    "6193": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6194": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6195": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6197": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6198": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6200": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6201": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP4",
      "path": "68"
    },
    "6202": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "6203": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "6204": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6205": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6206": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6207": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6209": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6210": {
      "offset": [
        8550,
        8620
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6211": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6212": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6213": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6215": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "ADD",
      "path": "68"
    },
    "6216": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "6217": {
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6219": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6220": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6221": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "6226": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "6227": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "6229": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SHL",
      "path": "68"
    },
    "6230": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6231": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6232": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "6234": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "6235": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1866"
    },
    "6238": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6239": {
      "op": "DUP2"
    },
    "6240": {
      "op": "MSTORE"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6243": {
      "op": "ADD"
    },
    "6244": {
      "op": "SWAP1"
    },
    "6245": {
      "op": "JUMP"
    },
    "6246": {
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6247": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6249": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6251": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6252": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6253": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP4",
      "path": "68"
    },
    "6254": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SUB",
      "path": "68"
    },
    "6255": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6256": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP7",
      "path": "68"
    },
    "6257": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "GAS",
      "path": "68"
    },
    "6258": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "6259": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "6260": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6261": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "6262": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1883"
    },
    "6265": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "6266": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "6267": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "6269": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6270": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "6271": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "6272": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "6274": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "REVERT",
      "path": "68"
    },
    "6275": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6276": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "6277": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "6278": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "6279": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "6280": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6282": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6283": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "6284": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "6286": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "NOT",
      "path": "68"
    },
    "6287": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "6289": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6290": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "6291": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "6292": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6293": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "6294": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6295": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6297": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6298": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "6299": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6300": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "6301": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6302": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x18A7"
    },
    "6305": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6306": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6307": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x298D"
    },
    "6310": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6311": {
      "branch": 134,
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6312": {
      "offset": [
        8525,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6313": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x192F"
    },
    "6316": {
      "branch": 134,
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "6317": {
      "op": "POP"
    },
    "6318": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4F"
    },
    "6320": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "6321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6327": {
      "op": "SHL"
    },
    "6328": {
      "op": "SUB"
    },
    "6329": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "6330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6336": {
      "op": "SHL"
    },
    "6337": {
      "op": "SUB"
    },
    "6338": {
      "offset": [
        8658,
        8686
      ],
      "op": "AND",
      "path": "68"
    },
    "6339": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xA75B87D2"
    },
    "6344": {
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6346": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6347": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6348": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "6353": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "6354": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "6356": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SHL",
      "path": "68"
    },
    "6357": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6358": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6359": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "6361": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "6362": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6364": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6366": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6367": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6368": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP4",
      "path": "68"
    },
    "6369": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SUB",
      "path": "68"
    },
    "6370": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6371": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP7",
      "path": "68"
    },
    "6372": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "GAS",
      "path": "68"
    },
    "6373": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "6374": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "6375": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6376": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "6377": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x18F6"
    },
    "6380": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "6381": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "6382": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "6384": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6385": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "6386": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "6387": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "6389": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "REVERT",
      "path": "68"
    },
    "6390": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6391": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "6392": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "6393": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "6394": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "6395": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6397": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6398": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "6399": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "6401": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "NOT",
      "path": "68"
    },
    "6402": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "6404": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6405": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "6406": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "6407": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6408": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "6409": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6410": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6412": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6413": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "6414": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6415": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "6416": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6417": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x191A"
    },
    "6420": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6421": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6422": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x29F2"
    },
    "6425": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6426": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6433": {
      "op": "SHL"
    },
    "6434": {
      "op": "SUB"
    },
    "6435": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "6436": {
      "offset": [
        8645,
        8654
      ],
      "op": "ORIGIN",
      "path": "68"
    },
    "6437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6443": {
      "op": "SHL"
    },
    "6444": {
      "op": "SUB"
    },
    "6445": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "6446": {
      "branch": 135,
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8645,
        8688
      ],
      "op": "EQ",
      "path": "68"
    },
    "6447": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6448": {
      "offset": [
        8502,
        8814
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x194E"
    },
    "6451": {
      "branch": 135,
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "6452": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6454": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6455": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "6460": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6462": {
      "op": "SHL"
    },
    "6463": {
      "offset": [
        8729,
        8799
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6464": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6465": {
      "offset": [
        8788,
        8798
      ],
      "op": "CALLER",
      "path": "68"
    },
    "6466": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "6468": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6469": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "ADD",
      "path": "68"
    },
    "6470": {
      "op": "MSTORE"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6473": {
      "op": "ADD"
    },
    "6474": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x81D"
    },
    "6477": {
      "op": "JUMP"
    },
    "6478": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6479": {
      "fn": "gPHM.addApprovedDelegatee",
      "offset": [
        1980,
        2012
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 39,
      "value": "0x1976"
    },
    "6482": {
      "fn": "gPHM.addApprovedDelegatee",
      "offset": [
        2002,
        2011
      ],
      "op": "DUP3",
      "path": "45"
    },
    "6483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6489": {
      "op": "SHL"
    },
    "6490": {
      "op": "SUB"
    },
    "6491": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8100,
        8130
      ],
      "op": "AND",
      "path": "45",
      "statement": 40
    },
    "6492": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8100,
        8130
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "6494": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8100,
        8130
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "6495": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8100,
        8130
      ],
      "op": "DUP2",
      "path": "45"
    },
    "6496": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8100,
        8130
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "6497": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8100,
        8119
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x52"
    },
    "6499": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8100,
        8130
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "6501": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8100,
        8130
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "6502": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8100,
        8130
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "6504": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8100,
        8130
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "6505": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8100,
        8130
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "6506": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8100,
        8137
      ],
      "op": "DUP1",
      "path": "45"
    },
    "6507": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8100,
        8137
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "6508": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6510": {
      "op": "NOT"
    },
    "6511": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8100,
        8137
      ],
      "op": "AND",
      "path": "45"
    },
    "6512": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8133,
        8137
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "6514": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8100,
        8137
      ],
      "op": "OR",
      "path": "45"
    },
    "6515": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8100,
        8137
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "6516": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8100,
        8137
      ],
      "op": "SSTORE",
      "path": "45"
    },
    "6517": {
      "fn": "gPHM._addApprovedDelegatee",
      "offset": [
        8031,
        8144
      ],
      "op": "JUMP",
      "path": "45"
    },
    "6518": {
      "fn": "gPHM.addApprovedDelegatee",
      "offset": [
        1980,
        2012
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "6519": {
      "offset": [
        7929,
        8841
      ],
      "op": "POP",
      "path": "68"
    },
    "6520": {
      "fn": "gPHM.addApprovedDelegatee",
      "offset": [
        1888,
        2019
      ],
      "op": "POP",
      "path": "45"
    },
    "6521": {
      "fn": "gPHM.addApprovedDelegatee",
      "jump": "o",
      "offset": [
        1888,
        2019
      ],
      "op": "JUMP",
      "path": "45"
    },
    "6522": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5473,
        5621
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "6523": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6525": {
      "op": "DUP1"
    },
    "6526": {
      "op": "MLOAD"
    },
    "6527": {
      "op": "DUP1"
    },
    "6528": {
      "op": "DUP3"
    },
    "6529": {
      "op": "ADD"
    },
    "6530": {
      "op": "SWAP1"
    },
    "6531": {
      "op": "SWAP2"
    },
    "6532": {
      "op": "MSTORE"
    },
    "6533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6535": {
      "op": "DUP1"
    },
    "6536": {
      "op": "DUP3"
    },
    "6537": {
      "op": "MSTORE"
    },
    "6538": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6540": {
      "op": "DUP3"
    },
    "6541": {
      "op": "ADD"
    },
    "6542": {
      "op": "MSTORE"
    },
    "6543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6549": {
      "op": "SHL"
    },
    "6550": {
      "op": "SUB"
    },
    "6551": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5609
      ],
      "op": "DUP4",
      "path": "45",
      "statement": 41
    },
    "6552": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5609
      ],
      "op": "AND",
      "path": "45"
    },
    "6553": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5609
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "6555": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5609
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "6556": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5609
      ],
      "op": "DUP2",
      "path": "45"
    },
    "6557": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5609
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "6558": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5600
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x54"
    },
    "6560": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5609
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "6562": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5609
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "6563": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5609
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "6565": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5609
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "6566": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5609
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "6567": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "DUP1",
      "path": "45"
    },
    "6568": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "6569": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "6574": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "DUP5",
      "path": "45"
    },
    "6575": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "AND",
      "path": "45"
    },
    "6576": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "6577": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "DUP2",
      "path": "45"
    },
    "6578": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "LT",
      "path": "45"
    },
    "6579": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x19BE"
    },
    "6582": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "6583": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x19BE"
    },
    "6586": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2A0F"
    },
    "6589": {
      "fn": "gPHM.checkpoints",
      "jump": "i",
      "offset": [
        5588,
        5614
      ],
      "op": "JUMP",
      "path": "45"
    },
    "6590": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "6591": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "6593": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "6594": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "DUP3",
      "path": "45"
    },
    "6595": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "6596": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "6598": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "6599": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "DUP3",
      "path": "45"
    },
    "6600": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "6601": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "6602": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "6604": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "DUP1",
      "path": "45"
    },
    "6605": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "6606": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "DUP1",
      "path": "45"
    },
    "6607": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "DUP3",
      "path": "45"
    },
    "6608": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "ADD",
      "path": "45"
    },
    "6609": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "6610": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "6611": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "6612": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "6613": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5588,
        5614
      ],
      "op": "ADD",
      "path": "45"
    },
    "6614": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "6615": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "6620": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "DUP2",
      "path": "45"
    },
    "6621": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "AND",
      "path": "45"
    },
    "6622": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "DUP3",
      "path": "45"
    },
    "6623": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "6624": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "PUSH5",
      "path": "45",
      "value": "0x100000000"
    },
    "6630": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "6631": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "DIV",
      "path": "45"
    },
    "6632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6636": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6638": {
      "op": "SHL"
    },
    "6639": {
      "op": "SUB"
    },
    "6640": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "AND",
      "path": "45"
    },
    "6641": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "6642": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "DUP2",
      "path": "45"
    },
    "6643": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "ADD",
      "path": "45"
    },
    "6644": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "6645": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "6646": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "6647": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "6648": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5581,
        5614
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "6649": {
      "fn": "gPHM.checkpoints",
      "offset": [
        5473,
        5621
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "6650": {
      "op": "POP"
    },
    "6651": {
      "op": "POP"
    },
    "6652": {
      "op": "POP"
    },
    "6653": {
      "fn": "gPHM.checkpoints",
      "jump": "o",
      "offset": [
        5473,
        5621
      ],
      "op": "JUMP",
      "path": "45"
    },
    "6654": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3789,
        3928
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6655": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3828,
        3833
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "6657": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3874
      ],
      "op": "PUSH2",
      "path": "68",
      "statement": 42,
      "value": "0x1A12"
    },
    "6660": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4F"
    },
    "6662": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "6663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6669": {
      "op": "SHL"
    },
    "6670": {
      "op": "SUB"
    },
    "6671": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "6672": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6673": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2371,
        2493
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6674": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3874
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6681": {
      "op": "SHL"
    },
    "6682": {
      "op": "SUB"
    },
    "6683": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3885
      ],
      "op": "AND",
      "path": "68"
    },
    "6684": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3885
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x21F8A721"
    },
    "6689": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3896,
        3903
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x9"
    },
    "6691": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3896,
        3913
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "6693": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3896,
        3913
      ],
      "op": "ADD",
      "path": "68"
    },
    "6694": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3896,
        3918
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x6"
    },
    "6696": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3896,
        3918
      ],
      "op": "ADD",
      "path": "68"
    },
    "6697": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3886,
        3919
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6699": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3886,
        3919
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6700": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3886,
        3919
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1A35"
    },
    "6703": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3886,
        3919
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6704": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3886,
        3919
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6705": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3886,
        3919
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x2ABE"
    },
    "6708": {
      "fn": "PhantomStorageMixin.sPHM",
      "jump": "i",
      "offset": [
        3886,
        3919
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6709": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3886,
        3919
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6710": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3886,
        3919
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6712": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3886,
        3919
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6713": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3886,
        3919
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6714": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3886,
        3919
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6715": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3886,
        3919
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6716": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3886,
        3919
      ],
      "op": "SUB",
      "path": "68"
    },
    "6717": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3886,
        3919
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6718": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3886,
        3919
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "6719": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "6721": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "DUP4",
      "path": "68"
    },
    "6722": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6723": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "SHL",
      "path": "68"
    },
    "6724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6728": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6730": {
      "op": "SHL"
    },
    "6731": {
      "op": "SUB"
    },
    "6732": {
      "op": "NOT"
    },
    "6733": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "AND",
      "path": "68"
    },
    "6734": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6735": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6736": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "6738": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6739": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "ADD",
      "path": "68"
    },
    "6740": {
      "op": "MSTORE"
    },
    "6741": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6743": {
      "op": "ADD"
    },
    "6744": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6746": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6748": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6749": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6750": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "DUP4",
      "path": "68"
    },
    "6751": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "SUB",
      "path": "68"
    },
    "6752": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6753": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "DUP7",
      "path": "68"
    },
    "6754": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "GAS",
      "path": "68"
    },
    "6755": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "6756": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "6757": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6758": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "6759": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1A74"
    },
    "6762": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "6763": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "6764": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "6766": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6767": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "6768": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "6769": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "6771": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "REVERT",
      "path": "68"
    },
    "6772": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6773": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "POP",
      "path": "68"
    },
    "6774": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "POP",
      "path": "68"
    },
    "6775": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "POP",
      "path": "68"
    },
    "6776": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "POP",
      "path": "68"
    },
    "6777": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6779": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6780": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "6781": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "6783": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "NOT",
      "path": "68"
    },
    "6784": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "6786": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6787": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "ADD",
      "path": "68"
    },
    "6788": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "AND",
      "path": "68"
    },
    "6789": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6790": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "ADD",
      "path": "68"
    },
    "6791": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6792": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6794": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6795": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "POP",
      "path": "68"
    },
    "6796": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6797": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "ADD",
      "path": "68"
    },
    "6798": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6799": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x7A6"
    },
    "6802": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "6803": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6804": {
      "fn": "PhantomStorageMixin.sPHM",
      "offset": [
        3858,
        3920
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x29F2"
    },
    "6807": {
      "fn": "PhantomStorageMixin.sPHM",
      "jump": "i",
      "offset": [
        3858,
        3920
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6808": {
      "fn": "PRBMathUD60x18.div",
      "offset": [
        3839,
        3966
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6809": {
      "fn": "PRBMathUD60x18.div",
      "offset": [
        3897,
        3911
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "6811": {
      "fn": "PRBMathUD60x18.div",
      "offset": [
        3932,
        3959
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 43,
      "value": "0x76E"
    },
    "6814": {
      "fn": "PRBMathUD60x18.div",
      "offset": [
        3947,
        3948
      ],
      "op": "DUP4",
      "path": "32"
    },
    "6815": {
      "offset": [
        1359,
        1363
      ],
      "op": "PUSH8",
      "path": "32",
      "value": "0xDE0B6B3A7640000"
    },
    "6824": {
      "fn": "PRBMathUD60x18.div",
      "offset": [
        3957,
        3958
      ],
      "op": "DUP5",
      "path": "32"
    },
    "6825": {
      "fn": "PRBMathUD60x18.div",
      "offset": [
        3932,
        3946
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x208F"
    },
    "6828": {
      "fn": "PRBMathUD60x18.div",
      "jump": "i",
      "offset": [
        3932,
        3959
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6829": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6205,
        6860
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "6830": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6353,
        6368
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x51"
    },
    "6832": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6353,
        6368
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "6833": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6353,
        6368
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xFF"
    },
    "6835": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6353,
        6368
      ],
      "op": "AND",
      "path": "45"
    },
    "6836": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6353,
        6376
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "6837": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6353,
        6376
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "6838": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6353,
        6368
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "6840": {
      "branch": 104,
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6353,
        6376
      ],
      "op": "EQ",
      "path": "45"
    },
    "6841": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6349,
        6735
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "6842": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6349,
        6735
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1B2B"
    },
    "6845": {
      "branch": 104,
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6349,
        6735
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "6846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6852": {
      "op": "SHL"
    },
    "6853": {
      "op": "SUB"
    },
    "6854": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6400,
        6418
      ],
      "op": "DUP4",
      "path": "45",
      "statement": 44
    },
    "6855": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6400,
        6418
      ],
      "op": "AND",
      "path": "45"
    },
    "6856": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6400,
        6418
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "6857": {
      "branch": 105,
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6400,
        6418
      ],
      "op": "DUP1",
      "path": "45"
    },
    "6858": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6400,
        6438
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1ADA"
    },
    "6861": {
      "branch": 105,
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6400,
        6438
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "6862": {
      "op": "POP"
    },
    "6863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6869": {
      "op": "SHL"
    },
    "6870": {
      "op": "SUB"
    },
    "6871": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6422,
        6438
      ],
      "op": "DUP3",
      "path": "45"
    },
    "6872": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6422,
        6438
      ],
      "op": "AND",
      "path": "45"
    },
    "6873": {
      "branch": 106,
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6422,
        6438
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "6874": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6400,
        6438
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "6875": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6392,
        6467
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1B26"
    },
    "6878": {
      "branch": 106,
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6392,
        6467
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "6879": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6392,
        6467
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "6881": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6392,
        6467
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "6882": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6886": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6888": {
      "op": "SHL"
    },
    "6889": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6392,
        6467
      ],
      "op": "DUP2",
      "path": "45"
    },
    "6890": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6392,
        6467
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "6891": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6893": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6392,
        6467
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "6895": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6392,
        6467
      ],
      "op": "DUP3",
      "path": "45"
    },
    "6896": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6392,
        6467
      ],
      "op": "ADD",
      "path": "45"
    },
    "6897": {
      "op": "MSTORE"
    },
    "6898": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6900": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6902": {
      "op": "DUP3"
    },
    "6903": {
      "op": "ADD"
    },
    "6904": {
      "op": "MSTORE"
    },
    "6905": {
      "op": "PUSH32",
      "value": "0x6750484D206973206E6F74207472616E7366657261626C650000000000000000"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6940": {
      "op": "DUP3"
    },
    "6941": {
      "op": "ADD"
    },
    "6942": {
      "op": "MSTORE"
    },
    "6943": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6945": {
      "op": "ADD"
    },
    "6946": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6392,
        6467
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x81D"
    },
    "6949": {
      "op": "JUMP"
    },
    "6950": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6392,
        6467
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "6951": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6349,
        6735
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1CB1"
    },
    "6954": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6349,
        6735
      ],
      "op": "JUMP",
      "path": "45"
    },
    "6955": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6349,
        6735
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "6956": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6502,
        6516
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1B33"
    },
    "6959": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6502,
        6514
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x215D"
    },
    "6962": {
      "fn": "gPHM._afterTokenTransfer",
      "jump": "i",
      "offset": [
        6502,
        6516
      ],
      "op": "JUMP",
      "path": "45"
    },
    "6963": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6502,
        6516
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "6964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6970": {
      "op": "SHL"
    },
    "6971": {
      "op": "SUB"
    },
    "6972": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6488,
        6517
      ],
      "op": "AND",
      "path": "45"
    },
    "6973": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6488,
        6490
      ],
      "op": "DUP3",
      "path": "45"
    },
    "6974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6980": {
      "op": "SHL"
    },
    "6981": {
      "op": "SUB"
    },
    "6982": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6488,
        6517
      ],
      "op": "AND",
      "path": "45"
    },
    "6983": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6488,
        6517
      ],
      "op": "EQ",
      "path": "45"
    },
    "6984": {
      "branch": 107,
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6488,
        6517
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "6985": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6488,
        6537
      ],
      "op": "DUP1",
      "path": "45"
    },
    "6986": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6488,
        6537
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "6987": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6488,
        6537
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1B5C"
    },
    "6990": {
      "branch": 107,
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6488,
        6537
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "6991": {
      "op": "POP"
    },
    "6992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6998": {
      "op": "SHL"
    },
    "6999": {
      "op": "SUB"
    },
    "7000": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6521,
        6537
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7001": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6521,
        6537
      ],
      "op": "AND",
      "path": "45"
    },
    "7002": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6521,
        6537
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "7003": {
      "branch": 108,
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6521,
        6537
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "7004": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6488,
        6537
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7005": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6484,
        6735
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "7006": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6484,
        6735
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1CB1"
    },
    "7009": {
      "branch": 108,
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6484,
        6735
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "7010": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6612
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 45,
      "value": "0x1B69"
    },
    "7013": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6610
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2194"
    },
    "7016": {
      "fn": "gPHM._afterTokenTransfer",
      "jump": "i",
      "offset": [
        6607,
        6612
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7017": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6612
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7024": {
      "op": "SHL"
    },
    "7025": {
      "op": "SUB"
    },
    "7026": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6632
      ],
      "op": "AND",
      "path": "45"
    },
    "7027": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6632
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x1BA7911"
    },
    "7032": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "7034": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "7035": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7036": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "7041": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "AND",
      "path": "45"
    },
    "7042": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xE0"
    },
    "7044": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "SHL",
      "path": "45"
    },
    "7045": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7046": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7047": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "7049": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "ADD",
      "path": "45"
    },
    "7050": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "7052": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "7054": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "7055": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7056": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "DUP4",
      "path": "45"
    },
    "7057": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "SUB",
      "path": "45"
    },
    "7058": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7059": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "DUP7",
      "path": "45"
    },
    "7060": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "GAS",
      "path": "45"
    },
    "7061": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "STATICCALL",
      "path": "45"
    },
    "7062": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "7063": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7064": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "7065": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1BA6"
    },
    "7068": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "7069": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "7070": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "7072": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7073": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "7074": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "7075": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "7077": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "REVERT",
      "path": "45"
    },
    "7078": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7079": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "POP",
      "path": "45"
    },
    "7080": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "POP",
      "path": "45"
    },
    "7081": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "POP",
      "path": "45"
    },
    "7082": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "POP",
      "path": "45"
    },
    "7083": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "7085": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "7086": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "7087": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "7089": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "NOT",
      "path": "45"
    },
    "7090": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "7092": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7093": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "ADD",
      "path": "45"
    },
    "7094": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "AND",
      "path": "45"
    },
    "7095": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7096": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "ADD",
      "path": "45"
    },
    "7097": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7098": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "7100": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7101": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "POP",
      "path": "45"
    },
    "7102": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7103": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "ADD",
      "path": "45"
    },
    "7104": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7105": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1BCA"
    },
    "7108": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "7109": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7110": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2947"
    },
    "7113": {
      "fn": "gPHM._afterTokenTransfer",
      "jump": "i",
      "offset": [
        6607,
        6634
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7114": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6607,
        6634
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7115": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6583
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1BD2"
    },
    "7118": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6581
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2194"
    },
    "7121": {
      "fn": "gPHM._afterTokenTransfer",
      "jump": "i",
      "offset": [
        6578,
        6583
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7122": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6583
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7123": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "7125": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "7126": {
      "op": "PUSH4",
      "value": "0xACC9D9DF"
    },
    "7131": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7133": {
      "op": "SHL"
    },
    "7134": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7135": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7142": {
      "op": "SHL"
    },
    "7143": {
      "op": "SUB"
    },
    "7144": {
      "op": "DUP6"
    },
    "7145": {
      "op": "DUP2"
    },
    "7146": {
      "op": "AND"
    },
    "7147": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "7149": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "DUP4",
      "path": "45"
    },
    "7150": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "ADD",
      "path": "45"
    },
    "7151": {
      "op": "MSTORE"
    },
    "7152": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6600
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "7153": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6600
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7154": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6600
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "7155": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6600
      ],
      "op": "AND",
      "path": "45"
    },
    "7156": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6600
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7157": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6600
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xACC9D9DF"
    },
    "7162": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6600
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7163": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7165": {
      "op": "ADD"
    },
    "7166": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "7168": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "7170": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "7171": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7172": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "DUP4",
      "path": "45"
    },
    "7173": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "SUB",
      "path": "45"
    },
    "7174": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7175": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "DUP7",
      "path": "45"
    },
    "7176": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "GAS",
      "path": "45"
    },
    "7177": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "STATICCALL",
      "path": "45"
    },
    "7178": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "7179": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7180": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "7181": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1C1A"
    },
    "7184": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "7185": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "7186": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "7188": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7189": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "7190": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "7191": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "7193": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "REVERT",
      "path": "45"
    },
    "7194": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7195": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "POP",
      "path": "45"
    },
    "7196": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "POP",
      "path": "45"
    },
    "7197": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "POP",
      "path": "45"
    },
    "7198": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "POP",
      "path": "45"
    },
    "7199": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "7201": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "7202": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "7203": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "7205": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "NOT",
      "path": "45"
    },
    "7206": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "7208": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7209": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "ADD",
      "path": "45"
    },
    "7210": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "AND",
      "path": "45"
    },
    "7211": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7212": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "ADD",
      "path": "45"
    },
    "7213": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7214": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "7216": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7217": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "POP",
      "path": "45"
    },
    "7218": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7219": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "ADD",
      "path": "45"
    },
    "7220": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7221": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1C3E"
    },
    "7224": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "7225": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7226": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2947"
    },
    "7229": {
      "fn": "gPHM._afterTokenTransfer",
      "jump": "i",
      "offset": [
        6578,
        6604
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7230": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6604
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7231": {
      "branch": 109,
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6578,
        6634
      ],
      "op": "LT",
      "path": "45"
    },
    "7232": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6553,
        6724
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1CB1"
    },
    "7235": {
      "branch": 109,
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6553,
        6724
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "7236": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6553,
        6724
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "7238": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6553,
        6724
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "7239": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7243": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7245": {
      "op": "SHL"
    },
    "7246": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6553,
        6724
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7247": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6553,
        6724
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7250": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6553,
        6724
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "7252": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6553,
        6724
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7253": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6553,
        6724
      ],
      "op": "ADD",
      "path": "45"
    },
    "7254": {
      "op": "MSTORE"
    },
    "7255": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "7257": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7259": {
      "op": "DUP3"
    },
    "7260": {
      "op": "ADD"
    },
    "7261": {
      "op": "MSTORE"
    },
    "7262": {
      "op": "PUSH32",
      "value": "0x6750484D207472616E7366657220626C6F636B65642064756520746F206F776E"
    },
    "7295": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7297": {
      "op": "DUP3"
    },
    "7298": {
      "op": "ADD"
    },
    "7299": {
      "op": "MSTORE"
    },
    "7300": {
      "op": "PUSH32",
      "value": "0x696E67206F76657220342E373625206F6620737570706C790000000000000000"
    },
    "7333": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7335": {
      "op": "DUP3"
    },
    "7336": {
      "op": "ADD"
    },
    "7337": {
      "op": "MSTORE"
    },
    "7338": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7340": {
      "op": "ADD"
    },
    "7341": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6553,
        6724
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x81D"
    },
    "7344": {
      "op": "JUMP"
    },
    "7345": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6553,
        6724
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7346": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6799,
        6853
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 46,
      "value": "0xADF"
    },
    "7349": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6814,
        6829
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1CBD"
    },
    "7352": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6824,
        6828
      ],
      "op": "DUP5",
      "path": "45"
    },
    "7353": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6814,
        6823
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xAE4"
    },
    "7356": {
      "fn": "gPHM._afterTokenTransfer",
      "jump": "i",
      "offset": [
        6814,
        6829
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7357": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6814,
        6829
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7358": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6831,
        6844
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1CC6"
    },
    "7361": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6841,
        6843
      ],
      "op": "DUP5",
      "path": "45"
    },
    "7362": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6831,
        6840
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xAE4"
    },
    "7365": {
      "fn": "gPHM._afterTokenTransfer",
      "jump": "i",
      "offset": [
        6831,
        6844
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7366": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6831,
        6844
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7367": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6846,
        6852
      ],
      "op": "DUP4",
      "path": "45"
    },
    "7368": {
      "fn": "gPHM._afterTokenTransfer",
      "offset": [
        6799,
        6813
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x21CB"
    },
    "7371": {
      "fn": "gPHM._afterTokenTransfer",
      "jump": "i",
      "offset": [
        6799,
        6853
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7372": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5184,
        5637
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7373": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5249,
        5256
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "7375": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5346,
        5441
      ],
      "op": "PUSH32",
      "path": "42",
      "statement": 47,
      "value": "0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
    },
    "7408": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5479,
        5483
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "7410": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5463,
        5485
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7412": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5463,
        5485
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "7413": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5463,
        5485
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1CFE"
    },
    "7416": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5463,
        5485
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "7417": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5463,
        5485
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7418": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5463,
        5485
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2ABE"
    },
    "7421": {
      "fn": "ERC20.computeDomainSeparator",
      "jump": "i",
      "offset": [
        5463,
        5485
      ],
      "op": "JUMP",
      "path": "42"
    },
    "7422": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5463,
        5485
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "7423": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5463,
        5485
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7425": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5463,
        5485
      ],
      "op": "DUP1",
      "path": "42"
    },
    "7426": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5463,
        5485
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "7427": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5463,
        5485
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "7428": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5463,
        5485
      ],
      "op": "DUP3",
      "path": "42"
    },
    "7429": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5463,
        5485
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7430": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5463,
        5485
      ],
      "op": "SUB",
      "path": "42"
    },
    "7431": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5463,
        5485
      ],
      "op": "DUP3",
      "path": "42"
    },
    "7432": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5463,
        5485
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "7433": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5517,
        5527
      ],
      "op": "DUP3",
      "path": "42"
    },
    "7434": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5517,
        5527
      ],
      "op": "DUP3",
      "path": "42"
    },
    "7435": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5517,
        5527
      ],
      "op": "ADD",
      "path": "42"
    },
    "7436": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5517,
        5527
      ],
      "op": "DUP3",
      "path": "42"
    },
    "7437": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5517,
        5527
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "7438": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5517,
        5527
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "7440": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5517,
        5527
      ],
      "op": "DUP4",
      "path": "42"
    },
    "7441": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5517,
        5527
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "7442": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "7446": {
      "op": "SHL"
    },
    "7447": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5517,
        5527
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "7449": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5517,
        5527
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "7450": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5517,
        5527
      ],
      "op": "DUP5",
      "path": "42"
    },
    "7451": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5517,
        5527
      ],
      "op": "ADD",
      "path": "42"
    },
    "7452": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5517,
        5527
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "7453": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5314,
        5616
      ],
      "op": "DUP2",
      "path": "42"
    },
    "7454": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5314,
        5616
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "7455": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5314,
        5616
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "7456": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5314,
        5616
      ],
      "op": "DUP4",
      "path": "42"
    },
    "7457": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5314,
        5616
      ],
      "op": "ADD",
      "path": "42"
    },
    "7458": {
      "op": "SWAP4"
    },
    "7459": {
      "op": "SWAP1"
    },
    "7460": {
      "op": "SWAP4"
    },
    "7461": {
      "op": "MSTORE"
    },
    "7462": {
      "op": "DUP2"
    },
    "7463": {
      "op": "ADD"
    },
    "7464": {
      "op": "SWAP2"
    },
    "7465": {
      "op": "SWAP1"
    },
    "7466": {
      "op": "SWAP2"
    },
    "7467": {
      "op": "MSTORE"
    },
    "7468": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5507,
        5528
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
    },
    "7501": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7503": {
      "op": "DUP3"
    },
    "7504": {
      "op": "ADD"
    },
    "7505": {
      "op": "MSTORE"
    },
    "7506": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5550,
        5563
      ],
      "op": "CHAINID",
      "path": "42"
    },
    "7507": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7509": {
      "op": "DUP3"
    },
    "7510": {
      "op": "ADD"
    },
    "7511": {
      "op": "MSTORE"
    },
    "7512": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5593,
        5597
      ],
      "op": "ADDRESS",
      "path": "42"
    },
    "7513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7515": {
      "op": "DUP3"
    },
    "7516": {
      "op": "ADD"
    },
    "7517": {
      "op": "MSTORE"
    },
    "7518": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7520": {
      "op": "ADD"
    },
    "7521": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5314,
        5616
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7523": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5314,
        5616
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "7524": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5314,
        5616
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "7526": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5314,
        5616
      ],
      "op": "DUP2",
      "path": "42"
    },
    "7527": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5314,
        5616
      ],
      "op": "DUP4",
      "path": "42"
    },
    "7528": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5314,
        5616
      ],
      "op": "SUB",
      "path": "42"
    },
    "7529": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5314,
        5616
      ],
      "op": "SUB",
      "path": "42"
    },
    "7530": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5314,
        5616
      ],
      "op": "DUP2",
      "path": "42"
    },
    "7531": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5314,
        5616
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "7532": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5314,
        5616
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7533": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5314,
        5616
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "7535": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5314,
        5616
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "7536": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5287,
        5630
      ],
      "op": "DUP1",
      "path": "42"
    },
    "7537": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5287,
        5630
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "7538": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5287,
        5630
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7539": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5287,
        5630
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "7541": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5287,
        5630
      ],
      "op": "ADD",
      "path": "42"
    },
    "7542": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5287,
        5630
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "7543": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5268,
        5630
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7544": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5268,
        5630
      ],
      "op": "POP",
      "path": "42"
    },
    "7545": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5184,
        5637
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7546": {
      "fn": "ERC20.computeDomainSeparator",
      "jump": "o",
      "offset": [
        5184,
        5637
      ],
      "op": "JUMP",
      "path": "42"
    },
    "7547": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        9622,
        11080
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7548": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10743,
        10755
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7549": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10743,
        10755
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "7550": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        9721,
        9728
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "7552": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        9721,
        9728
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7553": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        9721,
        9728
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7554": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10790,
        11019
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7555": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10803,
        10807
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7556": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10797,
        10800
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7557": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10797,
        10807
      ],
      "op": "LT",
      "path": "45"
    },
    "7558": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10790,
        11019
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "7559": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10790,
        11019
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1DDF"
    },
    "7562": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10790,
        11019
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "7563": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10823,
        10834
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "7565": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10837,
        10860
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1D96"
    },
    "7568": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10850,
        10853
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7569": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10855,
        10859
      ],
      "op": "DUP5",
      "path": "45"
    },
    "7570": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10837,
        10849
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2308"
    },
    "7573": {
      "fn": "gPHM._checkpointsLookup",
      "jump": "i",
      "offset": [
        10837,
        10860
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7574": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10837,
        10860
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7575": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10823,
        10860
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7576": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10823,
        10860
      ],
      "op": "POP",
      "path": "45"
    },
    "7577": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10901,
        10912
      ],
      "op": "DUP5",
      "path": "45"
    },
    "7578": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10883
      ],
      "op": "DUP7",
      "path": "45"
    },
    "7579": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10884,
        10887
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7580": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10888
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7581": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10888
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "7582": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10888
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7583": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10888
      ],
      "op": "LT",
      "path": "45"
    },
    "7584": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10888
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1DAB"
    },
    "7587": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10888
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "7588": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10888
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1DAB"
    },
    "7591": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10888
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2A0F"
    },
    "7594": {
      "fn": "gPHM._checkpointsLookup",
      "jump": "i",
      "offset": [
        10878,
        10888
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7595": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10888
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7596": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10888
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "7598": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10888
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "7599": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10888
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7600": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10888
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7601": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10888
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "7603": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10888
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7604": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10888
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "7605": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10888
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "7606": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10888
      ],
      "op": "ADD",
      "path": "45"
    },
    "7607": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10898
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "7608": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10898
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "7613": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10898
      ],
      "op": "AND",
      "path": "45"
    },
    "7614": {
      "branch": 110,
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10878,
        10912
      ],
      "op": "GT",
      "path": "45"
    },
    "7615": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10874,
        11009
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "7616": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10874,
        11009
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1DCB"
    },
    "7619": {
      "branch": 110,
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10874,
        11009
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "7620": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10939,
        10942
      ],
      "op": "DUP1",
      "path": "45",
      "statement": 48
    },
    "7621": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10932,
        10942
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "7622": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10932,
        10942
      ],
      "op": "POP",
      "path": "45"
    },
    "7623": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10874,
        11009
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1DD9"
    },
    "7626": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10874,
        11009
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7627": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10874,
        11009
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7628": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10987,
        10994
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 49,
      "value": "0x1DD6"
    },
    "7631": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10987,
        10990
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7632": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10993,
        10994
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "7634": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10987,
        10994
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2ACA"
    },
    "7637": {
      "fn": "gPHM._checkpointsLookup",
      "jump": "i",
      "offset": [
        10987,
        10994
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7638": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10987,
        10994
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7639": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10981,
        10994
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "7640": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10981,
        10994
      ],
      "op": "POP",
      "path": "45"
    },
    "7641": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10874,
        11009
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7642": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10809,
        11019
      ],
      "op": "POP",
      "path": "45"
    },
    "7643": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10790,
        11019
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1D82"
    },
    "7646": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10790,
        11019
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7647": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        10790,
        11019
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7648": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11036,
        11045
      ],
      "op": "DUP2",
      "path": "45",
      "statement": 50
    },
    "7649": {
      "branch": 111,
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11036,
        11045
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "7650": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11036,
        11073
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1E23"
    },
    "7653": {
      "branch": 111,
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11036,
        11073
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "7654": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11057
      ],
      "op": "DUP5",
      "path": "45"
    },
    "7655": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11058,
        11066
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1DF1"
    },
    "7658": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11065,
        11066
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "7660": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11058,
        11062
      ],
      "op": "DUP5",
      "path": "45"
    },
    "7661": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11058,
        11066
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2976"
    },
    "7664": {
      "fn": "gPHM._checkpointsLookup",
      "jump": "i",
      "offset": [
        11058,
        11066
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7665": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11058,
        11066
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7666": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11067
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7667": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11067
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "7668": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11067
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7669": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11067
      ],
      "op": "LT",
      "path": "45"
    },
    "7670": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11067
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1E01"
    },
    "7673": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11067
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "7674": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11067
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1E01"
    },
    "7677": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11067
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2A0F"
    },
    "7680": {
      "fn": "gPHM._checkpointsLookup",
      "jump": "i",
      "offset": [
        11052,
        11067
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7681": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11067
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7682": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11067
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "7684": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11067
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "7685": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11067
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7686": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11067
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7687": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11067
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "7689": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11067
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7690": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11067
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "7691": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11067
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "7692": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11067
      ],
      "op": "ADD",
      "path": "45"
    },
    "7693": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11073
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "7694": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11073
      ],
      "op": "PUSH5",
      "path": "45",
      "value": "0x100000000"
    },
    "7700": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11073
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7701": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11073
      ],
      "op": "DIV",
      "path": "45"
    },
    "7702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7706": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7708": {
      "op": "SHL"
    },
    "7709": {
      "op": "SUB"
    },
    "7710": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11052,
        11073
      ],
      "op": "AND",
      "path": "45"
    },
    "7711": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11036,
        11073
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1E26"
    },
    "7714": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11036,
        11073
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7715": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11036,
        11073
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7716": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11048,
        11049
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "7718": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11036,
        11073
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7723": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7725": {
      "op": "SHL"
    },
    "7726": {
      "op": "SUB"
    },
    "7727": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11029,
        11073
      ],
      "op": "AND",
      "path": "45"
    },
    "7728": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        11029,
        11073
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "7729": {
      "fn": "gPHM._checkpointsLookup",
      "offset": [
        9622,
        11080
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "7730": {
      "op": "POP"
    },
    "7731": {
      "op": "POP"
    },
    "7732": {
      "op": "POP"
    },
    "7733": {
      "op": "POP"
    },
    "7734": {
      "op": "POP"
    },
    "7735": {
      "fn": "gPHM._checkpointsLookup",
      "jump": "o",
      "offset": [
        9622,
        11080
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7736": {
      "fn": "gPHM._mint",
      "offset": [
        6949,
        7239
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7737": {
      "fn": "gPHM._mint",
      "offset": [
        7033,
        7061
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 51,
      "value": "0x1E42"
    },
    "7740": {
      "fn": "gPHM._mint",
      "offset": [
        7045,
        7052
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7741": {
      "fn": "gPHM._mint",
      "offset": [
        7054,
        7060
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7742": {
      "fn": "gPHM._mint",
      "offset": [
        7033,
        7044
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2323"
    },
    "7745": {
      "fn": "gPHM._mint",
      "jump": "i",
      "offset": [
        7033,
        7061
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7746": {
      "fn": "gPHM._mint",
      "offset": [
        7033,
        7061
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7751": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7753": {
      "op": "SHL"
    },
    "7754": {
      "op": "SUB"
    },
    "7755": {
      "fn": "gPHM._mint",
      "offset": [
        7079,
        7092
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 52,
      "value": "0x1E53"
    },
    "7758": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2378,
        2390
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "7760": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2378,
        2390
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "7761": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2378,
        2390
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "7762": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2291,
        2397
      ],
      "op": "JUMP",
      "path": "42"
    },
    "7763": {
      "fn": "gPHM._mint",
      "offset": [
        7079,
        7092
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7764": {
      "fn": "gPHM._mint",
      "offset": [
        7079,
        7113
      ],
      "op": "GT",
      "path": "45"
    },
    "7765": {
      "branch": 112,
      "fn": "gPHM._mint",
      "offset": [
        7079,
        7113
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "7766": {
      "fn": "gPHM._mint",
      "offset": [
        7071,
        7166
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1EBA"
    },
    "7769": {
      "branch": 112,
      "fn": "gPHM._mint",
      "offset": [
        7071,
        7166
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "7770": {
      "fn": "gPHM._mint",
      "offset": [
        7071,
        7166
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "7772": {
      "fn": "gPHM._mint",
      "offset": [
        7071,
        7166
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "7773": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7777": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7779": {
      "op": "SHL"
    },
    "7780": {
      "fn": "gPHM._mint",
      "offset": [
        7071,
        7166
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7781": {
      "fn": "gPHM._mint",
      "offset": [
        7071,
        7166
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7784": {
      "fn": "gPHM._mint",
      "offset": [
        7071,
        7166
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "7786": {
      "fn": "gPHM._mint",
      "offset": [
        7071,
        7166
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7787": {
      "fn": "gPHM._mint",
      "offset": [
        7071,
        7166
      ],
      "op": "ADD",
      "path": "45"
    },
    "7788": {
      "op": "MSTORE"
    },
    "7789": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "7791": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7793": {
      "op": "DUP3"
    },
    "7794": {
      "op": "ADD"
    },
    "7795": {
      "op": "MSTORE"
    },
    "7796": {
      "op": "PUSH32",
      "value": "0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F"
    },
    "7829": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7831": {
      "op": "DUP3"
    },
    "7832": {
      "op": "ADD"
    },
    "7833": {
      "op": "MSTORE"
    },
    "7834": {
      "op": "PUSH16",
      "value": "0x766572666C6F77696E6720766F746573"
    },
    "7851": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7853": {
      "op": "SHL"
    },
    "7854": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7856": {
      "op": "DUP3"
    },
    "7857": {
      "op": "ADD"
    },
    "7858": {
      "op": "MSTORE"
    },
    "7859": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7861": {
      "op": "ADD"
    },
    "7862": {
      "fn": "gPHM._mint",
      "offset": [
        7071,
        7166
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x81D"
    },
    "7865": {
      "op": "JUMP"
    },
    "7866": {
      "fn": "gPHM._mint",
      "offset": [
        7071,
        7166
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7867": {
      "fn": "gPHM._mint",
      "offset": [
        7177,
        7232
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 53,
      "value": "0x1EC8"
    },
    "7870": {
      "fn": "gPHM._mint",
      "offset": [
        7194,
        7217
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x55"
    },
    "7872": {
      "fn": "gPHM._mint",
      "offset": [
        7219,
        7223
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2384"
    },
    "7875": {
      "fn": "gPHM._mint",
      "offset": [
        7225,
        7231
      ],
      "op": "DUP4",
      "path": "45"
    },
    "7876": {
      "fn": "gPHM._mint",
      "offset": [
        7177,
        7193
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2390"
    },
    "7879": {
      "fn": "gPHM._mint",
      "jump": "i",
      "offset": [
        7177,
        7232
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7880": {
      "fn": "gPHM._mint",
      "offset": [
        7177,
        7232
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7881": {
      "fn": "gPHM._mint",
      "offset": [
        7177,
        7232
      ],
      "op": "POP",
      "path": "45"
    },
    "7882": {
      "fn": "gPHM._mint",
      "offset": [
        7177,
        7232
      ],
      "op": "POP",
      "path": "45"
    },
    "7883": {
      "fn": "gPHM._mint",
      "offset": [
        6949,
        7239
      ],
      "op": "POP",
      "path": "45"
    },
    "7884": {
      "fn": "gPHM._mint",
      "offset": [
        6949,
        7239
      ],
      "op": "POP",
      "path": "45"
    },
    "7885": {
      "fn": "gPHM._mint",
      "jump": "o",
      "offset": [
        6949,
        7239
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7886": {
      "fn": "gPHM._delegate",
      "offset": [
        8150,
        8646
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7887": {
      "fn": "gPHM._delegate",
      "offset": [
        8251,
        8260
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7894": {
      "op": "SHL"
    },
    "7895": {
      "op": "SUB"
    },
    "7896": {
      "fn": "gPHM._delegate",
      "offset": [
        8238,
        8260
      ],
      "op": "AND",
      "path": "45"
    },
    "7897": {
      "fn": "gPHM._delegate",
      "offset": [
        8238,
        8247
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7904": {
      "op": "SHL"
    },
    "7905": {
      "op": "SUB"
    },
    "7906": {
      "fn": "gPHM._delegate",
      "offset": [
        8238,
        8260
      ],
      "op": "AND",
      "path": "45"
    },
    "7907": {
      "fn": "gPHM._delegate",
      "offset": [
        8238,
        8260
      ],
      "op": "EQ",
      "path": "45"
    },
    "7908": {
      "branch": 113,
      "fn": "gPHM._delegate",
      "offset": [
        8238,
        8260
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "7909": {
      "fn": "gPHM._delegate",
      "offset": [
        8238,
        8287
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7910": {
      "fn": "gPHM._delegate",
      "offset": [
        8238,
        8287
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "7911": {
      "fn": "gPHM._delegate",
      "offset": [
        8238,
        8287
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1EF8"
    },
    "7914": {
      "branch": 113,
      "fn": "gPHM._delegate",
      "offset": [
        8238,
        8287
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "7915": {
      "op": "POP"
    },
    "7916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7922": {
      "op": "SHL"
    },
    "7923": {
      "op": "SUB"
    },
    "7924": {
      "fn": "gPHM._delegate",
      "offset": [
        8264,
        8287
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7925": {
      "fn": "gPHM._delegate",
      "offset": [
        8264,
        8287
      ],
      "op": "AND",
      "path": "45"
    },
    "7926": {
      "fn": "gPHM._delegate",
      "offset": [
        8264,
        8287
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "7927": {
      "branch": 114,
      "fn": "gPHM._delegate",
      "offset": [
        8264,
        8287
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "7928": {
      "fn": "gPHM._delegate",
      "offset": [
        8238,
        8287
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7929": {
      "fn": "gPHM._delegate",
      "offset": [
        8234,
        8393
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "7930": {
      "fn": "gPHM._delegate",
      "offset": [
        8234,
        8393
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1F6A"
    },
    "7933": {
      "branch": 114,
      "fn": "gPHM._delegate",
      "offset": [
        8234,
        8393
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "7934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7940": {
      "op": "SHL"
    },
    "7941": {
      "op": "SUB"
    },
    "7942": {
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8341
      ],
      "op": "DUP2",
      "path": "45",
      "statement": 54
    },
    "7943": {
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8341
      ],
      "op": "AND",
      "path": "45"
    },
    "7944": {
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8341
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "7946": {
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8341
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7947": {
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8341
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7948": {
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8341
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7949": {
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x52"
    },
    "7951": {
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8341
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "7953": {
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8341
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7954": {
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8341
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "7956": {
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8341
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7957": {
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8341
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "7958": {
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8341
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "7959": {
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8341
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xFF"
    },
    "7961": {
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8341
      ],
      "op": "AND",
      "path": "45"
    },
    "7962": {
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8349
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "7963": {
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8349
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "7964": {
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8341
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "7966": {
      "branch": 115,
      "fn": "gPHM._delegate",
      "offset": [
        8311,
        8349
      ],
      "op": "EQ",
      "path": "45"
    },
    "7967": {
      "fn": "gPHM._delegate",
      "offset": [
        8303,
        8382
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1F6A"
    },
    "7970": {
      "branch": 115,
      "fn": "gPHM._delegate",
      "offset": [
        8303,
        8382
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "7971": {
      "fn": "gPHM._delegate",
      "offset": [
        8303,
        8382
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "7973": {
      "fn": "gPHM._delegate",
      "offset": [
        8303,
        8382
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "7974": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7978": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7980": {
      "op": "SHL"
    },
    "7981": {
      "fn": "gPHM._delegate",
      "offset": [
        8303,
        8382
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7982": {
      "fn": "gPHM._delegate",
      "offset": [
        8303,
        8382
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7985": {
      "fn": "gPHM._delegate",
      "offset": [
        8303,
        8382
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "7987": {
      "fn": "gPHM._delegate",
      "offset": [
        8303,
        8382
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7988": {
      "fn": "gPHM._delegate",
      "offset": [
        8303,
        8382
      ],
      "op": "ADD",
      "path": "45"
    },
    "7989": {
      "op": "MSTORE"
    },
    "7990": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "7992": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7994": {
      "op": "DUP3"
    },
    "7995": {
      "op": "ADD"
    },
    "7996": {
      "op": "MSTORE"
    },
    "7997": {
      "op": "PUSH32",
      "value": "0x43616E27742064656C65746167746520746F2064656C65676174656500000000"
    },
    "8030": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8032": {
      "op": "DUP3"
    },
    "8033": {
      "op": "ADD"
    },
    "8034": {
      "op": "MSTORE"
    },
    "8035": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8037": {
      "op": "ADD"
    },
    "8038": {
      "fn": "gPHM._delegate",
      "offset": [
        8303,
        8382
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x81D"
    },
    "8041": {
      "op": "JUMP"
    },
    "8042": {
      "fn": "gPHM._delegate",
      "offset": [
        8303,
        8382
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8049": {
      "op": "SHL"
    },
    "8050": {
      "op": "SUB"
    },
    "8051": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "DUP1",
      "path": "45"
    },
    "8052": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "DUP4",
      "path": "45"
    },
    "8053": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "AND",
      "path": "45"
    },
    "8054": {
      "fn": "gPHM._delegate",
      "offset": [
        8402,
        8425
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "8056": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8057": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8058": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8059": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8438
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x53"
    },
    "8061": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "8063": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8064": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8065": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8066": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "8068": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "DUP1",
      "path": "45"
    },
    "8069": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "DUP4",
      "path": "45"
    },
    "8070": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "8071": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "DUP1",
      "path": "45"
    },
    "8072": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "8073": {
      "fn": "gPHM._delegate",
      "offset": [
        8460,
        8493
      ],
      "op": "DUP7",
      "path": "45",
      "statement": 55
    },
    "8074": {
      "fn": "gPHM._delegate",
      "offset": [
        8460,
        8493
      ],
      "op": "DUP7",
      "path": "45"
    },
    "8075": {
      "fn": "gPHM._delegate",
      "offset": [
        8460,
        8493
      ],
      "op": "AND",
      "path": "45"
    },
    "8076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8082": {
      "op": "SHL"
    },
    "8083": {
      "op": "SUB"
    },
    "8084": {
      "op": "NOT"
    },
    "8085": {
      "fn": "gPHM._delegate",
      "offset": [
        8460,
        8493
      ],
      "op": "DUP3",
      "path": "45"
    },
    "8086": {
      "fn": "gPHM._delegate",
      "offset": [
        8460,
        8493
      ],
      "op": "AND",
      "path": "45"
    },
    "8087": {
      "fn": "gPHM._delegate",
      "offset": [
        8460,
        8493
      ],
      "op": "OR",
      "path": "45"
    },
    "8088": {
      "fn": "gPHM._delegate",
      "offset": [
        8460,
        8493
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8089": {
      "fn": "gPHM._delegate",
      "offset": [
        8460,
        8493
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "8090": {
      "fn": "gPHM._delegate",
      "offset": [
        8460,
        8493
      ],
      "op": "SSTORE",
      "path": "45"
    },
    "8091": {
      "fn": "gPHM._delegate",
      "offset": [
        8547,
        8557
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 56,
      "value": "0x3"
    },
    "8093": {
      "fn": "gPHM._delegate",
      "offset": [
        8547,
        8568
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8094": {
      "fn": "gPHM._delegate",
      "offset": [
        8547,
        8568
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "8095": {
      "fn": "gPHM._delegate",
      "offset": [
        8547,
        8568
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8096": {
      "fn": "gPHM._delegate",
      "offset": [
        8547,
        8568
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8097": {
      "fn": "gPHM._delegate",
      "offset": [
        8547,
        8568
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "8098": {
      "fn": "gPHM._delegate",
      "offset": [
        8547,
        8568
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "8099": {
      "fn": "gPHM._delegate",
      "offset": [
        8547,
        8568
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "8100": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "8101": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "AND",
      "path": "45"
    },
    "8102": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8103": {
      "fn": "gPHM._delegate",
      "offset": [
        8504,
        8569
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1FB3"
    },
    "8106": {
      "fn": "gPHM._delegate",
      "offset": [
        8504,
        8569
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8107": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "DUP3",
      "path": "45"
    },
    "8108": {
      "fn": "gPHM._delegate",
      "offset": [
        8428,
        8449
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8109": {
      "fn": "gPHM._delegate",
      "offset": [
        8484,
        8493
      ],
      "op": "DUP5",
      "path": "45"
    },
    "8110": {
      "fn": "gPHM._delegate",
      "offset": [
        8484,
        8493
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8111": {
      "fn": "gPHM._delegate",
      "offset": [
        8504,
        8518
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x21CB"
    },
    "8114": {
      "fn": "gPHM._delegate",
      "jump": "i",
      "offset": [
        8504,
        8569
      ],
      "op": "JUMP",
      "path": "45"
    },
    "8115": {
      "fn": "gPHM._delegate",
      "offset": [
        8504,
        8569
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8116": {
      "fn": "gPHM._delegate",
      "offset": [
        8629,
        8638
      ],
      "op": "DUP2",
      "path": "45",
      "statement": 57
    },
    "8117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8123": {
      "op": "SHL"
    },
    "8124": {
      "op": "SUB"
    },
    "8125": {
      "fn": "gPHM._delegate",
      "offset": [
        8585,
        8639
      ],
      "op": "AND",
      "path": "45"
    },
    "8126": {
      "fn": "gPHM._delegate",
      "offset": [
        8612,
        8627
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8133": {
      "op": "SHL"
    },
    "8134": {
      "op": "SUB"
    },
    "8135": {
      "fn": "gPHM._delegate",
      "offset": [
        8585,
        8639
      ],
      "op": "AND",
      "path": "45"
    },
    "8136": {
      "fn": "gPHM._delegate",
      "offset": [
        8601,
        8610
      ],
      "op": "DUP5",
      "path": "45"
    },
    "8137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8143": {
      "op": "SHL"
    },
    "8144": {
      "op": "SUB"
    },
    "8145": {
      "fn": "gPHM._delegate",
      "offset": [
        8585,
        8639
      ],
      "op": "AND",
      "path": "45"
    },
    "8146": {
      "fn": "gPHM._delegate",
      "offset": [
        8585,
        8639
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
    },
    "8179": {
      "fn": "gPHM._delegate",
      "offset": [
        8585,
        8639
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "8181": {
      "fn": "gPHM._delegate",
      "offset": [
        8585,
        8639
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "8182": {
      "fn": "gPHM._delegate",
      "offset": [
        8585,
        8639
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "8184": {
      "fn": "gPHM._delegate",
      "offset": [
        8585,
        8639
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "8185": {
      "fn": "gPHM._delegate",
      "offset": [
        8585,
        8639
      ],
      "op": "DUP1",
      "path": "45"
    },
    "8186": {
      "fn": "gPHM._delegate",
      "offset": [
        8585,
        8639
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "8187": {
      "fn": "gPHM._delegate",
      "offset": [
        8585,
        8639
      ],
      "op": "SUB",
      "path": "45"
    },
    "8188": {
      "fn": "gPHM._delegate",
      "offset": [
        8585,
        8639
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8189": {
      "fn": "gPHM._delegate",
      "offset": [
        8585,
        8639
      ],
      "op": "LOG4",
      "path": "45"
    },
    "8190": {
      "fn": "gPHM._delegate",
      "offset": [
        8224,
        8646
      ],
      "op": "POP",
      "path": "45"
    },
    "8191": {
      "fn": "gPHM._delegate",
      "offset": [
        8150,
        8646
      ],
      "op": "POP",
      "path": "45"
    },
    "8192": {
      "fn": "gPHM._delegate",
      "offset": [
        8150,
        8646
      ],
      "op": "POP",
      "path": "45"
    },
    "8193": {
      "fn": "gPHM._delegate",
      "jump": "o",
      "offset": [
        8150,
        8646
      ],
      "op": "JUMP",
      "path": "45"
    },
    "8194": {
      "fn": "SafeCast.toUint32",
      "offset": [
        2986,
        3173
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "8195": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3042,
        3048
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "8197": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3077,
        3093
      ],
      "op": "PUSH4",
      "path": "29",
      "statement": 58,
      "value": "0xFFFFFFFF"
    },
    "8202": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3068,
        3093
      ],
      "op": "DUP3",
      "path": "29"
    },
    "8203": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3068,
        3093
      ],
      "op": "GT",
      "path": "29"
    },
    "8204": {
      "branch": 136,
      "fn": "SafeCast.toUint32",
      "offset": [
        3068,
        3093
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "8205": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3060,
        3136
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2067"
    },
    "8208": {
      "branch": 136,
      "fn": "SafeCast.toUint32",
      "offset": [
        3060,
        3136
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "8209": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3060,
        3136
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "8211": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3060,
        3136
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "8212": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8216": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8218": {
      "op": "SHL"
    },
    "8219": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3060,
        3136
      ],
      "op": "DUP2",
      "path": "29"
    },
    "8220": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3060,
        3136
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "8221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8223": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3060,
        3136
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "8225": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3060,
        3136
      ],
      "op": "DUP3",
      "path": "29"
    },
    "8226": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3060,
        3136
      ],
      "op": "ADD",
      "path": "29"
    },
    "8227": {
      "op": "MSTORE"
    },
    "8228": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8230": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8232": {
      "op": "DUP3"
    },
    "8233": {
      "op": "ADD"
    },
    "8234": {
      "op": "MSTORE"
    },
    "8235": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2033"
    },
    "8268": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8270": {
      "op": "DUP3"
    },
    "8271": {
      "op": "ADD"
    },
    "8272": {
      "op": "MSTORE"
    },
    "8273": {
      "op": "PUSH6",
      "value": "0x322062697473"
    },
    "8280": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8282": {
      "op": "SHL"
    },
    "8283": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8285": {
      "op": "DUP3"
    },
    "8286": {
      "op": "ADD"
    },
    "8287": {
      "op": "MSTORE"
    },
    "8288": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8290": {
      "op": "ADD"
    },
    "8291": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3060,
        3136
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x81D"
    },
    "8294": {
      "op": "JUMP"
    },
    "8295": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3060,
        3136
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "8296": {
      "op": "POP"
    },
    "8297": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3160,
        3165
      ],
      "op": "SWAP1",
      "path": "29",
      "statement": 59
    },
    "8298": {
      "fn": "SafeCast.toUint32",
      "jump": "o",
      "offset": [
        2986,
        3173
      ],
      "op": "JUMP",
      "path": "29"
    },
    "8299": {
      "fn": "gPHM._burn",
      "offset": [
        7443,
        7633
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8300": {
      "fn": "gPHM._burn",
      "offset": [
        7527,
        7555
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 60,
      "value": "0x2075"
    },
    "8303": {
      "fn": "gPHM._burn",
      "offset": [
        7539,
        7546
      ],
      "op": "DUP3",
      "path": "45"
    },
    "8304": {
      "fn": "gPHM._burn",
      "offset": [
        7548,
        7554
      ],
      "op": "DUP3",
      "path": "45"
    },
    "8305": {
      "fn": "gPHM._burn",
      "offset": [
        7527,
        7538
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2509"
    },
    "8308": {
      "fn": "gPHM._burn",
      "jump": "i",
      "offset": [
        7527,
        7555
      ],
      "op": "JUMP",
      "path": "45"
    },
    "8309": {
      "fn": "gPHM._burn",
      "offset": [
        7527,
        7555
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8310": {
      "fn": "gPHM._burn",
      "offset": [
        7566,
        7626
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 61,
      "value": "0x1EC8"
    },
    "8313": {
      "fn": "gPHM._burn",
      "offset": [
        7583,
        7606
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x55"
    },
    "8315": {
      "fn": "gPHM._burn",
      "offset": [
        7608,
        7617
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x257A"
    },
    "8318": {
      "fn": "gPHM._burn",
      "offset": [
        7619,
        7625
      ],
      "op": "DUP4",
      "path": "45"
    },
    "8319": {
      "fn": "gPHM._burn",
      "offset": [
        7566,
        7582
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2390"
    },
    "8322": {
      "fn": "gPHM._burn",
      "jump": "i",
      "offset": [
        7566,
        7626
      ],
      "op": "JUMP",
      "path": "45"
    },
    "8323": {
      "fn": "PRBMathUD60x18.mul",
      "offset": [
        21270,
        21400
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "8324": {
      "fn": "PRBMathUD60x18.mul",
      "offset": [
        21328,
        21342
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "8326": {
      "fn": "PRBMathUD60x18.mul",
      "offset": [
        21363,
        21393
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 62,
      "value": "0x76E"
    },
    "8329": {
      "fn": "PRBMathUD60x18.mul",
      "offset": [
        21388,
        21389
      ],
      "op": "DUP4",
      "path": "32"
    },
    "8330": {
      "fn": "PRBMathUD60x18.mul",
      "offset": [
        21391,
        21392
      ],
      "op": "DUP4",
      "path": "32"
    },
    "8331": {
      "fn": "PRBMathUD60x18.mul",
      "offset": [
        21363,
        21387
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2586"
    },
    "8334": {
      "fn": "PRBMathUD60x18.mul",
      "jump": "i",
      "offset": [
        21363,
        21393
      ],
      "op": "JUMP",
      "path": "32"
    },
    "8335": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15079,
        19062
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "8336": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15191,
        15205
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "8338": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15191,
        15205
      ],
      "op": "DUP1",
      "path": "30"
    },
    "8339": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15191,
        15205
      ],
      "op": "DUP1",
      "path": "30"
    },
    "8340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8342": {
      "op": "NOT"
    },
    "8343": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15680,
        15681
      ],
      "op": "DUP6",
      "path": "30"
    },
    "8344": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15677,
        15678
      ],
      "op": "DUP8",
      "path": "30"
    },
    "8345": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15670,
        15690
      ],
      "op": "MULMOD",
      "path": "30"
    },
    "8346": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15719,
        15720
      ],
      "op": "DUP6",
      "path": "30"
    },
    "8347": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15716,
        15717
      ],
      "op": "DUP8",
      "path": "30"
    },
    "8348": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15712,
        15721
      ],
      "op": "MUL",
      "path": "30"
    },
    "8349": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15703,
        15721
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "8350": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15703,
        15721
      ],
      "op": "POP",
      "path": "30"
    },
    "8351": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15770,
        15775
      ],
      "op": "DUP3",
      "path": "30"
    },
    "8352": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15766,
        15768
      ],
      "op": "DUP2",
      "path": "30"
    },
    "8353": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15763,
        15776
      ],
      "op": "LT",
      "path": "30"
    },
    "8354": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15755,
        15760
      ],
      "op": "DUP4",
      "path": "30"
    },
    "8355": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15751,
        15753
      ],
      "op": "DUP3",
      "path": "30"
    },
    "8356": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15747,
        15761
      ],
      "op": "SUB",
      "path": "30"
    },
    "8357": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15743,
        15777
      ],
      "op": "SUB",
      "path": "30"
    },
    "8358": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15734,
        15777
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "8359": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15734,
        15777
      ],
      "op": "POP",
      "path": "30"
    },
    "8360": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15734,
        15777
      ],
      "op": "POP",
      "path": "30"
    },
    "8361": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15860,
        15865
      ],
      "op": "DUP1",
      "path": "30"
    },
    "8362": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15869,
        15870
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "8364": {
      "branch": 128,
      "fn": "PRBMath.mulDiv",
      "offset": [
        15860,
        15870
      ],
      "op": "EQ",
      "path": "30"
    },
    "8365": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15856,
        15994
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "8366": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15856,
        15994
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x20CA"
    },
    "8369": {
      "branch": 128,
      "fn": "PRBMath.mulDiv",
      "offset": [
        15856,
        15994
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "8370": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15931,
        15942
      ],
      "op": "DUP4",
      "path": "30",
      "statement": 63
    },
    "8371": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15928
      ],
      "op": "DUP3",
      "path": "30"
    },
    "8372": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "DUP2",
      "path": "30"
    },
    "8373": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x20C0"
    },
    "8376": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "8377": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x20C0"
    },
    "8380": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x2AE2"
    },
    "8383": {
      "fn": "PRBMath.mulDiv",
      "jump": "i",
      "offset": [
        15923,
        15942
      ],
      "op": "JUMP",
      "path": "30"
    },
    "8384": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "8385": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "DIV",
      "path": "30"
    },
    "8386": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15914,
        15942
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "8387": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15914,
        15942
      ],
      "op": "POP",
      "path": "30"
    },
    "8388": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15970,
        15983
      ],
      "op": "POP",
      "path": "30",
      "statement": 64
    },
    "8389": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15970,
        15983
      ],
      "op": "POP",
      "path": "30"
    },
    "8390": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15970,
        15983
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x76E"
    },
    "8393": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15970,
        15983
      ],
      "op": "JUMP",
      "path": "30"
    },
    "8394": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15856,
        15994
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "8395": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16101,
        16112
      ],
      "op": "DUP4",
      "path": "30",
      "statement": 65
    },
    "8396": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16092,
        16097
      ],
      "op": "DUP2",
      "path": "30"
    },
    "8397": {
      "branch": 129,
      "fn": "PRBMath.mulDiv",
      "offset": [
        16092,
        16112
      ],
      "op": "LT",
      "path": "30"
    },
    "8398": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16088,
        16189
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x20F4"
    },
    "8401": {
      "branch": 129,
      "fn": "PRBMath.mulDiv",
      "offset": [
        16088,
        16189
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "8402": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "8404": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "8405": {
      "op": "PUSH4",
      "value": "0x1DCF3063"
    },
    "8410": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "8412": {
      "op": "SHL"
    },
    "8413": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "DUP2",
      "path": "30"
    },
    "8414": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "8415": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "8417": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "DUP2",
      "path": "30"
    },
    "8418": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "ADD",
      "path": "30"
    },
    "8419": {
      "op": "DUP3"
    },
    "8420": {
      "op": "SWAP1"
    },
    "8421": {
      "op": "MSTORE"
    },
    "8422": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8424": {
      "op": "DUP2"
    },
    "8425": {
      "op": "ADD"
    },
    "8426": {
      "op": "DUP6"
    },
    "8427": {
      "op": "SWAP1"
    },
    "8428": {
      "op": "MSTORE"
    },
    "8429": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8431": {
      "op": "ADD"
    },
    "8432": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x81D"
    },
    "8435": {
      "op": "JUMP"
    },
    "8436": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16088,
        16189
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "8437": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16424,
        16441
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "8439": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16547,
        16558
      ],
      "op": "DUP5",
      "path": "30"
    },
    "8440": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16544,
        16545
      ],
      "op": "DUP7",
      "path": "30"
    },
    "8441": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16541,
        16542
      ],
      "op": "DUP9",
      "path": "30"
    },
    "8442": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16534,
        16559
      ],
      "op": "MULMOD",
      "path": "30"
    },
    "8443": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17956,
        17957
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x2"
    },
    "8445": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17093,
        17094
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1"
    },
    "8447": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17078,
        17090
      ],
      "op": "DUP8",
      "path": "30"
    },
    "8448": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17078,
        17090
      ],
      "op": "NOT",
      "path": "30"
    },
    "8449": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17078,
        17094
      ],
      "op": "DUP2",
      "path": "30"
    },
    "8450": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17078,
        17094
      ],
      "op": "ADD",
      "path": "30"
    },
    "8451": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17063,
        17095
      ],
      "op": "DUP9",
      "path": "30"
    },
    "8452": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17063,
        17095
      ],
      "op": "AND",
      "path": "30"
    },
    "8453": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17201,
        17226
      ],
      "op": "SWAP8",
      "path": "30"
    },
    "8454": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17201,
        17226
      ],
      "op": "DUP9",
      "path": "30"
    },
    "8455": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17201,
        17226
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8456": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17201,
        17226
      ],
      "op": "DIV",
      "path": "30"
    },
    "8457": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17937,
        17938
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x3"
    },
    "8459": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17937,
        17952
      ],
      "op": "DUP2",
      "path": "30"
    },
    "8460": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17937,
        17952
      ],
      "op": "MUL",
      "path": "30"
    },
    "8461": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17936,
        17957
      ],
      "op": "DUP4",
      "path": "30"
    },
    "8462": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17936,
        17957
      ],
      "op": "XOR",
      "path": "30"
    },
    "8463": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18189,
        18210
      ],
      "op": "DUP1",
      "path": "30",
      "statement": 66
    },
    "8464": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18189,
        18210
      ],
      "op": "DUP3",
      "path": "30"
    },
    "8465": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18189,
        18210
      ],
      "op": "MUL",
      "path": "30"
    },
    "8466": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18185,
        18210
      ],
      "op": "DUP5",
      "path": "30"
    },
    "8467": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18185,
        18210
      ],
      "op": "SUB",
      "path": "30"
    },
    "8468": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18174,
        18210
      ],
      "op": "MUL",
      "path": "30"
    },
    "8469": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18258,
        18279
      ],
      "op": "DUP1",
      "path": "30",
      "statement": 67
    },
    "8470": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18258,
        18279
      ],
      "op": "DUP3",
      "path": "30"
    },
    "8471": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18258,
        18279
      ],
      "op": "MUL",
      "path": "30"
    },
    "8472": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18254,
        18279
      ],
      "op": "DUP5",
      "path": "30"
    },
    "8473": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18254,
        18279
      ],
      "op": "SUB",
      "path": "30"
    },
    "8474": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18243,
        18279
      ],
      "op": "MUL",
      "path": "30"
    },
    "8475": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18328,
        18349
      ],
      "op": "DUP1",
      "path": "30",
      "statement": 68
    },
    "8476": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18328,
        18349
      ],
      "op": "DUP3",
      "path": "30"
    },
    "8477": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18328,
        18349
      ],
      "op": "MUL",
      "path": "30"
    },
    "8478": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18324,
        18349
      ],
      "op": "DUP5",
      "path": "30"
    },
    "8479": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18324,
        18349
      ],
      "op": "SUB",
      "path": "30"
    },
    "8480": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18313,
        18349
      ],
      "op": "MUL",
      "path": "30"
    },
    "8481": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18398,
        18419
      ],
      "op": "DUP1",
      "path": "30",
      "statement": 69
    },
    "8482": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18398,
        18419
      ],
      "op": "DUP3",
      "path": "30"
    },
    "8483": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18398,
        18419
      ],
      "op": "MUL",
      "path": "30"
    },
    "8484": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18394,
        18419
      ],
      "op": "DUP5",
      "path": "30"
    },
    "8485": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18394,
        18419
      ],
      "op": "SUB",
      "path": "30"
    },
    "8486": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18383,
        18419
      ],
      "op": "MUL",
      "path": "30"
    },
    "8487": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18468,
        18489
      ],
      "op": "DUP1",
      "path": "30",
      "statement": 70
    },
    "8488": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18468,
        18489
      ],
      "op": "DUP3",
      "path": "30"
    },
    "8489": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18468,
        18489
      ],
      "op": "MUL",
      "path": "30"
    },
    "8490": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18464,
        18489
      ],
      "op": "DUP5",
      "path": "30"
    },
    "8491": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18464,
        18489
      ],
      "op": "SUB",
      "path": "30"
    },
    "8492": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18453,
        18489
      ],
      "op": "MUL",
      "path": "30"
    },
    "8493": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18539,
        18560
      ],
      "op": "SWAP1",
      "path": "30",
      "statement": 71
    },
    "8494": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18539,
        18560
      ],
      "op": "DUP2",
      "path": "30"
    },
    "8495": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18539,
        18560
      ],
      "op": "MUL",
      "path": "30"
    },
    "8496": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18535,
        18560
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8497": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18535,
        18560
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "8498": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18535,
        18560
      ],
      "op": "SUB",
      "path": "30"
    },
    "8499": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18524,
        18560
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8500": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18524,
        18560
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "8501": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18524,
        18560
      ],
      "op": "MUL",
      "path": "30"
    },
    "8502": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17045,
        17060
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "8504": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17467,
        17482
      ],
      "op": "DUP9",
      "path": "30"
    },
    "8505": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17467,
        17482
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8506": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17467,
        17482
      ],
      "op": "SUB",
      "path": "30"
    },
    "8507": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17463,
        17492
      ],
      "op": "DUP9",
      "path": "30"
    },
    "8508": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17463,
        17492
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8509": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17463,
        17492
      ],
      "op": "DIV",
      "path": "30"
    },
    "8510": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17459,
        17496
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8511": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17459,
        17496
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "8512": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17459,
        17496
      ],
      "op": "ADD",
      "path": "30"
    },
    "8513": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16653,
        16673
      ],
      "op": "DUP6",
      "path": "30"
    },
    "8514": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16653,
        16673
      ],
      "op": "DUP4",
      "path": "30"
    },
    "8515": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16653,
        16673
      ],
      "op": "GT",
      "path": "30"
    },
    "8516": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16642,
        16674
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8517": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16642,
        16674
      ],
      "op": "SWAP5",
      "path": "30"
    },
    "8518": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16642,
        16674
      ],
      "op": "SUB",
      "path": "30"
    },
    "8519": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17585,
        17600
      ],
      "op": "SWAP4",
      "path": "30",
      "statement": 72
    },
    "8520": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17585,
        17600
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8521": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17585,
        17600
      ],
      "op": "SWAP4",
      "path": "30"
    },
    "8522": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17585,
        17600
      ],
      "op": "MUL",
      "path": "30"
    },
    "8523": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16696,
        16717
      ],
      "op": "SWAP4",
      "path": "30"
    },
    "8524": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16696,
        16717
      ],
      "op": "SUB",
      "path": "30"
    },
    "8525": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17305,
        17324
      ],
      "op": "SWAP5",
      "path": "30"
    },
    "8526": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17305,
        17324
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8527": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17305,
        17324
      ],
      "op": "SWAP5",
      "path": "30"
    },
    "8528": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17305,
        17324
      ],
      "op": "DIV",
      "path": "30"
    },
    "8529": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17576,
        17600
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "8530": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17576,
        17600
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8531": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17576,
        17600
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "8532": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17576,
        17600
      ],
      "op": "OR",
      "path": "30"
    },
    "8533": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        19003,
        19018
      ],
      "op": "MUL",
      "path": "30",
      "statement": 73
    },
    "8534": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        19003,
        19018
      ],
      "op": "SWAP5",
      "path": "30"
    },
    "8535": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        19003,
        19018
      ],
      "op": "SWAP4",
      "path": "30"
    },
    "8536": {
      "op": "POP"
    },
    "8537": {
      "op": "POP"
    },
    "8538": {
      "op": "POP"
    },
    "8539": {
      "op": "POP"
    },
    "8540": {
      "fn": "PRBMath.mulDiv",
      "jump": "o",
      "offset": [
        15079,
        19062
      ],
      "op": "JUMP",
      "path": "30"
    },
    "8541": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5644,
        5808
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8542": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5691,
        5704
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "8544": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5737,
        5753
      ],
      "op": "PUSH2",
      "path": "68",
      "statement": 74,
      "value": "0x2171"
    },
    "8547": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4F"
    },
    "8549": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "8550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8556": {
      "op": "SHL"
    },
    "8557": {
      "op": "SUB"
    },
    "8558": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "8559": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8560": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2371,
        2493
      ],
      "op": "JUMP",
      "path": "68"
    },
    "8561": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5737,
        5753
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8568": {
      "op": "SHL"
    },
    "8569": {
      "op": "SUB"
    },
    "8570": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5737,
        5764
      ],
      "op": "AND",
      "path": "68"
    },
    "8571": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5737,
        5764
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x21F8A721"
    },
    "8576": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5775,
        5782
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x9"
    },
    "8578": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5775,
        5792
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "8580": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5775,
        5792
      ],
      "op": "ADD",
      "path": "68"
    },
    "8581": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5775,
        5798
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xA"
    },
    "8583": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5775,
        5798
      ],
      "op": "ADD",
      "path": "68"
    },
    "8584": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5765,
        5799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8586": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5765,
        5799
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8587": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5765,
        5799
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1A35"
    },
    "8590": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5765,
        5799
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "8591": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5765,
        5799
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8592": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "offset": [
        5765,
        5799
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x2ABE"
    },
    "8595": {
      "fn": "PhantomStorageMixin.PhantomVault",
      "jump": "i",
      "offset": [
        5765,
        5799
      ],
      "op": "JUMP",
      "path": "68"
    },
    "8596": {
      "fn": "PhantomStorageMixin.PHM",
      "offset": [
        3648,
        3783
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8597": {
      "fn": "PhantomStorageMixin.PHM",
      "offset": [
        3686,
        3690
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "8599": {
      "fn": "PhantomStorageMixin.PHM",
      "offset": [
        3714,
        3730
      ],
      "op": "PUSH2",
      "path": "68",
      "statement": 75,
      "value": "0x21A8"
    },
    "8602": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4F"
    },
    "8604": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "8605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8611": {
      "op": "SHL"
    },
    "8612": {
      "op": "SUB"
    },
    "8613": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "8614": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8615": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2371,
        2493
      ],
      "op": "JUMP",
      "path": "68"
    },
    "8616": {
      "fn": "PhantomStorageMixin.PHM",
      "offset": [
        3714,
        3730
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8623": {
      "op": "SHL"
    },
    "8624": {
      "op": "SUB"
    },
    "8625": {
      "fn": "PhantomStorageMixin.PHM",
      "offset": [
        3714,
        3741
      ],
      "op": "AND",
      "path": "68"
    },
    "8626": {
      "fn": "PhantomStorageMixin.PHM",
      "offset": [
        3714,
        3741
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x21F8A721"
    },
    "8631": {
      "fn": "PhantomStorageMixin.PHM",
      "offset": [
        3752,
        3759
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x9"
    },
    "8633": {
      "fn": "PhantomStorageMixin.PHM",
      "offset": [
        3752,
        3769
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "8635": {
      "fn": "PhantomStorageMixin.PHM",
      "offset": [
        3752,
        3769
      ],
      "op": "ADD",
      "path": "68"
    },
    "8636": {
      "fn": "PhantomStorageMixin.PHM",
      "offset": [
        3752,
        3773
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x5"
    },
    "8638": {
      "fn": "PhantomStorageMixin.PHM",
      "offset": [
        3752,
        3773
      ],
      "op": "ADD",
      "path": "68"
    },
    "8639": {
      "fn": "PhantomStorageMixin.PHM",
      "offset": [
        3742,
        3774
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8641": {
      "fn": "PhantomStorageMixin.PHM",
      "offset": [
        3742,
        3774
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8642": {
      "fn": "PhantomStorageMixin.PHM",
      "offset": [
        3742,
        3774
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1A35"
    },
    "8645": {
      "fn": "PhantomStorageMixin.PHM",
      "offset": [
        3742,
        3774
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "8646": {
      "fn": "PhantomStorageMixin.PHM",
      "offset": [
        3742,
        3774
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8647": {
      "fn": "PhantomStorageMixin.PHM",
      "offset": [
        3742,
        3774
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x2ABE"
    },
    "8650": {
      "fn": "PhantomStorageMixin.PHM",
      "jump": "i",
      "offset": [
        3742,
        3774
      ],
      "op": "JUMP",
      "path": "68"
    },
    "8651": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8652,
        9272
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8652": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8785,
        8788
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8659": {
      "op": "SHL"
    },
    "8660": {
      "op": "SUB"
    },
    "8661": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8779,
        8788
      ],
      "op": "AND",
      "path": "45"
    },
    "8662": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8779,
        8782
      ],
      "op": "DUP4",
      "path": "45"
    },
    "8663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8669": {
      "op": "SHL"
    },
    "8670": {
      "op": "SUB"
    },
    "8671": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8779,
        8788
      ],
      "op": "AND",
      "path": "45"
    },
    "8672": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8779,
        8788
      ],
      "op": "EQ",
      "path": "45"
    },
    "8673": {
      "branch": 116,
      "fn": "gPHM._moveDelegates",
      "offset": [
        8779,
        8788
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "8674": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8779,
        8801
      ],
      "op": "DUP1",
      "path": "45"
    },
    "8675": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8779,
        8801
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "8676": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8779,
        8801
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x21ED"
    },
    "8679": {
      "branch": 116,
      "fn": "gPHM._moveDelegates",
      "offset": [
        8779,
        8801
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "8680": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8779,
        8801
      ],
      "op": "POP",
      "path": "45"
    },
    "8681": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8800,
        8801
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "8683": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8791,
        8797
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8684": {
      "branch": 117,
      "fn": "gPHM._moveDelegates",
      "offset": [
        8791,
        8801
      ],
      "op": "GT",
      "path": "45"
    },
    "8685": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8779,
        8801
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8686": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8775,
        9036
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "8687": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8775,
        9036
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x227B"
    },
    "8690": {
      "branch": 117,
      "fn": "gPHM._moveDelegates",
      "offset": [
        8775,
        9036
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "8691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8697": {
      "op": "SHL"
    },
    "8698": {
      "op": "SUB"
    },
    "8699": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8819,
        8836
      ],
      "op": "DUP4",
      "path": "45"
    },
    "8700": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8819,
        8836
      ],
      "op": "AND",
      "path": "45"
    },
    "8701": {
      "branch": 118,
      "fn": "gPHM._moveDelegates",
      "offset": [
        8819,
        8836
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "8702": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8815,
        9036
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x227B"
    },
    "8705": {
      "branch": 118,
      "fn": "gPHM._moveDelegates",
      "offset": [
        8815,
        9036
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "8706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8712": {
      "op": "SHL"
    },
    "8713": {
      "op": "SUB"
    },
    "8714": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8914,
        8931
      ],
      "op": "DUP4",
      "path": "45"
    },
    "8715": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8914,
        8931
      ],
      "op": "AND",
      "path": "45"
    },
    "8716": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8857,
        8874
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "8718": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8914,
        8931
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8719": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8914,
        8931
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8720": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8914,
        8931
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8721": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8914,
        8926
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x54"
    },
    "8723": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8914,
        8931
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "8725": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8914,
        8931
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8726": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8914,
        8931
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "8728": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8914,
        8931
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8729": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8914,
        8931
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "8730": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8857,
        8874
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8731": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8857,
        8874
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8732": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8897,
        8951
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2228"
    },
    "8735": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8897,
        8951
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8736": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8933,
        8942
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x257A"
    },
    "8739": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8944,
        8950
      ],
      "op": "DUP6",
      "path": "45"
    },
    "8740": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8897,
        8913
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2390"
    },
    "8743": {
      "fn": "gPHM._moveDelegates",
      "jump": "i",
      "offset": [
        8897,
        8951
      ],
      "op": "JUMP",
      "path": "45"
    },
    "8744": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8897,
        8951
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8745": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8856,
        8951
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "8746": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8856,
        8951
      ],
      "op": "POP",
      "path": "45"
    },
    "8747": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8856,
        8951
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "8748": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8856,
        8951
      ],
      "op": "POP",
      "path": "45"
    },
    "8749": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8995,
        8998
      ],
      "op": "DUP5",
      "path": "45",
      "statement": 76
    },
    "8750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8756": {
      "op": "SHL"
    },
    "8757": {
      "op": "SUB"
    },
    "8758": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8974,
        9021
      ],
      "op": "AND",
      "path": "45"
    },
    "8759": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8974,
        9021
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
    },
    "8792": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9000,
        9009
      ],
      "op": "DUP4",
      "path": "45"
    },
    "8793": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9011,
        9020
      ],
      "op": "DUP4",
      "path": "45"
    },
    "8794": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8974,
        9021
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "8796": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8974,
        9021
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "8797": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8974,
        9021
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2270"
    },
    "8800": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8974,
        9021
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "8801": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8974,
        9021
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "8802": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8974,
        9021
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8803": {
      "op": "SWAP2"
    },
    "8804": {
      "op": "DUP3"
    },
    "8805": {
      "op": "MSTORE"
    },
    "8806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8808": {
      "op": "DUP3"
    },
    "8809": {
      "op": "ADD"
    },
    "8810": {
      "op": "MSTORE"
    },
    "8811": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8813": {
      "op": "ADD"
    },
    "8814": {
      "op": "SWAP1"
    },
    "8815": {
      "op": "JUMP"
    },
    "8816": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8974,
        9021
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8817": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8974,
        9021
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "8819": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8974,
        9021
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "8820": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8974,
        9021
      ],
      "op": "DUP1",
      "path": "45"
    },
    "8821": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8974,
        9021
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "8822": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8974,
        9021
      ],
      "op": "SUB",
      "path": "45"
    },
    "8823": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8974,
        9021
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8824": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8974,
        9021
      ],
      "op": "LOG2",
      "path": "45"
    },
    "8825": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8838,
        9036
      ],
      "op": "POP",
      "path": "45"
    },
    "8826": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8838,
        9036
      ],
      "op": "POP",
      "path": "45"
    },
    "8827": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8815,
        9036
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8834": {
      "op": "SHL"
    },
    "8835": {
      "op": "SUB"
    },
    "8836": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9054,
        9071
      ],
      "op": "DUP3",
      "path": "45"
    },
    "8837": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9054,
        9071
      ],
      "op": "AND",
      "path": "45"
    },
    "8838": {
      "branch": 119,
      "fn": "gPHM._moveDelegates",
      "offset": [
        9054,
        9071
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "8839": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9050,
        9266
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xADF"
    },
    "8842": {
      "branch": 119,
      "fn": "gPHM._moveDelegates",
      "offset": [
        9050,
        9266
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "8843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8849": {
      "op": "SHL"
    },
    "8850": {
      "op": "SUB"
    },
    "8851": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9149,
        9166
      ],
      "op": "DUP3",
      "path": "45"
    },
    "8852": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9149,
        9166
      ],
      "op": "AND",
      "path": "45"
    },
    "8853": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9092,
        9109
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "8855": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9149,
        9166
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8856": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9149,
        9166
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8857": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9149,
        9166
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8858": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9149,
        9161
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x54"
    },
    "8860": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9149,
        9166
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "8862": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9149,
        9166
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8863": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9149,
        9166
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "8865": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9149,
        9166
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8866": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9149,
        9166
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "8867": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9092,
        9109
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8868": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9092,
        9109
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8869": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9132,
        9181
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x22B1"
    },
    "8872": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9132,
        9181
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8873": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9168,
        9172
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2384"
    },
    "8876": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9174,
        9180
      ],
      "op": "DUP6",
      "path": "45"
    },
    "8877": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9132,
        9148
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2390"
    },
    "8880": {
      "fn": "gPHM._moveDelegates",
      "jump": "i",
      "offset": [
        9132,
        9181
      ],
      "op": "JUMP",
      "path": "45"
    },
    "8881": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9132,
        9181
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8882": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9091,
        9181
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "8883": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9091,
        9181
      ],
      "op": "POP",
      "path": "45"
    },
    "8884": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9091,
        9181
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "8885": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9091,
        9181
      ],
      "op": "POP",
      "path": "45"
    },
    "8886": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9225,
        9228
      ],
      "op": "DUP4",
      "path": "45",
      "statement": 77
    },
    "8887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8893": {
      "op": "SHL"
    },
    "8894": {
      "op": "SUB"
    },
    "8895": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9204,
        9251
      ],
      "op": "AND",
      "path": "45"
    },
    "8896": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9204,
        9251
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
    },
    "8929": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9230,
        9239
      ],
      "op": "DUP4",
      "path": "45"
    },
    "8930": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9241,
        9250
      ],
      "op": "DUP4",
      "path": "45"
    },
    "8931": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9204,
        9251
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "8933": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9204,
        9251
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "8934": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9204,
        9251
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x22F9"
    },
    "8937": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9204,
        9251
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "8938": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9204,
        9251
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "8939": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9204,
        9251
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8940": {
      "op": "SWAP2"
    },
    "8941": {
      "op": "DUP3"
    },
    "8942": {
      "op": "MSTORE"
    },
    "8943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8945": {
      "op": "DUP3"
    },
    "8946": {
      "op": "ADD"
    },
    "8947": {
      "op": "MSTORE"
    },
    "8948": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8950": {
      "op": "ADD"
    },
    "8951": {
      "op": "SWAP1"
    },
    "8952": {
      "op": "JUMP"
    },
    "8953": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9204,
        9251
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8954": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9204,
        9251
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "8956": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9204,
        9251
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "8957": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9204,
        9251
      ],
      "op": "DUP1",
      "path": "45"
    },
    "8958": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9204,
        9251
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "8959": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9204,
        9251
      ],
      "op": "SUB",
      "path": "45"
    },
    "8960": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9204,
        9251
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8961": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9204,
        9251
      ],
      "op": "LOG2",
      "path": "45"
    },
    "8962": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9073,
        9266
      ],
      "op": "POP",
      "path": "45"
    },
    "8963": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        9073,
        9266
      ],
      "op": "POP",
      "path": "45"
    },
    "8964": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8652,
        9272
      ],
      "op": "POP",
      "path": "45"
    },
    "8965": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8652,
        9272
      ],
      "op": "POP",
      "path": "45"
    },
    "8966": {
      "fn": "gPHM._moveDelegates",
      "offset": [
        8652,
        9272
      ],
      "op": "POP",
      "path": "45"
    },
    "8967": {
      "fn": "gPHM._moveDelegates",
      "jump": "o",
      "offset": [
        8652,
        9272
      ],
      "op": "JUMP",
      "path": "45"
    },
    "8968": {
      "fn": "Math.average",
      "offset": [
        608,
        761
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8969": {
      "fn": "Math.average",
      "offset": [
        670,
        677
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "8971": {
      "fn": "Math.average",
      "offset": [
        743,
        754
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 78,
      "value": "0x2317"
    },
    "8974": {
      "fn": "Math.average",
      "offset": [
        753,
        754
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "8976": {
      "fn": "Math.average",
      "offset": [
        744,
        749
      ],
      "op": "DUP5",
      "path": "28"
    },
    "8977": {
      "fn": "Math.average",
      "offset": [
        744,
        749
      ],
      "op": "DUP5",
      "path": "28"
    },
    "8978": {
      "fn": "Math.average",
      "offset": [
        744,
        749
      ],
      "op": "XOR",
      "path": "28"
    },
    "8979": {
      "fn": "Math.average",
      "offset": [
        743,
        754
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2AF8"
    },
    "8982": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        743,
        754
      ],
      "op": "JUMP",
      "path": "28"
    },
    "8983": {
      "fn": "Math.average",
      "offset": [
        743,
        754
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8984": {
      "fn": "Math.average",
      "offset": [
        733,
        754
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x76E"
    },
    "8987": {
      "fn": "Math.average",
      "offset": [
        733,
        754
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8988": {
      "fn": "Math.average",
      "offset": [
        734,
        739
      ],
      "op": "DUP5",
      "path": "28"
    },
    "8989": {
      "fn": "Math.average",
      "offset": [
        734,
        739
      ],
      "op": "DUP5",
      "path": "28"
    },
    "8990": {
      "fn": "Math.average",
      "offset": [
        734,
        739
      ],
      "op": "AND",
      "path": "28"
    },
    "8991": {
      "fn": "Math.average",
      "offset": [
        733,
        754
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2ACA"
    },
    "8994": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        733,
        754
      ],
      "op": "JUMP",
      "path": "28"
    },
    "8995": {
      "fn": "ERC20._mint",
      "offset": [
        5831,
        6212
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "8996": {
      "fn": "ERC20._mint",
      "offset": [
        5917,
        5923
      ],
      "op": "DUP1",
      "path": "42",
      "statement": 79
    },
    "8997": {
      "fn": "ERC20._mint",
      "offset": [
        5901,
        5913
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "8999": {
      "fn": "ERC20._mint",
      "offset": [
        5901,
        5913
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "9001": {
      "fn": "ERC20._mint",
      "offset": [
        5901,
        5923
      ],
      "op": "DUP3",
      "path": "42"
    },
    "9002": {
      "fn": "ERC20._mint",
      "offset": [
        5901,
        5923
      ],
      "op": "DUP3",
      "path": "42"
    },
    "9003": {
      "fn": "ERC20._mint",
      "offset": [
        5901,
        5923
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "9004": {
      "fn": "ERC20._mint",
      "offset": [
        5901,
        5923
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2335"
    },
    "9007": {
      "fn": "ERC20._mint",
      "offset": [
        5901,
        5923
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9008": {
      "fn": "ERC20._mint",
      "offset": [
        5901,
        5923
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9009": {
      "fn": "ERC20._mint",
      "offset": [
        5901,
        5923
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2ACA"
    },
    "9012": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        5901,
        5923
      ],
      "op": "JUMP",
      "path": "42"
    },
    "9013": {
      "fn": "ERC20._mint",
      "offset": [
        5901,
        5923
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9014": {
      "fn": "ERC20._mint",
      "offset": [
        5901,
        5923
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9015": {
      "fn": "ERC20._mint",
      "offset": [
        5901,
        5923
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9016": {
      "fn": "ERC20._mint",
      "offset": [
        5901,
        5923
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "9017": {
      "op": "POP"
    },
    "9018": {
      "op": "POP"
    },
    "9019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9025": {
      "op": "SHL"
    },
    "9026": {
      "op": "SUB"
    },
    "9027": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6083
      ],
      "op": "DUP3",
      "path": "42",
      "statement": 80
    },
    "9028": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6083
      ],
      "op": "AND",
      "path": "42"
    },
    "9029": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6083
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "9031": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6083
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9032": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6083
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9033": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6083
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "9034": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6079
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x3"
    },
    "9036": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6083
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "9038": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6083
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9039": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6083
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9040": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6083
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "9041": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6083
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9043": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6083
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9044": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6083
      ],
      "op": "DUP4",
      "path": "42"
    },
    "9045": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6083
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "9046": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6093
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9047": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6093
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "9048": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6093
      ],
      "op": "DUP7",
      "path": "42"
    },
    "9049": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6093
      ],
      "op": "ADD",
      "path": "42"
    },
    "9050": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6093
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9051": {
      "fn": "ERC20._mint",
      "offset": [
        6069,
        6093
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "9052": {
      "fn": "ERC20._mint",
      "offset": [
        6119,
        6151
      ],
      "op": "MLOAD",
      "path": "42",
      "statement": 81
    },
    "9053": {
      "op": "DUP5"
    },
    "9054": {
      "op": "DUP2"
    },
    "9055": {
      "op": "MSTORE"
    },
    "9056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9058": {
      "op": "DUP1"
    },
    "9059": {
      "op": "MLOAD"
    },
    "9060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9062": {
      "op": "PUSH2",
      "value": "0x2B1B"
    },
    "9065": {
      "op": "DUP4"
    },
    "9066": {
      "op": "CODECOPY"
    },
    "9067": {
      "op": "DUP2"
    },
    "9068": {
      "op": "MLOAD"
    },
    "9069": {
      "op": "SWAP2"
    },
    "9070": {
      "op": "MSTORE"
    },
    "9071": {
      "fn": "ERC20._mint",
      "offset": [
        6119,
        6151
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9072": {
      "op": "ADD"
    },
    "9073": {
      "fn": "ERC20._mint",
      "offset": [
        6119,
        6151
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9075": {
      "fn": "ERC20._mint",
      "offset": [
        6119,
        6151
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9076": {
      "fn": "ERC20._mint",
      "offset": [
        6119,
        6151
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9077": {
      "fn": "ERC20._mint",
      "offset": [
        6119,
        6151
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9078": {
      "fn": "ERC20._mint",
      "offset": [
        6119,
        6151
      ],
      "op": "SUB",
      "path": "42"
    },
    "9079": {
      "fn": "ERC20._mint",
      "offset": [
        6119,
        6151
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9080": {
      "fn": "ERC20._mint",
      "offset": [
        6119,
        6151
      ],
      "op": "LOG3",
      "path": "42"
    },
    "9081": {
      "fn": "ERC20._mint",
      "offset": [
        6162,
        6205
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 82,
      "value": "0x1976"
    },
    "9084": {
      "fn": "ERC20._mint",
      "offset": [
        6190,
        6191
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "9086": {
      "fn": "ERC20._mint",
      "offset": [
        6194,
        6196
      ],
      "op": "DUP4",
      "path": "42"
    },
    "9087": {
      "fn": "ERC20._mint",
      "offset": [
        6198,
        6204
      ],
      "op": "DUP4",
      "path": "42"
    },
    "9088": {
      "fn": "ERC20._mint",
      "offset": [
        6162,
        6181
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1AAD"
    },
    "9091": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        6162,
        6205
      ],
      "op": "JUMP",
      "path": "42"
    },
    "9092": {
      "fn": "gPHM._add",
      "offset": [
        11723,
        11819
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9093": {
      "fn": "gPHM._add",
      "offset": [
        11781,
        11788
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "9095": {
      "fn": "gPHM._add",
      "offset": [
        11807,
        11812
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 83,
      "value": "0x76E"
    },
    "9098": {
      "fn": "gPHM._add",
      "offset": [
        11811,
        11812
      ],
      "op": "DUP3",
      "path": "45"
    },
    "9099": {
      "fn": "gPHM._add",
      "offset": [
        11807,
        11808
      ],
      "op": "DUP5",
      "path": "45"
    },
    "9100": {
      "fn": "gPHM._add",
      "offset": [
        11807,
        11812
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2ACA"
    },
    "9103": {
      "fn": "gPHM._add",
      "jump": "i",
      "offset": [
        11807,
        11812
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9104": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11086,
        11717
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9105": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11318,
        11330
      ],
      "op": "DUP3",
      "path": "45"
    },
    "9106": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11318,
        11330
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "9107": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11256,
        11273
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "9109": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11256,
        11273
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9110": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11256,
        11273
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9111": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11256,
        11273
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9112": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11352,
        11360
      ],
      "op": "DUP1",
      "path": "45",
      "statement": 84
    },
    "9113": {
      "branch": 120,
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11352,
        11360
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "9114": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11352,
        11387
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x23DB"
    },
    "9117": {
      "branch": 120,
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11352,
        11387
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "9118": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11372
      ],
      "op": "DUP6",
      "path": "45"
    },
    "9119": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11373,
        11380
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x23A9"
    },
    "9122": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11379,
        11380
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "9124": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11373,
        11376
      ],
      "op": "DUP4",
      "path": "45"
    },
    "9125": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11373,
        11380
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2976"
    },
    "9128": {
      "fn": "gPHM._writeCheckpoint",
      "jump": "i",
      "offset": [
        11373,
        11380
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9129": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11373,
        11380
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9130": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11381
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9131": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11381
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "9132": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11381
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9133": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11381
      ],
      "op": "LT",
      "path": "45"
    },
    "9134": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11381
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x23B9"
    },
    "9137": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11381
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "9138": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11381
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x23B9"
    },
    "9141": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11381
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2A0F"
    },
    "9144": {
      "fn": "gPHM._writeCheckpoint",
      "jump": "i",
      "offset": [
        11367,
        11381
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9145": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11381
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9146": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11381
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "9148": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11381
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "9149": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11381
      ],
      "op": "DUP3",
      "path": "45"
    },
    "9150": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11381
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9151": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11381
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "9153": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11381
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9154": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11381
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "9155": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11381
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "9156": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11381
      ],
      "op": "ADD",
      "path": "45"
    },
    "9157": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11387
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "9158": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11387
      ],
      "op": "PUSH5",
      "path": "45",
      "value": "0x100000000"
    },
    "9164": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11387
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9165": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11387
      ],
      "op": "DIV",
      "path": "45"
    },
    "9166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9170": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9172": {
      "op": "SHL"
    },
    "9173": {
      "op": "SUB"
    },
    "9174": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11367,
        11387
      ],
      "op": "AND",
      "path": "45"
    },
    "9175": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11352,
        11387
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x23DE"
    },
    "9178": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11352,
        11387
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9179": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11352,
        11387
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9180": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11363,
        11364
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "9182": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11352,
        11387
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9187": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9189": {
      "op": "SHL"
    },
    "9190": {
      "op": "SUB"
    },
    "9191": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11340,
        11387
      ],
      "op": "AND",
      "path": "45"
    },
    "9192": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11340,
        11387
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "9193": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11340,
        11387
      ],
      "op": "POP",
      "path": "45"
    },
    "9194": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11409,
        11429
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 85,
      "value": "0x23F7"
    },
    "9197": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11412,
        11421
      ],
      "op": "DUP4",
      "path": "45"
    },
    "9198": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11423,
        11428
      ],
      "op": "DUP6",
      "path": "45"
    },
    "9199": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11409,
        11411
      ],
      "op": "DUP8",
      "path": "45"
    },
    "9200": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11409,
        11429
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "9205": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11409,
        11429
      ],
      "op": "AND",
      "path": "45"
    },
    "9206": {
      "fn": "gPHM._writeCheckpoint",
      "jump": "i",
      "offset": [
        11409,
        11429
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9207": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11409,
        11429
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9208": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11397,
        11429
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "9209": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11397,
        11429
      ],
      "op": "POP",
      "path": "45"
    },
    "9210": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11450,
        11451
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "9212": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11444,
        11447
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9213": {
      "branch": 121,
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11444,
        11451
      ],
      "op": "GT",
      "path": "45"
    },
    "9214": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11444,
        11495
      ],
      "op": "DUP1",
      "path": "45"
    },
    "9215": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11444,
        11495
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "9216": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11444,
        11495
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2435"
    },
    "9219": {
      "branch": 121,
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11444,
        11495
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "9220": {
      "op": "POP"
    },
    "9221": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11483,
        11495
      ],
      "op": "NUMBER",
      "path": "45"
    },
    "9222": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11460
      ],
      "op": "DUP7",
      "path": "45"
    },
    "9223": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11461,
        11468
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2411"
    },
    "9226": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11467,
        11468
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "9228": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11461,
        11464
      ],
      "op": "DUP5",
      "path": "45"
    },
    "9229": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11461,
        11468
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2976"
    },
    "9232": {
      "fn": "gPHM._writeCheckpoint",
      "jump": "i",
      "offset": [
        11461,
        11468
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9233": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11461,
        11468
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9234": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11469
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9235": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11469
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "9236": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11469
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9237": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11469
      ],
      "op": "LT",
      "path": "45"
    },
    "9238": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11469
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2421"
    },
    "9241": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11469
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "9242": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11469
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2421"
    },
    "9245": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11469
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2A0F"
    },
    "9248": {
      "fn": "gPHM._writeCheckpoint",
      "jump": "i",
      "offset": [
        11455,
        11469
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9249": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11469
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9250": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11469
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "9252": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11469
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "9253": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11469
      ],
      "op": "DUP3",
      "path": "45"
    },
    "9254": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11469
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9255": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11469
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "9257": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11469
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9258": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11469
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "9259": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11469
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "9260": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11469
      ],
      "op": "ADD",
      "path": "45"
    },
    "9261": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11479
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "9262": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11479
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "9267": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11479
      ],
      "op": "AND",
      "path": "45"
    },
    "9268": {
      "branch": 122,
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11455,
        11495
      ],
      "op": "EQ",
      "path": "45"
    },
    "9269": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11444,
        11495
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9270": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11440,
        11711
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "9271": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11440,
        11711
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2495"
    },
    "9274": {
      "branch": 122,
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11440,
        11711
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "9275": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11534,
        11563
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 86,
      "value": "0x2443"
    },
    "9278": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11553,
        11562
      ],
      "op": "DUP3",
      "path": "45"
    },
    "9279": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11534,
        11552
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2648"
    },
    "9282": {
      "fn": "gPHM._writeCheckpoint",
      "jump": "i",
      "offset": [
        11534,
        11563
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9283": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11534,
        11563
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9284": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11516
      ],
      "op": "DUP7",
      "path": "45"
    },
    "9285": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11517,
        11524
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x244F"
    },
    "9288": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11523,
        11524
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "9290": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11517,
        11520
      ],
      "op": "DUP5",
      "path": "45"
    },
    "9291": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11517,
        11524
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2976"
    },
    "9294": {
      "fn": "gPHM._writeCheckpoint",
      "jump": "i",
      "offset": [
        11517,
        11524
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9295": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11517,
        11524
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9296": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11525
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9297": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11525
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "9298": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11525
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9299": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11525
      ],
      "op": "LT",
      "path": "45"
    },
    "9300": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11525
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x245F"
    },
    "9303": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11525
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "9304": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11525
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x245F"
    },
    "9307": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11525
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2A0F"
    },
    "9310": {
      "fn": "gPHM._writeCheckpoint",
      "jump": "i",
      "offset": [
        11511,
        11525
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9311": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11525
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9312": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11525
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9313": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11525
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "9315": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11525
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9316": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11525
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "9318": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11525
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "9320": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11525
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "9321": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11525
      ],
      "op": "ADD",
      "path": "45"
    },
    "9322": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11531
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "9324": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11531
      ],
      "op": "ADD",
      "path": "45"
    },
    "9325": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11531
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "9327": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11563
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "9330": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11563
      ],
      "op": "EXP",
      "path": "45"
    },
    "9331": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11563
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9332": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11563
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "9333": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11563
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9338": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9340": {
      "op": "SHL"
    },
    "9341": {
      "op": "SUB"
    },
    "9342": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11563
      ],
      "op": "MUL",
      "path": "45"
    },
    "9343": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11563
      ],
      "op": "NOT",
      "path": "45"
    },
    "9344": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11563
      ],
      "op": "AND",
      "path": "45"
    },
    "9345": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11563
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9346": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11563
      ],
      "op": "DUP4",
      "path": "45"
    },
    "9347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9351": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9353": {
      "op": "SHL"
    },
    "9354": {
      "op": "SUB"
    },
    "9355": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11563
      ],
      "op": "AND",
      "path": "45"
    },
    "9356": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11563
      ],
      "op": "MUL",
      "path": "45"
    },
    "9357": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11563
      ],
      "op": "OR",
      "path": "45"
    },
    "9358": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11563
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9359": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11563
      ],
      "op": "SSTORE",
      "path": "45"
    },
    "9360": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11511,
        11563
      ],
      "op": "POP",
      "path": "45"
    },
    "9361": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11440,
        11711
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2500"
    },
    "9364": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11440,
        11711
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9365": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11440,
        11711
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9366": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11599
      ],
      "op": "DUP6",
      "path": "45",
      "statement": 87
    },
    "9367": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "9369": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "9370": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "DUP1",
      "path": "45"
    },
    "9371": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "9373": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "ADD",
      "path": "45"
    },
    "9374": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "9376": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9377": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "DUP1",
      "path": "45"
    },
    "9378": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11628,
        11659
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x24AA"
    },
    "9381": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11646,
        11658
      ],
      "op": "NUMBER",
      "path": "45"
    },
    "9382": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11628,
        11645
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2002"
    },
    "9385": {
      "fn": "gPHM._writeCheckpoint",
      "jump": "i",
      "offset": [
        11628,
        11659
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9386": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11628,
        11659
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9387": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "9392": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "AND",
      "path": "45"
    },
    "9393": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9394": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9395": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "9397": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "ADD",
      "path": "45"
    },
    "9398": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11668,
        11697
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x24BE"
    },
    "9401": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11687,
        11696
      ],
      "op": "DUP6",
      "path": "45"
    },
    "9402": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11668,
        11686
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2648"
    },
    "9405": {
      "fn": "gPHM._writeCheckpoint",
      "jump": "i",
      "offset": [
        11668,
        11697
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9406": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11668,
        11697
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9411": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9413": {
      "op": "SHL"
    },
    "9414": {
      "op": "SUB"
    },
    "9415": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9416": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9417": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "AND",
      "path": "45"
    },
    "9418": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9419": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "9420": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11605,
        11699
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9421": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "DUP3",
      "path": "45"
    },
    "9422": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "9423": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "9425": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9426": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "ADD",
      "path": "45"
    },
    "9427": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "DUP5",
      "path": "45"
    },
    "9428": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "SSTORE",
      "path": "45"
    },
    "9429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9431": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "9432": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "DUP5",
      "path": "45"
    },
    "9433": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9434": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "9436": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "9437": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "DUP5",
      "path": "45"
    },
    "9438": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9439": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "9440": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "DUP4",
      "path": "45"
    },
    "9441": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "9442": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "9443": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9444": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "9445": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "ADD",
      "path": "45"
    },
    "9446": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "9447": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9448": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "9449": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "AND",
      "path": "45"
    },
    "9450": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "PUSH5",
      "path": "45",
      "value": "0x100000000"
    },
    "9456": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "MUL",
      "path": "45"
    },
    "9457": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "9462": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9463": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "9464": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "AND",
      "path": "45"
    },
    "9465": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "9466": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9467": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "9468": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "OR",
      "path": "45"
    },
    "9469": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "9470": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "ADD",
      "path": "45"
    },
    "9471": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11594,
        11700
      ],
      "op": "SSTORE",
      "path": "45"
    },
    "9472": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11440,
        11711
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9473": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11294,
        11717
      ],
      "op": "POP",
      "path": "45"
    },
    "9474": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11086,
        11717
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "9475": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11086,
        11717
      ],
      "op": "POP",
      "path": "45"
    },
    "9476": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11086,
        11717
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "9477": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11086,
        11717
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "9478": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11086,
        11717
      ],
      "op": "POP",
      "path": "45"
    },
    "9479": {
      "fn": "gPHM._writeCheckpoint",
      "offset": [
        11086,
        11717
      ],
      "op": "POP",
      "path": "45"
    },
    "9480": {
      "fn": "gPHM._writeCheckpoint",
      "jump": "o",
      "offset": [
        11086,
        11717
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9481": {
      "fn": "ERC20._burn",
      "offset": [
        6218,
        6604
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9488": {
      "op": "SHL"
    },
    "9489": {
      "op": "SUB"
    },
    "9490": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6306
      ],
      "op": "DUP3",
      "path": "42",
      "statement": 88
    },
    "9491": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6306
      ],
      "op": "AND",
      "path": "42"
    },
    "9492": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6306
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "9494": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6306
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9495": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6306
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9496": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6306
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "9497": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6300
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x3"
    },
    "9499": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6306
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "9501": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6306
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "9502": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6306
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9504": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6306
      ],
      "op": "DUP2",
      "path": "42"
    },
    "9505": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6306
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "9506": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6316
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9507": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6316
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "9508": {
      "fn": "ERC20._burn",
      "offset": [
        6310,
        6316
      ],
      "op": "DUP4",
      "path": "42"
    },
    "9509": {
      "fn": "ERC20._burn",
      "offset": [
        6310,
        6316
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "9510": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6306
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9511": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6316
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2531"
    },
    "9514": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6316
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9515": {
      "fn": "ERC20._burn",
      "offset": [
        6310,
        6316
      ],
      "op": "DUP5",
      "path": "42"
    },
    "9516": {
      "fn": "ERC20._burn",
      "offset": [
        6310,
        6316
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9517": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6316
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x2976"
    },
    "9520": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        6290,
        6316
      ],
      "op": "JUMP",
      "path": "42"
    },
    "9521": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6316
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "9522": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6316
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9523": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6316
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9524": {
      "fn": "ERC20._burn",
      "offset": [
        6290,
        6316
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "9525": {
      "op": "POP"
    },
    "9526": {
      "op": "POP"
    },
    "9527": {
      "fn": "ERC20._burn",
      "offset": [
        6459,
        6471
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 89,
      "value": "0x2"
    },
    "9529": {
      "fn": "ERC20._burn",
      "offset": [
        6459,
        6481
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9530": {
      "fn": "ERC20._burn",
      "offset": [
        6459,
        6481
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "9531": {
      "fn": "ERC20._burn",
      "offset": [
        6459,
        6481
      ],
      "op": "DUP3",
      "path": "42"
    },
    "9532": {
      "fn": "ERC20._burn",
      "offset": [
        6459,
        6481
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9533": {
      "fn": "ERC20._burn",
      "offset": [
        6459,
        6481
      ],
      "op": "SUB",
      "path": "42"
    },
    "9534": {
      "fn": "ERC20._burn",
      "offset": [
        6459,
        6481
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9535": {
      "fn": "ERC20._burn",
      "offset": [
        6459,
        6481
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "9536": {
      "fn": "ERC20._burn",
      "offset": [
        6507,
        6541
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 90,
      "value": "0x40"
    },
    "9538": {
      "fn": "ERC20._burn",
      "offset": [
        6507,
        6541
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9539": {
      "op": "DUP2"
    },
    "9540": {
      "op": "DUP2"
    },
    "9541": {
      "op": "MSTORE"
    },
    "9542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9544": {
      "op": "SWAP1"
    },
    "9545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9551": {
      "op": "SHL"
    },
    "9552": {
      "op": "SUB"
    },
    "9553": {
      "fn": "ERC20._burn",
      "offset": [
        6507,
        6541
      ],
      "op": "DUP5",
      "path": "42"
    },
    "9554": {
      "fn": "ERC20._burn",
      "offset": [
        6507,
        6541
      ],
      "op": "AND",
      "path": "42"
    },
    "9555": {
      "fn": "ERC20._burn",
      "offset": [
        6507,
        6541
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9558": {
      "op": "DUP1"
    },
    "9559": {
      "op": "MLOAD"
    },
    "9560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9562": {
      "op": "PUSH2",
      "value": "0x2B1B"
    },
    "9565": {
      "op": "DUP4"
    },
    "9566": {
      "op": "CODECOPY"
    },
    "9567": {
      "op": "DUP2"
    },
    "9568": {
      "op": "MLOAD"
    },
    "9569": {
      "op": "SWAP2"
    },
    "9570": {
      "op": "MSTORE"
    },
    "9571": {
      "fn": "ERC20._burn",
      "offset": [
        6507,
        6541
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9574": {
      "op": "ADD"
    },
    "9575": {
      "fn": "ERC20._burn",
      "offset": [
        6507,
        6541
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "9577": {
      "fn": "ERC20._burn",
      "offset": [
        6507,
        6541
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "9578": {
      "fn": "ERC20._burn",
      "offset": [
        6507,
        6541
      ],
      "op": "DUP1",
      "path": "42"
    },
    "9579": {
      "fn": "ERC20._burn",
      "offset": [
        6507,
        6541
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "9580": {
      "fn": "ERC20._burn",
      "offset": [
        6507,
        6541
      ],
      "op": "SUB",
      "path": "42"
    },
    "9581": {
      "fn": "ERC20._burn",
      "offset": [
        6507,
        6541
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "9582": {
      "fn": "ERC20._burn",
      "offset": [
        6507,
        6541
      ],
      "op": "LOG3",
      "path": "42"
    },
    "9583": {
      "fn": "ERC20._burn",
      "offset": [
        6552,
        6597
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 91,
      "value": "0x1976"
    },
    "9586": {
      "fn": "ERC20._burn",
      "offset": [
        6572,
        6576
      ],
      "op": "DUP3",
      "path": "42"
    },
    "9587": {
      "fn": "ERC20._burn",
      "offset": [
        6586,
        6587
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "9589": {
      "fn": "ERC20._burn",
      "offset": [
        6590,
        6596
      ],
      "op": "DUP4",
      "path": "42"
    },
    "9590": {
      "fn": "ERC20._burn",
      "offset": [
        6552,
        6571
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1AAD"
    },
    "9593": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        6552,
        6597
      ],
      "op": "JUMP",
      "path": "42"
    },
    "9594": {
      "fn": "gPHM._subtract",
      "offset": [
        11825,
        11926
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9595": {
      "fn": "gPHM._subtract",
      "offset": [
        11888,
        11895
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "9597": {
      "fn": "gPHM._subtract",
      "offset": [
        11914,
        11919
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 92,
      "value": "0x76E"
    },
    "9600": {
      "fn": "gPHM._subtract",
      "offset": [
        11918,
        11919
      ],
      "op": "DUP3",
      "path": "45"
    },
    "9601": {
      "fn": "gPHM._subtract",
      "offset": [
        11914,
        11915
      ],
      "op": "DUP5",
      "path": "45"
    },
    "9602": {
      "fn": "gPHM._subtract",
      "offset": [
        11914,
        11919
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2976"
    },
    "9605": {
      "fn": "gPHM._subtract",
      "jump": "i",
      "offset": [
        11914,
        11919
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9606": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20191,
        21340
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "9607": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20262,
        20276
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "9609": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20262,
        20276
      ],
      "op": "DUP1",
      "path": "30"
    },
    "9610": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20262,
        20276
      ],
      "op": "DUP1",
      "path": "30"
    },
    "9611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9613": {
      "op": "NOT"
    },
    "9614": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20377,
        20378
      ],
      "op": "DUP5",
      "path": "30"
    },
    "9615": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20374,
        20375
      ],
      "op": "DUP7",
      "path": "30"
    },
    "9616": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20367,
        20387
      ],
      "op": "MULMOD",
      "path": "30"
    },
    "9617": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20416,
        20417
      ],
      "op": "DUP5",
      "path": "30"
    },
    "9618": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20413,
        20414
      ],
      "op": "DUP7",
      "path": "30"
    },
    "9619": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20409,
        20418
      ],
      "op": "MUL",
      "path": "30"
    },
    "9620": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20400,
        20418
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "9621": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20400,
        20418
      ],
      "op": "POP",
      "path": "30"
    },
    "9622": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20467,
        20472
      ],
      "op": "DUP3",
      "path": "30"
    },
    "9623": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20463,
        20465
      ],
      "op": "DUP2",
      "path": "30"
    },
    "9624": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20460,
        20473
      ],
      "op": "LT",
      "path": "30"
    },
    "9625": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20452,
        20457
      ],
      "op": "DUP4",
      "path": "30"
    },
    "9626": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20448,
        20450
      ],
      "op": "DUP3",
      "path": "30"
    },
    "9627": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20444,
        20458
      ],
      "op": "SUB",
      "path": "30"
    },
    "9628": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20440,
        20474
      ],
      "op": "SUB",
      "path": "30"
    },
    "9629": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20431,
        20474
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "9630": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20431,
        20474
      ],
      "op": "POP",
      "path": "30"
    },
    "9631": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20431,
        20474
      ],
      "op": "POP",
      "path": "30"
    },
    "9632": {
      "offset": [
        4210,
        4214
      ],
      "op": "PUSH8",
      "path": "30",
      "value": "0xDE0B6B3A7640000"
    },
    "9641": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20498,
        20503
      ],
      "op": "DUP2",
      "path": "30",
      "statement": 93
    },
    "9642": {
      "branch": 130,
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20498,
        20512
      ],
      "op": "LT",
      "path": "30"
    },
    "9643": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20494,
        20586
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x25CA"
    },
    "9646": {
      "branch": 130,
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20494,
        20586
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "9647": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20535,
        20575
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "9649": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20535,
        20575
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "9650": {
      "op": "PUSH4",
      "value": "0x698D9A01"
    },
    "9655": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9657": {
      "op": "SHL"
    },
    "9658": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20535,
        20575
      ],
      "op": "DUP2",
      "path": "30"
    },
    "9659": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20535,
        20575
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "9660": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20535,
        20575
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "9662": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20535,
        20575
      ],
      "op": "DUP2",
      "path": "30"
    },
    "9663": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20535,
        20575
      ],
      "op": "ADD",
      "path": "30"
    },
    "9664": {
      "op": "DUP3"
    },
    "9665": {
      "op": "SWAP1"
    },
    "9666": {
      "op": "MSTORE"
    },
    "9667": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9669": {
      "op": "ADD"
    },
    "9670": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20535,
        20575
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x81D"
    },
    "9673": {
      "op": "JUMP"
    },
    "9674": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20494,
        20586
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "9675": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20596,
        20613
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "9677": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20623,
        20642
      ],
      "op": "DUP1",
      "path": "30"
    },
    "9678": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20701,
        20706
      ],
      "op": "PUSH8",
      "path": "30",
      "value": "0xDE0B6B3A7640000"
    },
    "9687": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20698,
        20699
      ],
      "op": "DUP7",
      "path": "30"
    },
    "9688": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20695,
        20696
      ],
      "op": "DUP9",
      "path": "30"
    },
    "9689": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20688,
        20707
      ],
      "op": "MULMOD",
      "path": "30"
    },
    "9690": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20675,
        20707
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "9691": {
      "op": "POP"
    },
    "9692": {
      "op": "POP"
    },
    "9693": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20749,
        20767
      ],
      "op": "PUSH8",
      "path": "30",
      "value": "0x6F05B59D3B1FFFF"
    },
    "9702": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20735,
        20768
      ],
      "op": "DUP2",
      "path": "30"
    },
    "9703": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20735,
        20768
      ],
      "op": "GT",
      "path": "30"
    },
    "9704": {
      "branch": 131,
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20792,
        20802
      ],
      "op": "DUP3",
      "path": "30"
    },
    "9705": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20788,
        20940
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x2604"
    },
    "9708": {
      "branch": 131,
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20788,
        20940
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "9709": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20873,
        20884
      ],
      "op": "DUP1",
      "path": "30",
      "statement": 94
    },
    "9710": {
      "offset": [
        4210,
        4214
      ],
      "op": "PUSH8",
      "path": "30",
      "value": "0xDE0B6B3A7640000"
    },
    "9719": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20856,
        20861
      ],
      "op": "DUP6",
      "path": "30"
    },
    "9720": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20856,
        20869
      ],
      "op": "DIV",
      "path": "30"
    },
    "9721": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20855,
        20884
      ],
      "op": "ADD",
      "path": "30"
    },
    "9722": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20846,
        20884
      ],
      "op": "SWAP5",
      "path": "30"
    },
    "9723": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20846,
        20884
      ],
      "op": "POP",
      "path": "30"
    },
    "9724": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20902,
        20915
      ],
      "op": "POP",
      "path": "30",
      "statement": 95
    },
    "9725": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20902,
        20915
      ],
      "op": "POP",
      "path": "30"
    },
    "9726": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20902,
        20915
      ],
      "op": "POP",
      "path": "30"
    },
    "9727": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20902,
        20915
      ],
      "op": "POP",
      "path": "30"
    },
    "9728": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20902,
        20915
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x606"
    },
    "9731": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20902,
        20915
      ],
      "op": "JUMP",
      "path": "30"
    },
    "9732": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20788,
        20940
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "9733": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21189,
        21200
      ],
      "op": "PUSH3",
      "path": "30",
      "value": "0x40000"
    },
    "9737": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21061,
        21082
      ],
      "op": "DUP3",
      "path": "30"
    },
    "9738": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21061,
        21082
      ],
      "op": "DUP6",
      "path": "30"
    },
    "9739": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21061,
        21082
      ],
      "op": "SUB",
      "path": "30"
    },
    "9740": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21057,
        21096
      ],
      "op": "DIV",
      "path": "30"
    },
    "9741": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21137,
        21157
      ],
      "op": "SWAP4",
      "path": "30"
    },
    "9742": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21137,
        21157
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "9743": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21137,
        21157
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "9744": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21137,
        21157
      ],
      "op": "GT",
      "path": "30"
    },
    "9745": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21126,
        21158
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "9746": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21126,
        21158
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "9747": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21126,
        21158
      ],
      "op": "SUB",
      "path": "30"
    },
    "9748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9750": {
      "op": "PUSH1",
      "value": "0xEE"
    },
    "9752": {
      "op": "SHL"
    },
    "9753": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21122,
        21206
      ],
      "op": "MUL",
      "path": "30"
    },
    "9754": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21029,
        21228
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "9755": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21029,
        21228
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "9756": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21029,
        21228
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "9757": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21029,
        21228
      ],
      "op": "OR",
      "path": "30"
    },
    "9758": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21250,
        21263
      ],
      "op": "PUSH32",
      "path": "30",
      "value": "0xACCB18165BD6FE31AE1CF318DC5B51EEE0E1BA569B88CD74C1773B91FAC10669"
    },
    "9791": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        21004,
        21281
      ],
      "op": "MUL",
      "path": "30"
    },
    "9792": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20983,
        21324
      ],
      "op": "ADD",
      "path": "30"
    },
    "9793": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20983,
        21324
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "9794": {
      "op": "POP"
    },
    "9795": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20191,
        21340
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "9796": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20191,
        21340
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "9797": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20191,
        21340
      ],
      "op": "POP",
      "path": "30"
    },
    "9798": {
      "fn": "PRBMath.mulDivFixedPoint",
      "offset": [
        20191,
        21340
      ],
      "op": "POP",
      "path": "30"
    },
    "9799": {
      "fn": "PRBMath.mulDivFixedPoint",
      "jump": "o",
      "offset": [
        20191,
        21340
      ],
      "op": "JUMP",
      "path": "30"
    },
    "9800": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1076,
        1268
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "9801": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1133,
        1140
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "9803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9807": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9809": {
      "op": "SHL"
    },
    "9810": {
      "op": "SUB"
    },
    "9811": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1160,
        1186
      ],
      "op": "DUP3",
      "path": "29",
      "statement": 96
    },
    "9812": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1160,
        1186
      ],
      "op": "GT",
      "path": "29"
    },
    "9813": {
      "branch": 137,
      "fn": "SafeCast.toUint224",
      "offset": [
        1160,
        1186
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "9814": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1152,
        1230
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2067"
    },
    "9817": {
      "branch": 137,
      "fn": "SafeCast.toUint224",
      "offset": [
        1152,
        1230
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "9818": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1152,
        1230
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "9820": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1152,
        1230
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "9821": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9825": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9827": {
      "op": "SHL"
    },
    "9828": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1152,
        1230
      ],
      "op": "DUP2",
      "path": "29"
    },
    "9829": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1152,
        1230
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "9830": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9832": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1152,
        1230
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "9834": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1152,
        1230
      ],
      "op": "DUP3",
      "path": "29"
    },
    "9835": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1152,
        1230
      ],
      "op": "ADD",
      "path": "29"
    },
    "9836": {
      "op": "MSTORE"
    },
    "9837": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "9839": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9841": {
      "op": "DUP3"
    },
    "9842": {
      "op": "ADD"
    },
    "9843": {
      "op": "MSTORE"
    },
    "9844": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2032"
    },
    "9877": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9879": {
      "op": "DUP3"
    },
    "9880": {
      "op": "ADD"
    },
    "9881": {
      "op": "MSTORE"
    },
    "9882": {
      "op": "PUSH7",
      "value": "0x32342062697473"
    },
    "9890": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "9892": {
      "op": "SHL"
    },
    "9893": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9895": {
      "op": "DUP3"
    },
    "9896": {
      "op": "ADD"
    },
    "9897": {
      "op": "MSTORE"
    },
    "9898": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9900": {
      "op": "ADD"
    },
    "9901": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1152,
        1230
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x81D"
    },
    "9904": {
      "op": "JUMP"
    },
    "9905": {
      "op": "JUMPDEST"
    },
    "9906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9910": {
      "op": "DUP1"
    },
    "9911": {
      "op": "DUP4"
    },
    "9912": {
      "op": "MSTORE"
    },
    "9913": {
      "op": "DUP4"
    },
    "9914": {
      "op": "MLOAD"
    },
    "9915": {
      "op": "DUP1"
    },
    "9916": {
      "op": "DUP3"
    },
    "9917": {
      "op": "DUP6"
    },
    "9918": {
      "op": "ADD"
    },
    "9919": {
      "op": "MSTORE"
    },
    "9920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9922": {
      "op": "JUMPDEST"
    },
    "9923": {
      "op": "DUP2"
    },
    "9924": {
      "op": "DUP2"
    },
    "9925": {
      "op": "LT"
    },
    "9926": {
      "op": "ISZERO"
    },
    "9927": {
      "op": "PUSH2",
      "value": "0x26DE"
    },
    "9930": {
      "op": "JUMPI"
    },
    "9931": {
      "op": "DUP6"
    },
    "9932": {
      "op": "DUP2"
    },
    "9933": {
      "op": "ADD"
    },
    "9934": {
      "op": "DUP4"
    },
    "9935": {
      "op": "ADD"
    },
    "9936": {
      "op": "MLOAD"
    },
    "9937": {
      "op": "DUP6"
    },
    "9938": {
      "op": "DUP3"
    },
    "9939": {
      "op": "ADD"
    },
    "9940": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9942": {
      "op": "ADD"
    },
    "9943": {
      "op": "MSTORE"
    },
    "9944": {
      "op": "DUP3"
    },
    "9945": {
      "op": "ADD"
    },
    "9946": {
      "op": "PUSH2",
      "value": "0x26C2"
    },
    "9949": {
      "op": "JUMP"
    },
    "9950": {
      "op": "JUMPDEST"
    },
    "9951": {
      "op": "DUP2"
    },
    "9952": {
      "op": "DUP2"
    },
    "9953": {
      "op": "GT"
    },
    "9954": {
      "op": "ISZERO"
    },
    "9955": {
      "op": "PUSH2",
      "value": "0x26F0"
    },
    "9958": {
      "op": "JUMPI"
    },
    "9959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9961": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9963": {
      "op": "DUP4"
    },
    "9964": {
      "op": "DUP8"
    },
    "9965": {
      "op": "ADD"
    },
    "9966": {
      "op": "ADD"
    },
    "9967": {
      "op": "MSTORE"
    },
    "9968": {
      "op": "JUMPDEST"
    },
    "9969": {
      "op": "POP"
    },
    "9970": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9972": {
      "op": "ADD"
    },
    "9973": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9975": {
      "op": "NOT"
    },
    "9976": {
      "op": "AND"
    },
    "9977": {
      "op": "SWAP3"
    },
    "9978": {
      "op": "SWAP1"
    },
    "9979": {
      "op": "SWAP3"
    },
    "9980": {
      "op": "ADD"
    },
    "9981": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9983": {
      "op": "ADD"
    },
    "9984": {
      "op": "SWAP4"
    },
    "9985": {
      "op": "SWAP3"
    },
    "9986": {
      "op": "POP"
    },
    "9987": {
      "op": "POP"
    },
    "9988": {
      "op": "POP"
    },
    "9989": {
      "jump": "o",
      "op": "JUMP"
    },
    "9990": {
      "op": "JUMPDEST"
    },
    "9991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9997": {
      "op": "SHL"
    },
    "9998": {
      "op": "SUB"
    },
    "9999": {
      "op": "DUP2"
    },
    "10000": {
      "op": "AND"
    },
    "10001": {
      "op": "DUP2"
    },
    "10002": {
      "op": "EQ"
    },
    "10003": {
      "op": "PUSH2",
      "value": "0xB1E"
    },
    "10006": {
      "op": "JUMPI"
    },
    "10007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10009": {
      "op": "DUP1"
    },
    "10010": {
      "op": "REVERT"
    },
    "10011": {
      "op": "JUMPDEST"
    },
    "10012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10014": {
      "op": "DUP1"
    },
    "10015": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10017": {
      "op": "DUP4"
    },
    "10018": {
      "op": "DUP6"
    },
    "10019": {
      "op": "SUB"
    },
    "10020": {
      "op": "SLT"
    },
    "10021": {
      "op": "ISZERO"
    },
    "10022": {
      "op": "PUSH2",
      "value": "0x272E"
    },
    "10025": {
      "op": "JUMPI"
    },
    "10026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10028": {
      "op": "DUP1"
    },
    "10029": {
      "op": "REVERT"
    },
    "10030": {
      "op": "JUMPDEST"
    },
    "10031": {
      "op": "DUP3"
    },
    "10032": {
      "op": "CALLDATALOAD"
    },
    "10033": {
      "op": "PUSH2",
      "value": "0x2739"
    },
    "10036": {
      "op": "DUP2"
    },
    "10037": {
      "op": "PUSH2",
      "value": "0x2706"
    },
    "10040": {
      "jump": "i",
      "op": "JUMP"
    },
    "10041": {
      "op": "JUMPDEST"
    },
    "10042": {
      "op": "SWAP5"
    },
    "10043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10045": {
      "op": "SWAP4"
    },
    "10046": {
      "op": "SWAP1"
    },
    "10047": {
      "op": "SWAP4"
    },
    "10048": {
      "op": "ADD"
    },
    "10049": {
      "op": "CALLDATALOAD"
    },
    "10050": {
      "op": "SWAP4"
    },
    "10051": {
      "op": "POP"
    },
    "10052": {
      "op": "POP"
    },
    "10053": {
      "op": "POP"
    },
    "10054": {
      "jump": "o",
      "op": "JUMP"
    },
    "10055": {
      "op": "JUMPDEST"
    },
    "10056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10060": {
      "op": "DUP3"
    },
    "10061": {
      "op": "DUP5"
    },
    "10062": {
      "op": "SUB"
    },
    "10063": {
      "op": "SLT"
    },
    "10064": {
      "op": "ISZERO"
    },
    "10065": {
      "op": "PUSH2",
      "value": "0x2759"
    },
    "10068": {
      "op": "JUMPI"
    },
    "10069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10071": {
      "op": "DUP1"
    },
    "10072": {
      "op": "REVERT"
    },
    "10073": {
      "op": "JUMPDEST"
    },
    "10074": {
      "op": "POP"
    },
    "10075": {
      "op": "CALLDATALOAD"
    },
    "10076": {
      "op": "SWAP2"
    },
    "10077": {
      "op": "SWAP1"
    },
    "10078": {
      "op": "POP"
    },
    "10079": {
      "jump": "o",
      "op": "JUMP"
    },
    "10080": {
      "op": "JUMPDEST"
    },
    "10081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10083": {
      "op": "DUP1"
    },
    "10084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10086": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10088": {
      "op": "DUP5"
    },
    "10089": {
      "op": "DUP7"
    },
    "10090": {
      "op": "SUB"
    },
    "10091": {
      "op": "SLT"
    },
    "10092": {
      "op": "ISZERO"
    },
    "10093": {
      "op": "PUSH2",
      "value": "0x2775"
    },
    "10096": {
      "op": "JUMPI"
    },
    "10097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10099": {
      "op": "DUP1"
    },
    "10100": {
      "op": "REVERT"
    },
    "10101": {
      "op": "JUMPDEST"
    },
    "10102": {
      "op": "DUP4"
    },
    "10103": {
      "op": "CALLDATALOAD"
    },
    "10104": {
      "op": "PUSH2",
      "value": "0x2780"
    },
    "10107": {
      "op": "DUP2"
    },
    "10108": {
      "op": "PUSH2",
      "value": "0x2706"
    },
    "10111": {
      "jump": "i",
      "op": "JUMP"
    },
    "10112": {
      "op": "JUMPDEST"
    },
    "10113": {
      "op": "SWAP3"
    },
    "10114": {
      "op": "POP"
    },
    "10115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10117": {
      "op": "DUP5"
    },
    "10118": {
      "op": "ADD"
    },
    "10119": {
      "op": "CALLDATALOAD"
    },
    "10120": {
      "op": "PUSH2",
      "value": "0x2790"
    },
    "10123": {
      "op": "DUP2"
    },
    "10124": {
      "op": "PUSH2",
      "value": "0x2706"
    },
    "10127": {
      "jump": "i",
      "op": "JUMP"
    },
    "10128": {
      "op": "JUMPDEST"
    },
    "10129": {
      "op": "SWAP3"
    },
    "10130": {
      "op": "SWAP6"
    },
    "10131": {
      "op": "SWAP3"
    },
    "10132": {
      "op": "SWAP5"
    },
    "10133": {
      "op": "POP"
    },
    "10134": {
      "op": "POP"
    },
    "10135": {
      "op": "POP"
    },
    "10136": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10138": {
      "op": "SWAP2"
    },
    "10139": {
      "op": "SWAP1"
    },
    "10140": {
      "op": "SWAP2"
    },
    "10141": {
      "op": "ADD"
    },
    "10142": {
      "op": "CALLDATALOAD"
    },
    "10143": {
      "op": "SWAP1"
    },
    "10144": {
      "jump": "o",
      "op": "JUMP"
    },
    "10145": {
      "op": "JUMPDEST"
    },
    "10146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10150": {
      "op": "DUP3"
    },
    "10151": {
      "op": "DUP5"
    },
    "10152": {
      "op": "SUB"
    },
    "10153": {
      "op": "SLT"
    },
    "10154": {
      "op": "ISZERO"
    },
    "10155": {
      "op": "PUSH2",
      "value": "0x27B3"
    },
    "10158": {
      "op": "JUMPI"
    },
    "10159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10161": {
      "op": "DUP1"
    },
    "10162": {
      "op": "REVERT"
    },
    "10163": {
      "op": "JUMPDEST"
    },
    "10164": {
      "op": "DUP2"
    },
    "10165": {
      "op": "CALLDATALOAD"
    },
    "10166": {
      "op": "PUSH2",
      "value": "0x76E"
    },
    "10169": {
      "op": "DUP2"
    },
    "10170": {
      "op": "PUSH2",
      "value": "0x2706"
    },
    "10173": {
      "jump": "i",
      "op": "JUMP"
    },
    "10174": {
      "op": "JUMPDEST"
    },
    "10175": {
      "op": "DUP1"
    },
    "10176": {
      "op": "CALLDATALOAD"
    },
    "10177": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10179": {
      "op": "DUP2"
    },
    "10180": {
      "op": "AND"
    },
    "10181": {
      "op": "DUP2"
    },
    "10182": {
      "op": "EQ"
    },
    "10183": {
      "op": "PUSH2",
      "value": "0x27CF"
    },
    "10186": {
      "op": "JUMPI"
    },
    "10187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10189": {
      "op": "DUP1"
    },
    "10190": {
      "op": "REVERT"
    },
    "10191": {
      "op": "JUMPDEST"
    },
    "10192": {
      "op": "SWAP2"
    },
    "10193": {
      "op": "SWAP1"
    },
    "10194": {
      "op": "POP"
    },
    "10195": {
      "jump": "o",
      "op": "JUMP"
    },
    "10196": {
      "op": "JUMPDEST"
    },
    "10197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10199": {
      "op": "DUP1"
    },
    "10200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10202": {
      "op": "DUP1"
    },
    "10203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10205": {
      "op": "DUP1"
    },
    "10206": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10208": {
      "op": "DUP8"
    },
    "10209": {
      "op": "DUP10"
    },
    "10210": {
      "op": "SUB"
    },
    "10211": {
      "op": "SLT"
    },
    "10212": {
      "op": "ISZERO"
    },
    "10213": {
      "op": "PUSH2",
      "value": "0x27ED"
    },
    "10216": {
      "op": "JUMPI"
    },
    "10217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10219": {
      "op": "DUP1"
    },
    "10220": {
      "op": "REVERT"
    },
    "10221": {
      "op": "JUMPDEST"
    },
    "10222": {
      "op": "DUP7"
    },
    "10223": {
      "op": "CALLDATALOAD"
    },
    "10224": {
      "op": "PUSH2",
      "value": "0x27F8"
    },
    "10227": {
      "op": "DUP2"
    },
    "10228": {
      "op": "PUSH2",
      "value": "0x2706"
    },
    "10231": {
      "jump": "i",
      "op": "JUMP"
    },
    "10232": {
      "op": "JUMPDEST"
    },
    "10233": {
      "op": "SWAP6"
    },
    "10234": {
      "op": "POP"
    },
    "10235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10237": {
      "op": "DUP8"
    },
    "10238": {
      "op": "ADD"
    },
    "10239": {
      "op": "CALLDATALOAD"
    },
    "10240": {
      "op": "SWAP5"
    },
    "10241": {
      "op": "POP"
    },
    "10242": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10244": {
      "op": "DUP8"
    },
    "10245": {
      "op": "ADD"
    },
    "10246": {
      "op": "CALLDATALOAD"
    },
    "10247": {
      "op": "SWAP4"
    },
    "10248": {
      "op": "POP"
    },
    "10249": {
      "op": "PUSH2",
      "value": "0x2814"
    },
    "10252": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10254": {
      "op": "DUP9"
    },
    "10255": {
      "op": "ADD"
    },
    "10256": {
      "op": "PUSH2",
      "value": "0x27BE"
    },
    "10259": {
      "jump": "i",
      "op": "JUMP"
    },
    "10260": {
      "op": "JUMPDEST"
    },
    "10261": {
      "op": "SWAP3"
    },
    "10262": {
      "op": "POP"
    },
    "10263": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10265": {
      "op": "DUP8"
    },
    "10266": {
      "op": "ADD"
    },
    "10267": {
      "op": "CALLDATALOAD"
    },
    "10268": {
      "op": "SWAP2"
    },
    "10269": {
      "op": "POP"
    },
    "10270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10272": {
      "op": "DUP8"
    },
    "10273": {
      "op": "ADD"
    },
    "10274": {
      "op": "CALLDATALOAD"
    },
    "10275": {
      "op": "SWAP1"
    },
    "10276": {
      "op": "POP"
    },
    "10277": {
      "op": "SWAP3"
    },
    "10278": {
      "op": "SWAP6"
    },
    "10279": {
      "op": "POP"
    },
    "10280": {
      "op": "SWAP3"
    },
    "10281": {
      "op": "SWAP6"
    },
    "10282": {
      "op": "POP"
    },
    "10283": {
      "op": "SWAP3"
    },
    "10284": {
      "op": "SWAP6"
    },
    "10285": {
      "jump": "o",
      "op": "JUMP"
    },
    "10286": {
      "op": "JUMPDEST"
    },
    "10287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10289": {
      "op": "DUP1"
    },
    "10290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10292": {
      "op": "DUP1"
    },
    "10293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10295": {
      "op": "DUP1"
    },
    "10296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10298": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10300": {
      "op": "DUP9"
    },
    "10301": {
      "op": "DUP11"
    },
    "10302": {
      "op": "SUB"
    },
    "10303": {
      "op": "SLT"
    },
    "10304": {
      "op": "ISZERO"
    },
    "10305": {
      "op": "PUSH2",
      "value": "0x2849"
    },
    "10308": {
      "op": "JUMPI"
    },
    "10309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10311": {
      "op": "DUP1"
    },
    "10312": {
      "op": "REVERT"
    },
    "10313": {
      "op": "JUMPDEST"
    },
    "10314": {
      "op": "DUP8"
    },
    "10315": {
      "op": "CALLDATALOAD"
    },
    "10316": {
      "op": "PUSH2",
      "value": "0x2854"
    },
    "10319": {
      "op": "DUP2"
    },
    "10320": {
      "op": "PUSH2",
      "value": "0x2706"
    },
    "10323": {
      "jump": "i",
      "op": "JUMP"
    },
    "10324": {
      "op": "JUMPDEST"
    },
    "10325": {
      "op": "SWAP7"
    },
    "10326": {
      "op": "POP"
    },
    "10327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10329": {
      "op": "DUP9"
    },
    "10330": {
      "op": "ADD"
    },
    "10331": {
      "op": "CALLDATALOAD"
    },
    "10332": {
      "op": "PUSH2",
      "value": "0x2864"
    },
    "10335": {
      "op": "DUP2"
    },
    "10336": {
      "op": "PUSH2",
      "value": "0x2706"
    },
    "10339": {
      "jump": "i",
      "op": "JUMP"
    },
    "10340": {
      "op": "JUMPDEST"
    },
    "10341": {
      "op": "SWAP6"
    },
    "10342": {
      "op": "POP"
    },
    "10343": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10345": {
      "op": "DUP9"
    },
    "10346": {
      "op": "ADD"
    },
    "10347": {
      "op": "CALLDATALOAD"
    },
    "10348": {
      "op": "SWAP5"
    },
    "10349": {
      "op": "POP"
    },
    "10350": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10352": {
      "op": "DUP9"
    },
    "10353": {
      "op": "ADD"
    },
    "10354": {
      "op": "CALLDATALOAD"
    },
    "10355": {
      "op": "SWAP4"
    },
    "10356": {
      "op": "POP"
    },
    "10357": {
      "op": "PUSH2",
      "value": "0x2880"
    },
    "10360": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10362": {
      "op": "DUP10"
    },
    "10363": {
      "op": "ADD"
    },
    "10364": {
      "op": "PUSH2",
      "value": "0x27BE"
    },
    "10367": {
      "jump": "i",
      "op": "JUMP"
    },
    "10368": {
      "op": "JUMPDEST"
    },
    "10369": {
      "op": "SWAP3"
    },
    "10370": {
      "op": "POP"
    },
    "10371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10373": {
      "op": "DUP9"
    },
    "10374": {
      "op": "ADD"
    },
    "10375": {
      "op": "CALLDATALOAD"
    },
    "10376": {
      "op": "SWAP2"
    },
    "10377": {
      "op": "POP"
    },
    "10378": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10380": {
      "op": "DUP9"
    },
    "10381": {
      "op": "ADD"
    },
    "10382": {
      "op": "CALLDATALOAD"
    },
    "10383": {
      "op": "SWAP1"
    },
    "10384": {
      "op": "POP"
    },
    "10385": {
      "op": "SWAP3"
    },
    "10386": {
      "op": "SWAP6"
    },
    "10387": {
      "op": "SWAP9"
    },
    "10388": {
      "op": "SWAP2"
    },
    "10389": {
      "op": "SWAP5"
    },
    "10390": {
      "op": "SWAP8"
    },
    "10391": {
      "op": "POP"
    },
    "10392": {
      "op": "SWAP3"
    },
    "10393": {
      "op": "SWAP6"
    },
    "10394": {
      "op": "POP"
    },
    "10395": {
      "jump": "o",
      "op": "JUMP"
    },
    "10396": {
      "op": "JUMPDEST"
    },
    "10397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10399": {
      "op": "DUP1"
    },
    "10400": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10402": {
      "op": "DUP4"
    },
    "10403": {
      "op": "DUP6"
    },
    "10404": {
      "op": "SUB"
    },
    "10405": {
      "op": "SLT"
    },
    "10406": {
      "op": "ISZERO"
    },
    "10407": {
      "op": "PUSH2",
      "value": "0x28AF"
    },
    "10410": {
      "op": "JUMPI"
    },
    "10411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10413": {
      "op": "DUP1"
    },
    "10414": {
      "op": "REVERT"
    },
    "10415": {
      "op": "JUMPDEST"
    },
    "10416": {
      "op": "DUP3"
    },
    "10417": {
      "op": "CALLDATALOAD"
    },
    "10418": {
      "op": "PUSH2",
      "value": "0x28BA"
    },
    "10421": {
      "op": "DUP2"
    },
    "10422": {
      "op": "PUSH2",
      "value": "0x2706"
    },
    "10425": {
      "jump": "i",
      "op": "JUMP"
    },
    "10426": {
      "op": "JUMPDEST"
    },
    "10427": {
      "op": "SWAP2"
    },
    "10428": {
      "op": "POP"
    },
    "10429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10431": {
      "op": "DUP4"
    },
    "10432": {
      "op": "ADD"
    },
    "10433": {
      "op": "CALLDATALOAD"
    },
    "10434": {
      "op": "PUSH2",
      "value": "0x28CA"
    },
    "10437": {
      "op": "DUP2"
    },
    "10438": {
      "op": "PUSH2",
      "value": "0x2706"
    },
    "10441": {
      "jump": "i",
      "op": "JUMP"
    },
    "10442": {
      "op": "JUMPDEST"
    },
    "10443": {
      "op": "DUP1"
    },
    "10444": {
      "op": "SWAP2"
    },
    "10445": {
      "op": "POP"
    },
    "10446": {
      "op": "POP"
    },
    "10447": {
      "op": "SWAP3"
    },
    "10448": {
      "op": "POP"
    },
    "10449": {
      "op": "SWAP3"
    },
    "10450": {
      "op": "SWAP1"
    },
    "10451": {
      "op": "POP"
    },
    "10452": {
      "jump": "o",
      "op": "JUMP"
    },
    "10453": {
      "op": "JUMPDEST"
    },
    "10454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10456": {
      "op": "DUP1"
    },
    "10457": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10459": {
      "op": "DUP4"
    },
    "10460": {
      "op": "DUP6"
    },
    "10461": {
      "op": "SUB"
    },
    "10462": {
      "op": "SLT"
    },
    "10463": {
      "op": "ISZERO"
    },
    "10464": {
      "op": "PUSH2",
      "value": "0x28E8"
    },
    "10467": {
      "op": "JUMPI"
    },
    "10468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10470": {
      "op": "DUP1"
    },
    "10471": {
      "op": "REVERT"
    },
    "10472": {
      "op": "JUMPDEST"
    },
    "10473": {
      "op": "DUP3"
    },
    "10474": {
      "op": "CALLDATALOAD"
    },
    "10475": {
      "op": "PUSH2",
      "value": "0x28F3"
    },
    "10478": {
      "op": "DUP2"
    },
    "10479": {
      "op": "PUSH2",
      "value": "0x2706"
    },
    "10482": {
      "jump": "i",
      "op": "JUMP"
    },
    "10483": {
      "op": "JUMPDEST"
    },
    "10484": {
      "op": "SWAP2"
    },
    "10485": {
      "op": "POP"
    },
    "10486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10488": {
      "op": "DUP4"
    },
    "10489": {
      "op": "ADD"
    },
    "10490": {
      "op": "CALLDATALOAD"
    },
    "10491": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "10496": {
      "op": "DUP2"
    },
    "10497": {
      "op": "AND"
    },
    "10498": {
      "op": "DUP2"
    },
    "10499": {
      "op": "EQ"
    },
    "10500": {
      "op": "PUSH2",
      "value": "0x28CA"
    },
    "10503": {
      "op": "JUMPI"
    },
    "10504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10506": {
      "op": "DUP1"
    },
    "10507": {
      "op": "REVERT"
    },
    "10508": {
      "op": "JUMPDEST"
    },
    "10509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10511": {
      "op": "DUP2"
    },
    "10512": {
      "op": "DUP2"
    },
    "10513": {
      "op": "SHR"
    },
    "10514": {
      "op": "SWAP1"
    },
    "10515": {
      "op": "DUP3"
    },
    "10516": {
      "op": "AND"
    },
    "10517": {
      "op": "DUP1"
    },
    "10518": {
      "op": "PUSH2",
      "value": "0x2920"
    },
    "10521": {
      "op": "JUMPI"
    },
    "10522": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10524": {
      "op": "DUP3"
    },
    "10525": {
      "op": "AND"
    },
    "10526": {
      "op": "SWAP2"
    },
    "10527": {
      "op": "POP"
    },
    "10528": {
      "op": "JUMPDEST"
    },
    "10529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10531": {
      "op": "DUP3"
    },
    "10532": {
      "op": "LT"
    },
    "10533": {
      "op": "DUP2"
    },
    "10534": {
      "op": "EQ"
    },
    "10535": {
      "op": "ISZERO"
    },
    "10536": {
      "op": "PUSH2",
      "value": "0x2941"
    },
    "10539": {
      "op": "JUMPI"
    },
    "10540": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10545": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10547": {
      "op": "SHL"
    },
    "10548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10550": {
      "op": "MSTORE"
    },
    "10551": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10553": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10555": {
      "op": "MSTORE"
    },
    "10556": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10560": {
      "op": "REVERT"
    },
    "10561": {
      "op": "JUMPDEST"
    },
    "10562": {
      "op": "POP"
    },
    "10563": {
      "op": "SWAP2"
    },
    "10564": {
      "op": "SWAP1"
    },
    "10565": {
      "op": "POP"
    },
    "10566": {
      "jump": "o",
      "op": "JUMP"
    },
    "10567": {
      "op": "JUMPDEST"
    },
    "10568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10572": {
      "op": "DUP3"
    },
    "10573": {
      "op": "DUP5"
    },
    "10574": {
      "op": "SUB"
    },
    "10575": {
      "op": "SLT"
    },
    "10576": {
      "op": "ISZERO"
    },
    "10577": {
      "op": "PUSH2",
      "value": "0x2959"
    },
    "10580": {
      "op": "JUMPI"
    },
    "10581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10583": {
      "op": "DUP1"
    },
    "10584": {
      "op": "REVERT"
    },
    "10585": {
      "op": "JUMPDEST"
    },
    "10586": {
      "op": "POP"
    },
    "10587": {
      "op": "MLOAD"
    },
    "10588": {
      "op": "SWAP2"
    },
    "10589": {
      "op": "SWAP1"
    },
    "10590": {
      "op": "POP"
    },
    "10591": {
      "jump": "o",
      "op": "JUMP"
    },
    "10592": {
      "op": "JUMPDEST"
    },
    "10593": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10598": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10600": {
      "op": "SHL"
    },
    "10601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10603": {
      "op": "MSTORE"
    },
    "10604": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10606": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10608": {
      "op": "MSTORE"
    },
    "10609": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10613": {
      "op": "REVERT"
    },
    "10614": {
      "op": "JUMPDEST"
    },
    "10615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10617": {
      "op": "DUP3"
    },
    "10618": {
      "op": "DUP3"
    },
    "10619": {
      "op": "LT"
    },
    "10620": {
      "op": "ISZERO"
    },
    "10621": {
      "op": "PUSH2",
      "value": "0x2988"
    },
    "10624": {
      "op": "JUMPI"
    },
    "10625": {
      "op": "PUSH2",
      "value": "0x2988"
    },
    "10628": {
      "op": "PUSH2",
      "value": "0x2960"
    },
    "10631": {
      "jump": "i",
      "op": "JUMP"
    },
    "10632": {
      "op": "JUMPDEST"
    },
    "10633": {
      "op": "POP"
    },
    "10634": {
      "op": "SUB"
    },
    "10635": {
      "op": "SWAP1"
    },
    "10636": {
      "jump": "o",
      "op": "JUMP"
    },
    "10637": {
      "op": "JUMPDEST"
    },
    "10638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10642": {
      "op": "DUP3"
    },
    "10643": {
      "op": "DUP5"
    },
    "10644": {
      "op": "SUB"
    },
    "10645": {
      "op": "SLT"
    },
    "10646": {
      "op": "ISZERO"
    },
    "10647": {
      "op": "PUSH2",
      "value": "0x299F"
    },
    "10650": {
      "op": "JUMPI"
    },
    "10651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10653": {
      "op": "DUP1"
    },
    "10654": {
      "op": "REVERT"
    },
    "10655": {
      "op": "JUMPDEST"
    },
    "10656": {
      "op": "DUP2"
    },
    "10657": {
      "op": "MLOAD"
    },
    "10658": {
      "op": "DUP1"
    },
    "10659": {
      "op": "ISZERO"
    },
    "10660": {
      "op": "ISZERO"
    },
    "10661": {
      "op": "DUP2"
    },
    "10662": {
      "op": "EQ"
    },
    "10663": {
      "op": "PUSH2",
      "value": "0x76E"
    },
    "10666": {
      "op": "JUMPI"
    },
    "10667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10669": {
      "op": "DUP1"
    },
    "10670": {
      "op": "REVERT"
    },
    "10671": {
      "op": "JUMPDEST"
    },
    "10672": {
      "op": "PUSH32",
      "value": "0x7068616E746F6D2E636F6E74726163742E726567697374657265640000000000"
    },
    "10705": {
      "op": "DUP2"
    },
    "10706": {
      "op": "MSTORE"
    },
    "10707": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10709": {
      "op": "SWAP2"
    },
    "10710": {
      "op": "SWAP1"
    },
    "10711": {
      "op": "SWAP2"
    },
    "10712": {
      "op": "SHL"
    },
    "10713": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "10726": {
      "op": "NOT"
    },
    "10727": {
      "op": "AND"
    },
    "10728": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "10730": {
      "op": "DUP3"
    },
    "10731": {
      "op": "ADD"
    },
    "10732": {
      "op": "MSTORE"
    },
    "10733": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "10735": {
      "op": "ADD"
    },
    "10736": {
      "op": "SWAP1"
    },
    "10737": {
      "jump": "o",
      "op": "JUMP"
    },
    "10738": {
      "op": "JUMPDEST"
    },
    "10739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10743": {
      "op": "DUP3"
    },
    "10744": {
      "op": "DUP5"
    },
    "10745": {
      "op": "SUB"
    },
    "10746": {
      "op": "SLT"
    },
    "10747": {
      "op": "ISZERO"
    },
    "10748": {
      "op": "PUSH2",
      "value": "0x2A04"
    },
    "10751": {
      "op": "JUMPI"
    },
    "10752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10754": {
      "op": "DUP1"
    },
    "10755": {
      "op": "REVERT"
    },
    "10756": {
      "op": "JUMPDEST"
    },
    "10757": {
      "op": "DUP2"
    },
    "10758": {
      "op": "MLOAD"
    },
    "10759": {
      "op": "PUSH2",
      "value": "0x76E"
    },
    "10762": {
      "op": "DUP2"
    },
    "10763": {
      "op": "PUSH2",
      "value": "0x2706"
    },
    "10766": {
      "jump": "i",
      "op": "JUMP"
    },
    "10767": {
      "op": "JUMPDEST"
    },
    "10768": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10773": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10775": {
      "op": "SHL"
    },
    "10776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10778": {
      "op": "MSTORE"
    },
    "10779": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "10781": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10783": {
      "op": "MSTORE"
    },
    "10784": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10788": {
      "op": "REVERT"
    },
    "10789": {
      "op": "JUMPDEST"
    },
    "10790": {
      "op": "DUP1"
    },
    "10791": {
      "op": "SLOAD"
    },
    "10792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10794": {
      "op": "SWAP1"
    },
    "10795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10797": {
      "op": "DUP2"
    },
    "10798": {
      "op": "DUP2"
    },
    "10799": {
      "op": "SHR"
    },
    "10800": {
      "op": "SWAP1"
    },
    "10801": {
      "op": "DUP1"
    },
    "10802": {
      "op": "DUP4"
    },
    "10803": {
      "op": "AND"
    },
    "10804": {
      "op": "DUP1"
    },
    "10805": {
      "op": "PUSH2",
      "value": "0x2A3F"
    },
    "10808": {
      "op": "JUMPI"
    },
    "10809": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10811": {
      "op": "DUP4"
    },
    "10812": {
      "op": "AND"
    },
    "10813": {
      "op": "SWAP3"
    },
    "10814": {
      "op": "POP"
    },
    "10815": {
      "op": "JUMPDEST"
    },
    "10816": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10818": {
      "op": "DUP1"
    },
    "10819": {
      "op": "DUP5"
    },
    "10820": {
      "op": "LT"
    },
    "10821": {
      "op": "DUP3"
    },
    "10822": {
      "op": "EQ"
    },
    "10823": {
      "op": "ISZERO"
    },
    "10824": {
      "op": "PUSH2",
      "value": "0x2A61"
    },
    "10827": {
      "op": "JUMPI"
    },
    "10828": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10833": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10835": {
      "op": "SHL"
    },
    "10836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10838": {
      "op": "MSTORE"
    },
    "10839": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10841": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10843": {
      "op": "MSTORE"
    },
    "10844": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10848": {
      "op": "REVERT"
    },
    "10849": {
      "op": "JUMPDEST"
    },
    "10850": {
      "op": "DUP2"
    },
    "10851": {
      "op": "DUP1"
    },
    "10852": {
      "op": "ISZERO"
    },
    "10853": {
      "op": "PUSH2",
      "value": "0x2A75"
    },
    "10856": {
      "op": "JUMPI"
    },
    "10857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10859": {
      "op": "DUP2"
    },
    "10860": {
      "op": "EQ"
    },
    "10861": {
      "op": "PUSH2",
      "value": "0x2A86"
    },
    "10864": {
      "op": "JUMPI"
    },
    "10865": {
      "op": "PUSH2",
      "value": "0x2AB2"
    },
    "10868": {
      "op": "JUMP"
    },
    "10869": {
      "op": "JUMPDEST"
    },
    "10870": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10872": {
      "op": "NOT"
    },
    "10873": {
      "op": "DUP7"
    },
    "10874": {
      "op": "AND"
    },
    "10875": {
      "op": "DUP10"
    },
    "10876": {
      "op": "MSTORE"
    },
    "10877": {
      "op": "DUP5"
    },
    "10878": {
      "op": "DUP10"
    },
    "10879": {
      "op": "ADD"
    },
    "10880": {
      "op": "SWAP7"
    },
    "10881": {
      "op": "POP"
    },
    "10882": {
      "op": "PUSH2",
      "value": "0x2AB2"
    },
    "10885": {
      "op": "JUMP"
    },
    "10886": {
      "op": "JUMPDEST"
    },
    "10887": {
      "op": "DUP8"
    },
    "10888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10890": {
      "op": "MSTORE"
    },
    "10891": {
      "op": "DUP2"
    },
    "10892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10894": {
      "op": "KECCAK256"
    },
    "10895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10897": {
      "op": "JUMPDEST"
    },
    "10898": {
      "op": "DUP7"
    },
    "10899": {
      "op": "DUP2"
    },
    "10900": {
      "op": "LT"
    },
    "10901": {
      "op": "ISZERO"
    },
    "10902": {
      "op": "PUSH2",
      "value": "0x2AAA"
    },
    "10905": {
      "op": "JUMPI"
    },
    "10906": {
      "op": "DUP2"
    },
    "10907": {
      "op": "SLOAD"
    },
    "10908": {
      "op": "DUP12"
    },
    "10909": {
      "op": "DUP3"
    },
    "10910": {
      "op": "ADD"
    },
    "10911": {
      "op": "MSTORE"
    },
    "10912": {
      "op": "SWAP1"
    },
    "10913": {
      "op": "DUP6"
    },
    "10914": {
      "op": "ADD"
    },
    "10915": {
      "op": "SWAP1"
    },
    "10916": {
      "op": "DUP4"
    },
    "10917": {
      "op": "ADD"
    },
    "10918": {
      "op": "PUSH2",
      "value": "0x2A91"
    },
    "10921": {
      "op": "JUMP"
    },
    "10922": {
      "op": "JUMPDEST"
    },
    "10923": {
      "op": "POP"
    },
    "10924": {
      "op": "POP"
    },
    "10925": {
      "op": "DUP5"
    },
    "10926": {
      "op": "DUP10"
    },
    "10927": {
      "op": "ADD"
    },
    "10928": {
      "op": "SWAP7"
    },
    "10929": {
      "op": "POP"
    },
    "10930": {
      "op": "JUMPDEST"
    },
    "10931": {
      "op": "POP"
    },
    "10932": {
      "op": "POP"
    },
    "10933": {
      "op": "POP"
    },
    "10934": {
      "op": "POP"
    },
    "10935": {
      "op": "POP"
    },
    "10936": {
      "op": "POP"
    },
    "10937": {
      "op": "SWAP3"
    },
    "10938": {
      "op": "SWAP2"
    },
    "10939": {
      "op": "POP"
    },
    "10940": {
      "op": "POP"
    },
    "10941": {
      "jump": "o",
      "op": "JUMP"
    },
    "10942": {
      "op": "JUMPDEST"
    },
    "10943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10945": {
      "op": "PUSH2",
      "value": "0x76E"
    },
    "10948": {
      "op": "DUP3"
    },
    "10949": {
      "op": "DUP5"
    },
    "10950": {
      "op": "PUSH2",
      "value": "0x2A25"
    },
    "10953": {
      "jump": "i",
      "op": "JUMP"
    },
    "10954": {
      "op": "JUMPDEST"
    },
    "10955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10957": {
      "op": "DUP3"
    },
    "10958": {
      "op": "NOT"
    },
    "10959": {
      "op": "DUP3"
    },
    "10960": {
      "op": "GT"
    },
    "10961": {
      "op": "ISZERO"
    },
    "10962": {
      "op": "PUSH2",
      "value": "0x2ADD"
    },
    "10965": {
      "op": "JUMPI"
    },
    "10966": {
      "op": "PUSH2",
      "value": "0x2ADD"
    },
    "10969": {
      "op": "PUSH2",
      "value": "0x2960"
    },
    "10972": {
      "jump": "i",
      "op": "JUMP"
    },
    "10973": {
      "op": "JUMPDEST"
    },
    "10974": {
      "op": "POP"
    },
    "10975": {
      "op": "ADD"
    },
    "10976": {
      "op": "SWAP1"
    },
    "10977": {
      "jump": "o",
      "op": "JUMP"
    },
    "10978": {
      "op": "JUMPDEST"
    },
    "10979": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10984": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10986": {
      "op": "SHL"
    },
    "10987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10989": {
      "op": "MSTORE"
    },
    "10990": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "10992": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10994": {
      "op": "MSTORE"
    },
    "10995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10999": {
      "op": "REVERT"
    },
    "11000": {
      "op": "JUMPDEST"
    },
    "11001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11003": {
      "op": "DUP3"
    },
    "11004": {
      "op": "PUSH2",
      "value": "0x2B15"
    },
    "11007": {
      "op": "JUMPI"
    },
    "11008": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11013": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11015": {
      "op": "SHL"
    },
    "11016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11018": {
      "op": "MSTORE"
    },
    "11019": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "11021": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11023": {
      "op": "MSTORE"
    },
    "11024": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11028": {
      "op": "REVERT"
    },
    "11029": {
      "op": "JUMPDEST"
    },
    "11030": {
      "op": "POP"
    },
    "11031": {
      "op": "DIV"
    },
    "11032": {
      "op": "SWAP1"
    },
    "11033": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "f0f38f2ab3d9fe974dabe6fd730382b811215544",
  "source": "/* SPDX-License-Identifier: MIT */\npragma solidity =0.8.10;\n\n/* Package Imports */\nimport {ERC20} from \"./SolmateERC20.sol\";\nimport {PRBMathUD60x18} from \"@hifi-finance/prb-math/contracts/PRBMathUD60x18.sol\";\nimport {Math} from \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport {SafeCast} from \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\n/* Internal Imports */\nimport {PhantomStorageMixin} from \"../../mixins/PhantomStorageMixin.sol\";\n\n/* Internal Interface Imports */\nimport {IgPHM} from \"../../../interfaces/core/erc20/IgPHM.sol\";\n\n/**\n * @title gPHM\n * @author PhantomDao Team\n * @notice The Governance Phantom Token\n */\ncontract gPHM is IgPHM, ERC20, PhantomStorageMixin {\n    using PRBMathUD60x18 for uint256;\n\n    bool transfersFrozen = true;\n\n    constructor(address storageFactoryAddress)\n        ERC20(\"Governance Phantom\", \"gPHM\", 18)\n        PhantomStorageMixin(storageFactoryAddress)\n    {\n        return;\n    }\n\n    bytes32 public constant DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address => bool) public isApprovedDelegatee;\n    mapping(address => address) private _delegates;\n    mapping(address => Checkpoint[]) private _checkpoints;\n    Checkpoint[] private _totalSupplyCheckpoints;\n\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint224 votes;\n    }\n\n    //=================================================================================================================\n    // External Functions\n    //=================================================================================================================\n\n    /**\n     * @dev turn on transfers for this token. This is a one-time action.\n     */\n    function enableTransfers() external onlyRegisteredContracts {\n        transfersFrozen = false;\n    }\n\n    /**\n     * @dev add an approved delegate.\n     */\n    function addApprovedDelegatee(address delegatee) external onlyRegisteredContracts {\n        _addApprovedDelegatee(delegatee);\n    }\n\n    //=================================================================================================================\n    // Public Functions\n    //=================================================================================================================\n\n    function delegates(address delegator) public view virtual returns (address delegatee) {\n        address current = _delegates[delegator];\n\n        delegatee = current == address(0) ? delegator : current;\n    }\n\n    function delegate(address delegatee) public virtual {\n        _delegate(msg.sender, delegatee);\n    }\n\n    /**\n     * @dev Gets the current votes balance for `account`\n     */\n    function getVotes(address account) public view virtual override returns (uint256) {\n        uint256 pos = _checkpoints[account].length;\n        return pos == 0 ? 0 : _checkpoints[account][pos - 1].votes;\n    }\n\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        bytes32 structHash = keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry));\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR(), structHash));\n        address signatory = ecrecover(digest, v, r, s);\n\n        require(signatory != address(0), \"ZERO_ADDRESS\");\n\n        // this is reasonably safe from overflow because incrementing `nonces` beyond\n        // 'type(uint256).max' is exceedingly unlikely compared to optimization benefits\n        unchecked {\n            require(nonce == nonces[signatory]++, \"INVALID_NONCE\");\n        }\n\n        require(block.timestamp <= expiry, \"SIGNATURE_EXPIRED\");\n\n        _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @dev Retrieve the number of votes for `account` at the end of `blockNumber`.\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */    \n    function getPastVotes(address account, uint256 blockNumber) public view virtual override returns (uint256 votes) {\n        require(blockNumber < block.number, \"ERC20Votes: block not yet mined\");\n        return _checkpointsLookup(_checkpoints[account], blockNumber);\n    }\n\n    /**\n     * @dev Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances.\n     * It is but NOT the sum of all the delegated votes!\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastTotalSupply(uint256 blockNumber) public view virtual override returns (uint256) {\n        require(blockNumber < block.number, \"ERC20Votes: block not yet mined\");\n        return _checkpointsLookup(_totalSupplyCheckpoints, blockNumber);\n    }\n\n    /**\n     * @notice calculate conversion between an amount of gPHM to (s)PHM\n     * @param amount uint amount of gPHM\n     * @return uint equivalent amount of (s)PHM\n     */\n    function balanceToPHM(uint256 amount) public view returns (uint256) {\n        return amount.mul(sPHM().scalingFactor());\n    }\n\n    /**\n     * @notice calculate conversion between an amount of (s)PHM to gPHM\n     * @param amount uint amount of (s)PHM\n     * @return uint equivalent amount of gPHM\n     */\n    function balanceFromPHM(uint256 amount) public view returns (uint256) {\n        return amount.div(sPHM().scalingFactor());\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {\n        return _checkpoints[account][pos];\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return SafeCast.toUint32(_checkpoints[account].length);\n    }\n\n    //=================================================================================================================\n    // ERC20 Overrides\n    //=================================================================================================================\n\n    /**\n     * @dev prevent more than 4.76% ownership unless you are the treasury\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override(ERC20) {\n        if (transfersFrozen == true) {\n            require(from == address(0) || to == address(0), \"gPHM is not transferable\");\n        } else if (to != address(PhantomVault()) && to != address(0)) {\n            require(\n                PHM().balanceAllDenoms(to) < PHM().maxBalancePerWallet(),\n                \"gPHM transfer blocked due to owning over 4.76% of supply\"\n            );\n        }\n\n        super._afterTokenTransfer(from, to, amount);\n\n        _moveDelegates(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been increased.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        super._mint(account, amount);\n        require(totalSupply() <= type(uint224).max, \"ERC20Votes: total supply risks overflowing votes\");\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _add, amount);\n    }\n\n    function mint(address to, uint256 amount) external onlyRegisteredContracts {\n        _mint(to, amount);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been decreased.\n     */\n    function _burn(address account, uint256 amount) internal virtual override {\n        super._burn(account, amount);\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _subtract, amount);\n    }\n\n    function burn(address account, uint256 amount) external onlyRegisteredContracts {\n        _burn(account, amount);\n    }\n\n    //=================================================================================================================\n    // Internal Functions\n    //=================================================================================================================\n\n    function _addApprovedDelegatee(address delegatee) internal {\n        isApprovedDelegatee[delegatee] = true;\n    }\n\n    function _delegate(address delegator, address delegatee) internal virtual {\n        if (delegator != delegatee && delegatee != address(0)) {\n            require(isApprovedDelegatee[delegatee] == true, \"Can't deletagte to delegatee\");\n        }\n        address currentDelegate = _delegates[delegator];\n\n        _delegates[delegator] = delegatee;\n\n        _moveDelegates(currentDelegate, delegatee, _balanceOf[delegator]);\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n    }\n\n    function _moveDelegates(\n        address src,\n        address dst,\n        uint256 amount\n    ) internal virtual {\n        if (src!= dst&& amount > 0)\n            if (src != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[src], _subtract, amount);\n                emit DelegateVotesChanged(src, oldWeight, newWeight);\n            }\n\n            if (dst != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[dst], _add, amount);\n                emit DelegateVotesChanged(dst, oldWeight, newWeight);\n            }\n    }\n\n    //=================================================================================================================\n    // Private Functions\n    //=================================================================================================================\n\n    /**\n     * @dev Lookup a value in a list of (sorted) checkpoints.\n     */\n    function _checkpointsLookup(Checkpoint[] storage ckpts, uint256 blockNumber) private view returns (uint256) {\n        // We run a binary search to look for the earliest checkpoint taken after `blockNumber`.\n        //\n        // During the loop, the index of the wanted checkpoint remains in the range [low-1, high).\n        // With each iteration, either `low` or `high` is moved towards the middle of the range to maintain the invariant.\n        // - If the middle checkpoint is after `blockNumber`, we look in [low, mid)\n        // - If the middle checkpoint is before or equal to `blockNumber`, we look in [mid+1, high)\n        // Once we reach a single value (when low == high), we've found the right checkpoint at the index high-1, if not\n        // out of bounds (in which case we're looking too far in the past and the result is 0).\n        // Note that if the latest checkpoint available is exactly for `blockNumber`, we end up with an index that is\n        // past the end of the array, so we technically don't find a checkpoint after `blockNumber`, but it works out\n        // the same.\n        uint256 high = ckpts.length;\n        uint256 low = 0;\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (ckpts[mid].fromBlock > blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        return high == 0 ? 0 : ckpts[high - 1].votes;\n    }\n\n    function _writeCheckpoint(\n        Checkpoint[] storage ckpts,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) private returns (uint256 oldWeight, uint256 newWeight) {\n        uint256 pos = ckpts.length;\n        oldWeight = pos == 0 ? 0 : ckpts[pos - 1].votes;\n        newWeight = op(oldWeight, delta);\n\n        if (pos > 0 && ckpts[pos - 1].fromBlock == block.number) {\n            ckpts[pos - 1].votes = SafeCast.toUint224(newWeight);\n        } else {\n            ckpts.push(Checkpoint({fromBlock: SafeCast.toUint32(block.number), votes: SafeCast.toUint224(newWeight)}));\n        }\n    }\n\n    function _add(uint256 a, uint256 b) private pure returns (uint256) {\n        return a + b;\n    }\n\n    function _subtract(uint256 a, uint256 b) private pure returns (uint256) {\n        return a - b;\n    }\n}\n",
  "sourceMap": "533:71:75:-:0;;;;;-1:-1:-1;;;533:71:75;;;;636:11292:45;533:71:75;;;;;;;;-1:-1:-1;;;533:71:75;;;;;636:11292:45;533:71:75;;;;;;;;;-1:-1:-1;533:71:75;636:11292:45;;503:101:75;;;;;;533:71;503:101;:::i;:::-;-1:-1:-1;503:101:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;503:101:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;647:4181:75;;;669:930;;;;;;;;;;;;;;;;;647:4181;;;669:930;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;669:930:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;669:930:75;;;;;;;;;;;;;;;;-1:-1:-1;;;669:930:75;647:4181;;;1613:367;;-1:-1:-1;1613:367:75;;;;;;;;;;;;647:4181;;-1:-1:-1;647:4181:75;;;;1613:367;;;;;;;;;;;;1702:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:367;;;;;;;;;;;;;;;;;;;;;;;;;;647:4181;;;1994:687;;2051:366;;;;;;;;;;;;;647:4181;;;;1994:687;;;;;;;2022:645;;;;;;2051:366;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2022:645;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1994:687;;;647:4181;;;;2695:848;;;;;;;;2721:237;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2695:848;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:4181;;;;3557:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:4181;;3650:434;;;3676:268;;;;;;;;;;;;;647:4181;;;;;3650:434;;;;;;;;3676:268;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3650:434;;;3962:59;;;;;;;;;;;;;;;;;;;;3650:434;;;;;;;;;;;;;;;;;;;;;;;;;;647:4181;;;4098:479;;;;;;;;;;;;;;;647:4181;;;;;4098:479;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:4181;;;;4591:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:4181;;611:4217;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;611:4217:75;;;;;;;;;;;;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2283:41:68;;-1:-1:-1;;732:27:45;;;-1:-1:-1;;732:27:45;755:4;732:27;;;-1:-1:-1;766:169:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1811:292:42;;;;;;;;;;;;-1:-1:-1;;;1811:292:42;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1811:292:42;;;;1924:12;;885:21:45;;1811:292:42;;1924:12;;-1:-1:-1;;1811:292:42;1924:12;:::i;:::-;-1:-1:-1;1946:16:42;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;1972:20:42;;;;;2022:13;2003:32;;2072:24;:22;:24::i;:::-;2045:51;;-1:-1:-1;;1637:1:11;1742:7;:22;-1:-1:-1;2845:15:68;:32;;-1:-1:-1;;;;;;2845:32:68;-1:-1:-1;;;;;2845:32:68;;;;;;;;;;-1:-1:-1;636:11292:45;;5184:453:42;5249:7;5346:95;5479:4;5463:22;;;;;;:::i;:::-;;;;;;;;;;5517:10;;;;;;;;-1:-1:-1;;;5517:10:42;;;;;5314:302;;;;;2191:25:104;;;;2232:18;;2225:34;;;;5507:21:42;2275:18:104;;;2268:34;5550:13:42;2318:18:104;;;2311:34;5593:4:42;2361:19:104;;;2354:61;2163:19;;5314:302:42;;;;;;;;;;;;5287:343;;;;;;5268:362;;5184:453;:::o;636:11292:45:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;636:11292:45;;;-1:-1:-1;636:11292:45;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:290:104;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:104;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:104:o;309:380::-;388:1;384:12;;;;431;;;452:61;;506:4;498:6;494:17;484:27;;452:61;559:2;551:6;548:14;528:18;525:38;522:161;;;605:10;600:3;596:20;593:1;586:31;640:4;637:1;630:15;668:4;665:1;658:15;522:161;;309:380;;;:::o;823:1104::-;953:3;982:1;1015:6;1009:13;1045:3;1067:1;1095:9;1091:2;1087:18;1077:28;;1155:2;1144:9;1140:18;1177;1167:61;;1221:4;1213:6;1209:17;1199:27;;1167:61;1247:2;1295;1287:6;1284:14;1264:18;1261:38;1258:165;;;-1:-1:-1;;;1322:33:104;;1378:4;1375:1;1368:15;1408:4;1329:3;1396:17;1258:165;1439:18;1466:104;;;;1584:1;1579:323;;;;1432:470;;1466:104;-1:-1:-1;;1499:24:104;;1487:37;;1544:16;;;;-1:-1:-1;1466:104:104;;1579:323;770:1;763:14;;;807:4;794:18;;1677:1;1691:165;1705:6;1702:1;1699:13;1691:165;;;1783:14;;1770:11;;;1763:35;1826:16;;;;1720:10;;1691:165;;;1695:3;;1885:6;1880:3;1876:16;1869:23;;1432:470;-1:-1:-1;1918:3:104;;823:1104;-1:-1:-1;;;;;;;;823:1104:104:o;1932:489::-;636:11292:45;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/core/erc20/gPHM.sol",
  "type": "contract"
}