{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "storageFactoryAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "PhantomStorageMixin__ContractNotFoundByAddressOrIsOutdated",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "contractName",
          "type": "bytes32"
        }
      ],
      "name": "PhantomStorageMixin__ContractNotFoundByNameOrIsOutdated",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "PhantomStorageMixin__UserIsNotGuardian",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "NovaMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_NovaNFTs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UST",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_fNovaAmount",
          "type": "uint8"
        }
      ],
      "name": "addAllowList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newSupply",
          "type": "uint256"
        }
      ],
      "name": "adjustNFTSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fNOVAClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isAllowListActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "isClaimedBy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftSaleBegun",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numNovasMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payoutAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint8[]",
          "name": "fNovaPredetermined",
          "type": "uint8[]"
        }
      ],
      "name": "setAllowList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setIsAllowListActive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "inPrice",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "setbaseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "teamMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintStarted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "togglePause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toggleSaleBegun",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toggleTeamMintStarted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "togglefNOVAClaimed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "101": "interfaces/mixins/IPhantomStorageMixin.sol",
    "11": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/security/ReentrancyGuard.sol",
    "52": "contracts/level0/launch/NovaNFT.sol",
    "68": "contracts/mixins/PhantomStorageMixin.sol",
    "75": "contracts/storage/PhantomStorageKeys.sol"
  },
  "ast": {
    "absolutePath": "contracts/level0/launch/NovaNFT.sol",
    "exportedSymbols": {
      "Address": [
        8177
      ],
      "Context": [
        7295
      ],
      "ERC165": [
        7679
      ],
      "ERC721": [
        9011
      ],
      "ERC721Enumerable": [
        9345
      ],
      "IERC165": [
        7323
      ],
      "IERC721": [
        7436
      ],
      "IERC721Enumerable": [
        7657
      ],
      "IERC721Metadata": [
        8202
      ],
      "IERC721Receiver": [
        7312
      ],
      "NovaNFT": [
        9866
      ],
      "Ownable": [
        7628
      ],
      "Pausable": [
        7526
      ],
      "PhantomStorageMixin": [
        14011
      ],
      "Strings": [
        7881
      ]
    },
    "id": 9867,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7275,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "67:23:52"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "Context",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7276,
          "nodeType": "StructuredDocumentation",
          "src": "92:496:52",
          "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
        },
        "fullyImplemented": true,
        "id": 7295,
        "linearizedBaseContracts": [
          7295
        ],
        "name": "Context",
        "nameLocation": "607:7:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7284,
              "nodeType": "Block",
              "src": "683:34:52",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 7281,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "700:3:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 7282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "700:10:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7280,
                  "id": 7283,
                  "nodeType": "Return",
                  "src": "693:17:52"
                }
              ]
            },
            "id": 7285,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "630:10:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "640:2:52"
            },
            "returnParameters": {
              "id": 7280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7279,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7285,
                  "src": "674:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "673:9:52"
            },
            "scope": 7295,
            "src": "621:96:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7293,
              "nodeType": "Block",
              "src": "790:32:52",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 7290,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "807:3:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 7291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "807:8:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 7289,
                  "id": 7292,
                  "nodeType": "Return",
                  "src": "800:15:52"
                }
              ]
            },
            "id": 7294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "732:8:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "740:2:52"
            },
            "returnParameters": {
              "id": 7289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7288,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7294,
                  "src": "774:14:52",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7287,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "773:16:52"
            },
            "scope": 7295,
            "src": "723:99:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 9867,
        "src": "589:235:52",
        "usedErrors": []
      },
      {
        "id": 7296,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "826:23:52"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC721Receiver",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 7297,
          "nodeType": "StructuredDocumentation",
          "src": "851:152:52",
          "text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
        },
        "fullyImplemented": false,
        "id": 7312,
        "linearizedBaseContracts": [
          7312
        ],
        "name": "IERC721Receiver",
        "nameLocation": "1014:15:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 7298,
              "nodeType": "StructuredDocumentation",
              "src": "1036:499:52",
              "text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\ndsadasdasdassa\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
            },
            "functionSelector": "150b7a02",
            "id": 7311,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "1549:16:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7300,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1583:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7311,
                  "src": "1575:16:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1575:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7302,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1609:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7311,
                  "src": "1601:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1601:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7304,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1631:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7311,
                  "src": "1623:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1623:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7306,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1663:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7311,
                  "src": "1648:19:52",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7305,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1648:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1565:108:52"
            },
            "returnParameters": {
              "id": 7310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7309,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7311,
                  "src": "1692:6:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7308,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1692:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1691:8:52"
            },
            "scope": 7312,
            "src": "1540:160:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9867,
        "src": "1004:698:52",
        "usedErrors": []
      },
      {
        "id": 7313,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "1704:23:52"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC165",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 7314,
          "nodeType": "StructuredDocumentation",
          "src": "1729:279:52",
          "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
        },
        "fullyImplemented": false,
        "id": 7323,
        "linearizedBaseContracts": [
          7323
        ],
        "name": "IERC165",
        "nameLocation": "2019:7:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 7315,
              "nodeType": "StructuredDocumentation",
              "src": "2033:340:52",
              "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
            },
            "functionSelector": "01ffc9a7",
            "id": 7322,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2387:17:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7317,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "2412:11:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7322,
                  "src": "2405:18:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7316,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2405:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2404:20:52"
            },
            "returnParameters": {
              "id": 7321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7320,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7322,
                  "src": "2448:4:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7319,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2448:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2447:6:52"
            },
            "scope": 7323,
            "src": "2378:76:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9867,
        "src": "2009:447:52",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7325,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7323,
              "src": "2546:7:52"
            },
            "id": 7326,
            "nodeType": "InheritanceSpecifier",
            "src": "2546:7:52"
          }
        ],
        "canonicalName": "IERC721",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 7324,
          "nodeType": "StructuredDocumentation",
          "src": "2457:67:52",
          "text": " @dev Required interface of an ERC721 compliant contract."
        },
        "fullyImplemented": false,
        "id": 7436,
        "linearizedBaseContracts": [
          7436,
          7323
        ],
        "name": "IERC721",
        "nameLocation": "2535:7:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 7327,
              "nodeType": "StructuredDocumentation",
              "src": "2560:88:52",
              "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
            },
            "id": 7335,
            "name": "Transfer",
            "nameLocation": "2659:8:52",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7329,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2684:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7335,
                  "src": "2668:20:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2668:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7331,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2706:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7335,
                  "src": "2690:18:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2690:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7333,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2726:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7335,
                  "src": "2710:23:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2710:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2667:67:52"
            },
            "src": "2653:82:52"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7336,
              "nodeType": "StructuredDocumentation",
              "src": "2741:94:52",
              "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
            },
            "id": 7344,
            "name": "Approval",
            "nameLocation": "2846:8:52",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7338,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2871:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7344,
                  "src": "2855:21:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2855:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7340,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "2894:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7344,
                  "src": "2878:24:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2878:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7342,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2920:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7344,
                  "src": "2904:23:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2904:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2854:74:52"
            },
            "src": "2840:89:52"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7345,
              "nodeType": "StructuredDocumentation",
              "src": "2935:117:52",
              "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
            },
            "id": 7353,
            "name": "ApprovalForAll",
            "nameLocation": "3063:14:52",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7347,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3094:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7353,
                  "src": "3078:21:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3078:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7349,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3117:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7353,
                  "src": "3101:24:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3101:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7351,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "3132:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7353,
                  "src": "3127:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7350,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3127:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3077:64:52"
            },
            "src": "3057:85:52"
          },
          {
            "documentation": {
              "id": 7354,
              "nodeType": "StructuredDocumentation",
              "src": "3148:76:52",
              "text": " @dev Returns the number of tokens in ``owner``'s account."
            },
            "functionSelector": "70a08231",
            "id": 7361,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3238:9:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7356,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3256:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7361,
                  "src": "3248:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3248:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3247:15:52"
            },
            "returnParameters": {
              "id": 7360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7359,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "3294:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7361,
                  "src": "3286:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7358,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3286:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3285:17:52"
            },
            "scope": 7436,
            "src": "3229:74:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7362,
              "nodeType": "StructuredDocumentation",
              "src": "3309:131:52",
              "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "6352211e",
            "id": 7369,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "3454:7:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7364,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3470:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7369,
                  "src": "3462:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3462:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3461:17:52"
            },
            "returnParameters": {
              "id": 7368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7367,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3510:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7369,
                  "src": "3502:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3502:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3501:15:52"
            },
            "scope": 7436,
            "src": "3445:72:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7370,
              "nodeType": "StructuredDocumentation",
              "src": "3523:690:52",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "42842e0e",
            "id": 7379,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "4227:16:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7372,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4261:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7379,
                  "src": "4253:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4253:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7374,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4283:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7379,
                  "src": "4275:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4275:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7376,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4303:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7379,
                  "src": "4295:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4295:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4243:73:52"
            },
            "returnParameters": {
              "id": 7378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4325:0:52"
            },
            "scope": 7436,
            "src": "4218:108:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7380,
              "nodeType": "StructuredDocumentation",
              "src": "4332:504:52",
              "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "id": 7389,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4850:12:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7382,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4880:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7389,
                  "src": "4872:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4872:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7384,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4902:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7389,
                  "src": "4894:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4894:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7386,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4922:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7389,
                  "src": "4914:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4914:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4862:73:52"
            },
            "returnParameters": {
              "id": 7388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4944:0:52"
            },
            "scope": 7436,
            "src": "4841:104:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7390,
              "nodeType": "StructuredDocumentation",
              "src": "4951:452:52",
              "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 7397,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "5417:7:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7392,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5433:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7397,
                  "src": "5425:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5425:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7394,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5445:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7397,
                  "src": "5437:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5437:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5424:29:52"
            },
            "returnParameters": {
              "id": 7396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5462:0:52"
            },
            "scope": 7436,
            "src": "5408:55:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7398,
              "nodeType": "StructuredDocumentation",
              "src": "5469:139:52",
              "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "081812fc",
            "id": 7405,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "5622:11:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7400,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5642:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7405,
                  "src": "5634:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5634:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5633:17:52"
            },
            "returnParameters": {
              "id": 7404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7403,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5682:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7405,
                  "src": "5674:16:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5674:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5673:18:52"
            },
            "scope": 7436,
            "src": "5613:79:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7406,
              "nodeType": "StructuredDocumentation",
              "src": "5698:309:52",
              "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
            },
            "functionSelector": "a22cb465",
            "id": 7413,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "6021:17:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7408,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6047:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7413,
                  "src": "6039:16:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6039:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7410,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "6062:9:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7413,
                  "src": "6057:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7409,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6057:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6038:34:52"
            },
            "returnParameters": {
              "id": 7412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6081:0:52"
            },
            "scope": 7436,
            "src": "6012:70:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7414,
              "nodeType": "StructuredDocumentation",
              "src": "6088:138:52",
              "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
            },
            "functionSelector": "e985e9c5",
            "id": 7423,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "6240:16:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7416,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "6265:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7423,
                  "src": "6257:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6257:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7418,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6280:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7423,
                  "src": "6272:16:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6272:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6256:33:52"
            },
            "returnParameters": {
              "id": 7422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7421,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7423,
                  "src": "6313:4:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7420,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6313:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6312:6:52"
            },
            "scope": 7436,
            "src": "6231:88:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7424,
              "nodeType": "StructuredDocumentation",
              "src": "6325:556:52",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "b88d4fde",
            "id": 7435,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "6895:16:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7426,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6929:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7435,
                  "src": "6921:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6921:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7428,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6951:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7435,
                  "src": "6943:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6943:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7430,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6971:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7435,
                  "src": "6963:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6963:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7432,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7003:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7435,
                  "src": "6988:19:52",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7431,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6988:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6911:102:52"
            },
            "returnParameters": {
              "id": 7434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7022:0:52"
            },
            "scope": 7436,
            "src": "6886:137:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9867,
        "src": "2525:4500:52",
        "usedErrors": []
      },
      {
        "id": 7437,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "7029:23:52"
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 7439,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7295,
              "src": "7525:7:52"
            },
            "id": 7440,
            "nodeType": "InheritanceSpecifier",
            "src": "7525:7:52"
          }
        ],
        "canonicalName": "Pausable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7438,
          "nodeType": "StructuredDocumentation",
          "src": "7055:439:52",
          "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
        },
        "fullyImplemented": true,
        "id": 7526,
        "linearizedBaseContracts": [
          7526,
          7295
        ],
        "name": "Pausable",
        "nameLocation": "7513:8:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 7441,
              "nodeType": "StructuredDocumentation",
              "src": "7539:73:52",
              "text": " @dev Emitted when the pause is triggered by `account`."
            },
            "id": 7445,
            "name": "Paused",
            "nameLocation": "7623:6:52",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7443,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7638:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7445,
                  "src": "7630:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7630:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7629:17:52"
            },
            "src": "7617:30:52"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7446,
              "nodeType": "StructuredDocumentation",
              "src": "7653:70:52",
              "text": " @dev Emitted when the pause is lifted by `account`."
            },
            "id": 7450,
            "name": "Unpaused",
            "nameLocation": "7734:8:52",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7448,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7751:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7450,
                  "src": "7743:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7743:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7742:17:52"
            },
            "src": "7728:32:52"
          },
          {
            "constant": false,
            "id": 7452,
            "mutability": "mutable",
            "name": "_paused",
            "nameLocation": "7779:7:52",
            "nodeType": "VariableDeclaration",
            "scope": 7526,
            "src": "7766:20:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 7451,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "7766:4:52",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 7460,
              "nodeType": "Block",
              "src": "7879:32:52",
              "statements": [
                {
                  "expression": {
                    "id": 7458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7456,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7452,
                      "src": "7889:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 7457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7899:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7889:15:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7459,
                  "nodeType": "ExpressionStatement",
                  "src": "7889:15:52"
                }
              ]
            },
            "documentation": {
              "id": 7453,
              "nodeType": "StructuredDocumentation",
              "src": "7793:67:52",
              "text": " @dev Initializes the contract in unpaused state."
            },
            "id": 7461,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7876:2:52"
            },
            "returnParameters": {
              "id": 7455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7879:0:52"
            },
            "scope": 7526,
            "src": "7865:46:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7469,
              "nodeType": "Block",
              "src": "8059:31:52",
              "statements": [
                {
                  "expression": {
                    "id": 7467,
                    "name": "_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7452,
                    "src": "8076:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7466,
                  "id": 7468,
                  "nodeType": "Return",
                  "src": "8069:14:52"
                }
              ]
            },
            "documentation": {
              "id": 7462,
              "nodeType": "StructuredDocumentation",
              "src": "7917:84:52",
              "text": " @dev Returns true if the contract is paused, and false otherwise."
            },
            "functionSelector": "5c975abb",
            "id": 7470,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nameLocation": "8015:6:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8021:2:52"
            },
            "returnParameters": {
              "id": 7466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7465,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7470,
                  "src": "8053:4:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7464,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8053:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8052:6:52"
            },
            "scope": 7526,
            "src": "8006:84:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7481,
              "nodeType": "Block",
              "src": "8301:66:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8319:9:52",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7474,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7470,
                            "src": "8320:6:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 7475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8320:8:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "id": 7477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8330:18:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        },
                        "value": "Pausable: paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        }
                      ],
                      "id": 7473,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8311:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8311:38:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7479,
                  "nodeType": "ExpressionStatement",
                  "src": "8311:38:52"
                },
                {
                  "id": 7480,
                  "nodeType": "PlaceholderStatement",
                  "src": "8359:1:52"
                }
              ]
            },
            "documentation": {
              "id": 7471,
              "nodeType": "StructuredDocumentation",
              "src": "8096:175:52",
              "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
            },
            "id": 7482,
            "name": "whenNotPaused",
            "nameLocation": "8285:13:52",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8298:2:52"
            },
            "src": "8276:91:52",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7492,
              "nodeType": "Block",
              "src": "8567:69:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7486,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7470,
                          "src": "8585:6:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 7487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8585:8:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "id": 7488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8595:22:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        },
                        "value": "Pausable: not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        }
                      ],
                      "id": 7485,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8577:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8577:41:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7490,
                  "nodeType": "ExpressionStatement",
                  "src": "8577:41:52"
                },
                {
                  "id": 7491,
                  "nodeType": "PlaceholderStatement",
                  "src": "8628:1:52"
                }
              ]
            },
            "documentation": {
              "id": 7483,
              "nodeType": "StructuredDocumentation",
              "src": "8373:167:52",
              "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
            },
            "id": 7493,
            "name": "whenPaused",
            "nameLocation": "8554:10:52",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8564:2:52"
            },
            "src": "8545:91:52",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7508,
              "nodeType": "Block",
              "src": "8820:66:52",
              "statements": [
                {
                  "expression": {
                    "id": 7501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7499,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7452,
                      "src": "8830:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 7500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8840:4:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8830:14:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7502,
                  "nodeType": "ExpressionStatement",
                  "src": "8830:14:52"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7504,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7285,
                          "src": "8866:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 7505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8866:12:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7503,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7445,
                      "src": "8859:6:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8859:20:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7507,
                  "nodeType": "EmitStatement",
                  "src": "8854:25:52"
                }
              ]
            },
            "documentation": {
              "id": 7494,
              "nodeType": "StructuredDocumentation",
              "src": "8642:124:52",
              "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
            },
            "id": 7509,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7497,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7496,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7482,
                  "src": "8806:13:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "8806:13:52"
              }
            ],
            "name": "_pause",
            "nameLocation": "8780:6:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8786:2:52"
            },
            "returnParameters": {
              "id": 7498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8820:0:52"
            },
            "scope": 7526,
            "src": "8771:115:52",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7524,
              "nodeType": "Block",
              "src": "9066:69:52",
              "statements": [
                {
                  "expression": {
                    "id": 7517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7515,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7452,
                      "src": "9076:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 7516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9086:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "9076:15:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7518,
                  "nodeType": "ExpressionStatement",
                  "src": "9076:15:52"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7520,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7285,
                          "src": "9115:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 7521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9115:12:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7519,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7450,
                      "src": "9106:8:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9106:22:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7523,
                  "nodeType": "EmitStatement",
                  "src": "9101:27:52"
                }
              ]
            },
            "documentation": {
              "id": 7510,
              "nodeType": "StructuredDocumentation",
              "src": "8892:121:52",
              "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
            },
            "id": 7525,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7513,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7512,
                  "name": "whenPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7493,
                  "src": "9055:10:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "9055:10:52"
              }
            ],
            "name": "_unpause",
            "nameLocation": "9027:8:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9035:2:52"
            },
            "returnParameters": {
              "id": 7514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9066:0:52"
            },
            "scope": 7526,
            "src": "9018:117:52",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 9867,
        "src": "7495:1642:52",
        "usedErrors": []
      },
      {
        "id": 7527,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "9194:23:52"
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 7529,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7295,
              "src": "9744:7:52"
            },
            "id": 7530,
            "nodeType": "InheritanceSpecifier",
            "src": "9744:7:52"
          }
        ],
        "canonicalName": "Ownable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7528,
          "nodeType": "StructuredDocumentation",
          "src": "9220:494:52",
          "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
        },
        "fullyImplemented": true,
        "id": 7628,
        "linearizedBaseContracts": [
          7628,
          7295
        ],
        "name": "Ownable",
        "nameLocation": "9733:7:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7532,
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "9774:6:52",
            "nodeType": "VariableDeclaration",
            "scope": 7628,
            "src": "9758:22:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7531,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "9758:7:52",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 7538,
            "name": "OwnershipTransferred",
            "nameLocation": "9793:20:52",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7534,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nameLocation": "9830:13:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7538,
                  "src": "9814:29:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9814:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7536,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "9861:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7538,
                  "src": "9845:24:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9845:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9813:57:52"
            },
            "src": "9787:84:52"
          },
          {
            "body": {
              "id": 7547,
              "nodeType": "Block",
              "src": "9987:40:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7543,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7285,
                          "src": "10007:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 7544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10007:12:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7542,
                      "name": "_setOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7627,
                      "src": "9997:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9997:23:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7546,
                  "nodeType": "ExpressionStatement",
                  "src": "9997:23:52"
                }
              ]
            },
            "documentation": {
              "id": 7539,
              "nodeType": "StructuredDocumentation",
              "src": "9877:91:52",
              "text": " @dev Initializes the contract setting the deployer as the initial owner."
            },
            "id": 7548,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9984:2:52"
            },
            "returnParameters": {
              "id": 7541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9987:0:52"
            },
            "scope": 7628,
            "src": "9973:54:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7556,
              "nodeType": "Block",
              "src": "10158:30:52",
              "statements": [
                {
                  "expression": {
                    "id": 7554,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7532,
                    "src": "10175:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7553,
                  "id": 7555,
                  "nodeType": "Return",
                  "src": "10168:13:52"
                }
              ]
            },
            "documentation": {
              "id": 7549,
              "nodeType": "StructuredDocumentation",
              "src": "10033:65:52",
              "text": " @dev Returns the address of the current owner."
            },
            "functionSelector": "8da5cb5b",
            "id": 7557,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "10112:5:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10117:2:52"
            },
            "returnParameters": {
              "id": 7553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7552,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7557,
                  "src": "10149:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10149:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10148:9:52"
            },
            "scope": 7628,
            "src": "10103:85:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7570,
              "nodeType": "Block",
              "src": "10297:96:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7561,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7557,
                            "src": "10315:5:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 7562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10315:7:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7563,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7285,
                            "src": "10326:10:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 7564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10326:12:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10315:23:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 7566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10340:34:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "id": 7560,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10307:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10307:68:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7568,
                  "nodeType": "ExpressionStatement",
                  "src": "10307:68:52"
                },
                {
                  "id": 7569,
                  "nodeType": "PlaceholderStatement",
                  "src": "10385:1:52"
                }
              ]
            },
            "documentation": {
              "id": 7558,
              "nodeType": "StructuredDocumentation",
              "src": "10194:77:52",
              "text": " @dev Throws if called by any account other than the owner."
            },
            "id": 7571,
            "name": "onlyOwner",
            "nameLocation": "10285:9:52",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10294:2:52"
            },
            "src": "10276:117:52",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7584,
              "nodeType": "Block",
              "src": "10789:38:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 7580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10817:1:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 7579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10809:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7578,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10809:7:52",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10809:10:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7577,
                      "name": "_setOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7627,
                      "src": "10799:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10799:21:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7583,
                  "nodeType": "ExpressionStatement",
                  "src": "10799:21:52"
                }
              ]
            },
            "documentation": {
              "id": 7572,
              "nodeType": "StructuredDocumentation",
              "src": "10399:331:52",
              "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
            },
            "functionSelector": "715018a6",
            "id": 7585,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7575,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7574,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7571,
                  "src": "10779:9:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "10779:9:52"
              }
            ],
            "name": "renounceOwnership",
            "nameLocation": "10744:17:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10761:2:52"
            },
            "returnParameters": {
              "id": 7576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10789:0:52"
            },
            "scope": 7628,
            "src": "10735:92:52",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7607,
              "nodeType": "Block",
              "src": "11046:119:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7594,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7588,
                          "src": "11064:8:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11084:1:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11076:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7595,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11076:7:52",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11076:10:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11064:22:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                        "id": 7600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11088:40:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        },
                        "value": "Ownable: new owner is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        }
                      ],
                      "id": 7593,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11056:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11056:73:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7602,
                  "nodeType": "ExpressionStatement",
                  "src": "11056:73:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7604,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7588,
                        "src": "11149:8:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7603,
                      "name": "_setOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7627,
                      "src": "11139:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11139:19:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7606,
                  "nodeType": "ExpressionStatement",
                  "src": "11139:19:52"
                }
              ]
            },
            "documentation": {
              "id": 7586,
              "nodeType": "StructuredDocumentation",
              "src": "10833:138:52",
              "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
            },
            "functionSelector": "f2fde38b",
            "id": 7608,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7591,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7590,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7571,
                  "src": "11036:9:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "11036:9:52"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "10985:17:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7588,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "11011:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7608,
                  "src": "11003:16:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11003:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11002:18:52"
            },
            "returnParameters": {
              "id": 7592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11046:0:52"
            },
            "scope": 7628,
            "src": "10976:189:52",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7626,
              "nodeType": "Block",
              "src": "11216:124:52",
              "statements": [
                {
                  "assignments": [
                    7614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7614,
                      "mutability": "mutable",
                      "name": "oldOwner",
                      "nameLocation": "11234:8:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 7626,
                      "src": "11226:16:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7613,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11226:7:52",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7616,
                  "initialValue": {
                    "id": 7615,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7532,
                    "src": "11245:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11226:25:52"
                },
                {
                  "expression": {
                    "id": 7619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7617,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7532,
                      "src": "11261:6:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7618,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7610,
                      "src": "11270:8:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11261:17:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7620,
                  "nodeType": "ExpressionStatement",
                  "src": "11261:17:52"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7622,
                        "name": "oldOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7614,
                        "src": "11314:8:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7623,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7610,
                        "src": "11324:8:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7621,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7538,
                      "src": "11293:20:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 7624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11293:40:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7625,
                  "nodeType": "EmitStatement",
                  "src": "11288:45:52"
                }
              ]
            },
            "id": 7627,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setOwner",
            "nameLocation": "11180:9:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7610,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "11198:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7627,
                  "src": "11190:16:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11190:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11189:18:52"
            },
            "returnParameters": {
              "id": 7612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11216:0:52"
            },
            "scope": 7628,
            "src": "11171:169:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 9867,
        "src": "9715:1627:52",
        "usedErrors": []
      },
      {
        "id": 7629,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "11426:23:52"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7631,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7436,
              "src": "11620:7:52"
            },
            "id": 7632,
            "nodeType": "InheritanceSpecifier",
            "src": "11620:7:52"
          }
        ],
        "canonicalName": "IERC721Enumerable",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 7630,
          "nodeType": "StructuredDocumentation",
          "src": "11452:136:52",
          "text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
        },
        "fullyImplemented": false,
        "id": 7657,
        "linearizedBaseContracts": [
          7657,
          7436,
          7323
        ],
        "name": "IERC721Enumerable",
        "nameLocation": "11599:17:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 7633,
              "nodeType": "StructuredDocumentation",
              "src": "11634:82:52",
              "text": " @dev Returns the total amount of tokens stored by the contract."
            },
            "functionSelector": "18160ddd",
            "id": 7638,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "11730:11:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11741:2:52"
            },
            "returnParameters": {
              "id": 7637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7636,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7638,
                  "src": "11767:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11767:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11766:9:52"
            },
            "scope": 7657,
            "src": "11721:55:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7639,
              "nodeType": "StructuredDocumentation",
              "src": "11782:171:52",
              "text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
            },
            "functionSelector": "2f745c59",
            "id": 7648,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenOfOwnerByIndex",
            "nameLocation": "11967:19:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7641,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11995:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7648,
                  "src": "11987:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7640,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11987:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7643,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "12010:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7648,
                  "src": "12002:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7642,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12002:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11986:30:52"
            },
            "returnParameters": {
              "id": 7647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7646,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12048:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7648,
                  "src": "12040:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12040:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12039:17:52"
            },
            "scope": 7657,
            "src": "11958:99:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7649,
              "nodeType": "StructuredDocumentation",
              "src": "12063:164:52",
              "text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
            },
            "functionSelector": "4f6ccce7",
            "id": 7656,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenByIndex",
            "nameLocation": "12241:12:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7651,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "12262:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7656,
                  "src": "12254:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12254:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12253:15:52"
            },
            "returnParameters": {
              "id": 7655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7654,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7656,
                  "src": "12292:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12292:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12291:9:52"
            },
            "scope": 7657,
            "src": "12232:69:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9867,
        "src": "11589:714:52",
        "usedErrors": []
      },
      {
        "id": 7658,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "12372:23:52"
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 7660,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7323,
              "src": "13003:7:52"
            },
            "id": 7661,
            "nodeType": "InheritanceSpecifier",
            "src": "13003:7:52"
          }
        ],
        "canonicalName": "ERC165",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7659,
          "nodeType": "StructuredDocumentation",
          "src": "12398:576:52",
          "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
        },
        "fullyImplemented": true,
        "id": 7679,
        "linearizedBaseContracts": [
          7679,
          7323
        ],
        "name": "ERC165",
        "nameLocation": "12993:6:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              7322
            ],
            "body": {
              "id": 7677,
              "nodeType": "Block",
              "src": "13169:64:52",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 7675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7670,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7664,
                      "src": "13186:11:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 7672,
                            "name": "IERC165",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7323,
                            "src": "13206:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$7323_$",
                              "typeString": "type(contract IERC165)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$7323_$",
                              "typeString": "type(contract IERC165)"
                            }
                          ],
                          "id": 7671,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "13201:4:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 7673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13201:13:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$7323",
                          "typeString": "type(contract IERC165)"
                        }
                      },
                      "id": 7674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "interfaceId",
                      "nodeType": "MemberAccess",
                      "src": "13201:25:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "13186:40:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7669,
                  "id": 7676,
                  "nodeType": "Return",
                  "src": "13179:47:52"
                }
              ]
            },
            "documentation": {
              "id": 7662,
              "nodeType": "StructuredDocumentation",
              "src": "13017:56:52",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 7678,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "13087:17:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7666,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13145:8:52"
            },
            "parameters": {
              "id": 7665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7664,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "13112:11:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7678,
                  "src": "13105:18:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7663,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "13105:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13104:20:52"
            },
            "returnParameters": {
              "id": 7669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7668,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7678,
                  "src": "13163:4:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7667,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13163:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13162:6:52"
            },
            "scope": 7679,
            "src": "13078:155:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 9867,
        "src": "12975:260:52",
        "usedErrors": []
      },
      {
        "id": 7680,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "13291:23:52"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Strings",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 7681,
          "nodeType": "StructuredDocumentation",
          "src": "13316:34:52",
          "text": " @dev String operations."
        },
        "fullyImplemented": true,
        "id": 7881,
        "linearizedBaseContracts": [
          7881
        ],
        "name": "Strings",
        "nameLocation": "13359:7:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 7684,
            "mutability": "constant",
            "name": "_HEX_SYMBOLS",
            "nameLocation": "13398:12:52",
            "nodeType": "VariableDeclaration",
            "scope": 7881,
            "src": "13373:58:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes16",
              "typeString": "bytes16"
            },
            "typeName": {
              "id": 7682,
              "name": "bytes16",
              "nodeType": "ElementaryTypeName",
              "src": "13373:7:52",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes16",
                "typeString": "bytes16"
              }
            },
            "value": {
              "hexValue": "30313233343536373839616263646566",
              "id": 7683,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "13413:18:52",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
                "typeString": "literal_string \"0123456789abcdef\""
              },
              "value": "0123456789abcdef"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 7762,
              "nodeType": "Block",
              "src": "13604:632:52",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7692,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7687,
                      "src": "13806:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13815:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13806:10:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7698,
                  "nodeType": "IfStatement",
                  "src": "13802:51:52",
                  "trueBody": {
                    "id": 7697,
                    "nodeType": "Block",
                    "src": "13818:35:52",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 7695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13839:3:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                            "typeString": "literal_string \"0\""
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 7691,
                        "id": 7696,
                        "nodeType": "Return",
                        "src": "13832:10:52"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    7700
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7700,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "13870:4:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 7762,
                      "src": "13862:12:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7699,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13862:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7702,
                  "initialValue": {
                    "id": 7701,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7687,
                    "src": "13877:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13862:20:52"
                },
                {
                  "assignments": [
                    7704
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7704,
                      "mutability": "mutable",
                      "name": "digits",
                      "nameLocation": "13900:6:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 7762,
                      "src": "13892:14:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7703,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13892:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7705,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13892:14:52"
                },
                {
                  "body": {
                    "id": 7716,
                    "nodeType": "Block",
                    "src": "13934:57:52",
                    "statements": [
                      {
                        "expression": {
                          "id": 7710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "13948:8:52",
                          "subExpression": {
                            "id": 7709,
                            "name": "digits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7704,
                            "src": "13948:6:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7711,
                        "nodeType": "ExpressionStatement",
                        "src": "13948:8:52"
                      },
                      {
                        "expression": {
                          "id": 7714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7712,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7700,
                            "src": "13970:4:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 7713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13978:2:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "13970:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7715,
                        "nodeType": "ExpressionStatement",
                        "src": "13970:10:52"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7706,
                      "name": "temp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7700,
                      "src": "13923:4:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13931:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13923:9:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7717,
                  "nodeType": "WhileStatement",
                  "src": "13916:75:52"
                },
                {
                  "assignments": [
                    7719
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7719,
                      "mutability": "mutable",
                      "name": "buffer",
                      "nameLocation": "14013:6:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 7762,
                      "src": "14000:19:52",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 7718,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14000:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7724,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7722,
                        "name": "digits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7704,
                        "src": "14032:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "14022:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 7720,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14026:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 7723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14022:17:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14000:39:52"
                },
                {
                  "body": {
                    "id": 7755,
                    "nodeType": "Block",
                    "src": "14068:131:52",
                    "statements": [
                      {
                        "expression": {
                          "id": 7730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7728,
                            "name": "digits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7704,
                            "src": "14082:6:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 7729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14092:1:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "14082:11:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7731,
                        "nodeType": "ExpressionStatement",
                        "src": "14082:11:52"
                      },
                      {
                        "expression": {
                          "id": 7749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 7732,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7719,
                              "src": "14107:6:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 7734,
                            "indexExpression": {
                              "id": 7733,
                              "name": "digits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7704,
                              "src": "14114:6:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14107:14:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 7746,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3438",
                                      "id": 7739,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14137:2:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_48_by_1",
                                        "typeString": "int_const 48"
                                      },
                                      "value": "48"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 7744,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 7742,
                                            "name": "value",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 7687,
                                            "src": "14150:5:52",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "%",
                                          "rightExpression": {
                                            "hexValue": "3130",
                                            "id": 7743,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "14158:2:52",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "src": "14150:10:52",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 7741,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "14142:7:52",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 7740,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "14142:7:52",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 7745,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "14142:19:52",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "14137:24:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 7738,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "14131:5:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 7737,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14131:5:52",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14131:31:52",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 7736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14124:6:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 7735,
                                "name": "bytes1",
                                "nodeType": "ElementaryTypeName",
                                "src": "14124:6:52",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14124:39:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "14107:56:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 7750,
                        "nodeType": "ExpressionStatement",
                        "src": "14107:56:52"
                      },
                      {
                        "expression": {
                          "id": 7753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7751,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7687,
                            "src": "14177:5:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 7752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14186:2:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "14177:11:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7754,
                        "nodeType": "ExpressionStatement",
                        "src": "14177:11:52"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7725,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7687,
                      "src": "14056:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14065:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14056:10:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7756,
                  "nodeType": "WhileStatement",
                  "src": "14049:150:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7759,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7719,
                        "src": "14222:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "14215:6:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 7757,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "14215:6:52",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 7760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14215:14:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 7691,
                  "id": 7761,
                  "nodeType": "Return",
                  "src": "14208:21:52"
                }
              ]
            },
            "documentation": {
              "id": 7685,
              "nodeType": "StructuredDocumentation",
              "src": "13438:90:52",
              "text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
            },
            "id": 7763,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toString",
            "nameLocation": "13542:8:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7687,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "13559:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7763,
                  "src": "13551:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7686,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13551:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13550:15:52"
            },
            "returnParameters": {
              "id": 7691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7690,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7763,
                  "src": "13589:13:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7689,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13589:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13588:15:52"
            },
            "scope": 7881,
            "src": "13533:703:52",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7803,
              "nodeType": "Block",
              "src": "14415:255:52",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7771,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7766,
                      "src": "14429:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14438:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14429:10:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7777,
                  "nodeType": "IfStatement",
                  "src": "14425:54:52",
                  "trueBody": {
                    "id": 7776,
                    "nodeType": "Block",
                    "src": "14441:38:52",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30783030",
                          "id": 7774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14462:6:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
                            "typeString": "literal_string \"0x00\""
                          },
                          "value": "0x00"
                        },
                        "functionReturnParameters": 7770,
                        "id": 7775,
                        "nodeType": "Return",
                        "src": "14455:13:52"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    7779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7779,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "14496:4:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 7803,
                      "src": "14488:12:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7778,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14488:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7781,
                  "initialValue": {
                    "id": 7780,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7766,
                    "src": "14503:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14488:20:52"
                },
                {
                  "assignments": [
                    7783
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7783,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "14526:6:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 7803,
                      "src": "14518:14:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7782,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14518:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7785,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 7784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14535:1:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14518:18:52"
                },
                {
                  "body": {
                    "id": 7796,
                    "nodeType": "Block",
                    "src": "14564:57:52",
                    "statements": [
                      {
                        "expression": {
                          "id": 7790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "14578:8:52",
                          "subExpression": {
                            "id": 7789,
                            "name": "length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7783,
                            "src": "14578:6:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7791,
                        "nodeType": "ExpressionStatement",
                        "src": "14578:8:52"
                      },
                      {
                        "expression": {
                          "id": 7794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7792,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7779,
                            "src": "14600:4:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": ">>=",
                          "rightHandSide": {
                            "hexValue": "38",
                            "id": 7793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14609:1:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8_by_1",
                              "typeString": "int_const 8"
                            },
                            "value": "8"
                          },
                          "src": "14600:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7795,
                        "nodeType": "ExpressionStatement",
                        "src": "14600:10:52"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7786,
                      "name": "temp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7779,
                      "src": "14553:4:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14561:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14553:9:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7797,
                  "nodeType": "WhileStatement",
                  "src": "14546:75:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7799,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7766,
                        "src": "14649:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7800,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7783,
                        "src": "14656:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7798,
                      "name": "toHexString",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7804,
                        7880
                      ],
                      "referencedDeclaration": 7880,
                      "src": "14637:11:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256,uint256) pure returns (string memory)"
                      }
                    },
                    "id": 7801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14637:26:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 7770,
                  "id": 7802,
                  "nodeType": "Return",
                  "src": "14630:33:52"
                }
              ]
            },
            "documentation": {
              "id": 7764,
              "nodeType": "StructuredDocumentation",
              "src": "14242:94:52",
              "text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
            },
            "id": 7804,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toHexString",
            "nameLocation": "14350:11:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7766,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "14370:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7804,
                  "src": "14362:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14362:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14361:15:52"
            },
            "returnParameters": {
              "id": 7770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7769,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7804,
                  "src": "14400:13:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7768,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14400:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14399:15:52"
            },
            "scope": 7881,
            "src": "14341:329:52",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7879,
              "nodeType": "Block",
              "src": "14883:351:52",
              "statements": [
                {
                  "assignments": [
                    7815
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7815,
                      "mutability": "mutable",
                      "name": "buffer",
                      "nameLocation": "14906:6:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 7879,
                      "src": "14893:19:52",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 7814,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14893:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7824,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 7820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 7818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14925:1:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 7819,
                            "name": "length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7809,
                            "src": "14929:6:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14925:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 7821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14938:1:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "14925:14:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "14915:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 7816,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14919:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 7823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14915:25:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14893:47:52"
                },
                {
                  "expression": {
                    "id": 7829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7825,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7815,
                        "src": "14950:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 7827,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 7826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14957:1:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14950:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 7828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14962:3:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                        "typeString": "literal_string \"0\""
                      },
                      "value": "0"
                    },
                    "src": "14950:15:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 7830,
                  "nodeType": "ExpressionStatement",
                  "src": "14950:15:52"
                },
                {
                  "expression": {
                    "id": 7835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7831,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7815,
                        "src": "14975:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 7833,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 7832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14982:1:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14975:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "78",
                      "id": 7834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14987:3:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
                        "typeString": "literal_string \"x\""
                      },
                      "value": "x"
                    },
                    "src": "14975:15:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 7836,
                  "nodeType": "ExpressionStatement",
                  "src": "14975:15:52"
                },
                {
                  "body": {
                    "id": 7865,
                    "nodeType": "Block",
                    "src": "15045:87:52",
                    "statements": [
                      {
                        "expression": {
                          "id": 7859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 7851,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7815,
                              "src": "15059:6:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 7853,
                            "indexExpression": {
                              "id": 7852,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7838,
                              "src": "15066:1:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "15059:9:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 7854,
                              "name": "_HEX_SYMBOLS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7684,
                              "src": "15071:12:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            },
                            "id": 7858,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 7855,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7807,
                                "src": "15084:5:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "hexValue": "307866",
                                "id": 7856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15092:3:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_15_by_1",
                                  "typeString": "int_const 15"
                                },
                                "value": "0xf"
                              },
                              "src": "15084:11:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15071:25:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "15059:37:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 7860,
                        "nodeType": "ExpressionStatement",
                        "src": "15059:37:52"
                      },
                      {
                        "expression": {
                          "id": 7863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7861,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7807,
                            "src": "15110:5:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": ">>=",
                          "rightHandSide": {
                            "hexValue": "34",
                            "id": 7862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15120:1:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "15110:11:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7864,
                        "nodeType": "ExpressionStatement",
                        "src": "15110:11:52"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7845,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7838,
                      "src": "15033:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 7846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15037:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "15033:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7866,
                  "initializationExpression": {
                    "assignments": [
                      7838
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7838,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15013:1:52",
                        "nodeType": "VariableDeclaration",
                        "scope": 7866,
                        "src": "15005:9:52",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7837,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15005:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7844,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 7839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15017:1:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 7840,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7809,
                          "src": "15021:6:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15017:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 7842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15030:1:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "15017:14:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15005:26:52"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 7849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": true,
                      "src": "15040:3:52",
                      "subExpression": {
                        "id": 7848,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7838,
                        "src": "15042:1:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7850,
                    "nodeType": "ExpressionStatement",
                    "src": "15040:3:52"
                  },
                  "nodeType": "ForStatement",
                  "src": "15000:132:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7868,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7807,
                          "src": "15149:5:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15158:1:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15149:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                        "id": 7871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15161:34:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
                          "typeString": "literal_string \"Strings: hex length insufficient\""
                        },
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
                          "typeString": "literal_string \"Strings: hex length insufficient\""
                        }
                      ],
                      "id": 7867,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15141:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15141:55:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7873,
                  "nodeType": "ExpressionStatement",
                  "src": "15141:55:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7876,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7815,
                        "src": "15220:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "15213:6:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 7874,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "15213:6:52",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 7877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15213:14:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 7813,
                  "id": 7878,
                  "nodeType": "Return",
                  "src": "15206:21:52"
                }
              ]
            },
            "documentation": {
              "id": 7805,
              "nodeType": "StructuredDocumentation",
              "src": "14676:112:52",
              "text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
            },
            "id": 7880,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toHexString",
            "nameLocation": "14802:11:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7807,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "14822:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7880,
                  "src": "14814:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14814:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7809,
                  "mutability": "mutable",
                  "name": "length",
                  "nameLocation": "14837:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7880,
                  "src": "14829:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14829:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14813:31:52"
            },
            "returnParameters": {
              "id": 7813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7812,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7880,
                  "src": "14868:13:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7811,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14868:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14867:15:52"
            },
            "scope": 7881,
            "src": "14793:441:52",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 9867,
        "src": "13351:1885:52",
        "usedErrors": []
      },
      {
        "id": 7882,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "15345:23:52"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Address",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 7883,
          "nodeType": "StructuredDocumentation",
          "src": "15370:67:52",
          "text": " @dev Collection of functions related to the address type"
        },
        "fullyImplemented": true,
        "id": 8177,
        "linearizedBaseContracts": [
          8177
        ],
        "name": "Address",
        "nameLocation": "15446:7:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7899,
              "nodeType": "Block",
              "src": "16096:311:52",
              "statements": [
                {
                  "assignments": [
                    7892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7892,
                      "mutability": "mutable",
                      "name": "size",
                      "nameLocation": "16301:4:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 7899,
                      "src": "16293:12:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7891,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16293:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7893,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16293:12:52"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "16324:52:52",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "16338:28:52",
                        "value": {
                          "arguments": [
                            {
                              "name": "account",
                              "nodeType": "YulIdentifier",
                              "src": "16358:7:52"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "16346:11:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16346:20:52"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "16338:4:52"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 7886,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "16358:7:52",
                      "valueSize": 1
                    },
                    {
                      "declaration": 7892,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "16338:4:52",
                      "valueSize": 1
                    }
                  ],
                  "id": 7894,
                  "nodeType": "InlineAssembly",
                  "src": "16315:61:52"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7895,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7892,
                      "src": "16392:4:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16399:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "16392:8:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7890,
                  "id": 7898,
                  "nodeType": "Return",
                  "src": "16385:15:52"
                }
              ]
            },
            "documentation": {
              "id": 7884,
              "nodeType": "StructuredDocumentation",
              "src": "15460:565:52",
              "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
            },
            "id": 7900,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "16039:10:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7886,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "16058:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7900,
                  "src": "16050:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16050:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16049:17:52"
            },
            "returnParameters": {
              "id": 7890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7889,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7900,
                  "src": "16090:4:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7888,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16090:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16089:6:52"
            },
            "scope": 8177,
            "src": "16030:377:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7933,
              "nodeType": "Block",
              "src": "17395:241:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 7911,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "17421:4:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Address_$8177",
                                  "typeString": "library Address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Address_$8177",
                                  "typeString": "library Address"
                                }
                              ],
                              "id": 7910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17413:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7909,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17413:7:52",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17413:13:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 7913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "17413:21:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7914,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7905,
                          "src": "17438:6:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17413:31:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                        "id": 7916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17446:31:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                          "typeString": "literal_string \"Address: insufficient balance\""
                        },
                        "value": "Address: insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                          "typeString": "literal_string \"Address: insufficient balance\""
                        }
                      ],
                      "id": 7908,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17405:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17405:73:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7918,
                  "nodeType": "ExpressionStatement",
                  "src": "17405:73:52"
                },
                {
                  "assignments": [
                    7920,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7920,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "17495:7:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 7933,
                      "src": "17490:12:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7919,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "17490:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 7927,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 7925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17538:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 7921,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7903,
                          "src": "17508:9:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 7922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "17508:14:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 7924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 7923,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7905,
                          "src": "17530:6:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "17508:29:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 7926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17508:33:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17489:52:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7929,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7920,
                        "src": "17559:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                        "id": 7930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17568:60:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                          "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                        },
                        "value": "Address: unable to send value, recipient may have reverted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                          "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                        }
                      ],
                      "id": 7928,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17551:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17551:78:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7932,
                  "nodeType": "ExpressionStatement",
                  "src": "17551:78:52"
                }
              ]
            },
            "documentation": {
              "id": 7901,
              "nodeType": "StructuredDocumentation",
              "src": "16413:906:52",
              "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
            },
            "id": 7934,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendValue",
            "nameLocation": "17333:9:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7903,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "17359:9:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7934,
                  "src": "17343:25:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7902,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17343:15:52",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7905,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "17378:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7934,
                  "src": "17370:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17370:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17342:43:52"
            },
            "returnParameters": {
              "id": 7907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17395:0:52"
            },
            "scope": 8177,
            "src": "17324:312:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7950,
              "nodeType": "Block",
              "src": "18467:84:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7945,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7937,
                        "src": "18497:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7946,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7939,
                        "src": "18505:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
                        "id": 7947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18511:32:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                          "typeString": "literal_string \"Address: low-level call failed\""
                        },
                        "value": "Address: low-level call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                          "typeString": "literal_string \"Address: low-level call failed\""
                        }
                      ],
                      "id": 7944,
                      "name": "functionCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7951,
                        7971
                      ],
                      "referencedDeclaration": 7971,
                      "src": "18484:12:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 7948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18484:60:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 7943,
                  "id": 7949,
                  "nodeType": "Return",
                  "src": "18477:67:52"
                }
              ]
            },
            "documentation": {
              "id": 7935,
              "nodeType": "StructuredDocumentation",
              "src": "17642:731:52",
              "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
            },
            "id": 7951,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCall",
            "nameLocation": "18387:12:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7937,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "18408:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7951,
                  "src": "18400:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18400:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7939,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "18429:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7951,
                  "src": "18416:17:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7938,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "18416:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18399:35:52"
            },
            "returnParameters": {
              "id": 7943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7942,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7951,
                  "src": "18453:12:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7941,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "18453:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18452:14:52"
            },
            "scope": 8177,
            "src": "18378:173:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7970,
              "nodeType": "Block",
              "src": "18920:76:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7964,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7954,
                        "src": "18959:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7965,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7956,
                        "src": "18967:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 7966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18973:1:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 7967,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7958,
                        "src": "18976:12:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 7963,
                      "name": "functionCallWithValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7991,
                        8041
                      ],
                      "referencedDeclaration": 8041,
                      "src": "18937:21:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 7968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18937:52:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 7962,
                  "id": 7969,
                  "nodeType": "Return",
                  "src": "18930:59:52"
                }
              ]
            },
            "documentation": {
              "id": 7952,
              "nodeType": "StructuredDocumentation",
              "src": "18557:211:52",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
            },
            "id": 7971,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCall",
            "nameLocation": "18782:12:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7954,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "18812:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7971,
                  "src": "18804:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18804:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7956,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "18841:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7971,
                  "src": "18828:17:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7955,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "18828:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7958,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "18869:12:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7971,
                  "src": "18855:26:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7957,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "18855:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18794:93:52"
            },
            "returnParameters": {
              "id": 7962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7961,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7971,
                  "src": "18906:12:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7960,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "18906:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18905:14:52"
            },
            "scope": 8177,
            "src": "18773:223:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7990,
              "nodeType": "Block",
              "src": "19501:111:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7984,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7974,
                        "src": "19540:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7985,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7976,
                        "src": "19548:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7986,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7978,
                        "src": "19554:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
                        "id": 7987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19561:43:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                          "typeString": "literal_string \"Address: low-level call with value failed\""
                        },
                        "value": "Address: low-level call with value failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                          "typeString": "literal_string \"Address: low-level call with value failed\""
                        }
                      ],
                      "id": 7983,
                      "name": "functionCallWithValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7991,
                        8041
                      ],
                      "referencedDeclaration": 8041,
                      "src": "19518:21:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 7988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19518:87:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 7982,
                  "id": 7989,
                  "nodeType": "Return",
                  "src": "19511:94:52"
                }
              ]
            },
            "documentation": {
              "id": 7972,
              "nodeType": "StructuredDocumentation",
              "src": "19002:351:52",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
            },
            "id": 7991,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCallWithValue",
            "nameLocation": "19367:21:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7974,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "19406:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7991,
                  "src": "19398:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19398:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7976,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "19435:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7991,
                  "src": "19422:17:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7975,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "19422:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7978,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "19457:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 7991,
                  "src": "19449:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7977,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19449:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19388:80:52"
            },
            "returnParameters": {
              "id": 7982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7981,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7991,
                  "src": "19487:12:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7980,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "19487:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19486:14:52"
            },
            "scope": 8177,
            "src": "19358:254:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8040,
              "nodeType": "Block",
              "src": "20039:320:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 8008,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "20065:4:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Address_$8177",
                                  "typeString": "library Address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Address_$8177",
                                  "typeString": "library Address"
                                }
                              ],
                              "id": 8007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20057:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 8006,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20057:7:52",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20057:13:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 8010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "20057:21:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8011,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7998,
                          "src": "20082:5:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20057:30:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
                        "id": 8013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20089:40:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                          "typeString": "literal_string \"Address: insufficient balance for call\""
                        },
                        "value": "Address: insufficient balance for call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                          "typeString": "literal_string \"Address: insufficient balance for call\""
                        }
                      ],
                      "id": 8005,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20049:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20049:81:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8015,
                  "nodeType": "ExpressionStatement",
                  "src": "20049:81:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8018,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7994,
                            "src": "20159:6:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8017,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7900,
                          "src": "20148:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 8019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20148:18:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "id": 8020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20168:31:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                          "typeString": "literal_string \"Address: call to non-contract\""
                        },
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                          "typeString": "literal_string \"Address: call to non-contract\""
                        }
                      ],
                      "id": 8016,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20140:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20140:60:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8022,
                  "nodeType": "ExpressionStatement",
                  "src": "20140:60:52"
                },
                {
                  "assignments": [
                    8024,
                    8026
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8024,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "20217:7:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 8040,
                      "src": "20212:12:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 8023,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "20212:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 8026,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "20239:10:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 8040,
                      "src": "20226:23:52",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 8025,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "20226:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8033,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8031,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7996,
                        "src": "20279:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 8027,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7994,
                          "src": "20253:6:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "20253:11:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 8030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 8029,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7998,
                          "src": "20272:5:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "20253:25:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 8032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20253:31:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20211:73:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8035,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8024,
                        "src": "20318:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 8036,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8026,
                        "src": "20327:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8037,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8000,
                        "src": "20339:12:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 8034,
                      "name": "verifyCallResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8176,
                      "src": "20301:16:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 8038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20301:51:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 8004,
                  "id": 8039,
                  "nodeType": "Return",
                  "src": "20294:58:52"
                }
              ]
            },
            "documentation": {
              "id": 7992,
              "nodeType": "StructuredDocumentation",
              "src": "19618:237:52",
              "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
            },
            "id": 8041,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCallWithValue",
            "nameLocation": "19869:21:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7994,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "19908:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8041,
                  "src": "19900:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19900:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7996,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "19937:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8041,
                  "src": "19924:17:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7995,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "19924:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7998,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "19959:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8041,
                  "src": "19951:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19951:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8000,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "19988:12:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8041,
                  "src": "19974:26:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7999,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "19974:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19890:116:52"
            },
            "returnParameters": {
              "id": 8004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8003,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8041,
                  "src": "20025:12:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8002,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20025:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20024:14:52"
            },
            "scope": 8177,
            "src": "19860:499:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8057,
              "nodeType": "Block",
              "src": "20636:97:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8052,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8044,
                        "src": "20672:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8053,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8046,
                        "src": "20680:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
                        "id": 8054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20686:39:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                          "typeString": "literal_string \"Address: low-level static call failed\""
                        },
                        "value": "Address: low-level static call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                          "typeString": "literal_string \"Address: low-level static call failed\""
                        }
                      ],
                      "id": 8051,
                      "name": "functionStaticCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8058,
                        8093
                      ],
                      "referencedDeclaration": 8093,
                      "src": "20653:18:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
                      }
                    },
                    "id": 8055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20653:73:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 8050,
                  "id": 8056,
                  "nodeType": "Return",
                  "src": "20646:80:52"
                }
              ]
            },
            "documentation": {
              "id": 8042,
              "nodeType": "StructuredDocumentation",
              "src": "20365:166:52",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
            },
            "id": 8058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionStaticCall",
            "nameLocation": "20545:18:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8044,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "20572:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8058,
                  "src": "20564:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20564:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8046,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "20593:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8058,
                  "src": "20580:17:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8045,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20580:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20563:35:52"
            },
            "returnParameters": {
              "id": 8050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8049,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8058,
                  "src": "20622:12:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8048,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20622:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20621:14:52"
            },
            "scope": 8177,
            "src": "20536:197:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8092,
              "nodeType": "Block",
              "src": "21075:228:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8072,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8061,
                            "src": "21104:6:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8071,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7900,
                          "src": "21093:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 8073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21093:18:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
                        "id": 8074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21113:38:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
                          "typeString": "literal_string \"Address: static call to non-contract\""
                        },
                        "value": "Address: static call to non-contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
                          "typeString": "literal_string \"Address: static call to non-contract\""
                        }
                      ],
                      "id": 8070,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21085:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21085:67:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8076,
                  "nodeType": "ExpressionStatement",
                  "src": "21085:67:52"
                },
                {
                  "assignments": [
                    8078,
                    8080
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8078,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "21169:7:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 8092,
                      "src": "21164:12:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 8077,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "21164:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 8080,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "21191:10:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 8092,
                      "src": "21178:23:52",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 8079,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "21178:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8085,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8083,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8063,
                        "src": "21223:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 8081,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8061,
                        "src": "21205:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 8082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "staticcall",
                      "nodeType": "MemberAccess",
                      "src": "21205:17:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                      }
                    },
                    "id": 8084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21205:23:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21163:65:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8087,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8078,
                        "src": "21262:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 8088,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8080,
                        "src": "21271:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8089,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8065,
                        "src": "21283:12:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 8086,
                      "name": "verifyCallResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8176,
                      "src": "21245:16:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 8090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21245:51:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 8069,
                  "id": 8091,
                  "nodeType": "Return",
                  "src": "21238:58:52"
                }
              ]
            },
            "documentation": {
              "id": 8059,
              "nodeType": "StructuredDocumentation",
              "src": "20739:173:52",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
            },
            "id": 8093,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionStaticCall",
            "nameLocation": "20926:18:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8061,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "20962:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "20954:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20954:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8063,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "20991:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "20978:17:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8062,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20978:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8065,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "21019:12:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "21005:26:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8064,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "21005:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20944:93:52"
            },
            "returnParameters": {
              "id": 8069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8068,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "21061:12:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8067,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "21061:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21060:14:52"
            },
            "scope": 8177,
            "src": "20917:386:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8109,
              "nodeType": "Block",
              "src": "21579:101:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8104,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8096,
                        "src": "21617:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8105,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8098,
                        "src": "21625:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
                        "id": 8106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21631:41:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                          "typeString": "literal_string \"Address: low-level delegate call failed\""
                        },
                        "value": "Address: low-level delegate call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                          "typeString": "literal_string \"Address: low-level delegate call failed\""
                        }
                      ],
                      "id": 8103,
                      "name": "functionDelegateCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8110,
                        8145
                      ],
                      "referencedDeclaration": 8145,
                      "src": "21596:20:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 8107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21596:77:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 8102,
                  "id": 8108,
                  "nodeType": "Return",
                  "src": "21589:84:52"
                }
              ]
            },
            "documentation": {
              "id": 8094,
              "nodeType": "StructuredDocumentation",
              "src": "21309:168:52",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
            },
            "id": 8110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionDelegateCall",
            "nameLocation": "21491:20:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8096,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "21520:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8110,
                  "src": "21512:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21512:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8098,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "21541:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8110,
                  "src": "21528:17:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8097,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "21528:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21511:35:52"
            },
            "returnParameters": {
              "id": 8102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8101,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8110,
                  "src": "21565:12:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8100,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "21565:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21564:14:52"
            },
            "scope": 8177,
            "src": "21482:198:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8144,
              "nodeType": "Block",
              "src": "22021:232:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8124,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8113,
                            "src": "22050:6:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8123,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7900,
                          "src": "22039:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 8125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22039:18:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
                        "id": 8126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22059:40:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
                          "typeString": "literal_string \"Address: delegate call to non-contract\""
                        },
                        "value": "Address: delegate call to non-contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
                          "typeString": "literal_string \"Address: delegate call to non-contract\""
                        }
                      ],
                      "id": 8122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22031:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22031:69:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8128,
                  "nodeType": "ExpressionStatement",
                  "src": "22031:69:52"
                },
                {
                  "assignments": [
                    8130,
                    8132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8130,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "22117:7:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 8144,
                      "src": "22112:12:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 8129,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "22112:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 8132,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "22139:10:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 8144,
                      "src": "22126:23:52",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 8131,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "22126:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8137,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8135,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8115,
                        "src": "22173:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 8133,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8113,
                        "src": "22153:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 8134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "22153:19:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 8136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22153:25:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22111:67:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8139,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8130,
                        "src": "22212:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 8140,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8132,
                        "src": "22221:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8141,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8117,
                        "src": "22233:12:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 8138,
                      "name": "verifyCallResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8176,
                      "src": "22195:16:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 8142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22195:51:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 8121,
                  "id": 8143,
                  "nodeType": "Return",
                  "src": "22188:58:52"
                }
              ]
            },
            "documentation": {
              "id": 8111,
              "nodeType": "StructuredDocumentation",
              "src": "21686:175:52",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
            },
            "id": 8145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionDelegateCall",
            "nameLocation": "21875:20:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8113,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "21913:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8145,
                  "src": "21905:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21905:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8115,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "21942:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8145,
                  "src": "21929:17:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8114,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "21929:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8117,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "21970:12:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8145,
                  "src": "21956:26:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8116,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "21956:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21895:93:52"
            },
            "returnParameters": {
              "id": 8121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8120,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8145,
                  "src": "22007:12:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8119,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22007:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22006:14:52"
            },
            "scope": 8177,
            "src": "21866:387:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8175,
              "nodeType": "Block",
              "src": "22633:532:52",
              "statements": [
                {
                  "condition": {
                    "id": 8157,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8148,
                    "src": "22647:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8173,
                    "nodeType": "Block",
                    "src": "22704:455:52",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 8161,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8150,
                              "src": "22788:10:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 8162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "22788:17:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 8163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22808:1:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "22788:21:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 8171,
                          "nodeType": "Block",
                          "src": "23096:53:52",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 8168,
                                    "name": "errorMessage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8152,
                                    "src": "23121:12:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 8167,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "23114:6:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 8169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23114:20:52",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 8170,
                              "nodeType": "ExpressionStatement",
                              "src": "23114:20:52"
                            }
                          ]
                        },
                        "id": 8172,
                        "nodeType": "IfStatement",
                        "src": "22784:365:52",
                        "trueBody": {
                          "id": 8166,
                          "nodeType": "Block",
                          "src": "22811:279:52",
                          "statements": [
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "22931:145:52",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "22953:40:52",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "returndata",
                                          "nodeType": "YulIdentifier",
                                          "src": "22982:10:52"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "22976:5:52"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22976:17:52"
                                    },
                                    "variables": [
                                      {
                                        "name": "returndata_size",
                                        "nodeType": "YulTypedName",
                                        "src": "22957:15:52",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "23025:2:52",
                                              "type": "",
                                              "value": "32"
                                            },
                                            {
                                              "name": "returndata",
                                              "nodeType": "YulIdentifier",
                                              "src": "23029:10:52"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "23021:3:52"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "23021:19:52"
                                        },
                                        {
                                          "name": "returndata_size",
                                          "nodeType": "YulIdentifier",
                                          "src": "23042:15:52"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "23014:6:52"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "23014:44:52"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "23014:44:52"
                                  }
                                ]
                              },
                              "evmVersion": "istanbul",
                              "externalReferences": [
                                {
                                  "declaration": 8150,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "22982:10:52",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 8150,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "23029:10:52",
                                  "valueSize": 1
                                }
                              ],
                              "id": 8165,
                              "nodeType": "InlineAssembly",
                              "src": "22922:154:52"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 8174,
                  "nodeType": "IfStatement",
                  "src": "22643:516:52",
                  "trueBody": {
                    "id": 8160,
                    "nodeType": "Block",
                    "src": "22656:42:52",
                    "statements": [
                      {
                        "expression": {
                          "id": 8158,
                          "name": "returndata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8150,
                          "src": "22677:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 8156,
                        "id": 8159,
                        "nodeType": "Return",
                        "src": "22670:17:52"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8146,
              "nodeType": "StructuredDocumentation",
              "src": "22259:209:52",
              "text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
            },
            "id": 8176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyCallResult",
            "nameLocation": "22482:16:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8148,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "22513:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8176,
                  "src": "22508:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8147,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22508:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8150,
                  "mutability": "mutable",
                  "name": "returndata",
                  "nameLocation": "22543:10:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8176,
                  "src": "22530:23:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8149,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22530:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8152,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "22577:12:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8176,
                  "src": "22563:26:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8151,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "22563:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22498:97:52"
            },
            "returnParameters": {
              "id": 8156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8155,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8176,
                  "src": "22619:12:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8154,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22619:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22618:14:52"
            },
            "scope": 8177,
            "src": "22473:692:52",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 9867,
        "src": "15438:7729:52",
        "usedErrors": []
      },
      {
        "id": 8178,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "23249:23:52"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8180,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7436,
              "src": "23438:7:52"
            },
            "id": 8181,
            "nodeType": "InheritanceSpecifier",
            "src": "23438:7:52"
          }
        ],
        "canonicalName": "IERC721Metadata",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 8179,
          "nodeType": "StructuredDocumentation",
          "src": "23275:133:52",
          "text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
        },
        "fullyImplemented": false,
        "id": 8202,
        "linearizedBaseContracts": [
          8202,
          7436,
          7323
        ],
        "name": "IERC721Metadata",
        "nameLocation": "23419:15:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 8182,
              "nodeType": "StructuredDocumentation",
              "src": "23452:58:52",
              "text": " @dev Returns the token collection name."
            },
            "functionSelector": "06fdde03",
            "id": 8187,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "23524:4:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23528:2:52"
            },
            "returnParameters": {
              "id": 8186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8185,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8187,
                  "src": "23554:13:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8184,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "23554:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23553:15:52"
            },
            "scope": 8202,
            "src": "23515:54:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8188,
              "nodeType": "StructuredDocumentation",
              "src": "23575:60:52",
              "text": " @dev Returns the token collection symbol."
            },
            "functionSelector": "95d89b41",
            "id": 8193,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "23649:6:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23655:2:52"
            },
            "returnParameters": {
              "id": 8192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8191,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8193,
                  "src": "23681:13:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8190,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "23681:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23680:15:52"
            },
            "scope": 8202,
            "src": "23640:56:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8194,
              "nodeType": "StructuredDocumentation",
              "src": "23702:90:52",
              "text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
            },
            "functionSelector": "c87b56dd",
            "id": 8201,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "23806:8:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8196,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "23823:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8201,
                  "src": "23815:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23815:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23814:17:52"
            },
            "returnParameters": {
              "id": 8200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8199,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8201,
                  "src": "23855:13:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8198,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "23855:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23854:15:52"
            },
            "scope": 8202,
            "src": "23797:73:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9867,
        "src": "23409:463:52",
        "usedErrors": []
      },
      {
        "id": 8203,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "24136:23:52"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8205,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7295,
              "src": "24427:7:52"
            },
            "id": 8206,
            "nodeType": "InheritanceSpecifier",
            "src": "24427:7:52"
          },
          {
            "baseName": {
              "id": 8207,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7679,
              "src": "24436:6:52"
            },
            "id": 8208,
            "nodeType": "InheritanceSpecifier",
            "src": "24436:6:52"
          },
          {
            "baseName": {
              "id": 8209,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7436,
              "src": "24444:7:52"
            },
            "id": 8210,
            "nodeType": "InheritanceSpecifier",
            "src": "24444:7:52"
          },
          {
            "baseName": {
              "id": 8211,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8202,
              "src": "24453:15:52"
            },
            "id": 8212,
            "nodeType": "InheritanceSpecifier",
            "src": "24453:15:52"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8204,
          "nodeType": "StructuredDocumentation",
          "src": "24161:246:52",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 9011,
        "linearizedBaseContracts": [
          9011,
          8202,
          7436,
          7679,
          7323,
          7295
        ],
        "name": "ERC721",
        "nameLocation": "24417:6:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8215,
            "libraryName": {
              "id": 8213,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8177,
              "src": "24481:7:52"
            },
            "nodeType": "UsingForDirective",
            "src": "24475:26:52",
            "typeName": {
              "id": 8214,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "24493:7:52",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 8218,
            "libraryName": {
              "id": 8216,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7881,
              "src": "24512:7:52"
            },
            "nodeType": "UsingForDirective",
            "src": "24506:26:52",
            "typeName": {
              "id": 8217,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "24524:7:52",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 8220,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "24571:5:52",
            "nodeType": "VariableDeclaration",
            "scope": 9011,
            "src": "24556:20:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 8219,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "24556:6:52",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 8222,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "24618:7:52",
            "nodeType": "VariableDeclaration",
            "scope": 9011,
            "src": "24603:22:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 8221,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "24603:6:52",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 8226,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "24714:7:52",
            "nodeType": "VariableDeclaration",
            "scope": 9011,
            "src": "24678:43:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 8225,
              "keyType": {
                "id": 8223,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "24686:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "24678:27:52",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 8224,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "24697:7:52",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 8230,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "24808:9:52",
            "nodeType": "VariableDeclaration",
            "scope": 9011,
            "src": "24772:45:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 8229,
              "keyType": {
                "id": 8227,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "24780:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "24772:27:52",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 8228,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "24791:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 8234,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "24909:15:52",
            "nodeType": "VariableDeclaration",
            "scope": 9011,
            "src": "24873:51:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 8233,
              "keyType": {
                "id": 8231,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "24881:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "24873:27:52",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 8232,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "24892:7:52",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 8240,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "25032:18:52",
            "nodeType": "VariableDeclaration",
            "scope": 9011,
            "src": "24979:71:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 8239,
              "keyType": {
                "id": 8235,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "24987:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "24979:44:52",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 8238,
                "keyType": {
                  "id": 8236,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "25006:7:52",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "24998:24:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 8237,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "25017:4:52",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 8256,
              "nodeType": "Block",
              "src": "25226:57:52",
              "statements": [
                {
                  "expression": {
                    "id": 8250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8248,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8220,
                      "src": "25236:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8249,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8243,
                      "src": "25244:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "25236:13:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 8251,
                  "nodeType": "ExpressionStatement",
                  "src": "25236:13:52"
                },
                {
                  "expression": {
                    "id": 8254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8252,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8222,
                      "src": "25259:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8253,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8245,
                      "src": "25269:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "25259:17:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 8255,
                  "nodeType": "ExpressionStatement",
                  "src": "25259:17:52"
                }
              ]
            },
            "documentation": {
              "id": 8241,
              "nodeType": "StructuredDocumentation",
              "src": "25057:108:52",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 8257,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8243,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "25196:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8257,
                  "src": "25182:19:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8242,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "25182:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8245,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "25217:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8257,
                  "src": "25203:21:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8244,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "25203:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25181:44:52"
            },
            "returnParameters": {
              "id": 8247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25226:0:52"
            },
            "scope": 9011,
            "src": "25170:113:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7322,
              7678
            ],
            "body": {
              "id": 8287,
              "nodeType": "Block",
              "src": "25458:192:52",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 8285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 8280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 8273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8268,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8260,
                          "src": "25487:11:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 8270,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7436,
                                "src": "25507:7:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$7436_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$7436_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 8269,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "25502:4:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 8271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25502:13:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$7436",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 8272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "25502:25:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "25487:40:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 8279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8274,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8260,
                          "src": "25543:11:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 8276,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8202,
                                "src": "25563:15:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$8202_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$8202_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 8275,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "25558:4:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 8277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25558:21:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$8202",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 8278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "25558:33:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "25543:48:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "25487:104:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 8283,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8260,
                          "src": "25631:11:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 8281,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "25607:5:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$9011_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 8282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7678,
                        "src": "25607:23:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 8284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25607:36:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "25487:156:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8267,
                  "id": 8286,
                  "nodeType": "Return",
                  "src": "25468:175:52"
                }
              ]
            },
            "documentation": {
              "id": 8258,
              "nodeType": "StructuredDocumentation",
              "src": "25289:56:52",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 8288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "25359:17:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8264,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 8262,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7679,
                  "src": "25426:6:52"
                },
                {
                  "id": 8263,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7323,
                  "src": "25434:7:52"
                }
              ],
              "src": "25417:25:52"
            },
            "parameters": {
              "id": 8261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8260,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "25384:11:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8288,
                  "src": "25377:18:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 8259,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "25377:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25376:20:52"
            },
            "returnParameters": {
              "id": 8267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8266,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8288,
                  "src": "25452:4:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8265,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "25452:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25451:6:52"
            },
            "scope": 9011,
            "src": "25350:300:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7361
            ],
            "body": {
              "id": 8311,
              "nodeType": "Block",
              "src": "25790:124:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8298,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8291,
                          "src": "25808:5:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25825:1:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "25817:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8299,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "25817:7:52",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25817:10:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "25808:19:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 8304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25829:44:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 8297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25800:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25800:74:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8306,
                  "nodeType": "ExpressionStatement",
                  "src": "25800:74:52"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 8307,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8230,
                      "src": "25891:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 8309,
                    "indexExpression": {
                      "id": 8308,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8291,
                      "src": "25901:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "25891:16:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8296,
                  "id": 8310,
                  "nodeType": "Return",
                  "src": "25884:23:52"
                }
              ]
            },
            "documentation": {
              "id": 8289,
              "nodeType": "StructuredDocumentation",
              "src": "25656:48:52",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 8312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "25718:9:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8293,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25763:8:52"
            },
            "parameters": {
              "id": 8292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8291,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "25736:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8312,
                  "src": "25728:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25728:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25727:15:52"
            },
            "returnParameters": {
              "id": 8296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8295,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8312,
                  "src": "25781:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25781:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25780:9:52"
            },
            "scope": 9011,
            "src": "25709:205:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7369
            ],
            "body": {
              "id": 8339,
              "nodeType": "Block",
              "src": "26052:154:52",
              "statements": [
                {
                  "assignments": [
                    8322
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8322,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "26070:5:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 8339,
                      "src": "26062:13:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8321,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "26062:7:52",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8326,
                  "initialValue": {
                    "baseExpression": {
                      "id": 8323,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8226,
                      "src": "26078:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 8325,
                    "indexExpression": {
                      "id": 8324,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8315,
                      "src": "26086:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "26078:16:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26062:32:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8328,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8322,
                          "src": "26112:5:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "26129:1:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "26121:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8329,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "26121:7:52",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26121:10:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "26112:19:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 8334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26133:43:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 8327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26104:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26104:73:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8336,
                  "nodeType": "ExpressionStatement",
                  "src": "26104:73:52"
                },
                {
                  "expression": {
                    "id": 8337,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8322,
                    "src": "26194:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8320,
                  "id": 8338,
                  "nodeType": "Return",
                  "src": "26187:12:52"
                }
              ]
            },
            "documentation": {
              "id": 8313,
              "nodeType": "StructuredDocumentation",
              "src": "25920:46:52",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 8340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "25980:7:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8317,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26025:8:52"
            },
            "parameters": {
              "id": 8316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8315,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "25996:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8340,
                  "src": "25988:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25988:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25987:17:52"
            },
            "returnParameters": {
              "id": 8320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8319,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8340,
                  "src": "26043:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26043:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26042:9:52"
            },
            "scope": 9011,
            "src": "25971:235:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8187
            ],
            "body": {
              "id": 8349,
              "nodeType": "Block",
              "src": "26337:29:52",
              "statements": [
                {
                  "expression": {
                    "id": 8347,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8220,
                    "src": "26354:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 8346,
                  "id": 8348,
                  "nodeType": "Return",
                  "src": "26347:12:52"
                }
              ]
            },
            "documentation": {
              "id": 8341,
              "nodeType": "StructuredDocumentation",
              "src": "26212:51:52",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 8350,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "26277:4:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8343,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26304:8:52"
            },
            "parameters": {
              "id": 8342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26281:2:52"
            },
            "returnParameters": {
              "id": 8346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8345,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8350,
                  "src": "26322:13:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8344,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "26322:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26321:15:52"
            },
            "scope": 9011,
            "src": "26268:98:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8193
            ],
            "body": {
              "id": 8359,
              "nodeType": "Block",
              "src": "26501:31:52",
              "statements": [
                {
                  "expression": {
                    "id": 8357,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8222,
                    "src": "26518:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 8356,
                  "id": 8358,
                  "nodeType": "Return",
                  "src": "26511:14:52"
                }
              ]
            },
            "documentation": {
              "id": 8351,
              "nodeType": "StructuredDocumentation",
              "src": "26372:53:52",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 8360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "26439:6:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8353,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26468:8:52"
            },
            "parameters": {
              "id": 8352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26445:2:52"
            },
            "returnParameters": {
              "id": 8356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8355,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8360,
                  "src": "26486:13:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8354,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "26486:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26485:15:52"
            },
            "scope": 9011,
            "src": "26430:102:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8201
            ],
            "body": {
              "id": 8402,
              "nodeType": "Block",
              "src": "26686:250:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8371,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8363,
                            "src": "26712:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 8370,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8651,
                          "src": "26704:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 8372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26704:16:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 8373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26722:49:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 8369,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26696:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26696:76:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8375,
                  "nodeType": "ExpressionStatement",
                  "src": "26696:76:52"
                },
                {
                  "assignments": [
                    8377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8377,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "26797:7:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 8402,
                      "src": "26783:21:52",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 8376,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "26783:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8380,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8378,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8412,
                      "src": "26807:8:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 8379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26807:10:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26783:34:52"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8383,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8377,
                              "src": "26840:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 8382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "26834:5:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 8381,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "26834:5:52",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26834:14:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 8385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "26834:21:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 8386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26858:1:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "26834:25:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 8399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "26927:2:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 8400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "26834:95:52",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 8392,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8377,
                              "src": "26886:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 8393,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8363,
                                  "src": "26895:7:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 8394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7763,
                                "src": "26895:16:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 8395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26895:18:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2e6a736f6e",
                              "id": 8396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "26915:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                                "typeString": "literal_string \".json\""
                              },
                              "value": ".json"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                                "typeString": "literal_string \".json\""
                              }
                            ],
                            "expression": {
                              "id": 8390,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "26869:3:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 8391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "26869:16:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 8397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26869:54:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 8389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "26862:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 8388,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "26862:6:52",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26862:62:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 8368,
                  "id": 8401,
                  "nodeType": "Return",
                  "src": "26827:102:52"
                }
              ]
            },
            "documentation": {
              "id": 8361,
              "nodeType": "StructuredDocumentation",
              "src": "26538:55:52",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 8403,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "26607:8:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8365,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26653:8:52"
            },
            "parameters": {
              "id": 8364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8363,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "26624:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8403,
                  "src": "26616:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26616:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26615:17:52"
            },
            "returnParameters": {
              "id": 8368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8367,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8403,
                  "src": "26671:13:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8366,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "26671:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26670:15:52"
            },
            "scope": 9011,
            "src": "26598:338:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8411,
              "nodeType": "Block",
              "src": "27243:26:52",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 8409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "27260:2:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 8408,
                  "id": 8410,
                  "nodeType": "Return",
                  "src": "27253:9:52"
                }
              ]
            },
            "documentation": {
              "id": 8404,
              "nodeType": "StructuredDocumentation",
              "src": "26942:230:52",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 8412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "27186:8:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27194:2:52"
            },
            "returnParameters": {
              "id": 8408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8407,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8412,
                  "src": "27228:13:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8406,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "27228:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27227:15:52"
            },
            "scope": 9011,
            "src": "27177:92:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              7397
            ],
            "body": {
              "id": 8454,
              "nodeType": "Block",
              "src": "27396:331:52",
              "statements": [
                {
                  "assignments": [
                    8422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8422,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "27414:5:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 8454,
                      "src": "27406:13:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8421,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "27406:7:52",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8427,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8425,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8417,
                        "src": "27437:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8423,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9011,
                        "src": "27422:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$9011_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 8424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8340,
                      "src": "27422:14:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 8426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27422:23:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27406:39:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8429,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8415,
                          "src": "27463:2:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 8430,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8422,
                          "src": "27469:5:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "27463:11:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 8432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27476:35:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 8428,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27455:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27455:57:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8434,
                  "nodeType": "ExpressionStatement",
                  "src": "27455:57:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 8436,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7285,
                              "src": "27544:10:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 8437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27544:12:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 8438,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8422,
                            "src": "27560:5:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "27544:21:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 8441,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8422,
                              "src": "27586:5:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 8442,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7285,
                                "src": "27593:10:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 8443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "27593:12:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8440,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8528,
                            "src": "27569:16:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 8444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27569:37:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "27544:62:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 8446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27620:58:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 8435,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27523:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27523:165:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8448,
                  "nodeType": "ExpressionStatement",
                  "src": "27523:165:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8450,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8415,
                        "src": "27708:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8451,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8417,
                        "src": "27712:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8449,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8937,
                      "src": "27699:8:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27699:21:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8453,
                  "nodeType": "ExpressionStatement",
                  "src": "27699:21:52"
                }
              ]
            },
            "documentation": {
              "id": 8413,
              "nodeType": "StructuredDocumentation",
              "src": "27275:46:52",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 8455,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "27335:7:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8419,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27387:8:52"
            },
            "parameters": {
              "id": 8418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8415,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "27351:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8455,
                  "src": "27343:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27343:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8417,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "27363:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8455,
                  "src": "27355:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27355:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27342:29:52"
            },
            "returnParameters": {
              "id": 8420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27396:0:52"
            },
            "scope": 9011,
            "src": "27326:401:52",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7405
            ],
            "body": {
              "id": 8475,
              "nodeType": "Block",
              "src": "27873:132:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8466,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8458,
                            "src": "27899:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 8465,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8651,
                          "src": "27891:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 8467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27891:16:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 8468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27909:46:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 8464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27883:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27883:73:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8470,
                  "nodeType": "ExpressionStatement",
                  "src": "27883:73:52"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 8471,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8234,
                      "src": "27974:15:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 8473,
                    "indexExpression": {
                      "id": 8472,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8458,
                      "src": "27990:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "27974:24:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 8463,
                  "id": 8474,
                  "nodeType": "Return",
                  "src": "27967:31:52"
                }
              ]
            },
            "documentation": {
              "id": 8456,
              "nodeType": "StructuredDocumentation",
              "src": "27733:50:52",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 8476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "27797:11:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8460,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27846:8:52"
            },
            "parameters": {
              "id": 8459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8458,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "27817:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8476,
                  "src": "27809:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27809:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27808:17:52"
            },
            "returnParameters": {
              "id": 8463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8462,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8476,
                  "src": "27864:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27864:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27863:9:52"
            },
            "scope": 9011,
            "src": "27788:217:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7413
            ],
            "body": {
              "id": 8509,
              "nodeType": "Block",
              "src": "28156:206:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8486,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8479,
                          "src": "28174:8:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 8487,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7285,
                            "src": "28186:10:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 8488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28186:12:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "28174:24:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 8490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28200:27:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 8485,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28166:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28166:62:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8492,
                  "nodeType": "ExpressionStatement",
                  "src": "28166:62:52"
                },
                {
                  "expression": {
                    "id": 8500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 8493,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8240,
                          "src": "28239:18:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 8497,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 8494,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7285,
                            "src": "28258:10:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 8495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28258:12:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "28239:32:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 8498,
                      "indexExpression": {
                        "id": 8496,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8479,
                        "src": "28272:8:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "28239:42:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8499,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8481,
                      "src": "28284:8:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "28239:53:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8501,
                  "nodeType": "ExpressionStatement",
                  "src": "28239:53:52"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8503,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7285,
                          "src": "28322:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 8504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28322:12:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8505,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8479,
                        "src": "28336:8:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8506,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8481,
                        "src": "28346:8:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8502,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7353,
                      "src": "28307:14:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 8507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28307:48:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8508,
                  "nodeType": "EmitStatement",
                  "src": "28302:53:52"
                }
              ]
            },
            "documentation": {
              "id": 8477,
              "nodeType": "StructuredDocumentation",
              "src": "28011:56:52",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 8510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "28081:17:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8483,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28147:8:52"
            },
            "parameters": {
              "id": 8482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8479,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "28107:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8510,
                  "src": "28099:16:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28099:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8481,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "28122:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8510,
                  "src": "28117:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8480,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "28117:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28098:33:52"
            },
            "returnParameters": {
              "id": 8484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28156:0:52"
            },
            "scope": 9011,
            "src": "28072:290:52",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7423
            ],
            "body": {
              "id": 8527,
              "nodeType": "Block",
              "src": "28531:59:52",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 8521,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8240,
                        "src": "28548:18:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 8523,
                      "indexExpression": {
                        "id": 8522,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8513,
                        "src": "28567:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "28548:25:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 8525,
                    "indexExpression": {
                      "id": 8524,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8515,
                      "src": "28574:8:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "28548:35:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8520,
                  "id": 8526,
                  "nodeType": "Return",
                  "src": "28541:42:52"
                }
              ]
            },
            "documentation": {
              "id": 8511,
              "nodeType": "StructuredDocumentation",
              "src": "28368:55:52",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 8528,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "28437:16:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8517,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28507:8:52"
            },
            "parameters": {
              "id": 8516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8513,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "28462:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8528,
                  "src": "28454:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28454:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8515,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "28477:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8528,
                  "src": "28469:16:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28469:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28453:33:52"
            },
            "returnParameters": {
              "id": 8520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8519,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8528,
                  "src": "28525:4:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8518,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "28525:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28524:6:52"
            },
            "scope": 9011,
            "src": "28428:162:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7389
            ],
            "body": {
              "id": 8554,
              "nodeType": "Block",
              "src": "28771:211:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 8541,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7285,
                              "src": "28860:10:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 8542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "28860:12:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8543,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8535,
                            "src": "28874:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 8540,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8692,
                          "src": "28841:18:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 8544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28841:41:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 8545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28884:51:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 8539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28833:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28833:103:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8547,
                  "nodeType": "ExpressionStatement",
                  "src": "28833:103:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8549,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8531,
                        "src": "28957:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8550,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8533,
                        "src": "28963:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8551,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8535,
                        "src": "28967:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8548,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8913,
                      "src": "28947:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28947:28:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8553,
                  "nodeType": "ExpressionStatement",
                  "src": "28947:28:52"
                }
              ]
            },
            "documentation": {
              "id": 8529,
              "nodeType": "StructuredDocumentation",
              "src": "28596:51:52",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 8555,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "28661:12:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8537,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28762:8:52"
            },
            "parameters": {
              "id": 8536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8531,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "28691:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8555,
                  "src": "28683:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28683:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8533,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "28713:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8555,
                  "src": "28705:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28705:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8535,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "28733:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8555,
                  "src": "28725:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8534,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28725:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28673:73:52"
            },
            "returnParameters": {
              "id": 8538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28771:0:52"
            },
            "scope": 9011,
            "src": "28652:330:52",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7379
            ],
            "body": {
              "id": 8573,
              "nodeType": "Block",
              "src": "29171:56:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8567,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8558,
                        "src": "29198:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8568,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8560,
                        "src": "29204:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8569,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8562,
                        "src": "29208:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29217:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 8566,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8574,
                        8604
                      ],
                      "referencedDeclaration": 8604,
                      "src": "29181:16:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 8571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29181:39:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8572,
                  "nodeType": "ExpressionStatement",
                  "src": "29181:39:52"
                }
              ]
            },
            "documentation": {
              "id": 8556,
              "nodeType": "StructuredDocumentation",
              "src": "28988:55:52",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 8574,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "29057:16:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8564,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "29162:8:52"
            },
            "parameters": {
              "id": 8563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8558,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "29091:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8574,
                  "src": "29083:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29083:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8560,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "29113:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8574,
                  "src": "29105:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29105:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8562,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "29133:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8574,
                  "src": "29125:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29125:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29073:73:52"
            },
            "returnParameters": {
              "id": 8565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29171:0:52"
            },
            "scope": 9011,
            "src": "29048:179:52",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7435
            ],
            "body": {
              "id": 8603,
              "nodeType": "Block",
              "src": "29444:169:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 8589,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7285,
                              "src": "29481:10:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 8590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29481:12:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8591,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8581,
                            "src": "29495:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 8588,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8692,
                          "src": "29462:18:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 8592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29462:41:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 8593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29505:51:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 8587,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "29454:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29454:103:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8595,
                  "nodeType": "ExpressionStatement",
                  "src": "29454:103:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8597,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8577,
                        "src": "29581:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8598,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8579,
                        "src": "29587:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8599,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8581,
                        "src": "29591:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8600,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8583,
                        "src": "29600:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 8596,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8633,
                      "src": "29567:13:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 8601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29567:39:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8602,
                  "nodeType": "ExpressionStatement",
                  "src": "29567:39:52"
                }
              ]
            },
            "documentation": {
              "id": 8575,
              "nodeType": "StructuredDocumentation",
              "src": "29233:55:52",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 8604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "29302:16:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8585,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "29435:8:52"
            },
            "parameters": {
              "id": 8584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8577,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "29336:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8604,
                  "src": "29328:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29328:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8579,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "29358:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8604,
                  "src": "29350:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29350:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8581,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "29378:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8604,
                  "src": "29370:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29370:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8583,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "29408:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8604,
                  "src": "29395:18:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8582,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "29395:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29318:101:52"
            },
            "returnParameters": {
              "id": 8586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29444:0:52"
            },
            "scope": 9011,
            "src": "29293:320:52",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8632,
              "nodeType": "Block",
              "src": "30616:166:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8617,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8607,
                        "src": "30636:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8618,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8609,
                        "src": "30642:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8619,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8611,
                        "src": "30646:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8616,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8913,
                      "src": "30626:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30626:28:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8621,
                  "nodeType": "ExpressionStatement",
                  "src": "30626:28:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8624,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8607,
                            "src": "30695:4:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8625,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8609,
                            "src": "30701:2:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8626,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8611,
                            "src": "30705:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 8627,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8613,
                            "src": "30714:5:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 8623,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8999,
                          "src": "30672:22:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 8628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30672:48:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 8629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30722:52:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 8622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "30664:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30664:111:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8631,
                  "nodeType": "ExpressionStatement",
                  "src": "30664:111:52"
                }
              ]
            },
            "documentation": {
              "id": 8605,
              "nodeType": "StructuredDocumentation",
              "src": "29619:851:52",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 8633,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "30484:13:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8607,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "30515:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8633,
                  "src": "30507:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30507:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8609,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "30537:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8633,
                  "src": "30529:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8608,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30529:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8611,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "30557:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8633,
                  "src": "30549:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8610,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30549:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8613,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "30587:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8633,
                  "src": "30574:18:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8612,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "30574:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30497:101:52"
            },
            "returnParameters": {
              "id": 8615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30616:0:52"
            },
            "scope": 9011,
            "src": "30475:307:52",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8650,
              "nodeType": "Block",
              "src": "31156:54:52",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 8648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 8641,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8226,
                        "src": "31173:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 8643,
                      "indexExpression": {
                        "id": 8642,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8636,
                        "src": "31181:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "31173:16:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 8646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "31201:1:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 8645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "31193:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 8644,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "31193:7:52",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "31193:10:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "31173:30:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8640,
                  "id": 8649,
                  "nodeType": "Return",
                  "src": "31166:37:52"
                }
              ]
            },
            "documentation": {
              "id": 8634,
              "nodeType": "StructuredDocumentation",
              "src": "30788:292:52",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 8651,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "31094:7:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8636,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "31110:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8651,
                  "src": "31102:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31102:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31101:17:52"
            },
            "returnParameters": {
              "id": 8640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8639,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8651,
                  "src": "31150:4:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8638,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "31150:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31149:6:52"
            },
            "scope": 9011,
            "src": "31085:125:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8691,
              "nodeType": "Block",
              "src": "31467:245:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8663,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8656,
                            "src": "31493:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 8662,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8651,
                          "src": "31485:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 8664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31485:16:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 8665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31503:46:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 8661,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "31477:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31477:73:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8667,
                  "nodeType": "ExpressionStatement",
                  "src": "31477:73:52"
                },
                {
                  "assignments": [
                    8669
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8669,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "31568:5:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 8691,
                      "src": "31560:13:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8668,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "31560:7:52",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8674,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8672,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8656,
                        "src": "31591:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8670,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9011,
                        "src": "31576:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$9011_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 8671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8340,
                      "src": "31576:14:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 8673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31576:23:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31560:39:52"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 8683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 8677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 8675,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8654,
                              "src": "31617:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 8676,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8669,
                              "src": "31628:5:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "31617:16:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 8682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 8679,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8656,
                                  "src": "31649:7:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 8678,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8476,
                                "src": "31637:11:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 8680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "31637:20:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 8681,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8654,
                              "src": "31661:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "31637:31:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "31617:51:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 8685,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8669,
                              "src": "31689:5:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8686,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8654,
                              "src": "31696:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8684,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8528,
                            "src": "31672:16:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 8687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31672:32:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "31617:87:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 8689,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "31616:89:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8660,
                  "id": 8690,
                  "nodeType": "Return",
                  "src": "31609:96:52"
                }
              ]
            },
            "documentation": {
              "id": 8652,
              "nodeType": "StructuredDocumentation",
              "src": "31216:147:52",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 8692,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "31377:18:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8654,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "31404:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8692,
                  "src": "31396:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31396:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8656,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "31421:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8692,
                  "src": "31413:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31413:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31395:34:52"
            },
            "returnParameters": {
              "id": 8660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8659,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8692,
                  "src": "31461:4:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8658,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "31461:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31460:6:52"
            },
            "scope": 9011,
            "src": "31368:344:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8706,
              "nodeType": "Block",
              "src": "32107:43:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8701,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8695,
                        "src": "32127:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8702,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8697,
                        "src": "32131:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32140:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 8700,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8707,
                        8736
                      ],
                      "referencedDeclaration": 8736,
                      "src": "32117:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 8704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32117:26:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8705,
                  "nodeType": "ExpressionStatement",
                  "src": "32117:26:52"
                }
              ]
            },
            "documentation": {
              "id": 8693,
              "nodeType": "StructuredDocumentation",
              "src": "31718:319:52",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 8707,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "32051:9:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8695,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "32069:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8707,
                  "src": "32061:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "32061:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8697,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "32081:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8707,
                  "src": "32073:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32073:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32060:29:52"
            },
            "returnParameters": {
              "id": 8699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32107:0:52"
            },
            "scope": 9011,
            "src": "32042:108:52",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8735,
              "nodeType": "Block",
              "src": "32486:196:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8718,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8710,
                        "src": "32502:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8719,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8712,
                        "src": "32506:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8717,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8793,
                      "src": "32496:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32496:18:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8721,
                  "nodeType": "ExpressionStatement",
                  "src": "32496:18:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 8726,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "32576:1:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 8725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "32568:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 8724,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "32568:7:52",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "32568:10:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8728,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8710,
                            "src": "32580:2:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8729,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8712,
                            "src": "32584:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 8730,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8714,
                            "src": "32593:5:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 8723,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8999,
                          "src": "32545:22:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 8731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32545:54:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 8732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32613:52:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 8722,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "32524:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32524:151:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8734,
                  "nodeType": "ExpressionStatement",
                  "src": "32524:151:52"
                }
              ]
            },
            "documentation": {
              "id": 8708,
              "nodeType": "StructuredDocumentation",
              "src": "32156:210:52",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 8736,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "32380:9:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8710,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "32407:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8736,
                  "src": "32399:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "32399:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8712,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "32427:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8736,
                  "src": "32419:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32419:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8714,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "32457:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8736,
                  "src": "32444:18:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8713,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "32444:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32389:79:52"
            },
            "returnParameters": {
              "id": 8716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32486:0:52"
            },
            "scope": 9011,
            "src": "32371:311:52",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8792,
              "nodeType": "Block",
              "src": "33065:311:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8745,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8739,
                          "src": "33083:2:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "33097:1:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "33089:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8746,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "33089:7:52",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33089:10:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "33083:16:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 8751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "33101:34:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 8744,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "33075:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33075:61:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8753,
                  "nodeType": "ExpressionStatement",
                  "src": "33075:61:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "33154:17:52",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 8756,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8741,
                              "src": "33163:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 8755,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8651,
                            "src": "33155:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 8757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33155:16:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 8759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "33173:30:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 8754,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "33146:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33146:58:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8761,
                  "nodeType": "ExpressionStatement",
                  "src": "33146:58:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 8765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "33244:1:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 8764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "33236:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8763,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "33236:7:52",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33236:10:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8767,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8739,
                        "src": "33248:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8768,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8741,
                        "src": "33252:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8762,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9010,
                      "src": "33215:20:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33215:45:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8770,
                  "nodeType": "ExpressionStatement",
                  "src": "33215:45:52"
                },
                {
                  "expression": {
                    "id": 8775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8771,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8230,
                        "src": "33271:9:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 8773,
                      "indexExpression": {
                        "id": 8772,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8739,
                        "src": "33281:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "33271:13:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 8774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "33288:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "33271:18:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8776,
                  "nodeType": "ExpressionStatement",
                  "src": "33271:18:52"
                },
                {
                  "expression": {
                    "id": 8781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8777,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8226,
                        "src": "33299:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 8779,
                      "indexExpression": {
                        "id": 8778,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8741,
                        "src": "33307:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "33299:16:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8780,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8739,
                      "src": "33318:2:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "33299:21:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8782,
                  "nodeType": "ExpressionStatement",
                  "src": "33299:21:52"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 8786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "33353:1:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 8785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "33345:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8784,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "33345:7:52",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33345:10:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8788,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8739,
                        "src": "33357:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8789,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8741,
                        "src": "33361:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8783,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7335,
                      "src": "33336:8:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33336:33:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8791,
                  "nodeType": "EmitStatement",
                  "src": "33331:38:52"
                }
              ]
            },
            "documentation": {
              "id": 8737,
              "nodeType": "StructuredDocumentation",
              "src": "32688:311:52",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 8793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "33013:5:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8739,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "33027:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8793,
                  "src": "33019:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "33019:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8741,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "33039:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8793,
                  "src": "33031:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33031:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33018:29:52"
            },
            "returnParameters": {
              "id": 8743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "33065:0:52"
            },
            "scope": 9011,
            "src": "33004:372:52",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8843,
              "nodeType": "Block",
              "src": "33642:299:52",
              "statements": [
                {
                  "assignments": [
                    8800
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8800,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "33660:5:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 8843,
                      "src": "33652:13:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8799,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "33652:7:52",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8805,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8803,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8796,
                        "src": "33683:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8801,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9011,
                        "src": "33668:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$9011_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 8802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8340,
                      "src": "33668:14:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 8804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33668:23:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33652:39:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8807,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8800,
                        "src": "33723:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 8810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "33738:1:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 8809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "33730:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8808,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "33730:7:52",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33730:10:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8812,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8796,
                        "src": "33742:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8806,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9010,
                      "src": "33702:20:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33702:48:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8814,
                  "nodeType": "ExpressionStatement",
                  "src": "33702:48:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 8818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "33805:1:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 8817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "33797:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8816,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "33797:7:52",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33797:10:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8820,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8796,
                        "src": "33809:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8815,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8937,
                      "src": "33788:8:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33788:29:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8822,
                  "nodeType": "ExpressionStatement",
                  "src": "33788:29:52"
                },
                {
                  "expression": {
                    "id": 8827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8823,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8230,
                        "src": "33828:9:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 8825,
                      "indexExpression": {
                        "id": 8824,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8800,
                        "src": "33838:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "33828:16:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 8826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "33848:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "33828:21:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8828,
                  "nodeType": "ExpressionStatement",
                  "src": "33828:21:52"
                },
                {
                  "expression": {
                    "id": 8832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "33859:23:52",
                    "subExpression": {
                      "baseExpression": {
                        "id": 8829,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8226,
                        "src": "33866:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 8831,
                      "indexExpression": {
                        "id": 8830,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8796,
                        "src": "33874:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "33866:16:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8833,
                  "nodeType": "ExpressionStatement",
                  "src": "33859:23:52"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8835,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8800,
                        "src": "33907:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 8838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "33922:1:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 8837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "33914:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8836,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "33914:7:52",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33914:10:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8840,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8796,
                        "src": "33926:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8834,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7335,
                      "src": "33898:8:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33898:36:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8842,
                  "nodeType": "EmitStatement",
                  "src": "33893:41:52"
                }
              ]
            },
            "documentation": {
              "id": 8794,
              "nodeType": "StructuredDocumentation",
              "src": "33382:206:52",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 8844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "33602:5:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8796,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "33616:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8844,
                  "src": "33608:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33608:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33607:17:52"
            },
            "returnParameters": {
              "id": 8798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "33642:0:52"
            },
            "scope": 9011,
            "src": "33593:348:52",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8912,
              "nodeType": "Block",
              "src": "34374:451:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 8857,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8851,
                              "src": "34407:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 8855,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9011,
                              "src": "34392:6:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$9011_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 8856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8340,
                            "src": "34392:14:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 8858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34392:23:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 8859,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8847,
                          "src": "34419:4:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "34392:31:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 8861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "34425:43:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 8854,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "34384:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34384:85:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8863,
                  "nodeType": "ExpressionStatement",
                  "src": "34384:85:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8865,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8849,
                          "src": "34487:2:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "34501:1:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "34493:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8866,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "34493:7:52",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34493:10:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "34487:16:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 8871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "34505:38:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 8864,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "34479:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34479:65:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8873,
                  "nodeType": "ExpressionStatement",
                  "src": "34479:65:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8875,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8847,
                        "src": "34576:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8876,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8849,
                        "src": "34582:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8877,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8851,
                        "src": "34586:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8874,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9010,
                      "src": "34555:20:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34555:39:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8879,
                  "nodeType": "ExpressionStatement",
                  "src": "34555:39:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 8883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "34673:1:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 8882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "34665:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8881,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "34665:7:52",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "34665:10:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8885,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8851,
                        "src": "34677:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8880,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8937,
                      "src": "34656:8:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34656:29:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8887,
                  "nodeType": "ExpressionStatement",
                  "src": "34656:29:52"
                },
                {
                  "expression": {
                    "id": 8892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8888,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8230,
                        "src": "34696:9:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 8890,
                      "indexExpression": {
                        "id": 8889,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8847,
                        "src": "34706:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "34696:15:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 8891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "34715:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "34696:20:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8893,
                  "nodeType": "ExpressionStatement",
                  "src": "34696:20:52"
                },
                {
                  "expression": {
                    "id": 8898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8894,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8230,
                        "src": "34726:9:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 8896,
                      "indexExpression": {
                        "id": 8895,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8849,
                        "src": "34736:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "34726:13:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 8897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "34743:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "34726:18:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8899,
                  "nodeType": "ExpressionStatement",
                  "src": "34726:18:52"
                },
                {
                  "expression": {
                    "id": 8904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8900,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8226,
                        "src": "34754:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 8902,
                      "indexExpression": {
                        "id": 8901,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8851,
                        "src": "34762:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "34754:16:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8903,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8849,
                      "src": "34773:2:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "34754:21:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8905,
                  "nodeType": "ExpressionStatement",
                  "src": "34754:21:52"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8907,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8847,
                        "src": "34800:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8908,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8849,
                        "src": "34806:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8909,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8851,
                        "src": "34810:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8906,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7335,
                      "src": "34791:8:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34791:27:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8911,
                  "nodeType": "EmitStatement",
                  "src": "34786:32:52"
                }
              ]
            },
            "documentation": {
              "id": 8845,
              "nodeType": "StructuredDocumentation",
              "src": "33947:313:52",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 8913,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "34274:9:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8847,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "34301:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8913,
                  "src": "34293:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8846,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34293:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8849,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "34323:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8913,
                  "src": "34315:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34315:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8851,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "34343:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8913,
                  "src": "34335:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "34335:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "34283:73:52"
            },
            "returnParameters": {
              "id": 8853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34374:0:52"
            },
            "scope": 9011,
            "src": "34265:560:52",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8936,
              "nodeType": "Block",
              "src": "35000:107:52",
              "statements": [
                {
                  "expression": {
                    "id": 8925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8921,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8234,
                        "src": "35010:15:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 8923,
                      "indexExpression": {
                        "id": 8922,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8918,
                        "src": "35026:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "35010:24:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8924,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8916,
                      "src": "35037:2:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "35010:29:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8926,
                  "nodeType": "ExpressionStatement",
                  "src": "35010:29:52"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8930,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8918,
                            "src": "35078:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 8928,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9011,
                            "src": "35063:6:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$9011_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 8929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8340,
                          "src": "35063:14:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 8931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "35063:23:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8932,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8916,
                        "src": "35088:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8933,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8918,
                        "src": "35092:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8927,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7344,
                      "src": "35054:8:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35054:46:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8935,
                  "nodeType": "EmitStatement",
                  "src": "35049:51:52"
                }
              ]
            },
            "documentation": {
              "id": 8914,
              "nodeType": "StructuredDocumentation",
              "src": "34831:100:52",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 8937,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "34945:8:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8916,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "34962:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8937,
                  "src": "34954:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34954:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8918,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "34974:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8937,
                  "src": "34966:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8917,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "34966:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "34953:29:52"
            },
            "returnParameters": {
              "id": 8920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35000:0:52"
            },
            "scope": 9011,
            "src": "34936:171:52",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8998,
              "nodeType": "Block",
              "src": "35816:622:52",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 8951,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8942,
                        "src": "35830:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 8952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7900,
                      "src": "35830:13:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 8953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35830:15:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8996,
                    "nodeType": "Block",
                    "src": "36396:36:52",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 8994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "36417:4:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 8950,
                        "id": 8995,
                        "nodeType": "Return",
                        "src": "36410:11:52"
                      }
                    ]
                  },
                  "id": 8997,
                  "nodeType": "IfStatement",
                  "src": "35826:606:52",
                  "trueBody": {
                    "id": 8993,
                    "nodeType": "Block",
                    "src": "35847:543:52",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 8973,
                              "nodeType": "Block",
                              "src": "35962:91:52",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 8971,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 8967,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8965,
                                      "src": "35987:6:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 8968,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7312,
                                          "src": "35997:15:52",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$7312_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 8969,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 7311,
                                        "src": "35997:32:52",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 8970,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "35997:41:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "35987:51:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 8950,
                                  "id": 8972,
                                  "nodeType": "Return",
                                  "src": "35980:58:52"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 8974,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 8966,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 8965,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "35954:6:52",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 8974,
                                  "src": "35947:13:52",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 8964,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "35947:6:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "35946:15:52"
                            },
                            "src": "35938:115:52"
                          },
                          {
                            "block": {
                              "id": 8990,
                              "nodeType": "Block",
                              "src": "36082:298:52",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 8981,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 8978,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 8976,
                                        "src": "36104:6:52",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 8979,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "36104:13:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 8980,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "36121:1:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "36104:18:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 8988,
                                    "nodeType": "Block",
                                    "src": "36231:135:52",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "36262:86:52",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "36299:2:52",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "36303:6:52"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "36295:3:52"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "36295:15:52"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "36318:6:52"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "36312:5:52"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "36312:13:52"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "36288:6:52"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "36288:38:52"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "36288:38:52"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 8976,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "36303:6:52",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 8976,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "36318:6:52",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 8987,
                                        "nodeType": "InlineAssembly",
                                        "src": "36253:95:52"
                                      }
                                    ]
                                  },
                                  "id": 8989,
                                  "nodeType": "IfStatement",
                                  "src": "36100:266:52",
                                  "trueBody": {
                                    "id": 8986,
                                    "nodeType": "Block",
                                    "src": "36124:101:52",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 8983,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "36153:52:52",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 8982,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "36146:6:52",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 8984,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "36146:60:52",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 8985,
                                        "nodeType": "ExpressionStatement",
                                        "src": "36146:60:52"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 8991,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 8977,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 8976,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "36074:6:52",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 8991,
                                  "src": "36061:19:52",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 8975,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "36061:5:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "36060:21:52"
                            },
                            "src": "36054:326:52"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 8958,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7285,
                                "src": "35902:10:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 8959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "35902:12:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8960,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8940,
                              "src": "35916:4:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8961,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8944,
                              "src": "35922:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 8962,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8946,
                              "src": "35931:5:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8955,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8942,
                                  "src": "35881:2:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8954,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7312,
                                "src": "35865:15:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$7312_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 8956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "35865:19:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$7312",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 8957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7311,
                            "src": "35865:36:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 8963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35865:72:52",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 8992,
                        "nodeType": "TryStatement",
                        "src": "35861:519:52"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8938,
              "nodeType": "StructuredDocumentation",
              "src": "35113:542:52",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 8999,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "35669:22:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8940,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "35709:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8999,
                  "src": "35701:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35701:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8942,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "35731:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8999,
                  "src": "35723:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35723:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8944,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "35751:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8999,
                  "src": "35743:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "35743:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8946,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "35781:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8999,
                  "src": "35768:18:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8945,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "35768:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35691:101:52"
            },
            "returnParameters": {
              "id": 8950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8949,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8999,
                  "src": "35810:4:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8948,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "35810:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35809:6:52"
            },
            "scope": 9011,
            "src": "35660:778:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 9009,
              "nodeType": "Block",
              "src": "37114:2:52",
              "statements": []
            },
            "documentation": {
              "id": 9000,
              "nodeType": "StructuredDocumentation",
              "src": "36444:545:52",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 9010,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "37003:20:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9002,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "37041:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9010,
                  "src": "37033:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9001,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "37033:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9004,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "37063:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9010,
                  "src": "37055:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "37055:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9006,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "37083:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9010,
                  "src": "37075:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37075:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37023:73:52"
            },
            "returnParameters": {
              "id": 9008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "37114:0:52"
            },
            "scope": 9011,
            "src": "36994:122:52",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 9867,
        "src": "24408:12710:52",
        "usedErrors": []
      },
      {
        "id": 9012,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37201:23:52"
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 9014,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9011,
              "src": "37466:6:52"
            },
            "id": 9015,
            "nodeType": "InheritanceSpecifier",
            "src": "37466:6:52"
          },
          {
            "baseName": {
              "id": 9016,
              "name": "IERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7657,
              "src": "37474:17:52"
            },
            "id": 9017,
            "nodeType": "InheritanceSpecifier",
            "src": "37474:17:52"
          }
        ],
        "canonicalName": "ERC721Enumerable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9013,
          "nodeType": "StructuredDocumentation",
          "src": "37228:199:52",
          "text": " @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n enumerability of all the token ids in the contract as well as all token ids owned by each\n account."
        },
        "fullyImplemented": false,
        "id": 9345,
        "linearizedBaseContracts": [
          9345,
          7657,
          9011,
          8202,
          7436,
          7679,
          7323,
          7295
        ],
        "name": "ERC721Enumerable",
        "nameLocation": "37446:16:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9023,
            "mutability": "mutable",
            "name": "_ownedTokens",
            "nameLocation": "37607:12:52",
            "nodeType": "VariableDeclaration",
            "scope": 9345,
            "src": "37551:68:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 9022,
              "keyType": {
                "id": 9018,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "37559:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "37551:47:52",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 9021,
                "keyType": {
                  "id": 9019,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "37578:7:52",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "37570:27:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 9020,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "37589:7:52",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9027,
            "mutability": "mutable",
            "name": "_ownedTokensIndex",
            "nameLocation": "37725:17:52",
            "nodeType": "VariableDeclaration",
            "scope": 9345,
            "src": "37689:53:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 9026,
              "keyType": {
                "id": 9024,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "37697:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "37689:27:52",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 9025,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "37708:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9030,
            "mutability": "mutable",
            "name": "_allTokens",
            "nameLocation": "37821:10:52",
            "nodeType": "VariableDeclaration",
            "scope": 9345,
            "src": "37803:28:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 9028,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "37803:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 9029,
              "nodeType": "ArrayTypeName",
              "src": "37803:9:52",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9034,
            "mutability": "mutable",
            "name": "_allTokensIndex",
            "nameLocation": "37938:15:52",
            "nodeType": "VariableDeclaration",
            "scope": 9345,
            "src": "37902:51:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 9033,
              "keyType": {
                "id": 9031,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "37910:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "37902:27:52",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 9032,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "37921:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              7322,
              8288
            ],
            "body": {
              "id": 9057,
              "nodeType": "Block",
              "src": "38129:114:52",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 9055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 9050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 9045,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9037,
                        "src": "38146:11:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9047,
                              "name": "IERC721Enumerable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7657,
                              "src": "38166:17:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$7657_$",
                                "typeString": "type(contract IERC721Enumerable)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$7657_$",
                                "typeString": "type(contract IERC721Enumerable)"
                              }
                            ],
                            "id": 9046,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "38161:4:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 9048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "38161:23:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$7657",
                            "typeString": "type(contract IERC721Enumerable)"
                          }
                        },
                        "id": 9049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "38161:35:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "38146:50:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 9053,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9037,
                          "src": "38224:11:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 9051,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "38200:5:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$9345_$",
                            "typeString": "type(contract super ERC721Enumerable)"
                          }
                        },
                        "id": 9052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8288,
                        "src": "38200:23:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 9054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "38200:36:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "38146:90:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9044,
                  "id": 9056,
                  "nodeType": "Return",
                  "src": "38139:97:52"
                }
              ]
            },
            "documentation": {
              "id": 9035,
              "nodeType": "StructuredDocumentation",
              "src": "37960:56:52",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 9058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "38030:17:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9041,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 9039,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7323,
                  "src": "38097:7:52"
                },
                {
                  "id": 9040,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9011,
                  "src": "38106:6:52"
                }
              ],
              "src": "38088:25:52"
            },
            "parameters": {
              "id": 9038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9037,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "38055:11:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9058,
                  "src": "38048:18:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 9036,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "38048:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38047:20:52"
            },
            "returnParameters": {
              "id": 9044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9043,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9058,
                  "src": "38123:4:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9042,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "38123:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38122:6:52"
            },
            "scope": 9345,
            "src": "38021:222:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7648
            ],
            "body": {
              "id": 9085,
              "nodeType": "Block",
              "src": "38428:147:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9070,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9063,
                          "src": "38446:5:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 9073,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9061,
                              "src": "38471:5:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 9071,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9011,
                              "src": "38454:6:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$9011_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 9072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8312,
                            "src": "38454:16:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 9074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "38454:23:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "38446:31:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473",
                        "id": 9076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "38479:45:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c",
                          "typeString": "literal_string \"ERC721Enumerable: owner index out of bounds\""
                        },
                        "value": "ERC721Enumerable: owner index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c",
                          "typeString": "literal_string \"ERC721Enumerable: owner index out of bounds\""
                        }
                      ],
                      "id": 9069,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "38438:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "38438:87:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9078,
                  "nodeType": "ExpressionStatement",
                  "src": "38438:87:52"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 9079,
                        "name": "_ownedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9023,
                        "src": "38542:12:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 9081,
                      "indexExpression": {
                        "id": 9080,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9061,
                        "src": "38555:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "38542:19:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 9083,
                    "indexExpression": {
                      "id": 9082,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9063,
                      "src": "38562:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "38542:26:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9068,
                  "id": 9084,
                  "nodeType": "Return",
                  "src": "38535:33:52"
                }
              ]
            },
            "documentation": {
              "id": 9059,
              "nodeType": "StructuredDocumentation",
              "src": "38249:68:52",
              "text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
            },
            "functionSelector": "2f745c59",
            "id": 9086,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenOfOwnerByIndex",
            "nameLocation": "38331:19:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9065,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "38401:8:52"
            },
            "parameters": {
              "id": 9064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9061,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "38359:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9086,
                  "src": "38351:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "38351:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9063,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "38374:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9086,
                  "src": "38366:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "38366:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38350:30:52"
            },
            "returnParameters": {
              "id": 9068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9067,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9086,
                  "src": "38419:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "38419:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38418:9:52"
            },
            "scope": 9345,
            "src": "38322:253:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7638
            ],
            "body": {
              "id": 9096,
              "nodeType": "Block",
              "src": "38716:41:52",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 9093,
                      "name": "_allTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9030,
                      "src": "38733:10:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 9094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "38733:17:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9092,
                  "id": 9095,
                  "nodeType": "Return",
                  "src": "38726:24:52"
                }
              ]
            },
            "documentation": {
              "id": 9087,
              "nodeType": "StructuredDocumentation",
              "src": "38581:60:52",
              "text": " @dev See {IERC721Enumerable-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 9097,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "38655:11:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9089,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "38689:8:52"
            },
            "parameters": {
              "id": 9088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "38666:2:52"
            },
            "returnParameters": {
              "id": 9092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9091,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9097,
                  "src": "38707:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9090,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "38707:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38706:9:52"
            },
            "scope": 9345,
            "src": "38646:111:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7656
            ],
            "body": {
              "id": 9119,
              "nodeType": "Block",
              "src": "38913:146:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9107,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9100,
                          "src": "38931:5:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 9108,
                              "name": "ERC721Enumerable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9345,
                              "src": "38939:16:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$9345_$",
                                "typeString": "type(contract ERC721Enumerable)"
                              }
                            },
                            "id": 9109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9097,
                            "src": "38939:28:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 9110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "38939:30:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "38931:38:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473",
                        "id": 9112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "38971:46:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc",
                          "typeString": "literal_string \"ERC721Enumerable: global index out of bounds\""
                        },
                        "value": "ERC721Enumerable: global index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc",
                          "typeString": "literal_string \"ERC721Enumerable: global index out of bounds\""
                        }
                      ],
                      "id": 9106,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "38923:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "38923:95:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9114,
                  "nodeType": "ExpressionStatement",
                  "src": "38923:95:52"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 9115,
                      "name": "_allTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9030,
                      "src": "39035:10:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 9117,
                    "indexExpression": {
                      "id": 9116,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9100,
                      "src": "39046:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "39035:17:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9105,
                  "id": 9118,
                  "nodeType": "Return",
                  "src": "39028:24:52"
                }
              ]
            },
            "documentation": {
              "id": 9098,
              "nodeType": "StructuredDocumentation",
              "src": "38763:61:52",
              "text": " @dev See {IERC721Enumerable-tokenByIndex}."
            },
            "functionSelector": "4f6ccce7",
            "id": 9120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenByIndex",
            "nameLocation": "38838:12:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9102,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "38886:8:52"
            },
            "parameters": {
              "id": 9101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9100,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "38859:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9120,
                  "src": "38851:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "38851:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38850:15:52"
            },
            "returnParameters": {
              "id": 9105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9120,
                  "src": "38904:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "38904:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38903:9:52"
            },
            "scope": 9345,
            "src": "38829:230:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9010
            ],
            "body": {
              "id": 9183,
              "nodeType": "Block",
              "src": "39784:443:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9134,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9123,
                        "src": "39821:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9135,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9125,
                        "src": "39827:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9136,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9127,
                        "src": "39831:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9131,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "39794:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$9345_$",
                          "typeString": "type(contract super ERC721Enumerable)"
                        }
                      },
                      "id": 9133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9010,
                      "src": "39794:26:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 9137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39794:45:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9138,
                  "nodeType": "ExpressionStatement",
                  "src": "39794:45:52"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9139,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9123,
                      "src": "39854:4:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 9142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "39870:1:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 9141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "39862:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9140,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "39862:7:52",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "39862:10:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "39854:18:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 9152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 9150,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9123,
                        "src": "39949:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 9151,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9125,
                        "src": "39957:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "39949:10:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 9159,
                    "nodeType": "IfStatement",
                    "src": "39945:88:52",
                    "trueBody": {
                      "id": 9158,
                      "nodeType": "Block",
                      "src": "39961:72:52",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 9154,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9123,
                                "src": "40008:4:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 9155,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9127,
                                "src": "40014:7:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 9153,
                              "name": "_removeTokenFromOwnerEnumeration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9297,
                              "src": "39975:32:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,uint256)"
                              }
                            },
                            "id": 9156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "39975:47:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 9157,
                          "nodeType": "ExpressionStatement",
                          "src": "39975:47:52"
                        }
                      ]
                    }
                  },
                  "id": 9160,
                  "nodeType": "IfStatement",
                  "src": "39850:183:52",
                  "trueBody": {
                    "id": 9149,
                    "nodeType": "Block",
                    "src": "39874:65:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9146,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9127,
                              "src": "39920:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9145,
                            "name": "_addTokenToAllTokensEnumeration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9234,
                            "src": "39888:31:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 9147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "39888:40:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9148,
                        "nodeType": "ExpressionStatement",
                        "src": "39888:40:52"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9161,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9125,
                      "src": "40046:2:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 9164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "40060:1:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 9163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "40052:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9162,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "40052:7:52",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "40052:10:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "40046:16:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 9174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 9172,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9125,
                        "src": "40144:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 9173,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9123,
                        "src": "40150:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "40144:10:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 9181,
                    "nodeType": "IfStatement",
                    "src": "40140:81:52",
                    "trueBody": {
                      "id": 9180,
                      "nodeType": "Block",
                      "src": "40156:65:52",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 9176,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9125,
                                "src": "40198:2:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 9177,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9127,
                                "src": "40202:7:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 9175,
                              "name": "_addTokenToOwnerEnumeration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9214,
                              "src": "40170:27:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,uint256)"
                              }
                            },
                            "id": 9178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "40170:40:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 9179,
                          "nodeType": "ExpressionStatement",
                          "src": "40170:40:52"
                        }
                      ]
                    }
                  },
                  "id": 9182,
                  "nodeType": "IfStatement",
                  "src": "40042:179:52",
                  "trueBody": {
                    "id": 9171,
                    "nodeType": "Block",
                    "src": "40064:70:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9168,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9127,
                              "src": "40115:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9167,
                            "name": "_removeTokenFromAllTokensEnumeration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9344,
                            "src": "40078:36:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 9169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "40078:45:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9170,
                        "nodeType": "ExpressionStatement",
                        "src": "40078:45:52"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 9121,
              "nodeType": "StructuredDocumentation",
              "src": "39065:585:52",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 9184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "39664:20:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9129,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "39775:8:52"
            },
            "parameters": {
              "id": 9128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9123,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "39702:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9184,
                  "src": "39694:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "39694:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9125,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "39724:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9184,
                  "src": "39716:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "39716:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9127,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "39744:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9184,
                  "src": "39736:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "39736:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39684:73:52"
            },
            "returnParameters": {
              "id": 9130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "39784:0:52"
            },
            "scope": 9345,
            "src": "39655:572:52",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9213,
              "nodeType": "Block",
              "src": "40595:143:52",
              "statements": [
                {
                  "assignments": [
                    9193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9193,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "40613:6:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 9213,
                      "src": "40605:14:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9192,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "40605:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9198,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9196,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9187,
                        "src": "40639:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9194,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9011,
                        "src": "40622:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$9011_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 9195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8312,
                      "src": "40622:16:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 9197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "40622:20:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "40605:37:52"
                },
                {
                  "expression": {
                    "id": 9205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 9199,
                          "name": "_ownedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9023,
                          "src": "40652:12:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 9202,
                        "indexExpression": {
                          "id": 9200,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9187,
                          "src": "40665:2:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "40652:16:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 9203,
                      "indexExpression": {
                        "id": 9201,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "40669:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "40652:24:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9204,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9189,
                      "src": "40679:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "40652:34:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9206,
                  "nodeType": "ExpressionStatement",
                  "src": "40652:34:52"
                },
                {
                  "expression": {
                    "id": 9211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9207,
                        "name": "_ownedTokensIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9027,
                        "src": "40696:17:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 9209,
                      "indexExpression": {
                        "id": 9208,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9189,
                        "src": "40714:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "40696:26:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9210,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9193,
                      "src": "40725:6:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "40696:35:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9212,
                  "nodeType": "ExpressionStatement",
                  "src": "40696:35:52"
                }
              ]
            },
            "documentation": {
              "id": 9185,
              "nodeType": "StructuredDocumentation",
              "src": "40233:283:52",
              "text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
            },
            "id": 9214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addTokenToOwnerEnumeration",
            "nameLocation": "40530:27:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9187,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "40566:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9214,
                  "src": "40558:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "40558:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9189,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "40578:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9214,
                  "src": "40570:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "40570:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40557:29:52"
            },
            "returnParameters": {
              "id": 9191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "40595:0:52"
            },
            "scope": 9345,
            "src": "40521:217:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 9233,
              "nodeType": "Block",
              "src": "40999:95:52",
              "statements": [
                {
                  "expression": {
                    "id": 9225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9220,
                        "name": "_allTokensIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9034,
                        "src": "41009:15:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 9222,
                      "indexExpression": {
                        "id": 9221,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9217,
                        "src": "41025:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "41009:24:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 9223,
                        "name": "_allTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9030,
                        "src": "41036:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 9224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "41036:17:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "41009:44:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9226,
                  "nodeType": "ExpressionStatement",
                  "src": "41009:44:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9230,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9217,
                        "src": "41079:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9227,
                        "name": "_allTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9030,
                        "src": "41063:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 9229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "41063:15:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 9231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "41063:24:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9232,
                  "nodeType": "ExpressionStatement",
                  "src": "41063:24:52"
                }
              ]
            },
            "documentation": {
              "id": 9215,
              "nodeType": "StructuredDocumentation",
              "src": "40744:184:52",
              "text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
            },
            "id": 9234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addTokenToAllTokensEnumeration",
            "nameLocation": "40942:31:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9217,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "40982:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9234,
                  "src": "40974:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "40974:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40973:17:52"
            },
            "returnParameters": {
              "id": 9219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "40999:0:52"
            },
            "scope": 9345,
            "src": "40933:161:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 9296,
              "nodeType": "Block",
              "src": "41792:889:52",
              "statements": [
                {
                  "assignments": [
                    9243
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9243,
                      "mutability": "mutable",
                      "name": "lastTokenIndex",
                      "nameLocation": "41981:14:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 9296,
                      "src": "41973:22:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9242,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "41973:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9250,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 9246,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9237,
                          "src": "42015:4:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 9244,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9011,
                          "src": "41998:6:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$9011_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 9245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8312,
                        "src": "41998:16:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 9247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "41998:22:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 9248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "42023:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "41998:26:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "41973:51:52"
                },
                {
                  "assignments": [
                    9252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9252,
                      "mutability": "mutable",
                      "name": "tokenIndex",
                      "nameLocation": "42042:10:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 9296,
                      "src": "42034:18:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9251,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "42034:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9256,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9253,
                      "name": "_ownedTokensIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9027,
                      "src": "42055:17:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 9255,
                    "indexExpression": {
                      "id": 9254,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9239,
                      "src": "42073:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "42055:26:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "42034:47:52"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9257,
                      "name": "tokenIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9252,
                      "src": "42185:10:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 9258,
                      "name": "lastTokenIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9243,
                      "src": "42199:14:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "42185:28:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9283,
                  "nodeType": "IfStatement",
                  "src": "42181:323:52",
                  "trueBody": {
                    "id": 9282,
                    "nodeType": "Block",
                    "src": "42215:289:52",
                    "statements": [
                      {
                        "assignments": [
                          9261
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 9261,
                            "mutability": "mutable",
                            "name": "lastTokenId",
                            "nameLocation": "42237:11:52",
                            "nodeType": "VariableDeclaration",
                            "scope": 9282,
                            "src": "42229:19:52",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 9260,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "42229:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 9267,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 9262,
                              "name": "_ownedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9023,
                              "src": "42251:12:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 9264,
                            "indexExpression": {
                              "id": 9263,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9237,
                              "src": "42264:4:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "42251:18:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 9266,
                          "indexExpression": {
                            "id": 9265,
                            "name": "lastTokenIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9243,
                            "src": "42270:14:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "42251:34:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "42229:56:52"
                      },
                      {
                        "expression": {
                          "id": 9274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 9268,
                                "name": "_ownedTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9023,
                                "src": "42300:12:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 9271,
                              "indexExpression": {
                                "id": 9269,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9237,
                                "src": "42313:4:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "42300:18:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 9272,
                            "indexExpression": {
                              "id": 9270,
                              "name": "tokenIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9252,
                              "src": "42319:10:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "42300:30:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 9273,
                            "name": "lastTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9261,
                            "src": "42333:11:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "42300:44:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9275,
                        "nodeType": "ExpressionStatement",
                        "src": "42300:44:52"
                      },
                      {
                        "expression": {
                          "id": 9280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 9276,
                              "name": "_ownedTokensIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9027,
                              "src": "42416:17:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 9278,
                            "indexExpression": {
                              "id": 9277,
                              "name": "lastTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9261,
                              "src": "42434:11:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "42416:30:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 9279,
                            "name": "tokenIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9252,
                            "src": "42449:10:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "42416:43:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9281,
                        "nodeType": "ExpressionStatement",
                        "src": "42416:43:52"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 9287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "42590:33:52",
                    "subExpression": {
                      "baseExpression": {
                        "id": 9284,
                        "name": "_ownedTokensIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9027,
                        "src": "42597:17:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 9286,
                      "indexExpression": {
                        "id": 9285,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9239,
                        "src": "42615:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "42597:26:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9288,
                  "nodeType": "ExpressionStatement",
                  "src": "42590:33:52"
                },
                {
                  "expression": {
                    "id": 9294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "42633:41:52",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 9289,
                          "name": "_ownedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9023,
                          "src": "42640:12:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 9291,
                        "indexExpression": {
                          "id": 9290,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9237,
                          "src": "42653:4:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "42640:18:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 9293,
                      "indexExpression": {
                        "id": 9292,
                        "name": "lastTokenIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9243,
                        "src": "42659:14:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "42640:34:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9295,
                  "nodeType": "ExpressionStatement",
                  "src": "42633:41:52"
                }
              ]
            },
            "documentation": {
              "id": 9235,
              "nodeType": "StructuredDocumentation",
              "src": "41100:606:52",
              "text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
            },
            "id": 9297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeTokenFromOwnerEnumeration",
            "nameLocation": "41720:32:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9237,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "41761:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9297,
                  "src": "41753:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "41753:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9239,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "41775:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9297,
                  "src": "41767:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "41767:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "41752:31:52"
            },
            "returnParameters": {
              "id": 9241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "41792:0:52"
            },
            "scope": 9345,
            "src": "41711:970:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 9343,
              "nodeType": "Block",
              "src": "42758:990:52",
              "statements": [
                {
                  "assignments": [
                    9303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9303,
                      "mutability": "mutable",
                      "name": "lastTokenIndex",
                      "nameLocation": "42944:14:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 9343,
                      "src": "42936:22:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9302,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "42936:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9308,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 9304,
                        "name": "_allTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9030,
                        "src": "42961:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 9305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "42961:17:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 9306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "42981:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "42961:21:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "42936:46:52"
                },
                {
                  "assignments": [
                    9310
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9310,
                      "mutability": "mutable",
                      "name": "tokenIndex",
                      "nameLocation": "43000:10:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 9343,
                      "src": "42992:18:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9309,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "42992:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9314,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9311,
                      "name": "_allTokensIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9034,
                      "src": "43013:15:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 9313,
                    "indexExpression": {
                      "id": 9312,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9299,
                      "src": "43029:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "43013:24:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "42992:45:52"
                },
                {
                  "assignments": [
                    9316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9316,
                      "mutability": "mutable",
                      "name": "lastTokenId",
                      "nameLocation": "43367:11:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 9343,
                      "src": "43359:19:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9315,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "43359:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9320,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9317,
                      "name": "_allTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9030,
                      "src": "43381:10:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 9319,
                    "indexExpression": {
                      "id": 9318,
                      "name": "lastTokenIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9303,
                      "src": "43392:14:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "43381:26:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "43359:48:52"
                },
                {
                  "expression": {
                    "id": 9325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9321,
                        "name": "_allTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9030,
                        "src": "43418:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 9323,
                      "indexExpression": {
                        "id": 9322,
                        "name": "tokenIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9310,
                        "src": "43429:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "43418:22:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9324,
                      "name": "lastTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9316,
                      "src": "43443:11:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "43418:36:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9326,
                  "nodeType": "ExpressionStatement",
                  "src": "43418:36:52"
                },
                {
                  "expression": {
                    "id": 9331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9327,
                        "name": "_allTokensIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9034,
                        "src": "43522:15:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 9329,
                      "indexExpression": {
                        "id": 9328,
                        "name": "lastTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9316,
                        "src": "43538:11:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "43522:28:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9330,
                      "name": "tokenIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9310,
                      "src": "43553:10:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "43522:41:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9332,
                  "nodeType": "ExpressionStatement",
                  "src": "43522:41:52"
                },
                {
                  "expression": {
                    "id": 9336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "43684:31:52",
                    "subExpression": {
                      "baseExpression": {
                        "id": 9333,
                        "name": "_allTokensIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9034,
                        "src": "43691:15:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 9335,
                      "indexExpression": {
                        "id": 9334,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9299,
                        "src": "43707:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "43691:24:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9337,
                  "nodeType": "ExpressionStatement",
                  "src": "43684:31:52"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 9338,
                        "name": "_allTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9030,
                        "src": "43725:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 9340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "src": "43725:14:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer)"
                      }
                    },
                    "id": 9341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "43725:16:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9342,
                  "nodeType": "ExpressionStatement",
                  "src": "43725:16:52"
                }
              ]
            },
            "id": 9344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeTokenFromAllTokensEnumeration",
            "nameLocation": "42696:36:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9299,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "42741:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9344,
                  "src": "42733:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "42733:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "42732:17:52"
            },
            "returnParameters": {
              "id": 9301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "42758:0:52"
            },
            "scope": 9345,
            "src": "42687:1061:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 9867,
        "src": "37428:6322:52",
        "usedErrors": []
      },
      {
        "id": 9346,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "43752:23:52"
      },
      {
        "absolutePath": "contracts/mixins/PhantomStorageMixin.sol",
        "file": "../../mixins/PhantomStorageMixin.sol",
        "id": 9348,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9867,
        "sourceUnit": 14012,
        "src": "43800:73:52",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9347,
              "name": "PhantomStorageMixin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "43808:19:52",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9349,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9345,
              "src": "43895:16:52"
            },
            "id": 9350,
            "nodeType": "InheritanceSpecifier",
            "src": "43895:16:52"
          },
          {
            "baseName": {
              "id": 9351,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7628,
              "src": "43913:7:52"
            },
            "id": 9352,
            "nodeType": "InheritanceSpecifier",
            "src": "43913:7:52"
          },
          {
            "baseName": {
              "id": 9353,
              "name": "PhantomStorageMixin",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14011,
              "src": "43922:19:52"
            },
            "id": 9354,
            "nodeType": "InheritanceSpecifier",
            "src": "43922:19:52"
          }
        ],
        "canonicalName": "NovaNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 9866,
        "linearizedBaseContracts": [
          9866,
          14011,
          22619,
          22603,
          15621,
          7628,
          9345,
          7657,
          9011,
          8202,
          7436,
          7679,
          7323,
          7295
        ],
        "name": "NovaNFT",
        "nameLocation": "43884:7:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9357,
            "libraryName": {
              "id": 9355,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7881,
              "src": "43954:7:52"
            },
            "nodeType": "UsingForDirective",
            "src": "43948:26:52",
            "typeName": {
              "id": 9356,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "43966:7:52",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "8d859f3e",
            "id": 9360,
            "mutability": "mutable",
            "name": "PRICE",
            "nameLocation": "44022:5:52",
            "nodeType": "VariableDeclaration",
            "scope": 9866,
            "src": "44007:27:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9358,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "44007:7:52",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653231",
              "id": 9359,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "44030:4:52",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000"
              },
              "value": "1e21"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f5beb2ed",
            "id": 9363,
            "mutability": "mutable",
            "name": "MAX_NovaNFTs",
            "nameLocation": "44055:12:52",
            "nodeType": "VariableDeclaration",
            "scope": 9866,
            "src": "44040:34:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9361,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "44040:7:52",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32303135",
              "id": 9362,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "44070:4:52",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2015_by_1",
                "typeString": "int_const 2015"
              },
              "value": "2015"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "36c4ff7a",
            "id": 9366,
            "mutability": "constant",
            "name": "payoutAddr",
            "nameLocation": "44155:10:52",
            "nodeType": "VariableDeclaration",
            "scope": 9866,
            "src": "44131:79:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9364,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "44131:7:52",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307865653941626233413144334430394432453235383836326636394435324145646232363233303838",
              "id": 9365,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "44168:42:52",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xee9Abb3A1D3D09D2E258862f69D52AEdb2623088"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e7ec9f30",
            "id": 9369,
            "mutability": "constant",
            "name": "UST",
            "nameLocation": "44282:3:52",
            "nodeType": "VariableDeclaration",
            "scope": 9866,
            "src": "44258:72:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9367,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "44258:7:52",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307861343763386266333766393261426564344131323642444138303741376237343938363631616344",
              "id": 9368,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "44288:42:52",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xa47c8bf37f92aBed4A126BDA807A7b7498661acD"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fec303b3",
            "id": 9371,
            "mutability": "mutable",
            "name": "numNovasMinted",
            "nameLocation": "44431:14:52",
            "nodeType": "VariableDeclaration",
            "scope": 9866,
            "src": "44416:29:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9370,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "44416:7:52",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d547cfb7",
            "id": 9374,
            "mutability": "mutable",
            "name": "baseTokenURI",
            "nameLocation": "44465:12:52",
            "nodeType": "VariableDeclaration",
            "scope": 9866,
            "src": "44451:31:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 9372,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "44451:6:52",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 9373,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "44480:2:52",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cc9e7985",
            "id": 9377,
            "mutability": "mutable",
            "name": "fNOVAClaimed",
            "nameLocation": "44530:12:52",
            "nodeType": "VariableDeclaration",
            "scope": 9866,
            "src": "44518:32:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9375,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "44518:4:52",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 9376,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "44545:5:52",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc27f3ae",
            "id": 9380,
            "mutability": "mutable",
            "name": "nftSaleBegun",
            "nameLocation": "44568:12:52",
            "nodeType": "VariableDeclaration",
            "scope": 9866,
            "src": "44556:32:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9378,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "44556:4:52",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 9379,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "44583:5:52",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8456cb59",
            "id": 9383,
            "mutability": "mutable",
            "name": "pause",
            "nameLocation": "44607:5:52",
            "nodeType": "VariableDeclaration",
            "scope": 9866,
            "src": "44595:25:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9381,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "44595:4:52",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 9382,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "44615:5:52",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2b4403bb",
            "id": 9386,
            "mutability": "mutable",
            "name": "teamMintStarted",
            "nameLocation": "44638:15:52",
            "nodeType": "VariableDeclaration",
            "scope": 9866,
            "src": "44626:35:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9384,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "44626:4:52",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 9385,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "44656:5:52",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "29fc6bae",
            "id": 9389,
            "mutability": "mutable",
            "name": "isAllowListActive",
            "nameLocation": "44679:17:52",
            "nodeType": "VariableDeclaration",
            "scope": 9866,
            "src": "44667:37:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9387,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "44667:4:52",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 9388,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "44699:5:52",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9393,
            "mutability": "mutable",
            "name": "_allowList",
            "nameLocation": "44772:10:52",
            "nodeType": "VariableDeclaration",
            "scope": 9866,
            "src": "44738:44:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 9392,
              "keyType": {
                "id": 9390,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "44746:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "44738:25:52",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 9391,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "44757:5:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9397,
            "mutability": "mutable",
            "name": "_isClaimed",
            "nameLocation": "44822:10:52",
            "nodeType": "VariableDeclaration",
            "scope": 9866,
            "src": "44789:43:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 9396,
              "keyType": {
                "id": 9394,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "44797:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "44789:24:52",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 9395,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "44808:4:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 9403,
            "name": "NovaMint",
            "nameLocation": "44882:8:52",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9399,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "44899:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9403,
                  "src": "44891:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "44891:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9401,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "44912:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9403,
                  "src": "44907:11:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9400,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "44907:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "44890:29:52"
            },
            "src": "44876:44:52"
          },
          {
            "body": {
              "id": 9415,
              "nodeType": "Block",
              "src": "45059:2:52",
              "statements": []
            },
            "id": 9416,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 9408,
                    "name": "storageFactoryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9405,
                    "src": "44999:21:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 9409,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9407,
                  "name": "PhantomStorageMixin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14011,
                  "src": "44979:19:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "44979:42:52"
              },
              {
                "arguments": [
                  {
                    "hexValue": "4e6f766144616f2046696e616e6365",
                    "id": 9411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "45029:17:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_968b1ad35437c3cd10899ea19e28c7d646319c8720138c44c649653912a5a659",
                      "typeString": "literal_string \"NovaDao Finance\""
                    },
                    "value": "NovaDao Finance"
                  },
                  {
                    "hexValue": "4e6f76614e4654",
                    "id": 9412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "45048:9:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_be4960e7d59b1fc07bad3a4bf0b4da888c02837bd34d8beeb62a451c60b74e3d",
                      "typeString": "literal_string \"NovaNFT\""
                    },
                    "value": "NovaNFT"
                  }
                ],
                "id": 9413,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9410,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9011,
                  "src": "45022:6:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "45022:36:52"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9405,
                  "mutability": "mutable",
                  "name": "storageFactoryAddress",
                  "nameLocation": "44956:21:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9416,
                  "src": "44948:29:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "44948:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "44946:32:52"
            },
            "returnParameters": {
              "id": 9414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45059:0:52"
            },
            "scope": 9866,
            "src": "44935:126:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9426,
              "nodeType": "Block",
              "src": "45383:55:52",
              "statements": [
                {
                  "expression": {
                    "id": 9424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9421,
                      "name": "isAllowListActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9389,
                      "src": "45393:17:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "45413:18:52",
                      "subExpression": {
                        "id": 9422,
                        "name": "isAllowListActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9389,
                        "src": "45414:17:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "45393:38:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9425,
                  "nodeType": "ExpressionStatement",
                  "src": "45393:38:52"
                }
              ]
            },
            "functionSelector": "ef3b2ce7",
            "id": 9427,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9419,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9418,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7571,
                  "src": "45373:9:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "45373:9:52"
              }
            ],
            "name": "setIsAllowListActive",
            "nameLocation": "45341:20:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45361:2:52"
            },
            "returnParameters": {
              "id": 9420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45383:0:52"
            },
            "scope": 9866,
            "src": "45332:106:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9437,
              "nodeType": "Block",
              "src": "45507:44:52",
              "statements": [
                {
                  "expression": {
                    "id": 9435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9432,
                      "name": "fNOVAClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9377,
                      "src": "45516:12:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "45531:13:52",
                      "subExpression": {
                        "id": 9433,
                        "name": "fNOVAClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9377,
                        "src": "45532:12:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "45516:28:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9436,
                  "nodeType": "ExpressionStatement",
                  "src": "45516:28:52"
                }
              ]
            },
            "functionSelector": "4c38b2f1",
            "id": 9438,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9430,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9429,
                  "name": "onlyRegisteredContracts",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13961,
                  "src": "45483:23:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "45483:23:52"
              }
            ],
            "name": "togglefNOVAClaimed",
            "nameLocation": "45453:18:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45471:2:52"
            },
            "returnParameters": {
              "id": 9431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45507:0:52"
            },
            "scope": 9866,
            "src": "45444:107:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9448,
              "nodeType": "Block",
              "src": "45609:50:52",
              "statements": [
                {
                  "expression": {
                    "id": 9446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9443,
                      "name": "teamMintStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9386,
                      "src": "45618:15:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "45636:16:52",
                      "subExpression": {
                        "id": 9444,
                        "name": "teamMintStarted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9386,
                        "src": "45637:15:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "45618:34:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9447,
                  "nodeType": "ExpressionStatement",
                  "src": "45618:34:52"
                }
              ]
            },
            "functionSelector": "5a7dab1d",
            "id": 9449,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9441,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9440,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7571,
                  "src": "45599:9:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "45599:9:52"
              }
            ],
            "name": "toggleTeamMintStarted",
            "nameLocation": "45566:21:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45587:2:52"
            },
            "returnParameters": {
              "id": 9442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45609:0:52"
            },
            "scope": 9866,
            "src": "45557:102:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9459,
              "nodeType": "Block",
              "src": "45725:44:52",
              "statements": [
                {
                  "expression": {
                    "id": 9457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9454,
                      "name": "nftSaleBegun",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9380,
                      "src": "45734:12:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "45749:13:52",
                      "subExpression": {
                        "id": 9455,
                        "name": "nftSaleBegun",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9380,
                        "src": "45750:12:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "45734:28:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9458,
                  "nodeType": "ExpressionStatement",
                  "src": "45734:28:52"
                }
              ]
            },
            "functionSelector": "30f280bb",
            "id": 9460,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9452,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9451,
                  "name": "onlyRegisteredContracts",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13961,
                  "src": "45701:23:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "45701:23:52"
              }
            ],
            "name": "toggleSaleBegun",
            "nameLocation": "45674:15:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45689:2:52"
            },
            "returnParameters": {
              "id": 9453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45725:0:52"
            },
            "scope": 9866,
            "src": "45665:104:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9470,
              "nodeType": "Block",
              "src": "45831:31:52",
              "statements": [
                {
                  "expression": {
                    "id": 9468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9465,
                      "name": "pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9383,
                      "src": "45841:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "45849:6:52",
                      "subExpression": {
                        "id": 9466,
                        "name": "pause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9383,
                        "src": "45850:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "45841:14:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9469,
                  "nodeType": "ExpressionStatement",
                  "src": "45841:14:52"
                }
              ]
            },
            "functionSelector": "c4ae3168",
            "id": 9471,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9463,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9462,
                  "name": "onlyRegisteredContracts",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13961,
                  "src": "45807:23:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "45807:23:52"
              }
            ],
            "name": "togglePause",
            "nameLocation": "45784:11:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45795:2:52"
            },
            "returnParameters": {
              "id": 9464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45831:0:52"
            },
            "scope": 9866,
            "src": "45775:87:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9486,
              "nodeType": "Block",
              "src": "45956:54:52",
              "statements": [
                {
                  "expression": {
                    "id": 9482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9480,
                      "name": "PRICE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9360,
                      "src": "45966:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9481,
                      "name": "inPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9473,
                      "src": "45974:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "45966:15:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9483,
                  "nodeType": "ExpressionStatement",
                  "src": "45966:15:52"
                },
                {
                  "expression": {
                    "id": 9484,
                    "name": "PRICE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9360,
                    "src": "45998:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9479,
                  "id": 9485,
                  "nodeType": "Return",
                  "src": "45991:12:52"
                }
              ]
            },
            "functionSelector": "91b7f5ed",
            "id": 9487,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9476,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9475,
                  "name": "onlyRegisteredContracts",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13961,
                  "src": "45914:23:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "45914:23:52"
              }
            ],
            "name": "setPrice",
            "nameLocation": "45881:8:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9473,
                  "mutability": "mutable",
                  "name": "inPrice",
                  "nameLocation": "45898:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9487,
                  "src": "45890:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "45890:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "45889:17:52"
            },
            "returnParameters": {
              "id": 9479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9478,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9487,
                  "src": "45947:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "45947:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "45946:9:52"
            },
            "scope": 9866,
            "src": "45872:138:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9508,
              "nodeType": "Block",
              "src": "46085:107:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9495,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9489,
                          "src": "46103:5:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "46120:1:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "46112:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9496,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "46112:7:52",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "46112:10:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "46103:19:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420616464206e756c6c2061646472657373",
                        "id": 9501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "46124:25:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6274f6d74f0bf4a221baf2f9dad976bebab2a7815d9eb808cfc315ddbe360fa",
                          "typeString": "literal_string \"Cannot add null address\""
                        },
                        "value": "Cannot add null address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6274f6d74f0bf4a221baf2f9dad976bebab2a7815d9eb808cfc315ddbe360fa",
                          "typeString": "literal_string \"Cannot add null address\""
                        }
                      ],
                      "id": 9494,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "46095:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "46095:55:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9503,
                  "nodeType": "ExpressionStatement",
                  "src": "46095:55:52"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 9504,
                      "name": "_isClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9397,
                      "src": "46168:10:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 9506,
                    "indexExpression": {
                      "id": 9505,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9489,
                      "src": "46179:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "46168:17:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9493,
                  "id": 9507,
                  "nodeType": "Return",
                  "src": "46161:24:52"
                }
              ]
            },
            "functionSelector": "02ce6e71",
            "id": 9509,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isClaimedBy",
            "nameLocation": "46029:11:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9489,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "46049:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9509,
                  "src": "46041:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "46041:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46040:15:52"
            },
            "returnParameters": {
              "id": 9493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9492,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9509,
                  "src": "46079:4:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9491,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "46079:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46078:6:52"
            },
            "scope": 9866,
            "src": "46020:172:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9543,
              "nodeType": "Block",
              "src": "46572:136:52",
              "statements": [
                {
                  "body": {
                    "id": 9541,
                    "nodeType": "Block",
                    "src": "46629:73:52",
                    "statements": [
                      {
                        "expression": {
                          "id": 9539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 9531,
                              "name": "_allowList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9393,
                              "src": "46643:10:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                                "typeString": "mapping(address => uint8)"
                              }
                            },
                            "id": 9535,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 9532,
                                "name": "addresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9512,
                                "src": "46654:9:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 9534,
                              "indexExpression": {
                                "id": 9533,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9521,
                                "src": "46664:1:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "46654:12:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "46643:24:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 9536,
                              "name": "fNovaPredetermined",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9515,
                              "src": "46670:18:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
                                "typeString": "uint8[] calldata"
                              }
                            },
                            "id": 9538,
                            "indexExpression": {
                              "id": 9537,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9521,
                              "src": "46689:1:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "46670:21:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "46643:48:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 9540,
                        "nodeType": "ExpressionStatement",
                        "src": "46643:48:52"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9524,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9521,
                      "src": "46602:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 9525,
                        "name": "addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9512,
                        "src": "46606:9:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 9526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "46606:16:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "46602:20:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9542,
                  "initializationExpression": {
                    "assignments": [
                      9521
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 9521,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "46595:1:52",
                        "nodeType": "VariableDeclaration",
                        "scope": 9542,
                        "src": "46587:9:52",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9520,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "46587:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 9523,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 9522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "46599:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "46587:13:52"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 9529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "46624:3:52",
                      "subExpression": {
                        "id": 9528,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9521,
                        "src": "46624:1:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9530,
                    "nodeType": "ExpressionStatement",
                    "src": "46624:3:52"
                  },
                  "nodeType": "ForStatement",
                  "src": "46582:120:52"
                }
              ]
            },
            "functionSelector": "62830fe2",
            "id": 9544,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9518,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9517,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7571,
                  "src": "46562:9:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "46562:9:52"
              }
            ],
            "name": "setAllowList",
            "nameLocation": "46473:12:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9512,
                  "mutability": "mutable",
                  "name": "addresses",
                  "nameLocation": "46505:9:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9544,
                  "src": "46486:28:52",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9510,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "46486:7:52",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 9511,
                    "nodeType": "ArrayTypeName",
                    "src": "46486:9:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9515,
                  "mutability": "mutable",
                  "name": "fNovaPredetermined",
                  "nameLocation": "46533:18:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9544,
                  "src": "46516:35:52",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9513,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "46516:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 9514,
                    "nodeType": "ArrayTypeName",
                    "src": "46516:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46485:67:52"
            },
            "returnParameters": {
              "id": 9519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "46572:0:52"
            },
            "scope": 9866,
            "src": "46464:244:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9570,
              "nodeType": "Block",
              "src": "46793:125:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9554,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "46811:3:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "46811:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "46833:1:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "46825:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9556,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "46825:7:52",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "46825:10:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "46811:24:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f742061646420746f206e756c6c2061646472657373",
                        "id": 9561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "46837:28:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2fc1bce632d1f22c2eb9e62a1d9c08ac139f9088a434d2d14944ff6d62eca0ba",
                          "typeString": "literal_string \"Cannot add to null address\""
                        },
                        "value": "Cannot add to null address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2fc1bce632d1f22c2eb9e62a1d9c08ac139f9088a434d2d14944ff6d62eca0ba",
                          "typeString": "literal_string \"Cannot add to null address\""
                        }
                      ],
                      "id": 9553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "46803:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "46803:63:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9563,
                  "nodeType": "ExpressionStatement",
                  "src": "46803:63:52"
                },
                {
                  "expression": {
                    "id": 9568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9564,
                        "name": "_allowList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9393,
                        "src": "46876:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 9566,
                      "indexExpression": {
                        "id": 9565,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9546,
                        "src": "46887:8:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "46876:20:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9567,
                      "name": "_fNovaAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9548,
                      "src": "46899:12:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "46876:35:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 9569,
                  "nodeType": "ExpressionStatement",
                  "src": "46876:35:52"
                }
              ]
            },
            "functionSelector": "549b0726",
            "id": 9571,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9551,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9550,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7571,
                  "src": "46783:9:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "46783:9:52"
              }
            ],
            "name": "addAllowList",
            "nameLocation": "46723:12:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9546,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "46744:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9571,
                  "src": "46736:16:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "46736:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9548,
                  "mutability": "mutable",
                  "name": "_fNovaAmount",
                  "nameLocation": "46760:12:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9571,
                  "src": "46754:18:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 9547,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "46754:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46735:38:52"
            },
            "returnParameters": {
              "id": 9552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "46793:0:52"
            },
            "scope": 9866,
            "src": "46714:204:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9582,
              "nodeType": "Block",
              "src": "46988:42:52",
              "statements": [
                {
                  "expression": {
                    "id": 9580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9578,
                      "name": "MAX_NovaNFTs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9363,
                      "src": "46998:12:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9579,
                      "name": "_newSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9573,
                      "src": "47013:10:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "46998:25:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9581,
                  "nodeType": "ExpressionStatement",
                  "src": "46998:25:52"
                }
              ]
            },
            "functionSelector": "631065f0",
            "id": 9583,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9576,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9575,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7571,
                  "src": "46978:9:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "46978:9:52"
              }
            ],
            "name": "adjustNFTSupply",
            "nameLocation": "46933:15:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9573,
                  "mutability": "mutable",
                  "name": "_newSupply",
                  "nameLocation": "46957:10:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9583,
                  "src": "46949:18:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "46949:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46948:20:52"
            },
            "returnParameters": {
              "id": 9577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "46988:0:52"
            },
            "scope": 9866,
            "src": "46924:106:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9670,
              "nodeType": "Block",
              "src": "47325:902:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9587,
                        "name": "isAllowListActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9389,
                        "src": "47343:17:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c6f77206c697374206973206e6f7420616374697665",
                        "id": 9588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "47362:26:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e8cef2d29fc806c59ddac68e0a8215a8916bd20b5c0679c3af9a815514d4eb4d",
                          "typeString": "literal_string \"Allow list is not active\""
                        },
                        "value": "Allow list is not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e8cef2d29fc806c59ddac68e0a8215a8916bd20b5c0679c3af9a815514d4eb4d",
                          "typeString": "literal_string \"Allow list is not active\""
                        }
                      ],
                      "id": 9586,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "47335:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "47335:54:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9590,
                  "nodeType": "ExpressionStatement",
                  "src": "47335:54:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 9597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 9592,
                            "name": "_allowList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9393,
                            "src": "47407:10:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                              "typeString": "mapping(address => uint8)"
                            }
                          },
                          "id": 9595,
                          "indexExpression": {
                            "expression": {
                              "id": 9593,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "47418:3:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "47418:10:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "47407:22:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 9596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "47433:1:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "47407:27:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f72727920796f7520617265206e6f7420574c20617070726f766564",
                        "id": 9598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "47436:31:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cbb9f20f302261ae3169d1cdc918692be1808595b33d6d88f8ccd0869913e05",
                          "typeString": "literal_string \"Sorry you are not WL approved\""
                        },
                        "value": "Sorry you are not WL approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cbb9f20f302261ae3169d1cdc918692be1808595b33d6d88f8ccd0869913e05",
                          "typeString": "literal_string \"Sorry you are not WL approved\""
                        }
                      ],
                      "id": 9591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "47399:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "47399:69:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9600,
                  "nodeType": "ExpressionStatement",
                  "src": "47399:69:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9602,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "47487:3:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "47487:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "47509:1:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "47501:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9604,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "47501:7:52",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "47501:10:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "47487:24:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74206d696e7420746f206e756c6c2061646472657373",
                        "id": 9609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "47513:29:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4f9a1783dd4e9f21fdd2f774b0d15cd69d4526be584931dea5d53fe3f3e6a43",
                          "typeString": "literal_string \"Cannot mint to null address\""
                        },
                        "value": "Cannot mint to null address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4f9a1783dd4e9f21fdd2f774b0d15cd69d4526be584931dea5d53fe3f3e6a43",
                          "typeString": "literal_string \"Cannot mint to null address\""
                        }
                      ],
                      "id": 9601,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "47478:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "47478:65:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9611,
                  "nodeType": "ExpressionStatement",
                  "src": "47478:65:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9613,
                        "name": "nftSaleBegun",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9380,
                        "src": "47561:12:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f727279206d696e74696e6720706572696f642069736e27742063757272656e746c79206f6e676f696e67",
                        "id": 9614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "47575:46:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37f67e2d9e8a9e66296b2e1672720d0e9e6507889bc5c630da646e98959c9bc4",
                          "typeString": "literal_string \"Sorry minting period isn't currently ongoing\""
                        },
                        "value": "Sorry minting period isn't currently ongoing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37f67e2d9e8a9e66296b2e1672720d0e9e6507889bc5c630da646e98959c9bc4",
                          "typeString": "literal_string \"Sorry minting period isn't currently ongoing\""
                        }
                      ],
                      "id": 9612,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "47553:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "47553:69:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9616,
                  "nodeType": "ExpressionStatement",
                  "src": "47553:69:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9618,
                          "name": "numNovasMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9371,
                          "src": "47640:14:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 9619,
                          "name": "MAX_NovaNFTs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9363,
                          "src": "47657:12:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "47640:29:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74696e6720776f756c642065786365656420737570706c7921",
                        "id": 9621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "47671:30:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8eb346e5c60d5b7c84e37cfee4c538cd5952f2ed74ad763f014cf834fda002e7",
                          "typeString": "literal_string \"Minting would exceed supply!\""
                        },
                        "value": "Minting would exceed supply!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8eb346e5c60d5b7c84e37cfee4c538cd5952f2ed74ad763f014cf834fda002e7",
                          "typeString": "literal_string \"Minting would exceed supply!\""
                        }
                      ],
                      "id": 9617,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "47632:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "47632:70:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9623,
                  "nodeType": "ExpressionStatement",
                  "src": "47632:70:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "47720:23:52",
                        "subExpression": {
                          "baseExpression": {
                            "id": 9625,
                            "name": "_isClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9397,
                            "src": "47721:10:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 9628,
                          "indexExpression": {
                            "expression": {
                              "id": 9626,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "47732:3:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "47732:10:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "47721:22:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206861766520616c726561647920636c61696d656420796f7572204e4654",
                        "id": 9630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "47745:35:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00ee712abd822f5e917810ce84933b929dd3b418ba4480935bd1a142a29a7a99",
                          "typeString": "literal_string \"You have already claimed your NFT\""
                        },
                        "value": "You have already claimed your NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00ee712abd822f5e917810ce84933b929dd3b418ba4480935bd1a142a29a7a99",
                          "typeString": "literal_string \"You have already claimed your NFT\""
                        }
                      ],
                      "id": 9624,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "47712:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "47712:69:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9632,
                  "nodeType": "ExpressionStatement",
                  "src": "47712:69:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9634,
                          "name": "PRICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9360,
                          "src": "47799:5:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 9635,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "47808:3:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "47808:9:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "47799:18:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520616d6f756e7420646573706f73697465642069736e277420636f7272656374",
                        "id": 9638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "47819:37:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f9940074344c6d192fdefe5e14138f42e50758c4eb3d48968ceecb320a95a97",
                          "typeString": "literal_string \"The amount desposited isn't correct\""
                        },
                        "value": "The amount desposited isn't correct"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f9940074344c6d192fdefe5e14138f42e50758c4eb3d48968ceecb320a95a97",
                          "typeString": "literal_string \"The amount desposited isn't correct\""
                        }
                      ],
                      "id": 9633,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "47791:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "47791:66:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9640,
                  "nodeType": "ExpressionStatement",
                  "src": "47791:66:52"
                },
                {
                  "assignments": [
                    9642
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9642,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "48041:7:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 9670,
                      "src": "48033:15:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9641,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "48033:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9646,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9643,
                      "name": "numNovasMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9371,
                      "src": "48051:14:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 9644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "48068:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "48051:18:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "48033:36:52"
                },
                {
                  "expression": {
                    "id": 9649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9647,
                      "name": "numNovasMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9371,
                      "src": "48079:14:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 9648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "48097:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "48079:19:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9650,
                  "nodeType": "ExpressionStatement",
                  "src": "48079:19:52"
                },
                {
                  "expression": {
                    "id": 9656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9651,
                        "name": "_isClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9397,
                        "src": "48108:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 9654,
                      "indexExpression": {
                        "expression": {
                          "id": 9652,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "48119:3:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "48119:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "48108:22:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 9655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "48133:4:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "48108:29:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9657,
                  "nodeType": "ExpressionStatement",
                  "src": "48108:29:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9659,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "48158:3:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "48158:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9661,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9642,
                        "src": "48170:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9658,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8707,
                        8736
                      ],
                      "referencedDeclaration": 8707,
                      "src": "48148:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "48148:30:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9663,
                  "nodeType": "ExpressionStatement",
                  "src": "48148:30:52"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9665,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "48203:3:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "48203:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 9667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "48215:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 9664,
                      "name": "NovaMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9403,
                      "src": "48194:8:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 9668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "48194:26:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9669,
                  "nodeType": "EmitStatement",
                  "src": "48189:31:52"
                }
              ]
            },
            "functionSelector": "719414b4",
            "id": 9671,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nftMint",
            "nameLocation": "47298:7:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "47305:2:52"
            },
            "returnParameters": {
              "id": 9585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "47325:0:52"
            },
            "scope": 9866,
            "src": "47289:938:52",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9727,
              "nodeType": "Block",
              "src": "48348:416:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9679,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9673,
                          "src": "48366:8:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "48386:1:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "48378:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9680,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "48378:7:52",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "48378:10:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "48366:22:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74206d696e7420746f206e756c6c2061646472657373",
                        "id": 9685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "48390:29:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4f9a1783dd4e9f21fdd2f774b0d15cd69d4526be584931dea5d53fe3f3e6a43",
                          "typeString": "literal_string \"Cannot mint to null address\""
                        },
                        "value": "Cannot mint to null address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4f9a1783dd4e9f21fdd2f774b0d15cd69d4526be584931dea5d53fe3f3e6a43",
                          "typeString": "literal_string \"Cannot mint to null address\""
                        }
                      ],
                      "id": 9678,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "48358:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "48358:62:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9687,
                  "nodeType": "ExpressionStatement",
                  "src": "48358:62:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9689,
                        "name": "teamMintStarted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9386,
                        "src": "48438:15:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5465616d206d696e74696e67206e6f7420737461727465642e",
                        "id": 9690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "48455:27:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee28068f7cf5801670d67e8a9140c9520c4704ea762ce81470ddaee05dd0ee8f",
                          "typeString": "literal_string \"Team minting not started.\""
                        },
                        "value": "Team minting not started."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee28068f7cf5801670d67e8a9140c9520c4704ea762ce81470ddaee05dd0ee8f",
                          "typeString": "literal_string \"Team minting not started.\""
                        }
                      ],
                      "id": 9688,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "48430:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "48430:53:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9692,
                  "nodeType": "ExpressionStatement",
                  "src": "48430:53:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9694,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9097,
                            "src": "48501:11:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 9695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "48501:13:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 9696,
                          "name": "MAX_NovaNFTs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9363,
                          "src": "48517:12:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "48501:28:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c207465616d20746f6b656e73206d696e7465642e",
                        "id": 9698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "48531:25:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f00a7a5ced4bfe221df594e22f5be0192985aecf23e057b9c5b9e3b7fb71c82a",
                          "typeString": "literal_string \"All team tokens minted.\""
                        },
                        "value": "All team tokens minted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f00a7a5ced4bfe221df594e22f5be0192985aecf23e057b9c5b9e3b7fb71c82a",
                          "typeString": "literal_string \"All team tokens minted.\""
                        }
                      ],
                      "id": 9693,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "48493:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "48493:64:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9700,
                  "nodeType": "ExpressionStatement",
                  "src": "48493:64:52"
                },
                {
                  "assignments": [
                    9702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9702,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "48584:7:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 9727,
                      "src": "48576:15:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9701,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "48576:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9706,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9703,
                      "name": "numNovasMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9371,
                      "src": "48594:14:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 9704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "48611:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "48594:18:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "48576:36:52"
                },
                {
                  "expression": {
                    "id": 9709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9707,
                      "name": "numNovasMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9371,
                      "src": "48622:14:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 9708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "48640:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "48622:19:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9710,
                  "nodeType": "ExpressionStatement",
                  "src": "48622:19:52"
                },
                {
                  "expression": {
                    "id": 9715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9711,
                        "name": "_isClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9397,
                        "src": "48651:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 9713,
                      "indexExpression": {
                        "id": 9712,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9673,
                        "src": "48662:8:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "48651:20:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 9714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "48674:4:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "48651:27:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9716,
                  "nodeType": "ExpressionStatement",
                  "src": "48651:27:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9718,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9673,
                        "src": "48699:8:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9719,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9702,
                        "src": "48709:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9717,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8707,
                        8736
                      ],
                      "referencedDeclaration": 8707,
                      "src": "48689:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "48689:28:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9721,
                  "nodeType": "ExpressionStatement",
                  "src": "48689:28:52"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9723,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9673,
                        "src": "48742:8:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 9724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "48752:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 9722,
                      "name": "NovaMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9403,
                      "src": "48733:8:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 9725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "48733:24:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9726,
                  "nodeType": "EmitStatement",
                  "src": "48728:29:52"
                }
              ]
            },
            "functionSelector": "b6a1dba1",
            "id": 9728,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9676,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9675,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7571,
                  "src": "48339:9:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "48339:9:52"
              }
            ],
            "name": "teamMint",
            "nameLocation": "48295:8:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9673,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "48312:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9728,
                  "src": "48304:16:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "48304:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "48303:18:52"
            },
            "returnParameters": {
              "id": 9677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "48348:0:52"
            },
            "scope": 9866,
            "src": "48286:478:52",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9184
            ],
            "body": {
              "id": 9762,
              "nodeType": "Block",
              "src": "49164:336:52",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9738,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9730,
                      "src": "49264:4:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 9741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "49280:1:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 9740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "49272:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9739,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "49272:7:52",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "49272:10:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "49264:18:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 9760,
                    "nodeType": "Block",
                    "src": "49342:152:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 9752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 9750,
                                "name": "fNOVAClaimed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9377,
                                "src": "49364:12:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 9751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "49380:4:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "49364:20:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536f72727920664e6f766120436c61696d696e6720686173206e6f742079657420656e64656420746f207472616e73666572204e4654",
                              "id": 9753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "49386:56:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9cbe6d466bc39d33f9561f3692f1575064ebe1934c8d0b038e5bb7fe58c60c18",
                                "typeString": "literal_string \"Sorry fNova Claiming has not yet ended to transfer NFT\""
                              },
                              "value": "Sorry fNova Claiming has not yet ended to transfer NFT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9cbe6d466bc39d33f9561f3692f1575064ebe1934c8d0b038e5bb7fe58c60c18",
                                "typeString": "literal_string \"Sorry fNova Claiming has not yet ended to transfer NFT\""
                              }
                            ],
                            "id": 9749,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "49356:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 9754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "49356:87:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9755,
                        "nodeType": "ExpressionStatement",
                        "src": "49356:87:52"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 9756,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "49457:5:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_NovaNFT_$9866_$",
                              "typeString": "type(contract super NovaNFT)"
                            }
                          },
                          "id": 9758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_beforeTokenTransfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9184,
                          "src": "49457:26:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 9759,
                        "nodeType": "ExpressionStatement",
                        "src": "49457:26:52"
                      }
                    ]
                  },
                  "id": 9761,
                  "nodeType": "IfStatement",
                  "src": "49260:234:52",
                  "trueBody": {
                    "id": 9748,
                    "nodeType": "Block",
                    "src": "49285:51:52",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 9744,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "49299:5:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_NovaNFT_$9866_$",
                              "typeString": "type(contract super NovaNFT)"
                            }
                          },
                          "id": 9746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_beforeTokenTransfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9184,
                          "src": "49299:26:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 9747,
                        "nodeType": "ExpressionStatement",
                        "src": "49299:26:52"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 9763,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "49052:20:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9736,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "49155:8:52"
            },
            "parameters": {
              "id": 9735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9730,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "49090:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9763,
                  "src": "49082:12:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "49082:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9732,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "49112:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9763,
                  "src": "49104:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "49104:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9734,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "49132:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9763,
                  "src": "49124:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "49124:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "49072:73:52"
            },
            "returnParameters": {
              "id": 9737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "49164:0:52"
            },
            "scope": 9866,
            "src": "49043:457:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9789,
              "nodeType": "Block",
              "src": "49900:150:52",
              "statements": [
                {
                  "assignments": [
                    9770
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9770,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "49918:7:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 9789,
                      "src": "49910:15:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9769,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "49910:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9776,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 9773,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "49936:4:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NovaNFT_$9866",
                            "typeString": "contract NovaNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_NovaNFT_$9866",
                            "typeString": "contract NovaNFT"
                          }
                        ],
                        "id": 9772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "49928:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9771,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "49928:7:52",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "49928:13:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 9775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "49928:21:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "49910:39:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9778,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9770,
                          "src": "49967:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 9779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "49977:1:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "49967:11:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e737566666963656e742062616c616e6365",
                        "id": 9781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "49980:21:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
                          "typeString": "literal_string \"Insufficent balance\""
                        },
                        "value": "Insufficent balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98f86b41cd62ed2ef8fe1d365da9db0bf0e8060086c1cbbfdbdb0134993180da",
                          "typeString": "literal_string \"Insufficent balance\""
                        }
                      ],
                      "id": 9777,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "49959:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "49959:43:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9783,
                  "nodeType": "ExpressionStatement",
                  "src": "49959:43:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9785,
                        "name": "payoutAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9366,
                        "src": "50023:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9786,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9770,
                        "src": "50035:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9784,
                      "name": "_widthdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9812,
                      "src": "50012:10:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "50012:31:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9788,
                  "nodeType": "ExpressionStatement",
                  "src": "50012:31:52"
                }
              ]
            },
            "documentation": {
              "id": 9764,
              "nodeType": "StructuredDocumentation",
              "src": "49764:91:52",
              "text": " @notice Allow contract owner to withdraw funds directly to the treasury "
            },
            "functionSelector": "853828b6",
            "id": 9790,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9767,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9766,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7571,
                  "src": "49890:9:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "49890:9:52"
              }
            ],
            "name": "withdrawAll",
            "nameLocation": "49869:11:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "49880:2:52"
            },
            "returnParameters": {
              "id": 9768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "49900:0:52"
            },
            "scope": 9866,
            "src": "49860:190:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9811,
              "nodeType": "Block",
              "src": "50165:126:52",
              "statements": [
                {
                  "assignments": [
                    9798,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9798,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "50181:7:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 9811,
                      "src": "50176:12:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 9797,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "50176:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 9805,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 9803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "50226:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 9799,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9792,
                          "src": "50194:8:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 9800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "50194:13:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 9802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 9801,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9794,
                          "src": "50216:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "50194:31:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 9804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "50194:35:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "50175:54:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9807,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9798,
                        "src": "50247:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f20776964746864726177204574686572",
                        "id": 9808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "50256:27:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b09a9274c8b73818a5d8ca23a2f16efef8739ceafe099ea34b37acce93bfb0da",
                          "typeString": "literal_string \"Failed to widthdraw Ether\""
                        },
                        "value": "Failed to widthdraw Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b09a9274c8b73818a5d8ca23a2f16efef8739ceafe099ea34b37acce93bfb0da",
                          "typeString": "literal_string \"Failed to widthdraw Ether\""
                        }
                      ],
                      "id": 9806,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "50239:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "50239:45:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9810,
                  "nodeType": "ExpressionStatement",
                  "src": "50239:45:52"
                }
              ]
            },
            "id": 9812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_widthdraw",
            "nameLocation": "50111:10:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9792,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "50130:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9812,
                  "src": "50122:16:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "50122:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9794,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "50148:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9812,
                  "src": "50140:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9793,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "50140:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "50121:35:52"
            },
            "returnParameters": {
              "id": 9796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "50165:0:52"
            },
            "scope": 9866,
            "src": "50102:189:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 9827,
              "nodeType": "Block",
              "src": "50666:68:52",
              "statements": [
                {
                  "expression": {
                    "id": 9823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9821,
                      "name": "baseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9374,
                      "src": "50676:12:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9822,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9814,
                      "src": "50691:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "50676:22:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 9824,
                  "nodeType": "ExpressionStatement",
                  "src": "50676:22:52"
                },
                {
                  "expression": {
                    "id": 9825,
                    "name": "baseTokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9374,
                    "src": "50715:12:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 9820,
                  "id": 9826,
                  "nodeType": "Return",
                  "src": "50708:19:52"
                }
              ]
            },
            "functionSelector": "37c0df0c",
            "id": 9828,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9817,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9816,
                  "name": "onlyRegisteredContracts",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13961,
                  "src": "50618:23:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "50618:23:52"
              }
            ],
            "name": "setbaseTokenURI",
            "nameLocation": "50572:15:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9814,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nameLocation": "50602:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9828,
                  "src": "50588:21:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9813,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "50588:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "50587:23:52"
            },
            "returnParameters": {
              "id": 9820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9819,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9828,
                  "src": "50651:13:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9818,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "50651:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "50650:15:52"
            },
            "scope": 9866,
            "src": "50563:171:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8403
            ],
            "body": {
              "id": 9864,
              "nodeType": "Block",
              "src": "50837:215:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9838,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9830,
                            "src": "50863:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 9837,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8651,
                          "src": "50855:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 9839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "50855:16:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 9840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "50873:49:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 9836,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "50847:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "50847:76:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9842,
                  "nodeType": "ExpressionStatement",
                  "src": "50847:76:52"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 9849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9845,
                              "name": "baseTokenURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9374,
                              "src": "50946:12:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 9844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "50940:5:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 9843,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "50940:5:52",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "50940:19:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        },
                        "id": 9847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "50940:26:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 9848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "50969:1:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "50940:30:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 9861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "51043:2:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 9862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "50940:105:52",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 9854,
                              "name": "baseTokenURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9374,
                              "src": "50997:12:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 9855,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9830,
                                  "src": "51011:7:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 9856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7763,
                                "src": "51011:16:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 9857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "51011:18:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2e6a736f6e",
                              "id": 9858,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "51031:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                                "typeString": "literal_string \".json\""
                              },
                              "value": ".json"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                                "typeString": "literal_string \".json\""
                              }
                            ],
                            "expression": {
                              "id": 9852,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "50980:3:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 9853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "50980:16:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 9859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "50980:59:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 9851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "50973:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 9850,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "50973:6:52",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "50973:67:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 9835,
                  "id": 9863,
                  "nodeType": "Return",
                  "src": "50933:112:52"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 9865,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "50758:8:52",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9832,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "50804:8:52"
            },
            "parameters": {
              "id": 9831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9830,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "50775:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 9865,
                  "src": "50767:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "50767:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "50766:17:52"
            },
            "returnParameters": {
              "id": 9835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9834,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9865,
                  "src": "50822:13:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9833,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "50822:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "50821:15:52"
            },
            "scope": 9866,
            "src": "50749:303:52",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 9867,
        "src": "43875:7180:52",
        "usedErrors": [
          22610,
          22614,
          22618
        ]
      }
    ],
    "src": "67:50988:52"
  },
  "bytecode": "601260e08181527139b2b1bab934ba3c9730b2323932b9b9b7b360711b6101009081526080918252600d6101209081526c73656375726974792e6e616d6560981b6101405260a0526101a060405260136101609081527f73656375726974792e72656769737465726564000000000000000000000000006101805260c0529091600b916200009091839190620017b5565b506020828101518051620000ab9260018501920190620017b5565b5060408201518051620000c9916002840191602090910190620017b5565b5050604080516103c081018252601b61038082019081527f7068616e746f6d2e636f6e7472616374732e616c7068617377617000000000006103a0830152610100820190815282518084018452601a8082527f7068616e746f6d2e636f6e7472616374732e666f756e646572730000000000006020838101919091526101208501929092528451808601865260198082527f7068616e746f6d2e636f6e7472616374732e7374616b696e67000000000000008285015261014086019190915285518087018752601f81527f7068616e746f6d2e636f6e7472616374732e7374616b696e677761726d75700081850152610160860152855180870187529081527f7068616e746f6d2e636f6e7472616374732e626f6e64696e67000000000000008184015261018085015284518086018652601581527f7068616e746f6d2e636f6e7472616374732e70686d0000000000000000000000818401526101a08501528451808601865260168082527f7068616e746f6d2e636f6e7472616374732e7370686d00000000000000000000828501526101c0860191909152855180870187528181527f7068616e746f6d2e636f6e7472616374732e6770686d00000000000000000000818501526101e0860152855180870187528181527f7068616e746f6d2e636f6e7472616374732e6170686d0000000000000000000081850152610200860152855180870187528181527f7068616e746f6d2e636f6e7472616374732e6670686d00000000000000000000818501526102208601528551808701875260178082527f7068616e746f6d2e636f6e7472616374732e7661756c7400000000000000000082860152610240870191909152865180880188528381527f7068616e746f6d2e636f6e7472616374732e747265617375727900000000000081860152610260870152865180880188529182527f7068616e746f6d2e636f6e7472616374732e74776170000000000000000000008285015261028086019190915285518087018752601d81527f7068616e746f6d2e636f6e7472616374732e626f6e6470726963696e67000000818501526102a086015285518087018752601c81527f7068616e746f6d2e636f6e7472616374732e6465785f726f7574657200000000818501526102c086015285518087018752601e8082527f7068616e746f6d2e636f6e7472616374732e796561726e5f726f757465720000828601526102e0870191909152865180880188528381527f7068616e746f6d2e636f6e7472616374732e6578656375746f7200000000000081860152610300870152865180880188529283527f7068616e746f6d2e636f6e7472616374732e7061796d656e747300000000000083850152610320860192909252855180870187529081527f7068616e746f6d2e636f6e7472616374732e677561726400000000000000000081840152610340850152845180860186529081527f7068616e746f6d2e636f6e7472616374732e61756374696f6e636c61696d000081830152610360840152908252825160c08101909352602a6060840181815292945090840192918291620050cb6080840139815260200160405180606001604052806040518060600160405280602b815260200162005050602b913981526020016040518060400160405280602081526020017f7068616e746f6d2e74726561737572792e6163636f756e745f6b65792e64616f8152508152602001604051806060016040528060258152602001620051db6025913990528152604080518082018252601981527f7068616e746f6d2e74726561737572792e62616c616e636573000000000000006020828101919091529283015291835281516101c0810190925260246101608301818152938201938392830191829160c085019182919062004fe661018088013981526020016040518060600160405280602581526020016200524a602591398152602001604051806060016040528060248152602001620052006024913981526020016040518060600160405280602b81526020016200507b602b913981526020016040518060600160405280602481526020016200526f60249139815250815260200160405180606001604052806025815260200162005145602591398152602001604051806060016040528060298152602001620051b26029913981526020016040518060400160405280601b81526020017f7068616e746f6d2e616c6c6f6361746f722e746f6b656e732e6c70000000000081525081526020016040518060400160405280601f81526020017f7068616e746f6d2e616c6c6f6361746f722e746f6b656e732e73696e676c65008152508152508152508152602001604051806101a0016040528060405180606001604052806040518060600160405280602b8152602001620050f5602b913981526020016040518060600160405280602c815260200162004f94602c913981526020016040518060600160405280602f815260200162004f65602f913981525081526020016040518060400160405280601d81526020017f7068616e746f6d2e626f6e64696e672e76657374696e67626c6f636b7300000081525081526020016040518060400160405280601c81526020017f7068616e746f6d2e626f6e64696e672e70726f6669745f726174696f0000000081525081526020016040518060400160405280601b81526020017f7068616e746f6d2e626f6e64696e672e69735f72656465656d6564000000000081525081526020016040518060600160405280602281526020016200516a6022913981526020016040518060400160405280601881526020017f7068616e746f6d2e626f6e64696e672e69735f76616c6964000000000000000081525081526020016040518060400160405280601a81526020017f7068616e746f6d2e626f6e64696e672e6d756c7469706c69657200000000000081525081526020016040518060400160405280601481526020017f7068616e746f6d2e626f6e64696e672e6465627400000000000000000000000081525081526020016040518060400160405280601e81526020017f7068616e746f6d2e626f6e64696e672e6d61785f646562745f726174696f00008152508152602001604051806060016040528060248152602001620053606024913981526020016040518060400160405280601581526020017f7068616e746f6d2e626f6e64696e672e746f6b656e000000000000000000000081525081526020016040518060400160405280601d81526020017f7068616e746f6d2e626f6e64696e672e6c6173745f636c61696d5f617400000081525081526020016040518060400160405280601b81526020017f7068616e746f6d2e626f6e64696e672e766573745f6c656e6774680000000000815250815250815260200160405180604001604052806040518060400160405280601d81526020017f7068616e746f6d2e7374616b696e672e726562617365436f756e74657200000081525081526020016040518060600160405280602281526020016200533e6022913990528152604080516101408101909152602160e08201818152602090930192829160608301918291620052b761010086013981526020016040518060600160405280602481526020016200502c60249139815260200160405180606001604052806026815260200162004fc060269139815260408051808201825260208082527f7068616e746f6d2e666f756e6465722e636c61696d732e6c617374436c61696d828201529283015291835281516060810183528082018281527f7068616e746f6d2e666f756e6465722e6368616e6765732e6e65774f776e65728285015281528382015281518083018352601d81527f7068616e746f6d2e666f756e6465722e76657374696e6753746172747300000081830152928201929092529183528151610160810190925260226101008301818152939091019282916200500a6101208401398152602001604051806060016040528060238152602001620052d8602391398152602001604051806060016040528060258152602001620051206025913981526020016040518060600160405280602681526020016200518c602691398152602001604051806060016040528060258152602001620050a660259139815260200160405180606001604052806026815260200162005224602691398152602001604051806060016040528060248152602001620052936024913981526020016040518060600160405280602a815260200162005384602a9139815250815260200160405180608001604052806040518060400160405280601c81526020017f7068616e746f6d2e676f7665726e6f722e766f74696e6744656c61790000000081525081526020016040518060400160405280601d81526020017f7068616e746f6d2e676f7665726e6f722e766f74696e67506572696f640000008152508152602001604051806060016040528060218152602001620052fb6021913981526020016040518060600160405280602281526020016200531c6022913990529052805180518051600e9291839162000deb918391602090910190620017b5565b50602082810151805162000e069260018501920190620017b5565b506040820151805162000e24916002840191602090910190620017b5565b506060820151805162000e42916003840191602090910190620017b5565b506080820151805162000e60916004840191602090910190620017b5565b5060a0820151805162000e7e916005840191602090910190620017b5565b5060c0820151805162000e9c916006840191602090910190620017b5565b5060e0820151805162000eba916007840191602090910190620017b5565b50610100820151805162000ed9916008840191602090910190620017b5565b50610120820151805162000ef8916009840191602090910190620017b5565b50610140820151805162000f1791600a840191602090910190620017b5565b50610160820151805162000f3691600b840191602090910190620017b5565b50610180820151805162000f5591600c840191602090910190620017b5565b506101a0820151805162000f7491600d840191602090910190620017b5565b506101c0820151805162000f9391600e840191602090910190620017b5565b506101e0820151805162000fb291600f840191602090910190620017b5565b50610200820151805162000fd1916010840191602090910190620017b5565b50610220820151805162000ff0916011840191602090910190620017b5565b5061024082015180516200100f916012840191602090910190620017b5565b5061026082015180516200102e916013840191602090910190620017b5565b5050506020828101518051805191926014850192620010519284920190620017b5565b506020828101518051805191926001850192620010729284920190620017b5565b5060208281015180516200108d9260018501920190620017b5565b5060408201518051620010ab916002840191602090910190620017b5565b50505060408201518051620010cb916004840191602090910190620017b5565b50505060408201518051805180518051601986019392849290918391620010f891839160200190620017b5565b506020828101518051620011139260018501920190620017b5565b506040820151805162001131916002840191602090910190620017b5565b50606082015180516200114f916003840191602090910190620017b5565b50608082015180516200116d916004840191602090910190620017b5565b50505060208281015180516200118a9260058501920190620017b5565b5060408201518051620011a8916006840191602090910190620017b5565b5060608201518051620011c6916007840191602090910190620017b5565b5060808201518051620011e4916008840191602090910190620017b5565b505050506060830151805180518051929350602285019283916200120e91839160200190620017b5565b506020828101518051620012299260018501920190620017b5565b506040820151805162001247916002840191602090910190620017b5565b5050506020828101518051620012649260038501920190620017b5565b506040820151805162001282916004840191602090910190620017b5565b5060608201518051620012a0916005840191602090910190620017b5565b5060808201518051620012be916006840191602090910190620017b5565b5060a08201518051620012dc916007840191602090910190620017b5565b5060c08201518051620012fa916008840191602090910190620017b5565b5060e0820151805162001318916009840191602090910190620017b5565b5061010082015180516200133791600a840191602090910190620017b5565b5061012082015180516200135691600b840191602090910190620017b5565b5061014082015180516200137591600c840191602090910190620017b5565b5061016082015180516200139491600d840191602090910190620017b5565b506101808201518051620013b391600e840191602090910190620017b5565b5050506080820151805180516031840191620013d591839160200190620017b5565b506020828101518051620013f09260018501920190620017b5565b50505060a0820151805180518051603385019291839162001419918391602090910190620017b5565b506020828101518051620014349260018501920190620017b5565b506040820151805162001452916002840191602090910190620017b5565b506060820151805162001470916003840191602090910190620017b5565b5050506020828101518051805191926004850192620014939284920190620017b5565b50505060408201518051620014b3916005840191602090910190620017b5565b50505060c0820151805180516039840191620014d591839160200190620017b5565b506020828101518051620014f09260018501920190620017b5565b50604082015180516200150e916002840191602090910190620017b5565b50606082015180516200152c916003840191602090910190620017b5565b50608082015180516200154a916004840191602090910190620017b5565b5060a0820151805162001568916005840191602090910190620017b5565b5060c0820151805162001586916006840191602090910190620017b5565b5060e08201518051620015a4916007840191602090910190620017b5565b50505060e0820151805180516041840191620015c691839160200190620017b5565b506020828101518051620015e19260018501920190620017b5565b5060408201518051620015ff916002840191602090910190620017b5565b50606082015180516200161d916003840191602090910190620017b5565b50506d7068616e746f6d53746f7261676560901b6055555050683635c9adc5dea00000605655506107df6057556040805160208101918290526000908190526200166a91605991620017b5565b50605a805464ffffffffff191690553480156200168657600080fd5b50604051620053ae380380620053ae833981016040819052620016a9916200185b565b604080518082018252600f81526e4e6f766144616f2046696e616e636560881b602080830191825283518085019094526007845266139bdd9853919560ca1b908401528151849391620017009160009190620017b5565b50805162001716906001906020840190620017b5565b505050620017336200172d6200175f60201b60201c565b62001763565b6001605355605480546001600160a01b0319166001600160a01b039290921691909117905550620018ca565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620017c3906200188d565b90600052602060002090601f016020900481019282620017e7576000855562001832565b82601f106200180257805160ff191683800117855562001832565b8280016001018555821562001832579182015b828111156200183257825182559160200191906001019062001815565b506200184092915062001844565b5090565b5b8082111562001840576000815560010162001845565b6000602082840312156200186e57600080fd5b81516001600160a01b03811681146200188657600080fd5b9392505050565b600181811c90821680620018a257607f821691505b60208210811415620018c457634e487b7160e01b600052602260045260246000fd5b50919050565b61368b80620018da6000396000f3fe6080604052600436106102675760003560e01c8063715018a611610144578063c4ae3168116100b6578063e985e9c51161007a578063e985e9c5146106e0578063ef3b2ce714610729578063f2fde38b1461073e578063f5beb2ed1461075e578063fc27f3ae14610774578063fec303b31461079357600080fd5b8063c4ae316814610654578063c87b56dd14610669578063cc9e798514610689578063d547cfb7146106a3578063e7ec9f30146106b857600080fd5b80638da5cb5b116101085780638da5cb5b146105ae57806391b7f5ed146105cc57806395d89b41146105ec578063a22cb46514610601578063b6a1dba114610621578063b88d4fde1461063457600080fd5b8063715018a614610546578063719414b41461055b5780638456cb5914610563578063853828b6146105835780638d859f3e1461059857600080fd5b806336c4ff7a116101dd578063549b0726116101a1578063549b0726146104915780635a7dab1d146104b157806362830fe2146104c6578063631065f0146104e65780636352211e1461050657806370a082311461052657600080fd5b806336c4ff7a146103f457806337c0df0c1461041c57806342842e0e1461043c5780634c38b2f11461045c5780634f6ccce71461047157600080fd5b806318160ddd1161022f57806318160ddd1461033d57806323b872dd1461035c57806329fc6bae1461037c5780632b4403bb1461039e5780632f745c59146103bf57806330f280bb146103df57600080fd5b806301ffc9a71461026c57806302ce6e71146102a157806306fdde03146102c1578063081812fc146102e3578063095ea7b31461031b575b600080fd5b34801561027857600080fd5b5061028c610287366004612eb7565b6107a9565b60405190151581526020015b60405180910390f35b3480156102ad57600080fd5b5061028c6102bc366004612ef0565b6107d4565b3480156102cd57600080fd5b506102d6610850565b6040516102989190612f65565b3480156102ef57600080fd5b506103036102fe366004612f78565b6108e2565b6040516001600160a01b039091168152602001610298565b34801561032757600080fd5b5061033b610336366004612f91565b610977565b005b34801561034957600080fd5b506008545b604051908152602001610298565b34801561036857600080fd5b5061033b610377366004612fbd565b610a8d565b34801561038857600080fd5b50605a5461028c90640100000000900460ff1681565b3480156103aa57600080fd5b50605a5461028c906301000000900460ff1681565b3480156103cb57600080fd5b5061034e6103da366004612f91565b610abe565b3480156103eb57600080fd5b5061033b610b54565b34801561040057600080fd5b5061030373ee9abb3a1d3d09d2e258862f69d52aedb262308881565b34801561042857600080fd5b506102d661043736600461308a565b610dff565b34801561044857600080fd5b5061033b610457366004612fbd565b611136565b34801561046857600080fd5b5061033b611151565b34801561047d57600080fd5b5061034e61048c366004612f78565b6113f3565b34801561049d57600080fd5b5061033b6104ac3660046130e9565b611486565b3480156104bd57600080fd5b5061033b61152a565b3480156104d257600080fd5b5061033b6104e136600461316a565b611575565b3480156104f257600080fd5b5061033b610501366004612f78565b611640565b34801561051257600080fd5b50610303610521366004612f78565b61166f565b34801561053257600080fd5b5061034e610541366004612ef0565b6116e6565b34801561055257600080fd5b5061033b61176d565b61033b6117a3565b34801561056f57600080fd5b50605a5461028c9062010000900460ff1681565b34801561058f57600080fd5b5061033b611a64565b3480156105a457600080fd5b5061034e60565481565b3480156105ba57600080fd5b50600a546001600160a01b0316610303565b3480156105d857600080fd5b5061034e6105e7366004612f78565b611af3565b3480156105f857600080fd5b506102d6611d8b565b34801561060d57600080fd5b5061033b61061c3660046131e4565b611d9a565b61033b61062f366004612ef0565b611e5f565b34801561064057600080fd5b5061033b61064f36600461321d565b612029565b34801561066057600080fd5b5061033b612061565b34801561067557600080fd5b506102d6610684366004612f78565b61230e565b34801561069557600080fd5b50605a5461028c9060ff1681565b3480156106af57600080fd5b506102d66123e9565b3480156106c457600080fd5b5061030373a47c8bf37f92abed4a126bda807a7b7498661acd81565b3480156106ec57600080fd5b5061028c6106fb36600461329d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561073557600080fd5b5061033b612477565b34801561074a57600080fd5b5061033b610759366004612ef0565b6124c4565b34801561076a57600080fd5b5061034e60575481565b34801561078057600080fd5b50605a5461028c90610100900460ff1681565b34801561079f57600080fd5b5061034e60585481565b60006001600160e01b0319821663780e9d6360e01b14806107ce57506107ce8261255c565b92915050565b60006001600160a01b0382166108315760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420616464206e756c6c206164647265737300000000000000000060448201526064015b60405180910390fd5b506001600160a01b03166000908152605c602052604090205460ff1690565b60606000805461085f906132cb565b80601f016020809104026020016040519081016040528092919081815260200182805461088b906132cb565b80156108d85780601f106108ad576101008083540402835291602001916108d8565b820191906000526020600020905b8154815290600101906020018083116108bb57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661095b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610828565b506000908152600460205260409020546001600160a01b031690565b60006109828261166f565b9050806001600160a01b0316836001600160a01b031614156109f05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610828565b336001600160a01b0382161480610a0c5750610a0c81336106fb565b610a7e5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610828565b610a8883836125ac565b505050565b610a97338261261a565b610ab35760405162461bcd60e51b815260040161082890613300565b610a88838383612711565b6000610ac9836116e6565b8210610b2b5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610828565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6000610b686054546001600160a01b031690565b6001600160a01b0316631bed52416040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ba5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc99190613351565b905060018115151415610c9a576054546001600160a01b03166001600160a01b0316637ae1cfca33604051602001610c01919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610c3591815260200190565b602060405180830381865afa158015610c52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c769190613351565b610c955760405163372463e360e01b8152336004820152602401610828565b610de1565b6054546001600160a01b03166001600160a01b0316637ae1cfca33604051602001610cc5919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610cf991815260200190565b602060405180830381865afa158015610d16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3a9190613351565b80610dc257506054546001600160a01b03166001600160a01b031663a75b87d26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dad91906133b1565b6001600160a01b0316326001600160a01b0316145b610de15760405163372463e360e01b8152336004820152602401610828565b50605a805461ff001981166101009182900460ff1615909102179055565b60606000610e156054546001600160a01b031690565b6001600160a01b0316631bed52416040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e769190613351565b905060018115151415610f47576054546001600160a01b03166001600160a01b0316637ae1cfca33604051602001610eae919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610ee291815260200190565b602060405180830381865afa158015610eff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f239190613351565b610f425760405163372463e360e01b8152336004820152602401610828565b61108e565b6054546001600160a01b03166001600160a01b0316637ae1cfca33604051602001610f72919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610fa691815260200190565b602060405180830381865afa158015610fc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe79190613351565b8061106f57506054546001600160a01b03166001600160a01b031663a75b87d26040518163ffffffff1660e01b8152600401602060405180830381865afa158015611036573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105a91906133b1565b6001600160a01b0316326001600160a01b0316145b61108e5760405163372463e360e01b8152336004820152602401610828565b82516110a1906059906020860190612e08565b50605980546110af906132cb565b80601f01602080910402602001604051908101604052809291908181526020018280546110db906132cb565b80156111285780601f106110fd57610100808354040283529160200191611128565b820191906000526020600020905b81548152906001019060200180831161110b57829003601f168201915b505050505091505b50919050565b610a8883838360405180602001604052806000815250612029565b60006111656054546001600160a01b031690565b6001600160a01b0316631bed52416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c69190613351565b905060018115151415611297576054546001600160a01b03166001600160a01b0316637ae1cfca336040516020016111fe919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161123291815260200190565b602060405180830381865afa15801561124f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112739190613351565b6112925760405163372463e360e01b8152336004820152602401610828565b6113de565b6054546001600160a01b03166001600160a01b0316637ae1cfca336040516020016112c2919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016112f691815260200190565b602060405180830381865afa158015611313573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113379190613351565b806113bf57506054546001600160a01b03166001600160a01b031663a75b87d26040518163ffffffff1660e01b8152600401602060405180830381865afa158015611386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113aa91906133b1565b6001600160a01b0316326001600160a01b0316145b6113de5760405163372463e360e01b8152336004820152602401610828565b50605a805460ff19811660ff90911615179055565b60006113fe60085490565b82106114615760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610828565b60088281548110611474576114746133ce565b90600052602060002001549050919050565b600a546001600160a01b031633146114b05760405162461bcd60e51b8152600401610828906133e4565b336114fd5760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742061646420746f206e756c6c20616464726573730000000000006044820152606401610828565b6001600160a01b03919091166000908152605b60205260409020805460ff191660ff909216919091179055565b600a546001600160a01b031633146115545760405162461bcd60e51b8152600401610828906133e4565b605a805463ff00000019811663010000009182900460ff1615909102179055565b600a546001600160a01b0316331461159f5760405162461bcd60e51b8152600401610828906133e4565b60005b83811015611639578282828181106115bc576115bc6133ce565b90506020020160208101906115d19190613419565b605b60008787858181106115e7576115e76133ce565b90506020020160208101906115fc9190612ef0565b6001600160a01b031681526020810191909152604001600020805460ff191660ff92909216919091179055806116318161344a565b9150506115a2565b5050505050565b600a546001600160a01b0316331461166a5760405162461bcd60e51b8152600401610828906133e4565b605755565b6000818152600260205260408120546001600160a01b0316806107ce5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610828565b60006001600160a01b0382166117515760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610828565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b031633146117975760405162461bcd60e51b8152600401610828906133e4565b6117a160006128bc565b565b605a54640100000000900460ff166117fd5760405162461bcd60e51b815260206004820152601860248201527f416c6c6f77206c697374206973206e6f742061637469766500000000000000006044820152606401610828565b33600052605b602052336118535760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f206e756c6c206164647265737300000000006044820152606401610828565b605a54610100900460ff166118bf5760405162461bcd60e51b815260206004820152602c60248201527f536f727279206d696e74696e6720706572696f642069736e277420637572726560448201526b6e746c79206f6e676f696e6760a01b6064820152608401610828565b605754605854106119125760405162461bcd60e51b815260206004820152601c60248201527f4d696e74696e6720776f756c642065786365656420737570706c7921000000006044820152606401610828565b336000908152605c602052604090205460ff161561197c5760405162461bcd60e51b815260206004820152602160248201527f596f75206861766520616c726561647920636c61696d656420796f7572204e466044820152601560fa1b6064820152608401610828565b34605654146119d95760405162461bcd60e51b815260206004820152602360248201527f54686520616d6f756e7420646573706f73697465642069736e277420636f72726044820152621958dd60ea1b6064820152608401610828565b600060585460016119ea9190613465565b90506001605860008282546119ff9190613465565b9091555050336000818152605c60205260409020805460ff19166001179055611a28908261290e565b60408051338152600160208201527f81bb5c3b8acb6ca9d92ccfbf1418729b81d477532bd7db95a46cb57054d2d84d910160405180910390a150565b600a546001600160a01b03163314611a8e5760405162461bcd60e51b8152600401610828906133e4565b4780611ad25760405162461bcd60e51b8152602060048201526013602482015272496e737566666963656e742062616c616e636560681b6044820152606401610828565b611af073ee9abb3a1d3d09d2e258862f69d52aedb26230888261292c565b50565b600080611b086054546001600160a01b031690565b6001600160a01b0316631bed52416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b699190613351565b905060018115151415611c3a576054546001600160a01b03166001600160a01b0316637ae1cfca33604051602001611ba1919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401611bd591815260200190565b602060405180830381865afa158015611bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c169190613351565b611c355760405163372463e360e01b8152336004820152602401610828565b611d81565b6054546001600160a01b03166001600160a01b0316637ae1cfca33604051602001611c65919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401611c9991815260200190565b602060405180830381865afa158015611cb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cda9190613351565b80611d6257506054546001600160a01b03166001600160a01b031663a75b87d26040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4d91906133b1565b6001600160a01b0316326001600160a01b0316145b611d815760405163372463e360e01b8152336004820152602401610828565b5050605681905590565b60606001805461085f906132cb565b6001600160a01b038216331415611df35760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610828565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600a546001600160a01b03163314611e895760405162461bcd60e51b8152600401610828906133e4565b6001600160a01b038116611edf5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f206e756c6c206164647265737300000000006044820152606401610828565b605a546301000000900460ff16611f385760405162461bcd60e51b815260206004820152601960248201527f5465616d206d696e74696e67206e6f7420737461727465642e000000000000006044820152606401610828565b60575460085410611f8b5760405162461bcd60e51b815260206004820152601760248201527f416c6c207465616d20746f6b656e73206d696e7465642e0000000000000000006044820152606401610828565b60006058546001611f9c9190613465565b9050600160586000828254611fb19190613465565b90915550506001600160a01b0382166000908152605c60205260409020805460ff19166001179055611fe3828261290e565b604080516001600160a01b0384168152600160208201527f81bb5c3b8acb6ca9d92ccfbf1418729b81d477532bd7db95a46cb57054d2d84d910160405180910390a15050565b612033338361261a565b61204f5760405162461bcd60e51b815260040161082890613300565b61205b848484846129cf565b50505050565b60006120756054546001600160a01b031690565b6001600160a01b0316631bed52416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120d69190613351565b9050600181151514156121a7576054546001600160a01b03166001600160a01b0316637ae1cfca3360405160200161210e919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161214291815260200190565b602060405180830381865afa15801561215f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121839190613351565b6121a25760405163372463e360e01b8152336004820152602401610828565b6122ee565b6054546001600160a01b03166001600160a01b0316637ae1cfca336040516020016121d2919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161220691815260200190565b602060405180830381865afa158015612223573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122479190613351565b806122cf57506054546001600160a01b03166001600160a01b031663a75b87d26040518163ffffffff1660e01b8152600401602060405180830381865afa158015612296573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ba91906133b1565b6001600160a01b0316326001600160a01b0316145b6122ee5760405163372463e360e01b8152336004820152602401610828565b50605a805462ff0000198116620100009182900460ff1615909102179055565b6000818152600260205260409020546060906001600160a01b031661238d5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610828565b60006059805461239c906132cb565b9050116123b857604051806020016040528060008152506107ce565b60596123c383612a02565b6040516020016123d4929190613499565b60405160208183030381529060405292915050565b605980546123f6906132cb565b80601f0160208091040260200160405190810160405280929190818152602001828054612422906132cb565b801561246f5780601f106124445761010080835404028352916020019161246f565b820191906000526020600020905b81548152906001019060200180831161245257829003601f168201915b505050505081565b600a546001600160a01b031633146124a15760405162461bcd60e51b8152600401610828906133e4565b605a805464ff000000001981166401000000009182900460ff1615909102179055565b600a546001600160a01b031633146124ee5760405162461bcd60e51b8152600401610828906133e4565b6001600160a01b0381166125535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610828565b611af0816128bc565b60006001600160e01b031982166380ac58cd60e01b148061258d57506001600160e01b03198216635b5e139f60e01b145b806107ce57506301ffc9a760e01b6001600160e01b03198316146107ce565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906125e18261166f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166126935760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610828565b600061269e8361166f565b9050806001600160a01b0316846001600160a01b031614806126d95750836001600160a01b03166126ce846108e2565b6001600160a01b0316145b8061270957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166127248261166f565b6001600160a01b03161461278c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610828565b6001600160a01b0382166127ee5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610828565b6127f9838383612b00565b6128046000826125ac565b6001600160a01b038316600090815260036020526040812080546001929061282d908490613554565b90915550506001600160a01b038216600090815260036020526040812080546001929061285b908490613465565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b612928828260405180602001604052806000815250612b89565b5050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612979576040519150601f19603f3d011682016040523d82523d6000602084013e61297e565b606091505b5050905080610a885760405162461bcd60e51b815260206004820152601960248201527f4661696c656420746f20776964746864726177204574686572000000000000006044820152606401610828565b6129da848484612711565b6129e684848484612bbc565b61205b5760405162461bcd60e51b81526004016108289061356b565b606081612a265750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612a505780612a3a8161344a565b9150612a499050600a836135d3565b9150612a2a565b60008167ffffffffffffffff811115612a6b57612a6b612ffe565b6040519080825280601f01601f191660200182016040528015612a95576020820181803683370190505b5090505b841561270957612aaa600183613554565b9150612ab7600a866135e7565b612ac2906030613465565b60f81b818381518110612ad757612ad76133ce565b60200101906001600160f81b031916908160001a905350612af9600a866135d3565b9450612a99565b6001600160a01b038316612b1357505050565b605a5460ff161515600114610a885760405162461bcd60e51b815260206004820152603660248201527f536f72727920664e6f766120436c61696d696e6720686173206e6f742079657460448201527508195b991959081d1bc81d1c985b9cd9995c8813919560521b6064820152608401610828565b612b938383612cba565b612ba06000848484612bbc565b610a885760405162461bcd60e51b81526004016108289061356b565b60006001600160a01b0384163b15612caf57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612c009033908990889088906004016135fb565b6020604051808303816000875af1925050508015612c3b575060408051601f3d908101601f19168201909252612c3891810190613638565b60015b612c95573d808015612c69576040519150601f19603f3d011682016040523d82523d6000602084013e612c6e565b606091505b508051612c8d5760405162461bcd60e51b81526004016108289061356b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612709565b506001949350505050565b6001600160a01b038216612d105760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610828565b6000818152600260205260409020546001600160a01b031615612d755760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610828565b612d8160008383612b00565b6001600160a01b0382166000908152600360205260408120805460019290612daa908490613465565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054612e14906132cb565b90600052602060002090601f016020900481019282612e365760008555612e7c565b82601f10612e4f57805160ff1916838001178555612e7c565b82800160010185558215612e7c579182015b82811115612e7c578251825591602001919060010190612e61565b50612e88929150612e8c565b5090565b5b80821115612e885760008155600101612e8d565b6001600160e01b031981168114611af057600080fd5b600060208284031215612ec957600080fd5b8135612ed481612ea1565b9392505050565b6001600160a01b0381168114611af057600080fd5b600060208284031215612f0257600080fd5b8135612ed481612edb565b60005b83811015612f28578181015183820152602001612f10565b8381111561205b5750506000910152565b60008151808452612f51816020860160208601612f0d565b601f01601f19169290920160200192915050565b602081526000612ed46020830184612f39565b600060208284031215612f8a57600080fd5b5035919050565b60008060408385031215612fa457600080fd5b8235612faf81612edb565b946020939093013593505050565b600080600060608486031215612fd257600080fd5b8335612fdd81612edb565b92506020840135612fed81612edb565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561302f5761302f612ffe565b604051601f8501601f19908116603f0116810190828211818310171561305757613057612ffe565b8160405280935085815286868601111561307057600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561309c57600080fd5b813567ffffffffffffffff8111156130b357600080fd5b8201601f810184136130c457600080fd5b61270984823560208401613014565b803560ff811681146130e457600080fd5b919050565b600080604083850312156130fc57600080fd5b823561310781612edb565b9150613115602084016130d3565b90509250929050565b60008083601f84011261313057600080fd5b50813567ffffffffffffffff81111561314857600080fd5b6020830191508360208260051b850101111561316357600080fd5b9250929050565b6000806000806040858703121561318057600080fd5b843567ffffffffffffffff8082111561319857600080fd5b6131a48883890161311e565b909650945060208701359150808211156131bd57600080fd5b506131ca8782880161311e565b95989497509550505050565b8015158114611af057600080fd5b600080604083850312156131f757600080fd5b823561320281612edb565b91506020830135613212816131d6565b809150509250929050565b6000806000806080858703121561323357600080fd5b843561323e81612edb565b9350602085013561324e81612edb565b925060408501359150606085013567ffffffffffffffff81111561327157600080fd5b8501601f8101871361328257600080fd5b61329187823560208401613014565b91505092959194509250565b600080604083850312156132b057600080fd5b82356132bb81612edb565b9150602083013561321281612edb565b600181811c908216806132df57607f821691505b6020821081141561113057634e487b7160e01b600052602260045260246000fd5b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60006020828403121561336357600080fd5b8151612ed4816131d6565b7f7068616e746f6d2e636f6e74726163742e726567697374657265640000000000815260609190911b6bffffffffffffffffffffffff1916601b820152602f0190565b6000602082840312156133c357600080fd5b8151612ed481612edb565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561342b57600080fd5b612ed4826130d3565b634e487b7160e01b600052601160045260246000fd5b600060001982141561345e5761345e613434565b5060010190565b6000821982111561347857613478613434565b500190565b6000815161348f818560208601612f0d565b9290920192915050565b600080845481600182811c9150808316806134b557607f831692505b60208084108214156134d557634e487b7160e01b86526022600452602486fd5b8180156134e957600181146134fa57613527565b60ff19861689528489019650613527565b60008b81526020902060005b8681101561351f5781548b820152908501908301613506565b505084890196505b50505050505061354b61353a828661347d565b64173539b7b760d91b815260050190565b95945050505050565b60008282101561356657613566613434565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826135e2576135e26135bd565b500490565b6000826135f6576135f66135bd565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061362e90830184612f39565b9695505050505050565b60006020828403121561364a57600080fd5b8151612ed481612ea156fea26469706673582212202698bce1caa9f16f8666a4a81c6294d4258b0bba2d7a60599f9d56ad7a5af40764736f6c634300080a00337068616e746f6d2e626f6e64696e672e757365722e6c6f776573745f6e6f6e63655f7374696c6c5f76657374696e677068616e746f6d2e626f6e64696e672e757365722e6c6f776573745f61737369676e61626c655f6e6f6e63657068616e746f6d2e666f756e6465722e636c61696d732e72656d61696e696e67416d6f756e747068616e746f6d2e616c6c6f6361746f722e746f6b656e732e616464726573732e6461697068616e746f6d2e726f7574696e672e6465785f726f757465725f616464726573737068616e746f6d2e666f756e6465722e636c61696d732e696e697469616c416d6f756e747068616e746f6d2e74726561737572792e6163636f756e745f6b65792e76656e747572656361706974616c7068616e746f6d2e616c6c6f6361746f722e746f6b656e732e616464726573732e6461695f70686d5f6c707068616e746f6d2e726f7574696e672e73706f6f6b795f726f757465725f616464726573737068616e746f6d2e74726561737572792e617070726f7665642e65787465726e616c2e616464726573737068616e746f6d2e626f6e64696e672e757365722e66697273745f756e72656465656d65645f6e6f6e63657068616e746f6d2e726f7574696e672e7370697269745f726f757465725f616464726573737068616e746f6d2e616c6c6f6361746f722e746f6b656e732e64657374696e6174696f6e737068616e746f6d2e626f6e64696e672e76657374735f61745f74696d657374616d707068616e746f6d2e726f7574696e672e7370697269745f666163746f72795f616464726573737068616e746f6d2e616c6c6f6361746f722e746f6b656e732e646573745f70657263656e74616765737068616e746f6d2e74726561737572792e6163636f756e745f6b65792e72657365727665737068616e746f6d2e616c6c6f6361746f722e746f6b656e732e616464726573732e6d696d7068616e746f6d2e726f7574696e672e73706f6f6b795f666163746f72795f616464726573737068616e746f6d2e616c6c6f6361746f722e746f6b656e732e616464726573732e7766746d7068616e746f6d2e616c6c6f6361746f722e746f6b656e732e616464726573732e6465787068616e746f6d2e726f7574696e672e7370697269745f67617567655f616464726573737068616e746f6d2e666f756e6465722e636c61696d732e616c6c6f636174696f6e7068616e746f6d2e726f7574696e672e6465785f666163746f72795f616464726573737068616e746f6d2e676f7665726e6f722e71756f72756d50657263656e746167657068616e746f6d2e676f7665726e6f722e70726f706f73616c5468726573686f6c647068616e746f6d2e7374616b696e672e6e657874526562617365446561646c696e657068616e746f6d2e626f6e64696e672e72656d61696e696e675f7061796f75745f666f727068616e746f6d2e726f7574696e672e7370697269745f67617567655f70726f78795f61646472657373",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "NovaNFT",
  "coverageMap": {
    "branches": {
      "101": {},
      "11": {},
      "52": {
        "ERC721._mint": {
          "138": [
            33083,
            33099,
            true
          ]
        },
        "ERC721._safeMint": {
          "137": [
            32545,
            32599,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "133": [
            30672,
            30720,
            true
          ]
        },
        "ERC721._transfer": {
          "130": [
            34392,
            34423,
            true
          ],
          "131": [
            34487,
            34503,
            true
          ]
        },
        "ERC721.approve": {
          "109": [
            27463,
            27474,
            true
          ],
          "110": [
            27544,
            27565,
            true
          ],
          "111": [
            27569,
            27606,
            true
          ]
        },
        "ERC721.balanceOf": {
          "116": [
            25808,
            25827,
            true
          ]
        },
        "ERC721.ownerOf": {
          "115": [
            26112,
            26131,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "127": [
            29462,
            29503,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "123": [
            28174,
            28198,
            true
          ]
        },
        "ERC721.transferFrom": {
          "112": [
            28841,
            28882,
            true
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "114": [
            38931,
            38969,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "113": [
            38446,
            38477,
            true
          ]
        },
        "NovaNFT._beforeTokenTransfer": {
          "135": [
            49264,
            49282,
            false
          ],
          "136": [
            49364,
            49384,
            true
          ]
        },
        "NovaNFT._widthdraw": {
          "132": [
            50247,
            50254,
            true
          ]
        },
        "NovaNFT.isClaimedBy": {
          "108": [
            46103,
            46122,
            true
          ]
        },
        "NovaNFT.nftMint": {
          "117": [
            47343,
            47360,
            true
          ],
          "118": [
            47561,
            47573,
            true
          ],
          "119": [
            47640,
            47669,
            true
          ],
          "120": [
            47720,
            47743,
            true
          ],
          "121": [
            47799,
            47817,
            true
          ]
        },
        "NovaNFT.teamMint": {
          "124": [
            48366,
            48388,
            true
          ],
          "125": [
            48438,
            48453,
            true
          ],
          "126": [
            48501,
            48529,
            true
          ]
        },
        "NovaNFT.tokenURI": {
          "128": [
            50940,
            50970,
            true
          ]
        },
        "NovaNFT.withdrawAll": {
          "122": [
            49967,
            49978,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "129": [
            11064,
            11086,
            true
          ]
        },
        "Strings.toString": {
          "134": [
            13806,
            13816,
            false
          ]
        }
      },
      "68": {
        "PhantomStorageMixin.PhantomStorage": {
          "139": [
            8008,
            8027,
            false
          ],
          "140": [
            8143,
            8239,
            false
          ],
          "141": [
            8525,
            8621,
            true
          ],
          "142": [
            8645,
            8688,
            false
          ]
        }
      },
      "75": {}
    },
    "statements": {
      "101": {},
      "11": {},
      "52": {
        "Address.isContract": {
          "98": [
            16385,
            16400
          ]
        },
        "Context._msgSender": {
          "11": [
            693,
            710
          ]
        },
        "ERC165.supportsInterface": {
          "70": [
            13179,
            13226
          ]
        },
        "ERC721._approve": {
          "71": [
            35010,
            35039
          ],
          "72": [
            35049,
            35100
          ]
        },
        "ERC721._checkOnERC721Received": {
          "99": [
            36146,
            36206
          ],
          "100": [
            35980,
            36038
          ],
          "101": [
            36410,
            36421
          ]
        },
        "ERC721._exists": {
          "7": [
            31166,
            31203
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "73": [
            31477,
            31550
          ],
          "74": [
            31609,
            31705
          ]
        },
        "ERC721._mint": {
          "102": [
            33075,
            33136
          ],
          "103": [
            33146,
            33204
          ],
          "104": [
            33215,
            33260
          ],
          "105": [
            33271,
            33289
          ],
          "106": [
            33299,
            33320
          ],
          "107": [
            33331,
            33369
          ]
        },
        "ERC721._safeMint": {
          "85": [
            32117,
            32143
          ],
          "96": [
            32496,
            32514
          ],
          "97": [
            32524,
            32675
          ]
        },
        "ERC721._safeTransfer": {
          "87": [
            30626,
            30654
          ],
          "88": [
            30664,
            30775
          ]
        },
        "ERC721._transfer": {
          "75": [
            34384,
            34469
          ],
          "76": [
            34479,
            34544
          ],
          "77": [
            34555,
            34594
          ],
          "78": [
            34656,
            34685
          ],
          "79": [
            34696,
            34716
          ],
          "80": [
            34726,
            34744
          ],
          "81": [
            34754,
            34775
          ],
          "82": [
            34786,
            34818
          ]
        },
        "ERC721.approve": {
          "10": [
            27455,
            27512
          ],
          "12": [
            27523,
            27688
          ],
          "13": [
            27699,
            27720
          ]
        },
        "ERC721.balanceOf": {
          "33": [
            25800,
            25874
          ],
          "34": [
            25884,
            25907
          ]
        },
        "ERC721.getApproved": {
          "8": [
            27883,
            27956
          ],
          "9": [
            27967,
            27998
          ]
        },
        "ERC721.isApprovedForAll": {
          "2": [
            28541,
            28583
          ]
        },
        "ERC721.name": {
          "6": [
            26347,
            26359
          ]
        },
        "ERC721.ownerOf": {
          "32": [
            26104,
            26177
          ]
        },
        "ERC721.safeTransferFrom": {
          "22": [
            29181,
            29220
          ],
          "61": [
            29454,
            29557
          ],
          "62": [
            29567,
            29606
          ]
        },
        "ERC721.setApprovalForAll": {
          "51": [
            28166,
            28228
          ],
          "52": [
            28239,
            28292
          ],
          "53": [
            28302,
            28355
          ]
        },
        "ERC721.supportsInterface": {
          "69": [
            25468,
            25643
          ]
        },
        "ERC721.symbol": {
          "50": [
            26511,
            26525
          ]
        },
        "ERC721.transferFrom": {
          "14": [
            28833,
            28936
          ],
          "15": [
            28947,
            28975
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "3": [
            38139,
            38236
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "24": [
            38923,
            39018
          ],
          "25": [
            39028,
            39052
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "16": [
            38438,
            38525
          ],
          "17": [
            38535,
            38568
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            38726,
            38750
          ]
        },
        "NovaNFT._beforeTokenTransfer": {
          "95": [
            49356,
            49443
          ]
        },
        "NovaNFT._widthdraw": {
          "86": [
            50239,
            50284
          ]
        },
        "NovaNFT.addAllowList": {
          "26": [
            46803,
            46866
          ],
          "27": [
            46876,
            46911
          ]
        },
        "NovaNFT.adjustNFTSupply": {
          "31": [
            46998,
            47023
          ]
        },
        "NovaNFT.isClaimedBy": {
          "4": [
            46095,
            46150
          ],
          "5": [
            46161,
            46185
          ]
        },
        "NovaNFT.nftMint": {
          "36": [
            47335,
            47389
          ],
          "37": [
            47399,
            47468
          ],
          "38": [
            47478,
            47543
          ],
          "39": [
            47553,
            47622
          ],
          "40": [
            47632,
            47702
          ],
          "41": [
            47712,
            47781
          ],
          "42": [
            47791,
            47857
          ],
          "43": [
            48079,
            48098
          ],
          "44": [
            48108,
            48137
          ],
          "45": [
            48148,
            48178
          ],
          "46": [
            48189,
            48220
          ]
        },
        "NovaNFT.setAllowList": {
          "29": [
            46643,
            46691
          ],
          "30": [
            46624,
            46627
          ]
        },
        "NovaNFT.setIsAllowListActive": {
          "66": [
            45393,
            45431
          ]
        },
        "NovaNFT.setPrice": {
          "49": [
            45966,
            45981
          ]
        },
        "NovaNFT.setbaseTokenURI": {
          "20": [
            50676,
            50698
          ],
          "21": [
            50708,
            50727
          ]
        },
        "NovaNFT.teamMint": {
          "54": [
            48358,
            48420
          ],
          "55": [
            48430,
            48483
          ],
          "56": [
            48493,
            48557
          ],
          "57": [
            48622,
            48641
          ],
          "58": [
            48651,
            48678
          ],
          "59": [
            48689,
            48717
          ],
          "60": [
            48728,
            48757
          ]
        },
        "NovaNFT.togglePause": {
          "63": [
            45841,
            45855
          ]
        },
        "NovaNFT.toggleSaleBegun": {
          "19": [
            45734,
            45762
          ]
        },
        "NovaNFT.toggleTeamMintStarted": {
          "28": [
            45618,
            45652
          ]
        },
        "NovaNFT.togglefNOVAClaimed": {
          "23": [
            45516,
            45544
          ]
        },
        "NovaNFT.tokenURI": {
          "64": [
            50847,
            50923
          ],
          "65": [
            50933,
            51045
          ]
        },
        "NovaNFT.withdrawAll": {
          "47": [
            49959,
            50002
          ],
          "48": [
            50012,
            50043
          ]
        },
        "Ownable._setOwner": {
          "83": [
            11261,
            11278
          ],
          "84": [
            11288,
            11333
          ]
        },
        "Ownable.owner": {
          "1": [
            10168,
            10181
          ]
        },
        "Ownable.renounceOwnership": {
          "35": [
            10799,
            10820
          ]
        },
        "Ownable.transferOwnership": {
          "67": [
            11056,
            11129
          ],
          "68": [
            11139,
            11158
          ]
        },
        "Strings.toString": {
          "89": [
            13832,
            13842
          ],
          "90": [
            13948,
            13956
          ],
          "91": [
            13970,
            13980
          ],
          "92": [
            14082,
            14093
          ],
          "93": [
            14107,
            14163
          ],
          "94": [
            14177,
            14188
          ]
        }
      },
      "68": {
        "PhantomStorageMixin.PhantomStorage": {
          "18": [
            2447,
            2486
          ]
        }
      },
      "75": {}
    }
  },
  "dependencies": [
    "Context",
    "ERC165",
    "ERC721",
    "ERC721Enumerable",
    "IERC165",
    "IERC721",
    "IERC721Enumerable",
    "IERC721Metadata",
    "IPhantomStorageMixin",
    "Ownable",
    "PhantomStorageKeys",
    "PhantomStorageMixin",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ReentrancyGuard",
    "Strings"
  ],
  "deployedBytecode": "6080604052600436106102675760003560e01c8063715018a611610144578063c4ae3168116100b6578063e985e9c51161007a578063e985e9c5146106e0578063ef3b2ce714610729578063f2fde38b1461073e578063f5beb2ed1461075e578063fc27f3ae14610774578063fec303b31461079357600080fd5b8063c4ae316814610654578063c87b56dd14610669578063cc9e798514610689578063d547cfb7146106a3578063e7ec9f30146106b857600080fd5b80638da5cb5b116101085780638da5cb5b146105ae57806391b7f5ed146105cc57806395d89b41146105ec578063a22cb46514610601578063b6a1dba114610621578063b88d4fde1461063457600080fd5b8063715018a614610546578063719414b41461055b5780638456cb5914610563578063853828b6146105835780638d859f3e1461059857600080fd5b806336c4ff7a116101dd578063549b0726116101a1578063549b0726146104915780635a7dab1d146104b157806362830fe2146104c6578063631065f0146104e65780636352211e1461050657806370a082311461052657600080fd5b806336c4ff7a146103f457806337c0df0c1461041c57806342842e0e1461043c5780634c38b2f11461045c5780634f6ccce71461047157600080fd5b806318160ddd1161022f57806318160ddd1461033d57806323b872dd1461035c57806329fc6bae1461037c5780632b4403bb1461039e5780632f745c59146103bf57806330f280bb146103df57600080fd5b806301ffc9a71461026c57806302ce6e71146102a157806306fdde03146102c1578063081812fc146102e3578063095ea7b31461031b575b600080fd5b34801561027857600080fd5b5061028c610287366004612eb7565b6107a9565b60405190151581526020015b60405180910390f35b3480156102ad57600080fd5b5061028c6102bc366004612ef0565b6107d4565b3480156102cd57600080fd5b506102d6610850565b6040516102989190612f65565b3480156102ef57600080fd5b506103036102fe366004612f78565b6108e2565b6040516001600160a01b039091168152602001610298565b34801561032757600080fd5b5061033b610336366004612f91565b610977565b005b34801561034957600080fd5b506008545b604051908152602001610298565b34801561036857600080fd5b5061033b610377366004612fbd565b610a8d565b34801561038857600080fd5b50605a5461028c90640100000000900460ff1681565b3480156103aa57600080fd5b50605a5461028c906301000000900460ff1681565b3480156103cb57600080fd5b5061034e6103da366004612f91565b610abe565b3480156103eb57600080fd5b5061033b610b54565b34801561040057600080fd5b5061030373ee9abb3a1d3d09d2e258862f69d52aedb262308881565b34801561042857600080fd5b506102d661043736600461308a565b610dff565b34801561044857600080fd5b5061033b610457366004612fbd565b611136565b34801561046857600080fd5b5061033b611151565b34801561047d57600080fd5b5061034e61048c366004612f78565b6113f3565b34801561049d57600080fd5b5061033b6104ac3660046130e9565b611486565b3480156104bd57600080fd5b5061033b61152a565b3480156104d257600080fd5b5061033b6104e136600461316a565b611575565b3480156104f257600080fd5b5061033b610501366004612f78565b611640565b34801561051257600080fd5b50610303610521366004612f78565b61166f565b34801561053257600080fd5b5061034e610541366004612ef0565b6116e6565b34801561055257600080fd5b5061033b61176d565b61033b6117a3565b34801561056f57600080fd5b50605a5461028c9062010000900460ff1681565b34801561058f57600080fd5b5061033b611a64565b3480156105a457600080fd5b5061034e60565481565b3480156105ba57600080fd5b50600a546001600160a01b0316610303565b3480156105d857600080fd5b5061034e6105e7366004612f78565b611af3565b3480156105f857600080fd5b506102d6611d8b565b34801561060d57600080fd5b5061033b61061c3660046131e4565b611d9a565b61033b61062f366004612ef0565b611e5f565b34801561064057600080fd5b5061033b61064f36600461321d565b612029565b34801561066057600080fd5b5061033b612061565b34801561067557600080fd5b506102d6610684366004612f78565b61230e565b34801561069557600080fd5b50605a5461028c9060ff1681565b3480156106af57600080fd5b506102d66123e9565b3480156106c457600080fd5b5061030373a47c8bf37f92abed4a126bda807a7b7498661acd81565b3480156106ec57600080fd5b5061028c6106fb36600461329d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561073557600080fd5b5061033b612477565b34801561074a57600080fd5b5061033b610759366004612ef0565b6124c4565b34801561076a57600080fd5b5061034e60575481565b34801561078057600080fd5b50605a5461028c90610100900460ff1681565b34801561079f57600080fd5b5061034e60585481565b60006001600160e01b0319821663780e9d6360e01b14806107ce57506107ce8261255c565b92915050565b60006001600160a01b0382166108315760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420616464206e756c6c206164647265737300000000000000000060448201526064015b60405180910390fd5b506001600160a01b03166000908152605c602052604090205460ff1690565b60606000805461085f906132cb565b80601f016020809104026020016040519081016040528092919081815260200182805461088b906132cb565b80156108d85780601f106108ad576101008083540402835291602001916108d8565b820191906000526020600020905b8154815290600101906020018083116108bb57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661095b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610828565b506000908152600460205260409020546001600160a01b031690565b60006109828261166f565b9050806001600160a01b0316836001600160a01b031614156109f05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610828565b336001600160a01b0382161480610a0c5750610a0c81336106fb565b610a7e5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610828565b610a8883836125ac565b505050565b610a97338261261a565b610ab35760405162461bcd60e51b815260040161082890613300565b610a88838383612711565b6000610ac9836116e6565b8210610b2b5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610828565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6000610b686054546001600160a01b031690565b6001600160a01b0316631bed52416040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ba5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc99190613351565b905060018115151415610c9a576054546001600160a01b03166001600160a01b0316637ae1cfca33604051602001610c01919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610c3591815260200190565b602060405180830381865afa158015610c52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c769190613351565b610c955760405163372463e360e01b8152336004820152602401610828565b610de1565b6054546001600160a01b03166001600160a01b0316637ae1cfca33604051602001610cc5919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610cf991815260200190565b602060405180830381865afa158015610d16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3a9190613351565b80610dc257506054546001600160a01b03166001600160a01b031663a75b87d26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dad91906133b1565b6001600160a01b0316326001600160a01b0316145b610de15760405163372463e360e01b8152336004820152602401610828565b50605a805461ff001981166101009182900460ff1615909102179055565b60606000610e156054546001600160a01b031690565b6001600160a01b0316631bed52416040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e769190613351565b905060018115151415610f47576054546001600160a01b03166001600160a01b0316637ae1cfca33604051602001610eae919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610ee291815260200190565b602060405180830381865afa158015610eff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f239190613351565b610f425760405163372463e360e01b8152336004820152602401610828565b61108e565b6054546001600160a01b03166001600160a01b0316637ae1cfca33604051602001610f72919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610fa691815260200190565b602060405180830381865afa158015610fc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe79190613351565b8061106f57506054546001600160a01b03166001600160a01b031663a75b87d26040518163ffffffff1660e01b8152600401602060405180830381865afa158015611036573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105a91906133b1565b6001600160a01b0316326001600160a01b0316145b61108e5760405163372463e360e01b8152336004820152602401610828565b82516110a1906059906020860190612e08565b50605980546110af906132cb565b80601f01602080910402602001604051908101604052809291908181526020018280546110db906132cb565b80156111285780601f106110fd57610100808354040283529160200191611128565b820191906000526020600020905b81548152906001019060200180831161110b57829003601f168201915b505050505091505b50919050565b610a8883838360405180602001604052806000815250612029565b60006111656054546001600160a01b031690565b6001600160a01b0316631bed52416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c69190613351565b905060018115151415611297576054546001600160a01b03166001600160a01b0316637ae1cfca336040516020016111fe919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161123291815260200190565b602060405180830381865afa15801561124f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112739190613351565b6112925760405163372463e360e01b8152336004820152602401610828565b6113de565b6054546001600160a01b03166001600160a01b0316637ae1cfca336040516020016112c2919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016112f691815260200190565b602060405180830381865afa158015611313573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113379190613351565b806113bf57506054546001600160a01b03166001600160a01b031663a75b87d26040518163ffffffff1660e01b8152600401602060405180830381865afa158015611386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113aa91906133b1565b6001600160a01b0316326001600160a01b0316145b6113de5760405163372463e360e01b8152336004820152602401610828565b50605a805460ff19811660ff90911615179055565b60006113fe60085490565b82106114615760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610828565b60088281548110611474576114746133ce565b90600052602060002001549050919050565b600a546001600160a01b031633146114b05760405162461bcd60e51b8152600401610828906133e4565b336114fd5760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742061646420746f206e756c6c20616464726573730000000000006044820152606401610828565b6001600160a01b03919091166000908152605b60205260409020805460ff191660ff909216919091179055565b600a546001600160a01b031633146115545760405162461bcd60e51b8152600401610828906133e4565b605a805463ff00000019811663010000009182900460ff1615909102179055565b600a546001600160a01b0316331461159f5760405162461bcd60e51b8152600401610828906133e4565b60005b83811015611639578282828181106115bc576115bc6133ce565b90506020020160208101906115d19190613419565b605b60008787858181106115e7576115e76133ce565b90506020020160208101906115fc9190612ef0565b6001600160a01b031681526020810191909152604001600020805460ff191660ff92909216919091179055806116318161344a565b9150506115a2565b5050505050565b600a546001600160a01b0316331461166a5760405162461bcd60e51b8152600401610828906133e4565b605755565b6000818152600260205260408120546001600160a01b0316806107ce5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610828565b60006001600160a01b0382166117515760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610828565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b031633146117975760405162461bcd60e51b8152600401610828906133e4565b6117a160006128bc565b565b605a54640100000000900460ff166117fd5760405162461bcd60e51b815260206004820152601860248201527f416c6c6f77206c697374206973206e6f742061637469766500000000000000006044820152606401610828565b33600052605b602052336118535760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f206e756c6c206164647265737300000000006044820152606401610828565b605a54610100900460ff166118bf5760405162461bcd60e51b815260206004820152602c60248201527f536f727279206d696e74696e6720706572696f642069736e277420637572726560448201526b6e746c79206f6e676f696e6760a01b6064820152608401610828565b605754605854106119125760405162461bcd60e51b815260206004820152601c60248201527f4d696e74696e6720776f756c642065786365656420737570706c7921000000006044820152606401610828565b336000908152605c602052604090205460ff161561197c5760405162461bcd60e51b815260206004820152602160248201527f596f75206861766520616c726561647920636c61696d656420796f7572204e466044820152601560fa1b6064820152608401610828565b34605654146119d95760405162461bcd60e51b815260206004820152602360248201527f54686520616d6f756e7420646573706f73697465642069736e277420636f72726044820152621958dd60ea1b6064820152608401610828565b600060585460016119ea9190613465565b90506001605860008282546119ff9190613465565b9091555050336000818152605c60205260409020805460ff19166001179055611a28908261290e565b60408051338152600160208201527f81bb5c3b8acb6ca9d92ccfbf1418729b81d477532bd7db95a46cb57054d2d84d910160405180910390a150565b600a546001600160a01b03163314611a8e5760405162461bcd60e51b8152600401610828906133e4565b4780611ad25760405162461bcd60e51b8152602060048201526013602482015272496e737566666963656e742062616c616e636560681b6044820152606401610828565b611af073ee9abb3a1d3d09d2e258862f69d52aedb26230888261292c565b50565b600080611b086054546001600160a01b031690565b6001600160a01b0316631bed52416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b699190613351565b905060018115151415611c3a576054546001600160a01b03166001600160a01b0316637ae1cfca33604051602001611ba1919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401611bd591815260200190565b602060405180830381865afa158015611bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c169190613351565b611c355760405163372463e360e01b8152336004820152602401610828565b611d81565b6054546001600160a01b03166001600160a01b0316637ae1cfca33604051602001611c65919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401611c9991815260200190565b602060405180830381865afa158015611cb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cda9190613351565b80611d6257506054546001600160a01b03166001600160a01b031663a75b87d26040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4d91906133b1565b6001600160a01b0316326001600160a01b0316145b611d815760405163372463e360e01b8152336004820152602401610828565b5050605681905590565b60606001805461085f906132cb565b6001600160a01b038216331415611df35760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610828565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600a546001600160a01b03163314611e895760405162461bcd60e51b8152600401610828906133e4565b6001600160a01b038116611edf5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f206e756c6c206164647265737300000000006044820152606401610828565b605a546301000000900460ff16611f385760405162461bcd60e51b815260206004820152601960248201527f5465616d206d696e74696e67206e6f7420737461727465642e000000000000006044820152606401610828565b60575460085410611f8b5760405162461bcd60e51b815260206004820152601760248201527f416c6c207465616d20746f6b656e73206d696e7465642e0000000000000000006044820152606401610828565b60006058546001611f9c9190613465565b9050600160586000828254611fb19190613465565b90915550506001600160a01b0382166000908152605c60205260409020805460ff19166001179055611fe3828261290e565b604080516001600160a01b0384168152600160208201527f81bb5c3b8acb6ca9d92ccfbf1418729b81d477532bd7db95a46cb57054d2d84d910160405180910390a15050565b612033338361261a565b61204f5760405162461bcd60e51b815260040161082890613300565b61205b848484846129cf565b50505050565b60006120756054546001600160a01b031690565b6001600160a01b0316631bed52416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120d69190613351565b9050600181151514156121a7576054546001600160a01b03166001600160a01b0316637ae1cfca3360405160200161210e919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161214291815260200190565b602060405180830381865afa15801561215f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121839190613351565b6121a25760405163372463e360e01b8152336004820152602401610828565b6122ee565b6054546001600160a01b03166001600160a01b0316637ae1cfca336040516020016121d2919061336e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161220691815260200190565b602060405180830381865afa158015612223573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122479190613351565b806122cf57506054546001600160a01b03166001600160a01b031663a75b87d26040518163ffffffff1660e01b8152600401602060405180830381865afa158015612296573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ba91906133b1565b6001600160a01b0316326001600160a01b0316145b6122ee5760405163372463e360e01b8152336004820152602401610828565b50605a805462ff0000198116620100009182900460ff1615909102179055565b6000818152600260205260409020546060906001600160a01b031661238d5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610828565b60006059805461239c906132cb565b9050116123b857604051806020016040528060008152506107ce565b60596123c383612a02565b6040516020016123d4929190613499565b60405160208183030381529060405292915050565b605980546123f6906132cb565b80601f0160208091040260200160405190810160405280929190818152602001828054612422906132cb565b801561246f5780601f106124445761010080835404028352916020019161246f565b820191906000526020600020905b81548152906001019060200180831161245257829003601f168201915b505050505081565b600a546001600160a01b031633146124a15760405162461bcd60e51b8152600401610828906133e4565b605a805464ff000000001981166401000000009182900460ff1615909102179055565b600a546001600160a01b031633146124ee5760405162461bcd60e51b8152600401610828906133e4565b6001600160a01b0381166125535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610828565b611af0816128bc565b60006001600160e01b031982166380ac58cd60e01b148061258d57506001600160e01b03198216635b5e139f60e01b145b806107ce57506301ffc9a760e01b6001600160e01b03198316146107ce565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906125e18261166f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166126935760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610828565b600061269e8361166f565b9050806001600160a01b0316846001600160a01b031614806126d95750836001600160a01b03166126ce846108e2565b6001600160a01b0316145b8061270957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166127248261166f565b6001600160a01b03161461278c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610828565b6001600160a01b0382166127ee5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610828565b6127f9838383612b00565b6128046000826125ac565b6001600160a01b038316600090815260036020526040812080546001929061282d908490613554565b90915550506001600160a01b038216600090815260036020526040812080546001929061285b908490613465565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b612928828260405180602001604052806000815250612b89565b5050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612979576040519150601f19603f3d011682016040523d82523d6000602084013e61297e565b606091505b5050905080610a885760405162461bcd60e51b815260206004820152601960248201527f4661696c656420746f20776964746864726177204574686572000000000000006044820152606401610828565b6129da848484612711565b6129e684848484612bbc565b61205b5760405162461bcd60e51b81526004016108289061356b565b606081612a265750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612a505780612a3a8161344a565b9150612a499050600a836135d3565b9150612a2a565b60008167ffffffffffffffff811115612a6b57612a6b612ffe565b6040519080825280601f01601f191660200182016040528015612a95576020820181803683370190505b5090505b841561270957612aaa600183613554565b9150612ab7600a866135e7565b612ac2906030613465565b60f81b818381518110612ad757612ad76133ce565b60200101906001600160f81b031916908160001a905350612af9600a866135d3565b9450612a99565b6001600160a01b038316612b1357505050565b605a5460ff161515600114610a885760405162461bcd60e51b815260206004820152603660248201527f536f72727920664e6f766120436c61696d696e6720686173206e6f742079657460448201527508195b991959081d1bc81d1c985b9cd9995c8813919560521b6064820152608401610828565b612b938383612cba565b612ba06000848484612bbc565b610a885760405162461bcd60e51b81526004016108289061356b565b60006001600160a01b0384163b15612caf57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612c009033908990889088906004016135fb565b6020604051808303816000875af1925050508015612c3b575060408051601f3d908101601f19168201909252612c3891810190613638565b60015b612c95573d808015612c69576040519150601f19603f3d011682016040523d82523d6000602084013e612c6e565b606091505b508051612c8d5760405162461bcd60e51b81526004016108289061356b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612709565b506001949350505050565b6001600160a01b038216612d105760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610828565b6000818152600260205260409020546001600160a01b031615612d755760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610828565b612d8160008383612b00565b6001600160a01b0382166000908152600360205260408120805460019290612daa908490613465565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054612e14906132cb565b90600052602060002090601f016020900481019282612e365760008555612e7c565b82601f10612e4f57805160ff1916838001178555612e7c565b82800160010185558215612e7c579182015b82811115612e7c578251825591602001919060010190612e61565b50612e88929150612e8c565b5090565b5b80821115612e885760008155600101612e8d565b6001600160e01b031981168114611af057600080fd5b600060208284031215612ec957600080fd5b8135612ed481612ea1565b9392505050565b6001600160a01b0381168114611af057600080fd5b600060208284031215612f0257600080fd5b8135612ed481612edb565b60005b83811015612f28578181015183820152602001612f10565b8381111561205b5750506000910152565b60008151808452612f51816020860160208601612f0d565b601f01601f19169290920160200192915050565b602081526000612ed46020830184612f39565b600060208284031215612f8a57600080fd5b5035919050565b60008060408385031215612fa457600080fd5b8235612faf81612edb565b946020939093013593505050565b600080600060608486031215612fd257600080fd5b8335612fdd81612edb565b92506020840135612fed81612edb565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561302f5761302f612ffe565b604051601f8501601f19908116603f0116810190828211818310171561305757613057612ffe565b8160405280935085815286868601111561307057600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561309c57600080fd5b813567ffffffffffffffff8111156130b357600080fd5b8201601f810184136130c457600080fd5b61270984823560208401613014565b803560ff811681146130e457600080fd5b919050565b600080604083850312156130fc57600080fd5b823561310781612edb565b9150613115602084016130d3565b90509250929050565b60008083601f84011261313057600080fd5b50813567ffffffffffffffff81111561314857600080fd5b6020830191508360208260051b850101111561316357600080fd5b9250929050565b6000806000806040858703121561318057600080fd5b843567ffffffffffffffff8082111561319857600080fd5b6131a48883890161311e565b909650945060208701359150808211156131bd57600080fd5b506131ca8782880161311e565b95989497509550505050565b8015158114611af057600080fd5b600080604083850312156131f757600080fd5b823561320281612edb565b91506020830135613212816131d6565b809150509250929050565b6000806000806080858703121561323357600080fd5b843561323e81612edb565b9350602085013561324e81612edb565b925060408501359150606085013567ffffffffffffffff81111561327157600080fd5b8501601f8101871361328257600080fd5b61329187823560208401613014565b91505092959194509250565b600080604083850312156132b057600080fd5b82356132bb81612edb565b9150602083013561321281612edb565b600181811c908216806132df57607f821691505b6020821081141561113057634e487b7160e01b600052602260045260246000fd5b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60006020828403121561336357600080fd5b8151612ed4816131d6565b7f7068616e746f6d2e636f6e74726163742e726567697374657265640000000000815260609190911b6bffffffffffffffffffffffff1916601b820152602f0190565b6000602082840312156133c357600080fd5b8151612ed481612edb565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561342b57600080fd5b612ed4826130d3565b634e487b7160e01b600052601160045260246000fd5b600060001982141561345e5761345e613434565b5060010190565b6000821982111561347857613478613434565b500190565b6000815161348f818560208601612f0d565b9290920192915050565b600080845481600182811c9150808316806134b557607f831692505b60208084108214156134d557634e487b7160e01b86526022600452602486fd5b8180156134e957600181146134fa57613527565b60ff19861689528489019650613527565b60008b81526020902060005b8681101561351f5781548b820152908501908301613506565b505084890196505b50505050505061354b61353a828661347d565b64173539b7b760d91b815260050190565b95945050505050565b60008282101561356657613566613434565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826135e2576135e26135bd565b500490565b6000826135f6576135f66135bd565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061362e90830184612f39565b9695505050505050565b60006020828403121561364a57600080fd5b8151612ed481612ea156fea26469706673582212202698bce1caa9f16f8666a4a81c6294d4258b0bba2d7a60599f9d56ad7a5af40764736f6c634300080a0033",
  "deployedSourceMap": "43875:7180:52:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38021:222;;;;;;;;;;-1:-1:-1;38021:222:52;;;;;:::i;:::-;;:::i;:::-;;;565:14:104;;558:22;540:41;;528:2;513:18;38021:222:52;;;;;;;;46020:172;;;;;;;;;;-1:-1:-1;46020:172:52;;;;;:::i;:::-;;:::i;26268:98::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;27788:217::-;;;;;;;;;;-1:-1:-1;27788:217:52;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2102:32:104;;;2084:51;;2072:2;2057:18;27788:217:52;1938:203:104;27326:401:52;;;;;;;;;;-1:-1:-1;27326:401:52;;;;;:::i;:::-;;:::i;:::-;;38646:111;;;;;;;;;;-1:-1:-1;38733:10:52;:17;38646:111;;;2612:25:104;;;2600:2;2585:18;38646:111:52;2466:177:104;28652:330:52;;;;;;;;;;-1:-1:-1;28652:330:52;;;;;:::i;:::-;;:::i;44667:37::-;;;;;;;;;;-1:-1:-1;44667:37:52;;;;;;;;;;;44626:35;;;;;;;;;;-1:-1:-1;44626:35:52;;;;;;;;;;;38322:253;;;;;;;;;;-1:-1:-1;38322:253:52;;;;;:::i;:::-;;:::i;45665:104::-;;;;;;;;;;;;;:::i;44131:79::-;;;;;;;;;;;;44168:42;44131:79;;50563:171;;;;;;;;;;-1:-1:-1;50563:171:52;;;;;:::i;:::-;;:::i;29048:179::-;;;;;;;;;;-1:-1:-1;29048:179:52;;;;;:::i;:::-;;:::i;45444:107::-;;;;;;;;;;;;;:::i;38829:230::-;;;;;;;;;;-1:-1:-1;38829:230:52;;;;;:::i;:::-;;:::i;46714:204::-;;;;;;;;;;-1:-1:-1;46714:204:52;;;;;:::i;:::-;;:::i;45557:102::-;;;;;;;;;;;;;:::i;46464:244::-;;;;;;;;;;-1:-1:-1;46464:244:52;;;;;:::i;:::-;;:::i;46924:106::-;;;;;;;;;;-1:-1:-1;46924:106:52;;;;;:::i;:::-;;:::i;25971:235::-;;;;;;;;;;-1:-1:-1;25971:235:52;;;;;:::i;:::-;;:::i;25709:205::-;;;;;;;;;;-1:-1:-1;25709:205:52;;;;;:::i;:::-;;:::i;10735:92::-;;;;;;;;;;;;;:::i;47289:938::-;;;:::i;44595:25::-;;;;;;;;;;-1:-1:-1;44595:25:52;;;;;;;;;;;49860:190;;;;;;;;;;;;;:::i;44007:27::-;;;;;;;;;;;;;;;;10103:85;;;;;;;;;;-1:-1:-1;10175:6:52;;-1:-1:-1;;;;;10175:6:52;10103:85;;45872:138;;;;;;;;;;-1:-1:-1;45872:138:52;;;;;:::i;:::-;;:::i;26430:102::-;;;;;;;;;;;;;:::i;28072:290::-;;;;;;;;;;-1:-1:-1;28072:290:52;;;;;:::i;:::-;;:::i;48286:478::-;;;;;;:::i;:::-;;:::i;29293:320::-;;;;;;;;;;-1:-1:-1;29293:320:52;;;;;:::i;:::-;;:::i;45775:87::-;;;;;;;;;;;;;:::i;50749:303::-;;;;;;;;;;-1:-1:-1;50749:303:52;;;;;:::i;:::-;;:::i;44518:32::-;;;;;;;;;;-1:-1:-1;44518:32:52;;;;;;;;44451:31;;;;;;;;;;;;;:::i;44258:72::-;;;;;;;;;;;;44288:42;44258:72;;28428:162;;;;;;;;;;-1:-1:-1;28428:162:52;;;;;:::i;:::-;-1:-1:-1;;;;;28548:25:52;;;28525:4;28548:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;28428:162;45332:106;;;;;;;;;;;;;:::i;10976:189::-;;;;;;;;;;-1:-1:-1;10976:189:52;;;;;:::i;:::-;;:::i;44040:34::-;;;;;;;;;;;;;;;;44556:32;;;;;;;;;;-1:-1:-1;44556:32:52;;;;;;;;;;;44416:29;;;;;;;;;;;;;;;;38021:222;38123:4;-1:-1:-1;;;;;;38146:50:52;;-1:-1:-1;;;38146:50:52;;:90;;;38200:36;38224:11;38200:23;:36::i;:::-;38139:97;38021:222;-1:-1:-1;;38021:222:52:o;46020:172::-;46079:4;-1:-1:-1;;;;;46103:19:52;;46095:55;;;;-1:-1:-1;;;46095:55:52;;7870:2:104;46095:55:52;;;7852:21:104;7909:2;7889:18;;;7882:30;7948:25;7928:18;;;7921:53;7991:18;;46095:55:52;;;;;;;;;-1:-1:-1;;;;;;46168:17:52;;;;;:10;:17;;;;;;;;;46020:172::o;26268:98::-;26322:13;26354:5;26347:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26268:98;:::o;27788:217::-;27864:7;31173:16;;;:7;:16;;;;;;-1:-1:-1;;;;;31173:16:52;27883:73;;;;-1:-1:-1;;;27883:73:52;;8607:2:104;27883:73:52;;;8589:21:104;8646:2;8626:18;;;8619:30;8685:34;8665:18;;;8658:62;-1:-1:-1;;;8736:18:104;;;8729:42;8788:19;;27883:73:52;8405:408:104;27883:73:52;-1:-1:-1;27974:24:52;;;;:15;:24;;;;;;-1:-1:-1;;;;;27974:24:52;;27788:217::o;27326:401::-;27406:13;27422:23;27437:7;27422:14;:23::i;:::-;27406:39;;27469:5;-1:-1:-1;;;;;27463:11:52;:2;-1:-1:-1;;;;;27463:11:52;;;27455:57;;;;-1:-1:-1;;;27455:57:52;;9020:2:104;27455:57:52;;;9002:21:104;9059:2;9039:18;;;9032:30;9098:34;9078:18;;;9071:62;-1:-1:-1;;;9149:18:104;;;9142:31;9190:19;;27455:57:52;8818:397:104;27455:57:52;700:10;-1:-1:-1;;;;;27544:21:52;;;;:62;;-1:-1:-1;27569:37:52;27586:5;700:10;28428:162;:::i;27569:37::-;27523:165;;;;-1:-1:-1;;;27523:165:52;;9422:2:104;27523:165:52;;;9404:21:104;9461:2;9441:18;;;9434:30;9500:34;9480:18;;;9473:62;9571:26;9551:18;;;9544:54;9615:19;;27523:165:52;9220:420:104;27523:165:52;27699:21;27708:2;27712:7;27699:8;:21::i;:::-;27396:331;27326:401;;:::o;28652:330::-;28841:41;700:10;28874:7;28841:18;:41::i;:::-;28833:103;;;;-1:-1:-1;;;28833:103:52;;;;;;;:::i;:::-;28947:28;28957:4;28963:2;28967:7;28947:9;:28::i;38322:253::-;38419:7;38454:23;38471:5;38454:16;:23::i;:::-;38446:5;:31;38438:87;;;;-1:-1:-1;;;38438:87:52;;10265:2:104;38438:87:52;;;10247:21:104;10304:2;10284:18;;;10277:30;10343:34;10323:18;;;10316:62;-1:-1:-1;;;10394:18:104;;;10387:41;10445:19;;38438:87:52;10063:407:104;38438:87:52;-1:-1:-1;;;;;;38542:19:52;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;38322:253::o;45665:104::-;7939:16:68;7958;2470:15;;-1:-1:-1;;;;;2470:15:68;;2371:122;7958:16;-1:-1:-1;;;;;7958:34:68;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7939:55;-1:-1:-1;8023:4:68;8008:19;;;;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8143:24:68;;8226:10;8178:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8168:70;;;;;;8143:96;;;;;;;;;;;;;2612:25:104;;2600:2;2585:18;;2466:177;8143:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8138:213;;8266:70;;-1:-1:-1;;;8266:70:68;;8325:10;8266:70;;;2084:51:104;2057:18;;8266:70:68;1938:203:104;8138:213:68;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8525:24:68;;8608:10;8560:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8550:70;;;;;;8525:96;;;;;;;;;;;;;2612:25:104;;2600:2;2585:18;;2466:177;8525:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:163;;;-1:-1:-1;2470:15:68;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8658:28:68;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8645:43:68;:9;-1:-1:-1;;;;;8645:43:68;;8525:163;8502:312;;8729:70;;-1:-1:-1;;;8729:70:68;;8788:10;8729:70;;;2084:51:104;2057:18;;8729:70:68;1938:203:104;8502:312:68;-1:-1:-1;45750:12:52::1;::::0;;-1:-1:-1;;45734:28:52;::::1;45750:12;::::0;;;::::1;;;45749:13;45734:28:::0;;::::1;;::::0;;45665:104::o;50563:171::-;50651:13;7939:16:68;7958;2470:15;;-1:-1:-1;;;;;2470:15:68;;2371:122;7958:16;-1:-1:-1;;;;;7958:34:68;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7939:55;-1:-1:-1;8023:4:68;8008:19;;;;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8143:24:68;;8226:10;8178:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8168:70;;;;;;8143:96;;;;;;;;;;;;;2612:25:104;;2600:2;2585:18;;2466:177;8143:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8138:213;;8266:70;;-1:-1:-1;;;8266:70:68;;8325:10;8266:70;;;2084:51:104;2057:18;;8266:70:68;1938:203:104;8138:213:68;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8525:24:68;;8608:10;8560:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8550:70;;;;;;8525:96;;;;;;;;;;;;;2612:25:104;;2600:2;2585:18;;2466:177;8525:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:163;;;-1:-1:-1;2470:15:68;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8658:28:68;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8645:43:68;:9;-1:-1:-1;;;;;8645:43:68;;8525:163;8502:312;;8729:70;;-1:-1:-1;;;8729:70:68;;8788:10;8729:70;;;2084:51:104;2057:18;;8729:70:68;1938:203:104;8502:312:68;50676:22:52;;::::1;::::0;:12:::1;::::0;:22:::1;::::0;::::1;::::0;::::1;:::i;:::-;;50715:12;50708:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8833:1:68;7929:912:::0;50563:171:52;;;:::o;29048:179::-;29181:39;29198:4;29204:2;29208:7;29181:39;;;;;;;;;;;;:16;:39::i;45444:107::-;7939:16:68;7958;2470:15;;-1:-1:-1;;;;;2470:15:68;;2371:122;7958:16;-1:-1:-1;;;;;7958:34:68;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7939:55;-1:-1:-1;8023:4:68;8008:19;;;;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8143:24:68;;8226:10;8178:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8168:70;;;;;;8143:96;;;;;;;;;;;;;2612:25:104;;2600:2;2585:18;;2466:177;8143:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8138:213;;8266:70;;-1:-1:-1;;;8266:70:68;;8325:10;8266:70;;;2084:51:104;2057:18;;8266:70:68;1938:203:104;8138:213:68;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8525:24:68;;8608:10;8560:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8550:70;;;;;;8525:96;;;;;;;;;;;;;2612:25:104;;2600:2;2585:18;;2466:177;8525:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:163;;;-1:-1:-1;2470:15:68;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8658:28:68;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8645:43:68;:9;-1:-1:-1;;;;;8645:43:68;;8525:163;8502:312;;8729:70;;-1:-1:-1;;;8729:70:68;;8788:10;8729:70;;;2084:51:104;2057:18;;8729:70:68;1938:203:104;8502:312:68;-1:-1:-1;45532:12:52::1;::::0;;-1:-1:-1;;45516:28:52;::::1;45532:12;::::0;;::::1;45531:13;45516:28;::::0;;45444:107::o;38829:230::-;38904:7;38939:30;38733:10;:17;;38646:111;38939:30;38931:5;:38;38923:95;;;;-1:-1:-1;;;38923:95:52;;11760:2:104;38923:95:52;;;11742:21:104;11799:2;11779:18;;;11772:30;11838:34;11818:18;;;11811:62;-1:-1:-1;;;11889:18:104;;;11882:42;11941:19;;38923:95:52;11558:408:104;38923:95:52;39035:10;39046:5;39035:17;;;;;;;;:::i;:::-;;;;;;;;;39028:24;;38829:230;;;:::o;46714:204::-;10175:6;;-1:-1:-1;;;;;10175:6:52;700:10;10315:23;10307:68;;;;-1:-1:-1;;;10307:68:52;;;;;;;:::i;:::-;46811:10:::1;46803:63;;;::::0;-1:-1:-1;;;46803:63:52;;12666:2:104;46803:63:52::1;::::0;::::1;12648:21:104::0;12705:2;12685:18;;;12678:30;12744:28;12724:18;;;12717:56;12790:18;;46803:63:52::1;12464:350:104::0;46803:63:52::1;-1:-1:-1::0;;;;;46876:20:52;;;::::1;;::::0;;;:10:::1;:20;::::0;;;;:35;;-1:-1:-1;;46876:35:52::1;;::::0;;::::1;::::0;;;::::1;::::0;;46714:204::o;45557:102::-;10175:6;;-1:-1:-1;;;;;10175:6:52;700:10;10315:23;10307:68;;;;-1:-1:-1;;;10307:68:52;;;;;;;:::i;:::-;45637:15:::1;::::0;;-1:-1:-1;;45618:34:52;::::1;45637:15:::0;;;;::::1;;;45636:16;45618:34:::0;;::::1;;::::0;;45557:102::o;46464:244::-;10175:6;;-1:-1:-1;;;;;10175:6:52;700:10;10315:23;10307:68;;;;-1:-1:-1;;;10307:68:52;;;;;;;:::i;:::-;46587:9:::1;46582:120;46602:20:::0;;::::1;46582:120;;;46670:18;;46689:1;46670:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;46643:10;:24;46654:9;;46664:1;46654:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;46643:24:52::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;46643:24:52;:48;;-1:-1:-1;;46643:48:52::1;;::::0;;;::::1;::::0;;;::::1;::::0;;46624:3;::::1;::::0;::::1;:::i;:::-;;;;46582:120;;;;46464:244:::0;;;;:::o;46924:106::-;10175:6;;-1:-1:-1;;;;;10175:6:52;700:10;10315:23;10307:68;;;;-1:-1:-1;;;10307:68:52;;;;;;;:::i;:::-;46998:12:::1;:25:::0;46924:106::o;25971:235::-;26043:7;26078:16;;;:7;:16;;;;;;-1:-1:-1;;;;;26078:16:52;26112:19;26104:73;;;;-1:-1:-1;;;26104:73:52;;13480:2:104;26104:73:52;;;13462:21:104;13519:2;13499:18;;;13492:30;13558:34;13538:18;;;13531:62;-1:-1:-1;;;13609:18:104;;;13602:39;13658:19;;26104:73:52;13278:405:104;25709:205:52;25781:7;-1:-1:-1;;;;;25808:19:52;;25800:74;;;;-1:-1:-1;;;25800:74:52;;13890:2:104;25800:74:52;;;13872:21:104;13929:2;13909:18;;;13902:30;13968:34;13948:18;;;13941:62;-1:-1:-1;;;14019:18:104;;;14012:40;14069:19;;25800:74:52;13688:406:104;25800:74:52;-1:-1:-1;;;;;;25891:16:52;;;;;:9;:16;;;;;;;25709:205::o;10735:92::-;10175:6;;-1:-1:-1;;;;;10175:6:52;700:10;10315:23;10307:68;;;;-1:-1:-1;;;10307:68:52;;;;;;;:::i;:::-;10799:21:::1;10817:1;10799:9;:21::i;:::-;10735:92::o:0;47289:938::-;47343:17;;;;;;;47335:54;;;;-1:-1:-1;;;47335:54:52;;14301:2:104;47335:54:52;;;14283:21:104;14340:2;14320:18;;;14313:30;14379:26;14359:18;;;14352:54;14423:18;;47335:54:52;14099:348:104;47335:54:52;47418:10;47433:1;47407:22;:10;:22;;47487:10;47478:65;;;;-1:-1:-1;;;47478:65:52;;15012:2:104;47478:65:52;;;14994:21:104;15051:2;15031:18;;;15024:30;15090:29;15070:18;;;15063:57;15137:18;;47478:65:52;14810:351:104;47478:65:52;47561:12;;;;;;;47553:69;;;;-1:-1:-1;;;47553:69:52;;15368:2:104;47553:69:52;;;15350:21:104;15407:2;15387:18;;;15380:30;15446:34;15426:18;;;15419:62;-1:-1:-1;;;15497:18:104;;;15490:42;15549:19;;47553:69:52;15166:408:104;47553:69:52;47657:12;;47640:14;;:29;47632:70;;;;-1:-1:-1;;;47632:70:52;;15781:2:104;47632:70:52;;;15763:21:104;15820:2;15800:18;;;15793:30;15859;15839:18;;;15832:58;15907:18;;47632:70:52;15579:352:104;47632:70:52;47732:10;47721:22;;;;:10;:22;;;;;;;;47720:23;47712:69;;;;-1:-1:-1;;;47712:69:52;;16138:2:104;47712:69:52;;;16120:21:104;16177:2;16157:18;;;16150:30;16216:34;16196:18;;;16189:62;-1:-1:-1;;;16267:18:104;;;16260:31;16308:19;;47712:69:52;15936:397:104;47712:69:52;47808:9;47799:5;;:18;47791:66;;;;-1:-1:-1;;;47791:66:52;;16540:2:104;47791:66:52;;;16522:21:104;16579:2;16559:18;;;16552:30;16618:34;16598:18;;;16591:62;-1:-1:-1;;;16669:18:104;;;16662:33;16712:19;;47791:66:52;16338:399:104;47791:66:52;48033:15;48051:14;;48068:1;48051:18;;;;:::i;:::-;48033:36;;48097:1;48079:14;;:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;48119:10:52;48108:22;;;;:10;:22;;;;;:29;;-1:-1:-1;;48108:29:52;48133:4;48108:29;;;48148:30;;48170:7;48148:9;:30::i;:::-;48194:26;;;48203:10;17043:51:104;;48215:4:52;17125:2:104;17110:18;;17103:50;48194:26:52;;17016:18:104;48194:26:52;;;;;;;47325:902;47289:938::o;49860:190::-;10175:6;;-1:-1:-1;;;;;10175:6:52;700:10;10315:23;10307:68;;;;-1:-1:-1;;;10307:68:52;;;;;;;:::i;:::-;49928:21:::1;49967:11:::0;49959:43:::1;;;::::0;-1:-1:-1;;;49959:43:52;;17366:2:104;49959:43:52::1;::::0;::::1;17348:21:104::0;17405:2;17385:18;;;17378:30;-1:-1:-1;;;17424:18:104;;;17417:49;17483:18;;49959:43:52::1;17164:343:104::0;49959:43:52::1;50012:31;44168:42;50035:7;50012:10;:31::i;:::-;49900:150;49860:190::o:0;45872:138::-;45947:7;7939:16:68;7958;2470:15;;-1:-1:-1;;;;;2470:15:68;;2371:122;7958:16;-1:-1:-1;;;;;7958:34:68;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7939:55;-1:-1:-1;8023:4:68;8008:19;;;;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8143:24:68;;8226:10;8178:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8168:70;;;;;;8143:96;;;;;;;;;;;;;2612:25:104;;2600:2;2585:18;;2466:177;8143:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8138:213;;8266:70;;-1:-1:-1;;;8266:70:68;;8325:10;8266:70;;;2084:51:104;2057:18;;8266:70:68;1938:203:104;8138:213:68;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8525:24:68;;8608:10;8560:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8550:70;;;;;;8525:96;;;;;;;;;;;;;2612:25:104;;2600:2;2585:18;;2466:177;8525:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:163;;;-1:-1:-1;2470:15:68;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8658:28:68;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8645:43:68;:9;-1:-1:-1;;;;;8645:43:68;;8525:163;8502:312;;8729:70;;-1:-1:-1;;;8729:70:68;;8788:10;8729:70;;;2084:51:104;2057:18;;8729:70:68;1938:203:104;8502:312:68;-1:-1:-1;;45966:5:52::1;:15:::0;;;;45872:138::o;26430:102::-;26486:13;26518:7;26511:14;;;;;:::i;28072:290::-;-1:-1:-1;;;;;28174:24:52;;700:10;28174:24;;28166:62;;;;-1:-1:-1;;;28166:62:52;;17714:2:104;28166:62:52;;;17696:21:104;17753:2;17733:18;;;17726:30;17792:27;17772:18;;;17765:55;17837:18;;28166:62:52;17512:349:104;28166:62:52;700:10;28239:32;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;28239:42:52;;;;;;;;;;;;:53;;-1:-1:-1;;28239:53:52;;;;;;;;;;28307:48;;540:41:104;;;28239:42:52;;700:10;28307:48;;513:18:104;28307:48:52;;;;;;;28072:290;;:::o;48286:478::-;10175:6;;-1:-1:-1;;;;;10175:6:52;700:10;10315:23;10307:68;;;;-1:-1:-1;;;10307:68:52;;;;;;;:::i;:::-;-1:-1:-1;;;;;48366:22:52;::::1;48358:62;;;::::0;-1:-1:-1;;;48358:62:52;;15012:2:104;48358:62:52::1;::::0;::::1;14994:21:104::0;15051:2;15031:18;;;15024:30;15090:29;15070:18;;;15063:57;15137:18;;48358:62:52::1;14810:351:104::0;48358:62:52::1;48438:15;::::0;;;::::1;;;48430:53;;;::::0;-1:-1:-1;;;48430:53:52;;18068:2:104;48430:53:52::1;::::0;::::1;18050:21:104::0;18107:2;18087:18;;;18080:30;18146:27;18126:18;;;18119:55;18191:18;;48430:53:52::1;17866:349:104::0;48430:53:52::1;48517:12;::::0;38733:10;:17;48501:28:::1;48493:64;;;::::0;-1:-1:-1;;;48493:64:52;;18422:2:104;48493:64:52::1;::::0;::::1;18404:21:104::0;18461:2;18441:18;;;18434:30;18500:25;18480:18;;;18473:53;18543:18;;48493:64:52::1;18220:347:104::0;48493:64:52::1;48576:15;48594:14;;48611:1;48594:18;;;;:::i;:::-;48576:36;;48640:1;48622:14;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;48651:20:52;::::1;;::::0;;;:10:::1;:20;::::0;;;;:27;;-1:-1:-1;;48651:27:52::1;48674:4;48651:27;::::0;;48689:28:::1;48662:8:::0;48709:7;48689:9:::1;:28::i;:::-;48733:24;::::0;;-1:-1:-1;;;;;17061:32:104;;17043:51;;48752:4:52::1;17125:2:104::0;17110:18;;17103:50;48733:24:52::1;::::0;17016:18:104;48733:24:52::1;;;;;;;48348:416;48286:478:::0;:::o;29293:320::-;29462:41;700:10;29495:7;29462:18;:41::i;:::-;29454:103;;;;-1:-1:-1;;;29454:103:52;;;;;;;:::i;:::-;29567:39;29581:4;29587:2;29591:7;29600:5;29567:13;:39::i;:::-;29293:320;;;;:::o;45775:87::-;7939:16:68;7958;2470:15;;-1:-1:-1;;;;;2470:15:68;;2371:122;7958:16;-1:-1:-1;;;;;7958:34:68;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7939:55;-1:-1:-1;8023:4:68;8008:19;;;;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8143:24:68;;8226:10;8178:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8168:70;;;;;;8143:96;;;;;;;;;;;;;2612:25:104;;2600:2;2585:18;;2466:177;8143:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8138:213;;8266:70;;-1:-1:-1;;;8266:70:68;;8325:10;8266:70;;;2084:51:104;2057:18;;8266:70:68;1938:203:104;8138:213:68;8004:820;;;2470:15;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8525:24:68;;8608:10;8560:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;8550:70;;;;;;8525:96;;;;;;;;;;;;;2612:25:104;;2600:2;2585:18;;2466:177;8525:96:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:163;;;-1:-1:-1;2470:15:68;;-1:-1:-1;;;;;2470:15:68;-1:-1:-1;;;;;8658:28:68;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8645:43:68;:9;-1:-1:-1;;;;;8645:43:68;;8525:163;8502:312;;8729:70;;-1:-1:-1;;;8729:70:68;;8788:10;8729:70;;;2084:51:104;2057:18;;8729:70:68;1938:203:104;8502:312:68;-1:-1:-1;45850:5:52::1;::::0;;-1:-1:-1;;45841:14:52;::::1;45850:5:::0;;;;::::1;;;45849:6;45841:14:::0;;::::1;;::::0;;45775:87::o;50749:303::-;31150:4;31173:16;;;:7;:16;;;;;;50822:13;;-1:-1:-1;;;;;31173:16:52;50847:76;;;;-1:-1:-1;;;50847:76:52;;18774:2:104;50847:76:52;;;18756:21:104;18813:2;18793:18;;;18786:30;18852:34;18832:18;;;18825:62;-1:-1:-1;;;18903:18:104;;;18896:45;18958:19;;50847:76:52;18572:411:104;50847:76:52;50969:1;50946:12;50940:26;;;;;:::i;:::-;;;:30;:105;;;;;;;;;;;;;;;;;50997:12;51011:18;:7;:16;:18::i;:::-;50980:59;;;;;;;;;:::i;:::-;;;;;;;;;;;;;50933:112;50749:303;-1:-1:-1;;50749:303:52:o;44451:31::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;45332:106::-;10175:6;;-1:-1:-1;;;;;10175:6:52;700:10;10315:23;10307:68;;;;-1:-1:-1;;;10307:68:52;;;;;;;:::i;:::-;45414:17:::1;::::0;;-1:-1:-1;;45393:38:52;::::1;45414:17:::0;;;;::::1;;;45413:18;45393:38:::0;;::::1;;::::0;;45332:106::o;10976:189::-;10175:6;;-1:-1:-1;;;;;10175:6:52;700:10;10315:23;10307:68;;;;-1:-1:-1;;;10307:68:52;;;;;;;:::i;:::-;-1:-1:-1;;;;;11064:22:52;::::1;11056:73;;;::::0;-1:-1:-1;;;11056:73:52;;20930:2:104;11056:73:52::1;::::0;::::1;20912:21:104::0;20969:2;20949:18;;;20942:30;21008:34;20988:18;;;20981:62;-1:-1:-1;;;21059:18:104;;;21052:36;21105:19;;11056:73:52::1;20728:402:104::0;11056:73:52::1;11139:19;11149:8;11139:9;:19::i;25350:300::-:0;25452:4;-1:-1:-1;;;;;;25487:40:52;;-1:-1:-1;;;25487:40:52;;:104;;-1:-1:-1;;;;;;;25543:48:52;;-1:-1:-1;;;25543:48:52;25487:104;:156;;;-1:-1:-1;;;;;;;;;;13186:40:52;;;25607:36;13078:155;34936:171;35010:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;35010:29:52;-1:-1:-1;;;;;35010:29:52;;;;;;;;:24;;35063:23;35010:24;35063:14;:23::i;:::-;-1:-1:-1;;;;;35054:46:52;;;;;;;;;;;34936:171;;:::o;31368:344::-;31461:4;31173:16;;;:7;:16;;;;;;-1:-1:-1;;;;;31173:16:52;31477:73;;;;-1:-1:-1;;;31477:73:52;;21337:2:104;31477:73:52;;;21319:21:104;21376:2;21356:18;;;21349:30;21415:34;21395:18;;;21388:62;-1:-1:-1;;;21466:18:104;;;21459:42;21518:19;;31477:73:52;21135:408:104;31477:73:52;31560:13;31576:23;31591:7;31576:14;:23::i;:::-;31560:39;;31628:5;-1:-1:-1;;;;;31617:16:52;:7;-1:-1:-1;;;;;31617:16:52;;:51;;;;31661:7;-1:-1:-1;;;;;31637:31:52;:20;31649:7;31637:11;:20::i;:::-;-1:-1:-1;;;;;31637:31:52;;31617:51;:87;;;-1:-1:-1;;;;;;28548:25:52;;;28525:4;28548:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;31672:32;31609:96;31368:344;-1:-1:-1;;;;31368:344:52:o;34265:560::-;34419:4;-1:-1:-1;;;;;34392:31:52;:23;34407:7;34392:14;:23::i;:::-;-1:-1:-1;;;;;34392:31:52;;34384:85;;;;-1:-1:-1;;;34384:85:52;;21750:2:104;34384:85:52;;;21732:21:104;21789:2;21769:18;;;21762:30;21828:34;21808:18;;;21801:62;-1:-1:-1;;;21879:18:104;;;21872:39;21928:19;;34384:85:52;21548:405:104;34384:85:52;-1:-1:-1;;;;;34487:16:52;;34479:65;;;;-1:-1:-1;;;34479:65:52;;22160:2:104;34479:65:52;;;22142:21:104;22199:2;22179:18;;;22172:30;22238:34;22218:18;;;22211:62;-1:-1:-1;;;22289:18:104;;;22282:34;22333:19;;34479:65:52;21958:400:104;34479:65:52;34555:39;34576:4;34582:2;34586:7;34555:20;:39::i;:::-;34656:29;34673:1;34677:7;34656:8;:29::i;:::-;-1:-1:-1;;;;;34696:15:52;;;;;;:9;:15;;;;;:20;;34715:1;;34696:15;:20;;34715:1;;34696:20;:::i;:::-;;;;-1:-1:-1;;;;;;;34726:13:52;;;;;;:9;:13;;;;;:18;;34743:1;;34726:13;:18;;34743:1;;34726:18;:::i;:::-;;;;-1:-1:-1;;34754:16:52;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;34754:21:52;-1:-1:-1;;;;;34754:21:52;;;;;;;;;34791:27;;34754:16;;34791:27;;;;;;;34265:560;;;:::o;11171:169::-;11245:6;;;-1:-1:-1;;;;;11261:17:52;;;-1:-1:-1;;;;;;11261:17:52;;;;;;;11293:40;;11245:6;;;11261:17;11245:6;;11293:40;;11226:16;;11293:40;11216:124;11171:169;:::o;32042:108::-;32117:26;32127:2;32131:7;32117:26;;;;;;;;;;;;:9;:26::i;:::-;32042:108;;:::o;50102:189::-;50176:12;50194:8;-1:-1:-1;;;;;50194:13:52;50216:7;50194:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50175:54;;;50247:7;50239:45;;;;-1:-1:-1;;;50239:45:52;;22905:2:104;50239:45:52;;;22887:21:104;22944:2;22924:18;;;22917:30;22983:27;22963:18;;;22956:55;23028:18;;50239:45:52;22703:349:104;30475:307:52;30626:28;30636:4;30642:2;30646:7;30626:9;:28::i;:::-;30672:48;30695:4;30701:2;30705:7;30714:5;30672:22;:48::i;:::-;30664:111;;;;-1:-1:-1;;;30664:111:52;;;;;;;:::i;13533:703::-;13589:13;13806:10;13802:51;;-1:-1:-1;;13832:10:52;;;;;;;;;;;;-1:-1:-1;;;13832:10:52;;;;;13533:703::o;13802:51::-;13877:5;13862:12;13916:75;13923:9;;13916:75;;13948:8;;;;:::i;:::-;;-1:-1:-1;13970:10:52;;-1:-1:-1;13978:2:52;13970:10;;:::i;:::-;;;13916:75;;;14000:19;14032:6;14022:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14022:17:52;;14000:39;;14049:150;14056:10;;14049:150;;14082:11;14092:1;14082:11;;:::i;:::-;;-1:-1:-1;14150:10:52;14158:2;14150:5;:10;:::i;:::-;14137:24;;:2;:24;:::i;:::-;14124:39;;14107:6;14114;14107:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;14107:56:52;;;;;;;;-1:-1:-1;14177:11:52;14186:2;14177:11;;:::i;:::-;;;14049:150;;49043:457;-1:-1:-1;;;;;49264:18:52;;49260:234;;27396:331;27326:401;;:::o;49260:234::-;49364:12;;;;:20;;:12;:20;49356:87;;;;-1:-1:-1;;;49356:87:52;;24052:2:104;49356:87:52;;;24034:21:104;24091:2;24071:18;;;24064:30;24130:34;24110:18;;;24103:62;-1:-1:-1;;;24181:18:104;;;24174:52;24243:19;;49356:87:52;23850:418:104;32371:311:52;32496:18;32502:2;32506:7;32496:5;:18::i;:::-;32545:54;32576:1;32580:2;32584:7;32593:5;32545:22;:54::i;:::-;32524:151;;;;-1:-1:-1;;;32524:151:52;;;;;;;:::i;35660:778::-;35810:4;-1:-1:-1;;;;;35830:13:52;;16346:20;16392:8;35826:606;;35865:72;;-1:-1:-1;;;35865:72:52;;-1:-1:-1;;;;;35865:36:52;;;;;:72;;700:10;;35916:4;;35922:7;;35931:5;;35865:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;35865:72:52;;;;;;;;-1:-1:-1;;35865:72:52;;;;;;;;;;;;:::i;:::-;;;35861:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;36104:13:52;;36100:266;;36146:60;;-1:-1:-1;;;36146:60:52;;;;;;;:::i;36100:266::-;36318:6;36312:13;36303:6;36299:2;36295:15;36288:38;35861:519;-1:-1:-1;;;;;;35987:51:52;-1:-1:-1;;;35987:51:52;;-1:-1:-1;35980:58:52;;35826:606;-1:-1:-1;36417:4:52;35660:778;;;;;;:::o;33004:372::-;-1:-1:-1;;;;;33083:16:52;;33075:61;;;;-1:-1:-1;;;33075:61:52;;25234:2:104;33075:61:52;;;25216:21:104;;;25253:18;;;25246:30;25312:34;25292:18;;;25285:62;25364:18;;33075:61:52;25032:356:104;33075:61:52;31150:4;31173:16;;;:7;:16;;;;;;-1:-1:-1;;;;;31173:16:52;:30;33146:58;;;;-1:-1:-1;;;33146:58:52;;25595:2:104;33146:58:52;;;25577:21:104;25634:2;25614:18;;;25607:30;25673;25653:18;;;25646:58;25721:18;;33146:58:52;25393:352:104;33146:58:52;33215:45;33244:1;33248:2;33252:7;33215:20;:45::i;:::-;-1:-1:-1;;;;;33271:13:52;;;;;;:9;:13;;;;;:18;;33288:1;;33271:13;:18;;33288:1;;33271:18;:::i;:::-;;;;-1:-1:-1;;33299:16:52;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;33299:21:52;-1:-1:-1;;;;;33299:21:52;;;;;;;;33336:33;;33299:16;;;33336:33;;33299:16;;33336:33;33004:372;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:104;-1:-1:-1;;;;;;88:32:104;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:104:o;592:131::-;-1:-1:-1;;;;;667:31:104;;657:42;;647:70;;713:1;710;703:12;728:247;787:6;840:2;828:9;819:7;815:23;811:32;808:52;;;856:1;853;846:12;808:52;895:9;882:23;914:31;939:5;914:31;:::i;980:258::-;1052:1;1062:113;1076:6;1073:1;1070:13;1062:113;;;1152:11;;;1146:18;1133:11;;;1126:39;1098:2;1091:10;1062:113;;;1193:6;1190:1;1187:13;1184:48;;;-1:-1:-1;;1228:1:104;1210:16;;1203:27;980:258::o;1243:269::-;1296:3;1334:5;1328:12;1361:6;1356:3;1349:19;1377:63;1433:6;1426:4;1421:3;1417:14;1410:4;1403:5;1399:16;1377:63;:::i;:::-;1494:2;1473:15;-1:-1:-1;;1469:29:104;1460:39;;;;1501:4;1456:50;;1243:269;-1:-1:-1;;1243:269:104:o;1517:231::-;1666:2;1655:9;1648:21;1629:4;1686:56;1738:2;1727:9;1723:18;1715:6;1686:56;:::i;1753:180::-;1812:6;1865:2;1853:9;1844:7;1840:23;1836:32;1833:52;;;1881:1;1878;1871:12;1833:52;-1:-1:-1;1904:23:104;;1753:180;-1:-1:-1;1753:180:104:o;2146:315::-;2214:6;2222;2275:2;2263:9;2254:7;2250:23;2246:32;2243:52;;;2291:1;2288;2281:12;2243:52;2330:9;2317:23;2349:31;2374:5;2349:31;:::i;:::-;2399:5;2451:2;2436:18;;;;2423:32;;-1:-1:-1;;;2146:315:104:o;2648:456::-;2725:6;2733;2741;2794:2;2782:9;2773:7;2769:23;2765:32;2762:52;;;2810:1;2807;2800:12;2762:52;2849:9;2836:23;2868:31;2893:5;2868:31;:::i;:::-;2918:5;-1:-1:-1;2975:2:104;2960:18;;2947:32;2988:33;2947:32;2988:33;:::i;:::-;2648:456;;3040:7;;-1:-1:-1;;;3094:2:104;3079:18;;;;3066:32;;2648:456::o;3109:127::-;3170:10;3165:3;3161:20;3158:1;3151:31;3201:4;3198:1;3191:15;3225:4;3222:1;3215:15;3241:632;3306:5;3336:18;3377:2;3369:6;3366:14;3363:40;;;3383:18;;:::i;:::-;3458:2;3452:9;3426:2;3512:15;;-1:-1:-1;;3508:24:104;;;3534:2;3504:33;3500:42;3488:55;;;3558:18;;;3578:22;;;3555:46;3552:72;;;3604:18;;:::i;:::-;3644:10;3640:2;3633:22;3673:6;3664:15;;3703:6;3695;3688:22;3743:3;3734:6;3729:3;3725:16;3722:25;3719:45;;;3760:1;3757;3750:12;3719:45;3810:6;3805:3;3798:4;3790:6;3786:17;3773:44;3865:1;3858:4;3849:6;3841;3837:19;3833:30;3826:41;;;;3241:632;;;;;:::o;3878:451::-;3947:6;4000:2;3988:9;3979:7;3975:23;3971:32;3968:52;;;4016:1;4013;4006:12;3968:52;4056:9;4043:23;4089:18;4081:6;4078:30;4075:50;;;4121:1;4118;4111:12;4075:50;4144:22;;4197:4;4189:13;;4185:27;-1:-1:-1;4175:55:104;;4226:1;4223;4216:12;4175:55;4249:74;4315:7;4310:2;4297:16;4292:2;4288;4284:11;4249:74;:::i;4334:156::-;4400:20;;4460:4;4449:16;;4439:27;;4429:55;;4480:1;4477;4470:12;4429:55;4334:156;;;:::o;4495:317::-;4561:6;4569;4622:2;4610:9;4601:7;4597:23;4593:32;4590:52;;;4638:1;4635;4628:12;4590:52;4677:9;4664:23;4696:31;4721:5;4696:31;:::i;:::-;4746:5;-1:-1:-1;4770:36:104;4802:2;4787:18;;4770:36;:::i;:::-;4760:46;;4495:317;;;;;:::o;4817:367::-;4880:8;4890:6;4944:3;4937:4;4929:6;4925:17;4921:27;4911:55;;4962:1;4959;4952:12;4911:55;-1:-1:-1;4985:20:104;;5028:18;5017:30;;5014:50;;;5060:1;5057;5050:12;5014:50;5097:4;5089:6;5085:17;5073:29;;5157:3;5150:4;5140:6;5137:1;5133:14;5125:6;5121:27;5117:38;5114:47;5111:67;;;5174:1;5171;5164:12;5111:67;4817:367;;;;;:::o;5189:771::-;5309:6;5317;5325;5333;5386:2;5374:9;5365:7;5361:23;5357:32;5354:52;;;5402:1;5399;5392:12;5354:52;5442:9;5429:23;5471:18;5512:2;5504:6;5501:14;5498:34;;;5528:1;5525;5518:12;5498:34;5567:70;5629:7;5620:6;5609:9;5605:22;5567:70;:::i;:::-;5656:8;;-1:-1:-1;5541:96:104;-1:-1:-1;5744:2:104;5729:18;;5716:32;;-1:-1:-1;5760:16:104;;;5757:36;;;5789:1;5786;5779:12;5757:36;;5828:72;5892:7;5881:8;5870:9;5866:24;5828:72;:::i;:::-;5189:771;;;;-1:-1:-1;5919:8:104;-1:-1:-1;;;;5189:771:104:o;5965:118::-;6051:5;6044:13;6037:21;6030:5;6027:32;6017:60;;6073:1;6070;6063:12;6088:382;6153:6;6161;6214:2;6202:9;6193:7;6189:23;6185:32;6182:52;;;6230:1;6227;6220:12;6182:52;6269:9;6256:23;6288:31;6313:5;6288:31;:::i;:::-;6338:5;-1:-1:-1;6395:2:104;6380:18;;6367:32;6408:30;6367:32;6408:30;:::i;:::-;6457:7;6447:17;;;6088:382;;;;;:::o;6475:795::-;6570:6;6578;6586;6594;6647:3;6635:9;6626:7;6622:23;6618:33;6615:53;;;6664:1;6661;6654:12;6615:53;6703:9;6690:23;6722:31;6747:5;6722:31;:::i;:::-;6772:5;-1:-1:-1;6829:2:104;6814:18;;6801:32;6842:33;6801:32;6842:33;:::i;:::-;6894:7;-1:-1:-1;6948:2:104;6933:18;;6920:32;;-1:-1:-1;7003:2:104;6988:18;;6975:32;7030:18;7019:30;;7016:50;;;7062:1;7059;7052:12;7016:50;7085:22;;7138:4;7130:13;;7126:27;-1:-1:-1;7116:55:104;;7167:1;7164;7157:12;7116:55;7190:74;7256:7;7251:2;7238:16;7233:2;7229;7225:11;7190:74;:::i;:::-;7180:84;;;6475:795;;;;;;;:::o;7275:388::-;7343:6;7351;7404:2;7392:9;7383:7;7379:23;7375:32;7372:52;;;7420:1;7417;7410:12;7372:52;7459:9;7446:23;7478:31;7503:5;7478:31;:::i;:::-;7528:5;-1:-1:-1;7585:2:104;7570:18;;7557:32;7598:33;7557:32;7598:33;:::i;8020:380::-;8099:1;8095:12;;;;8142;;;8163:61;;8217:4;8209:6;8205:17;8195:27;;8163:61;8270:2;8262:6;8259:14;8239:18;8236:38;8233:161;;;8316:10;8311:3;8307:20;8304:1;8297:31;8351:4;8348:1;8341:15;8379:4;8376:1;8369:15;9645:413;9847:2;9829:21;;;9886:2;9866:18;;;9859:30;9925:34;9920:2;9905:18;;9898:62;-1:-1:-1;;;9991:2:104;9976:18;;9969:47;10048:3;10033:19;;9645:413::o;10475:245::-;10542:6;10595:2;10583:9;10574:7;10570:23;10566:32;10563:52;;;10611:1;10608;10601:12;10563:52;10643:9;10637:16;10662:28;10684:5;10662:28;:::i;10725:390::-;10967:29;10955:42;;11035:2;11031:15;;;;-1:-1:-1;;11027:53:104;11022:2;11013:12;;11006:75;11106:2;11097:12;;10725:390::o;11302:251::-;11372:6;11425:2;11413:9;11404:7;11400:23;11396:32;11393:52;;;11441:1;11438;11431:12;11393:52;11473:9;11467:16;11492:31;11517:5;11492:31;:::i;11971:127::-;12032:10;12027:3;12023:20;12020:1;12013:31;12063:4;12060:1;12053:15;12087:4;12084:1;12077:15;12103:356;12305:2;12287:21;;;12324:18;;;12317:30;12383:34;12378:2;12363:18;;12356:62;12450:2;12435:18;;12103:356::o;12819:182::-;12876:6;12929:2;12917:9;12908:7;12904:23;12900:32;12897:52;;;12945:1;12942;12935:12;12897:52;12968:27;12985:9;12968:27;:::i;13006:127::-;13067:10;13062:3;13058:20;13055:1;13048:31;13098:4;13095:1;13088:15;13122:4;13119:1;13112:15;13138:135;13177:3;-1:-1:-1;;13198:17:104;;13195:43;;;13218:18;;:::i;:::-;-1:-1:-1;13265:1:104;13254:13;;13138:135::o;16742:128::-;16782:3;16813:1;16809:6;16806:1;16803:13;16800:39;;;16819:18;;:::i;:::-;-1:-1:-1;16855:9:104;;16742:128::o;19114:185::-;19156:3;19194:5;19188:12;19209:52;19254:6;19249:3;19242:4;19235:5;19231:16;19209:52;:::i;:::-;19277:16;;;;;19114:185;-1:-1:-1;;19114:185:104:o;19422:1301::-;19699:3;19728:1;19761:6;19755:13;19791:3;19813:1;19841:9;19837:2;19833:18;19823:28;;19901:2;19890:9;19886:18;19923;19913:61;;19967:4;19959:6;19955:17;19945:27;;19913:61;19993:2;20041;20033:6;20030:14;20010:18;20007:38;20004:165;;;-1:-1:-1;;;20068:33:104;;20124:4;20121:1;20114:15;20154:4;20075:3;20142:17;20004:165;20185:18;20212:104;;;;20330:1;20325:320;;;;20178:467;;20212:104;-1:-1:-1;;20245:24:104;;20233:37;;20290:16;;;;-1:-1:-1;20212:104:104;;20325:320;19061:1;19054:14;;;19098:4;19085:18;;20420:1;20434:165;20448:6;20445:1;20442:13;20434:165;;;20526:14;;20513:11;;;20506:35;20569:16;;;;20463:10;;20434:165;;;20438:3;;20628:6;20623:3;20619:16;20612:23;;20178:467;;;;;;;20661:56;20686:30;20712:3;20704:6;20686:30;:::i;:::-;-1:-1:-1;;;19364:20:104;;19409:1;19400:11;;19304:113;20661:56;20654:63;19422:1301;-1:-1:-1;;;;;19422:1301:104:o;22363:125::-;22403:4;22431:1;22428;22425:8;22422:34;;;22436:18;;:::i;:::-;-1:-1:-1;22473:9:104;;22363:125::o;23057:414::-;23259:2;23241:21;;;23298:2;23278:18;;;23271:30;23337:34;23332:2;23317:18;;23310:62;-1:-1:-1;;;23403:2:104;23388:18;;23381:48;23461:3;23446:19;;23057:414::o;23476:127::-;23537:10;23532:3;23528:20;23525:1;23518:31;23568:4;23565:1;23558:15;23592:4;23589:1;23582:15;23608:120;23648:1;23674;23664:35;;23679:18;;:::i;:::-;-1:-1:-1;23713:9:104;;23608:120::o;23733:112::-;23765:1;23791;23781:35;;23796:18;;:::i;:::-;-1:-1:-1;23830:9:104;;23733:112::o;24273:500::-;-1:-1:-1;;;;;24542:15:104;;;24524:34;;24594:15;;24589:2;24574:18;;24567:43;24641:2;24626:18;;24619:34;;;24689:3;24684:2;24669:18;;24662:31;;;24467:4;;24710:57;;24747:19;;24739:6;24710:57;:::i;:::-;24702:65;24273:500;-1:-1:-1;;;;;;24273:500:104:o;24778:249::-;24847:6;24900:2;24888:9;24879:7;24875:23;24871:32;24868:52;;;24916:1;24913;24906:12;24868:52;24948:9;24942:16;24967:30;24991:5;24967:30;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawAll()": {
        "notice": "Allow contract owner to withdraw funds directly to the treasury "
      }
    },
    "version": 1
  },
  "offset": [
    43875,
    51055
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x267 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xC4AE3168 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x6E0 JUMPI DUP1 PUSH4 0xEF3B2CE7 EQ PUSH2 0x729 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x73E JUMPI DUP1 PUSH4 0xF5BEB2ED EQ PUSH2 0x75E JUMPI DUP1 PUSH4 0xFC27F3AE EQ PUSH2 0x774 JUMPI DUP1 PUSH4 0xFEC303B3 EQ PUSH2 0x793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x654 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x669 JUMPI DUP1 PUSH4 0xCC9E7985 EQ PUSH2 0x689 JUMPI DUP1 PUSH4 0xD547CFB7 EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0xE7EC9F30 EQ PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5AE JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0x5CC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0xB6A1DBA1 EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0x719414B4 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0x8D859F3E EQ PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36C4FF7A GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x549B0726 GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x549B0726 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x5A7DAB1D EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x62830FE2 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x631065F0 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36C4FF7A EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x37C0DF0C EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x4C38B2F1 EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x22F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x29FC6BAE EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x2B4403BB EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x30F280BB EQ PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x2CE6E71 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x31B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EB7 JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x7D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x2F65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2F78 JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F91 JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FBD JUMP JUMPDEST PUSH2 0xA8D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5A SLOAD PUSH2 0x28C SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5A SLOAD PUSH2 0x28C SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2F91 JUMP JUMPDEST PUSH2 0xABE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0xB54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH20 0xEE9ABB3A1D3D09D2E258862F69D52AEDB2623088 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x308A JUMP JUMPDEST PUSH2 0xDFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0x457 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FBD JUMP JUMPDEST PUSH2 0x1136 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0x1151 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH2 0x48C CALLDATASIZE PUSH1 0x4 PUSH2 0x2F78 JUMP JUMPDEST PUSH2 0x13F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x30E9 JUMP JUMPDEST PUSH2 0x1486 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0x152A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0x4E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x316A JUMP JUMPDEST PUSH2 0x1575 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0x501 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F78 JUMP JUMPDEST PUSH2 0x1640 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x521 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F78 JUMP JUMPDEST PUSH2 0x166F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH2 0x541 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x16E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0x176D JUMP JUMPDEST PUSH2 0x33B PUSH2 0x17A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5A SLOAD PUSH2 0x28C SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0x1A64 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH1 0x56 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x303 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH2 0x5E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F78 JUMP JUMPDEST PUSH2 0x1AF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0x1D8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0x61C CALLDATASIZE PUSH1 0x4 PUSH2 0x31E4 JUMP JUMPDEST PUSH2 0x1D9A JUMP JUMPDEST PUSH2 0x33B PUSH2 0x62F CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x1E5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0x64F CALLDATASIZE PUSH1 0x4 PUSH2 0x321D JUMP JUMPDEST PUSH2 0x2029 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0x2061 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0x684 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F78 JUMP JUMPDEST PUSH2 0x230E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5A SLOAD PUSH2 0x28C SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0x23E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH20 0xA47C8BF37F92ABED4A126BDA807A7B7498661ACD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x6FB CALLDATASIZE PUSH1 0x4 PUSH2 0x329D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0x2477 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0x759 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x24C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH1 0x57 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5A SLOAD PUSH2 0x28C SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH1 0x58 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x7CE JUMPI POP PUSH2 0x7CE DUP3 PUSH2 0x255C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x831 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420616464206E756C6C2061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x85F SWAP1 PUSH2 0x32CB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x88B SWAP1 PUSH2 0x32CB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x95B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x828 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x982 DUP3 PUSH2 0x166F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x9F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x828 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xA0C JUMPI POP PUSH2 0xA0C DUP2 CALLER PUSH2 0x6FB JUMP JUMPDEST PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x828 JUMP JUMPDEST PUSH2 0xA88 DUP4 DUP4 PUSH2 0x25AC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA97 CALLER DUP3 PUSH2 0x261A JUMP JUMPDEST PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x828 SWAP1 PUSH2 0x3300 JUMP JUMPDEST PUSH2 0xA88 DUP4 DUP4 DUP4 PUSH2 0x2711 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC9 DUP4 PUSH2 0x16E6 JUMP JUMPDEST DUP3 LT PUSH2 0xB2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x828 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB68 PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BED5241 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBA5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC9 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0xC9A JUMPI PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC01 SWAP2 SWAP1 PUSH2 0x336E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC35 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC76 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST PUSH2 0xC95 JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x828 JUMP JUMPDEST PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCC5 SWAP2 SWAP1 PUSH2 0x336E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD3A SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST DUP1 PUSH2 0xDC2 JUMPI POP PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA75B87D2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDAD SWAP2 SWAP1 PUSH2 0x33B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ORIGIN PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xDE1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x828 JUMP JUMPDEST POP PUSH1 0x5A DUP1 SLOAD PUSH2 0xFF00 NOT DUP2 AND PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xE15 PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BED5241 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE76 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0xF47 JUMPI PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEAE SWAP2 SWAP1 PUSH2 0x336E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF23 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST PUSH2 0xF42 JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x828 JUMP JUMPDEST PUSH2 0x108E JUMP JUMPDEST PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF72 SWAP2 SWAP1 PUSH2 0x336E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFE7 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST DUP1 PUSH2 0x106F JUMPI POP PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA75B87D2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1036 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105A SWAP2 SWAP1 PUSH2 0x33B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ORIGIN PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x108E JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x828 JUMP JUMPDEST DUP3 MLOAD PUSH2 0x10A1 SWAP1 PUSH1 0x59 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x2E08 JUMP JUMPDEST POP PUSH1 0x59 DUP1 SLOAD PUSH2 0x10AF SWAP1 PUSH2 0x32CB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10DB SWAP1 PUSH2 0x32CB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1128 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1128 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x110B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA88 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1165 PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BED5241 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11C6 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x1297 JUMPI PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11FE SWAP2 SWAP1 PUSH2 0x336E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1232 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x124F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1273 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST PUSH2 0x1292 JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x828 JUMP JUMPDEST PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12C2 SWAP2 SWAP1 PUSH2 0x336E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1313 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1337 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST DUP1 PUSH2 0x13BF JUMPI POP PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA75B87D2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1386 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13AA SWAP2 SWAP1 PUSH2 0x33B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ORIGIN PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x13DE JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x828 JUMP JUMPDEST POP PUSH1 0x5A DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF SWAP1 SWAP2 AND ISZERO OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FE PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x1461 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x828 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1474 JUMPI PUSH2 0x1474 PUSH2 0x33CE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x828 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST CALLER PUSH2 0x14FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742061646420746F206E756C6C2061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x828 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1554 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x828 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST PUSH1 0x5A DUP1 SLOAD PUSH4 0xFF000000 NOT DUP2 AND PUSH4 0x1000000 SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x159F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x828 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1639 JUMPI DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x15BC JUMPI PUSH2 0x15BC PUSH2 0x33CE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15D1 SWAP2 SWAP1 PUSH2 0x3419 JUMP JUMPDEST PUSH1 0x5B PUSH1 0x0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x15E7 JUMPI PUSH2 0x15E7 PUSH2 0x33CE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15FC SWAP2 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x1631 DUP2 PUSH2 0x344A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15A2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x166A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x828 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST PUSH1 0x57 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x828 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x828 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1797 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x828 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST PUSH2 0x17A1 PUSH1 0x0 PUSH2 0x28BC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5A SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x17FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F77206C697374206973206E6F74206163746976650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x828 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x5B PUSH1 0x20 MSTORE CALLER PUSH2 0x1853 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F206E756C6C20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x828 JUMP JUMPDEST PUSH1 0x5A SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x18BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F727279206D696E74696E6720706572696F642069736E2774206375727265 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6E746C79206F6E676F696E67 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x828 JUMP JUMPDEST PUSH1 0x57 SLOAD PUSH1 0x58 SLOAD LT PUSH2 0x1912 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74696E6720776F756C642065786365656420737570706C792100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x828 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x197C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C726561647920636C61696D656420796F7572204E46 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x828 JUMP JUMPDEST CALLVALUE PUSH1 0x56 SLOAD EQ PUSH2 0x19D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520616D6F756E7420646573706F73697465642069736E277420636F7272 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1958DD PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x828 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x58 SLOAD PUSH1 0x1 PUSH2 0x19EA SWAP2 SWAP1 PUSH2 0x3465 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x58 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19FF SWAP2 SWAP1 PUSH2 0x3465 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1A28 SWAP1 DUP3 PUSH2 0x290E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x81BB5C3B8ACB6CA9D92CCFBF1418729B81D477532BD7DB95A46CB57054D2D84D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x828 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x1AD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E737566666963656E742062616C616E6365 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x828 JUMP JUMPDEST PUSH2 0x1AF0 PUSH20 0xEE9ABB3A1D3D09D2E258862F69D52AEDB2623088 DUP3 PUSH2 0x292C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B08 PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BED5241 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B69 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x1C3A JUMPI PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BA1 SWAP2 SWAP1 PUSH2 0x336E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C16 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST PUSH2 0x1C35 JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x828 JUMP JUMPDEST PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C65 SWAP2 SWAP1 PUSH2 0x336E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C99 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CDA SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST DUP1 PUSH2 0x1D62 JUMPI POP PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA75B87D2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D4D SWAP2 SWAP1 PUSH2 0x33B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ORIGIN PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1D81 JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x828 JUMP JUMPDEST POP POP PUSH1 0x56 DUP2 SWAP1 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x85F SWAP1 PUSH2 0x32CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x1DF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x828 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x828 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1EDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F206E756C6C20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x828 JUMP JUMPDEST PUSH1 0x5A SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1F38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5465616D206D696E74696E67206E6F7420737461727465642E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x828 JUMP JUMPDEST PUSH1 0x57 SLOAD PUSH1 0x8 SLOAD LT PUSH2 0x1F8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C207465616D20746F6B656E73206D696E7465642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x828 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x58 SLOAD PUSH1 0x1 PUSH2 0x1F9C SWAP2 SWAP1 PUSH2 0x3465 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x58 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1FB1 SWAP2 SWAP1 PUSH2 0x3465 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1FE3 DUP3 DUP3 PUSH2 0x290E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x81BB5C3B8ACB6CA9D92CCFBF1418729B81D477532BD7DB95A46CB57054D2D84D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x2033 CALLER DUP4 PUSH2 0x261A JUMP JUMPDEST PUSH2 0x204F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x828 SWAP1 PUSH2 0x3300 JUMP JUMPDEST PUSH2 0x205B DUP5 DUP5 DUP5 DUP5 PUSH2 0x29CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2075 PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BED5241 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20D6 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x21A7 JUMPI PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x210E SWAP2 SWAP1 PUSH2 0x336E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2142 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x215F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2183 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST PUSH2 0x21A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x828 JUMP JUMPDEST PUSH2 0x22EE JUMP JUMPDEST PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7AE1CFCA CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x21D2 SWAP2 SWAP1 PUSH2 0x336E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2206 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2223 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2247 SWAP2 SWAP1 PUSH2 0x3351 JUMP JUMPDEST DUP1 PUSH2 0x22CF JUMPI POP PUSH1 0x54 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA75B87D2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2296 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22BA SWAP2 SWAP1 PUSH2 0x33B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ORIGIN PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x22EE JUMPI PUSH1 0x40 MLOAD PUSH4 0x372463E3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x828 JUMP JUMPDEST POP PUSH1 0x5A DUP1 SLOAD PUSH3 0xFF0000 NOT DUP2 AND PUSH3 0x10000 SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x238D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x828 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x59 DUP1 SLOAD PUSH2 0x239C SWAP1 PUSH2 0x32CB JUMP JUMPDEST SWAP1 POP GT PUSH2 0x23B8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x59 PUSH2 0x23C3 DUP4 PUSH2 0x2A02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x23D4 SWAP3 SWAP2 SWAP1 PUSH2 0x3499 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x59 DUP1 SLOAD PUSH2 0x23F6 SWAP1 PUSH2 0x32CB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2422 SWAP1 PUSH2 0x32CB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x246F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2444 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x246F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2452 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x828 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST PUSH1 0x5A DUP1 SLOAD PUSH5 0xFF00000000 NOT DUP2 AND PUSH5 0x100000000 SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x828 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x828 JUMP JUMPDEST PUSH2 0x1AF0 DUP2 PUSH2 0x28BC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x258D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x7CE JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x25E1 DUP3 PUSH2 0x166F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2693 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x828 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x269E DUP4 PUSH2 0x166F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x26D9 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x26CE DUP5 PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x2709 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2724 DUP3 PUSH2 0x166F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x278C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x828 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x27EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x828 JUMP JUMPDEST PUSH2 0x27F9 DUP4 DUP4 DUP4 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2804 PUSH1 0x0 DUP3 PUSH2 0x25AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x282D SWAP1 DUP5 SWAP1 PUSH2 0x3554 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x285B SWAP1 DUP5 SWAP1 PUSH2 0x3465 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2928 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2B89 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2979 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x297E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2077696474686472617720457468657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x828 JUMP JUMPDEST PUSH2 0x29DA DUP5 DUP5 DUP5 PUSH2 0x2711 JUMP JUMPDEST PUSH2 0x29E6 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2BBC JUMP JUMPDEST PUSH2 0x205B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x828 SWAP1 PUSH2 0x356B JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x2A26 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x2A50 JUMPI DUP1 PUSH2 0x2A3A DUP2 PUSH2 0x344A JUMP JUMPDEST SWAP2 POP PUSH2 0x2A49 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x35D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A2A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A6B JUMPI PUSH2 0x2A6B PUSH2 0x2FFE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2A95 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x2709 JUMPI PUSH2 0x2AAA PUSH1 0x1 DUP4 PUSH2 0x3554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AB7 PUSH1 0xA DUP7 PUSH2 0x35E7 JUMP JUMPDEST PUSH2 0x2AC2 SWAP1 PUSH1 0x30 PUSH2 0x3465 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2AD7 JUMPI PUSH2 0x2AD7 PUSH2 0x33CE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x2AF9 PUSH1 0xA DUP7 PUSH2 0x35D3 JUMP JUMPDEST SWAP5 POP PUSH2 0x2A99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2B13 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x5A SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xA88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F72727920664E6F766120436C61696D696E6720686173206E6F7420796574 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x8195B991959081D1BC81D1C985B9CD9995C88139195 PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x828 JUMP JUMPDEST PUSH2 0x2B93 DUP4 DUP4 PUSH2 0x2CBA JUMP JUMPDEST PUSH2 0x2BA0 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2BBC JUMP JUMPDEST PUSH2 0xA88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x828 SWAP1 PUSH2 0x356B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2CAF JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x2C00 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x35FB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2C3B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2C38 SWAP2 DUP2 ADD SWAP1 PUSH2 0x3638 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2C95 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2C69 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2C6E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x2C8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x828 SWAP1 PUSH2 0x356B JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x2709 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2D10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x828 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2D75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x828 JUMP JUMPDEST PUSH2 0x2D81 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2B00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2DAA SWAP1 DUP5 SWAP1 PUSH2 0x3465 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2E14 SWAP1 PUSH2 0x32CB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2E36 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2E7C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2E4F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2E7C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2E7C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2E7C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2E61 JUMP JUMPDEST POP PUSH2 0x2E88 SWAP3 SWAP2 POP PUSH2 0x2E8C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2E88 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2E8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1AF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2ED4 DUP2 PUSH2 0x2EA1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1AF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2ED4 DUP2 PUSH2 0x2EDB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F28 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F10 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x205B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2F51 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2F0D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2ED4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2FAF DUP2 PUSH2 0x2EDB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2FD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2FDD DUP2 PUSH2 0x2EDB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2FED DUP2 PUSH2 0x2EDB JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x302F JUMPI PUSH2 0x302F PUSH2 0x2FFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3057 JUMPI PUSH2 0x3057 PUSH2 0x2FFE JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x3070 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x309C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x30C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2709 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x3014 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x30E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3107 DUP2 PUSH2 0x2EDB JUMP JUMPDEST SWAP2 POP PUSH2 0x3115 PUSH1 0x20 DUP5 ADD PUSH2 0x30D3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x3163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31A4 DUP9 DUP4 DUP10 ADD PUSH2 0x311E JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x31BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31CA DUP8 DUP3 DUP9 ADD PUSH2 0x311E JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1AF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3202 DUP2 PUSH2 0x2EDB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3212 DUP2 PUSH2 0x31D6 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x323E DUP2 PUSH2 0x2EDB JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x324E DUP2 PUSH2 0x2EDB JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x3282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3291 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x3014 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x32BB DUP2 PUSH2 0x2EDB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3212 DUP2 PUSH2 0x2EDB JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x32DF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1130 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2ED4 DUP2 PUSH2 0x31D6 JUMP JUMPDEST PUSH32 0x7068616E746F6D2E636F6E74726163742E726567697374657265640000000000 DUP2 MSTORE PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1B DUP3 ADD MSTORE PUSH1 0x2F ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2ED4 DUP2 PUSH2 0x2EDB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x342B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2ED4 DUP3 PUSH2 0x30D3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x345E JUMPI PUSH2 0x345E PUSH2 0x3434 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3478 JUMPI PUSH2 0x3478 PUSH2 0x3434 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x348F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F0D JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x34B5 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x34D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x34E9 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x34FA JUMPI PUSH2 0x3527 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x3527 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x351F JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x3506 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP PUSH2 0x354B PUSH2 0x353A DUP3 DUP7 PUSH2 0x347D JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x5 ADD SWAP1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3566 JUMPI PUSH2 0x3566 PUSH2 0x3434 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x35E2 JUMPI PUSH2 0x35E2 PUSH2 0x35BD JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x35F6 JUMPI PUSH2 0x35F6 PUSH2 0x35BD JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x362E SWAP1 DUP4 ADD DUP5 PUSH2 0x2F39 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x364A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2ED4 DUP2 PUSH2 0x2EA1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 SWAP9 0xBC 0xE1 0xCA 0xA9 CALL PUSH16 0x8666A4A81C6294D4258B0BBA2D7A6059 SWAP16 SWAP14 JUMP 0xAD PUSH27 0x5AF40764736F6C634300080A003300000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "8": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "LT",
      "path": "52"
    },
    "9": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x267"
    },
    "12": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "13": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "CALLDATALOAD",
      "path": "52"
    },
    "16": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "SHR",
      "path": "52"
    },
    "19": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "20": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x715018A6"
    },
    "25": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "GT",
      "path": "52"
    },
    "26": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x144"
    },
    "29": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "30": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "31": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0xC4AE3168"
    },
    "36": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "GT",
      "path": "52"
    },
    "37": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0xB6"
    },
    "40": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "41": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "42": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0xE985E9C5"
    },
    "47": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "GT",
      "path": "52"
    },
    "48": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x7A"
    },
    "51": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "52": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "53": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0xE985E9C5"
    },
    "58": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "59": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x6E0"
    },
    "62": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "63": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "64": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0xEF3B2CE7"
    },
    "69": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "70": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x729"
    },
    "73": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "74": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "75": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "81": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x73E"
    },
    "84": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "85": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "86": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0xF5BEB2ED"
    },
    "91": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "92": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x75E"
    },
    "95": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "96": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "97": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0xFC27F3AE"
    },
    "102": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "103": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x774"
    },
    "106": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "107": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "108": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0xFEC303B3"
    },
    "113": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "114": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x793"
    },
    "117": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "118": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "120": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "121": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "REVERT",
      "path": "52"
    },
    "122": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "123": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "124": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0xC4AE3168"
    },
    "129": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "130": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x654"
    },
    "133": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "134": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "135": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0xC87B56DD"
    },
    "140": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "141": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x669"
    },
    "144": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "145": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "146": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0xCC9E7985"
    },
    "151": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "152": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x689"
    },
    "155": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "156": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "157": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0xD547CFB7"
    },
    "162": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "163": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x6A3"
    },
    "166": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "167": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "168": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0xE7EC9F30"
    },
    "173": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "174": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x6B8"
    },
    "177": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "178": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "180": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "181": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "REVERT",
      "path": "52"
    },
    "182": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "183": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "184": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x8DA5CB5B"
    },
    "189": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "GT",
      "path": "52"
    },
    "190": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x108"
    },
    "193": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "194": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "195": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x8DA5CB5B"
    },
    "200": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "201": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x5AE"
    },
    "204": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "205": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "206": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x91B7F5ED"
    },
    "211": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "212": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x5CC"
    },
    "215": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "216": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "217": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x95D89B41"
    },
    "222": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "223": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x5EC"
    },
    "226": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "227": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "228": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0xA22CB465"
    },
    "233": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "234": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x601"
    },
    "237": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "238": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "239": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0xB6A1DBA1"
    },
    "244": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "245": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x621"
    },
    "248": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "249": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "250": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0xB88D4FDE"
    },
    "255": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "256": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x634"
    },
    "259": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "260": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "262": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "263": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "REVERT",
      "path": "52"
    },
    "264": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "265": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "266": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x715018A6"
    },
    "271": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "272": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x546"
    },
    "275": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "276": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "277": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x719414B4"
    },
    "282": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "283": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x55B"
    },
    "286": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "287": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "288": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x8456CB59"
    },
    "293": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "294": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x563"
    },
    "297": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "298": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "299": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x853828B6"
    },
    "304": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "305": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x583"
    },
    "308": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "309": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "310": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x8D859F3E"
    },
    "315": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "316": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x598"
    },
    "319": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "320": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "322": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "323": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "REVERT",
      "path": "52"
    },
    "324": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "325": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "326": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x36C4FF7A"
    },
    "331": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "GT",
      "path": "52"
    },
    "332": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1DD"
    },
    "335": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "336": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "337": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x549B0726"
    },
    "342": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "GT",
      "path": "52"
    },
    "343": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1A1"
    },
    "346": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "347": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "348": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x549B0726"
    },
    "353": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "354": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x491"
    },
    "357": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "358": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "359": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x5A7DAB1D"
    },
    "364": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "365": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x4B1"
    },
    "368": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "369": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "370": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x62830FE2"
    },
    "375": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "376": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x4C6"
    },
    "379": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "380": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "381": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x631065F0"
    },
    "386": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "387": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x4E6"
    },
    "390": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "391": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "392": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x6352211E"
    },
    "397": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "398": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x506"
    },
    "401": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "402": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "403": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x70A08231"
    },
    "408": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "409": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x526"
    },
    "412": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "413": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "415": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "416": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "REVERT",
      "path": "52"
    },
    "417": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "418": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "419": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x36C4FF7A"
    },
    "424": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "425": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3F4"
    },
    "428": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "429": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "430": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x37C0DF0C"
    },
    "435": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "436": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x41C"
    },
    "439": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "440": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "441": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x42842E0E"
    },
    "446": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "447": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x43C"
    },
    "450": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "451": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "452": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x4C38B2F1"
    },
    "457": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "458": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x45C"
    },
    "461": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "462": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "463": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x4F6CCCE7"
    },
    "468": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "469": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x471"
    },
    "472": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "473": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "475": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "476": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "REVERT",
      "path": "52"
    },
    "477": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "478": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "479": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x18160DDD"
    },
    "484": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "GT",
      "path": "52"
    },
    "485": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x22F"
    },
    "488": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "489": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "490": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x18160DDD"
    },
    "495": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "496": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33D"
    },
    "499": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "500": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "501": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x23B872DD"
    },
    "506": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "507": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x35C"
    },
    "510": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "511": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "512": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x29FC6BAE"
    },
    "517": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "518": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x37C"
    },
    "521": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "522": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "523": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x2B4403BB"
    },
    "528": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "529": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x39E"
    },
    "532": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "533": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "534": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x2F745C59"
    },
    "539": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "540": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3BF"
    },
    "543": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "544": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "545": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x30F280BB"
    },
    "550": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "551": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3DF"
    },
    "554": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "555": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "557": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "558": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "REVERT",
      "path": "52"
    },
    "559": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "560": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "561": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x1FFC9A7"
    },
    "566": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "567": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x26C"
    },
    "570": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "571": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "572": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x2CE6E71"
    },
    "577": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "578": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2A1"
    },
    "581": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "582": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "583": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x6FDDE03"
    },
    "588": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "589": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2C1"
    },
    "592": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "593": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "594": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x81812FC"
    },
    "599": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "600": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2E3"
    },
    "603": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "604": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "605": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x95EA7B3"
    },
    "610": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "EQ",
      "path": "52"
    },
    "611": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x31B"
    },
    "614": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "615": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "616": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "618": {
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "DUP1",
      "path": "52"
    },
    "619": {
      "first_revert": true,
      "fn": null,
      "offset": [
        43875,
        51055
      ],
      "op": "REVERT",
      "path": "52"
    },
    "620": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "621": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "622": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "DUP1",
      "path": "52"
    },
    "623": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "624": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x278"
    },
    "627": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "628": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "630": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "DUP1",
      "path": "52"
    },
    "631": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "REVERT",
      "path": "52"
    },
    "632": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "633": {
      "op": "POP"
    },
    "634": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x28C"
    },
    "637": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x287"
    },
    "640": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "641": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "643": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2EB7"
    },
    "646": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        38021,
        38243
      ],
      "op": "JUMP",
      "path": "52"
    },
    "647": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "648": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x7A9"
    },
    "651": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        38021,
        38243
      ],
      "op": "JUMP",
      "path": "52"
    },
    "652": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "653": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "655": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "656": {
      "op": "SWAP1"
    },
    "657": {
      "op": "ISZERO"
    },
    "658": {
      "op": "ISZERO"
    },
    "659": {
      "op": "DUP2"
    },
    "660": {
      "op": "MSTORE"
    },
    "661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "663": {
      "op": "ADD"
    },
    "664": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "665": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "667": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "668": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "DUP1",
      "path": "52"
    },
    "669": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "670": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "SUB",
      "path": "52"
    },
    "671": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "672": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "RETURN",
      "path": "52"
    },
    "673": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46020,
        46192
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "674": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46020,
        46192
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "675": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46020,
        46192
      ],
      "op": "DUP1",
      "path": "52"
    },
    "676": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46020,
        46192
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "677": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46020,
        46192
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2AD"
    },
    "680": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46020,
        46192
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "681": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46020,
        46192
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "683": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46020,
        46192
      ],
      "op": "DUP1",
      "path": "52"
    },
    "684": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46020,
        46192
      ],
      "op": "REVERT",
      "path": "52"
    },
    "685": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46020,
        46192
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "686": {
      "op": "POP"
    },
    "687": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46020,
        46192
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x28C"
    },
    "690": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46020,
        46192
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2BC"
    },
    "693": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46020,
        46192
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "694": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46020,
        46192
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "696": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46020,
        46192
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2EF0"
    },
    "699": {
      "fn": "NovaNFT.isClaimedBy",
      "jump": "i",
      "offset": [
        46020,
        46192
      ],
      "op": "JUMP",
      "path": "52"
    },
    "700": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46020,
        46192
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "701": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46020,
        46192
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x7D4"
    },
    "704": {
      "fn": "NovaNFT.isClaimedBy",
      "jump": "i",
      "offset": [
        46020,
        46192
      ],
      "op": "JUMP",
      "path": "52"
    },
    "705": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "706": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "DUP1",
      "path": "52"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "709": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2CD"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "DUP1",
      "path": "52"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "REVERT",
      "path": "52"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "POP",
      "path": "52"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2D6"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x850"
    },
    "725": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        26268,
        26366
      ],
      "op": "JUMP",
      "path": "52"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x298"
    },
    "733": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2F65"
    },
    "738": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        26268,
        26366
      ],
      "op": "JUMP",
      "path": "52"
    },
    "739": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "740": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "741": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "DUP1",
      "path": "52"
    },
    "742": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "743": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2EF"
    },
    "746": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "747": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "749": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "DUP1",
      "path": "52"
    },
    "750": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "REVERT",
      "path": "52"
    },
    "751": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "752": {
      "op": "POP"
    },
    "753": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x303"
    },
    "756": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2FE"
    },
    "759": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "760": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "762": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2F78"
    },
    "765": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        27788,
        28005
      ],
      "op": "JUMP",
      "path": "52"
    },
    "766": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "767": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x8E2"
    },
    "770": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        27788,
        28005
      ],
      "op": "JUMP",
      "path": "52"
    },
    "771": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "772": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "774": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "781": {
      "op": "SHL"
    },
    "782": {
      "op": "SUB"
    },
    "783": {
      "op": "SWAP1"
    },
    "784": {
      "op": "SWAP2"
    },
    "785": {
      "op": "AND"
    },
    "786": {
      "op": "DUP2"
    },
    "787": {
      "op": "MSTORE"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "790": {
      "op": "ADD"
    },
    "791": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x298"
    },
    "794": {
      "op": "JUMP"
    },
    "795": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "796": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "797": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "DUP1",
      "path": "52"
    },
    "798": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "799": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x327"
    },
    "802": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "803": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "805": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "DUP1",
      "path": "52"
    },
    "806": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "REVERT",
      "path": "52"
    },
    "807": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "808": {
      "op": "POP"
    },
    "809": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33B"
    },
    "812": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x336"
    },
    "815": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "816": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "818": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2F91"
    },
    "821": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        27326,
        27727
      ],
      "op": "JUMP",
      "path": "52"
    },
    "822": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "823": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x977"
    },
    "826": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        27326,
        27727
      ],
      "op": "JUMP",
      "path": "52"
    },
    "827": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "828": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "STOP",
      "path": "52"
    },
    "829": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38646,
        38757
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "830": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38646,
        38757
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "831": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38646,
        38757
      ],
      "op": "DUP1",
      "path": "52"
    },
    "832": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38646,
        38757
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "833": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38646,
        38757
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x349"
    },
    "836": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38646,
        38757
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "837": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38646,
        38757
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "839": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38646,
        38757
      ],
      "op": "DUP1",
      "path": "52"
    },
    "840": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38646,
        38757
      ],
      "op": "REVERT",
      "path": "52"
    },
    "841": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38646,
        38757
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "842": {
      "op": "POP"
    },
    "843": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38733,
        38743
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 0,
      "value": "0x8"
    },
    "845": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38733,
        38750
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "846": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38646,
        38757
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "847": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38646,
        38757
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "849": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38646,
        38757
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "850": {
      "op": "SWAP1"
    },
    "851": {
      "op": "DUP2"
    },
    "852": {
      "op": "MSTORE"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "855": {
      "op": "ADD"
    },
    "856": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38646,
        38757
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x298"
    },
    "859": {
      "op": "JUMP"
    },
    "860": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28652,
        28982
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "861": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28652,
        28982
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "862": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28652,
        28982
      ],
      "op": "DUP1",
      "path": "52"
    },
    "863": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28652,
        28982
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "864": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28652,
        28982
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x368"
    },
    "867": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28652,
        28982
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "868": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28652,
        28982
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "870": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28652,
        28982
      ],
      "op": "DUP1",
      "path": "52"
    },
    "871": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28652,
        28982
      ],
      "op": "REVERT",
      "path": "52"
    },
    "872": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28652,
        28982
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "873": {
      "op": "POP"
    },
    "874": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28652,
        28982
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33B"
    },
    "877": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28652,
        28982
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x377"
    },
    "880": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28652,
        28982
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "881": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28652,
        28982
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "883": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28652,
        28982
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2FBD"
    },
    "886": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        28652,
        28982
      ],
      "op": "JUMP",
      "path": "52"
    },
    "887": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28652,
        28982
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "888": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28652,
        28982
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0xA8D"
    },
    "891": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        28652,
        28982
      ],
      "op": "JUMP",
      "path": "52"
    },
    "892": {
      "offset": [
        44667,
        44704
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "893": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "894": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "DUP1",
      "path": "52"
    },
    "895": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "896": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x388"
    },
    "899": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "900": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "902": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "DUP1",
      "path": "52"
    },
    "903": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "REVERT",
      "path": "52"
    },
    "904": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "905": {
      "op": "POP"
    },
    "906": {
      "offset": [
        44667,
        44704
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x5A"
    },
    "908": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "909": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x28C"
    },
    "912": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "913": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "PUSH5",
      "path": "52",
      "value": "0x100000000"
    },
    "919": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "920": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "DIV",
      "path": "52"
    },
    "921": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "923": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "AND",
      "path": "52"
    },
    "924": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "DUP2",
      "path": "52"
    },
    "925": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44667,
        44704
      ],
      "op": "JUMP",
      "path": "52"
    },
    "926": {
      "offset": [
        44626,
        44661
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "927": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "928": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "DUP1",
      "path": "52"
    },
    "929": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "930": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3AA"
    },
    "933": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "934": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "936": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "DUP1",
      "path": "52"
    },
    "937": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "REVERT",
      "path": "52"
    },
    "938": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "939": {
      "op": "POP"
    },
    "940": {
      "offset": [
        44626,
        44661
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x5A"
    },
    "942": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "943": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x28C"
    },
    "946": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "947": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x1000000"
    },
    "952": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "953": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "DIV",
      "path": "52"
    },
    "954": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "956": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "AND",
      "path": "52"
    },
    "957": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "DUP2",
      "path": "52"
    },
    "958": {
      "fn": "ERC721.transferFrom",
      "offset": [
        44626,
        44661
      ],
      "op": "JUMP",
      "path": "52"
    },
    "959": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38322,
        38575
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "960": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38322,
        38575
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "961": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38322,
        38575
      ],
      "op": "DUP1",
      "path": "52"
    },
    "962": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38322,
        38575
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "963": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38322,
        38575
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3CB"
    },
    "966": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38322,
        38575
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "967": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38322,
        38575
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "969": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38322,
        38575
      ],
      "op": "DUP1",
      "path": "52"
    },
    "970": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38322,
        38575
      ],
      "op": "REVERT",
      "path": "52"
    },
    "971": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38322,
        38575
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "972": {
      "op": "POP"
    },
    "973": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38322,
        38575
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x34E"
    },
    "976": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38322,
        38575
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3DA"
    },
    "979": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38322,
        38575
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "980": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38322,
        38575
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "982": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38322,
        38575
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2F91"
    },
    "985": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        38322,
        38575
      ],
      "op": "JUMP",
      "path": "52"
    },
    "986": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38322,
        38575
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "987": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38322,
        38575
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0xABE"
    },
    "990": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        38322,
        38575
      ],
      "op": "JUMP",
      "path": "52"
    },
    "991": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45665,
        45769
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "992": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45665,
        45769
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "993": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45665,
        45769
      ],
      "op": "DUP1",
      "path": "52"
    },
    "994": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45665,
        45769
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "995": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45665,
        45769
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3EB"
    },
    "998": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45665,
        45769
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "999": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45665,
        45769
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1001": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45665,
        45769
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1002": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45665,
        45769
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1003": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45665,
        45769
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1004": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45665,
        45769
      ],
      "op": "POP",
      "path": "52"
    },
    "1005": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45665,
        45769
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33B"
    },
    "1008": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45665,
        45769
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0xB54"
    },
    "1011": {
      "fn": "NovaNFT.toggleSaleBegun",
      "jump": "i",
      "offset": [
        45665,
        45769
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1012": {
      "offset": [
        44131,
        44210
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1013": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        44131,
        44210
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1014": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        44131,
        44210
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1015": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        44131,
        44210
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1016": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        44131,
        44210
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x400"
    },
    "1019": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        44131,
        44210
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1020": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        44131,
        44210
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1022": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        44131,
        44210
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1023": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        44131,
        44210
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1024": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        44131,
        44210
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1025": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        44131,
        44210
      ],
      "op": "POP",
      "path": "52"
    },
    "1026": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        44131,
        44210
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x303"
    },
    "1029": {
      "offset": [
        44168,
        44210
      ],
      "op": "PUSH20",
      "path": "52",
      "value": "0xEE9ABB3A1D3D09D2E258862F69D52AEDB2623088"
    },
    "1050": {
      "offset": [
        44131,
        44210
      ],
      "op": "DUP2",
      "path": "52"
    },
    "1051": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        44131,
        44210
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1052": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1053": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1054": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1055": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1056": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x428"
    },
    "1059": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1060": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1062": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1063": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1064": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1065": {
      "op": "POP"
    },
    "1066": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2D6"
    },
    "1069": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x437"
    },
    "1072": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "1073": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "1075": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x308A"
    },
    "1078": {
      "fn": "NovaNFT.setbaseTokenURI",
      "jump": "i",
      "offset": [
        50563,
        50734
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1079": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1080": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0xDFF"
    },
    "1083": {
      "fn": "NovaNFT.setbaseTokenURI",
      "jump": "i",
      "offset": [
        50563,
        50734
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1084": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29048,
        29227
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1085": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29048,
        29227
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1086": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29048,
        29227
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1087": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29048,
        29227
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1088": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29048,
        29227
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x448"
    },
    "1091": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29048,
        29227
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1092": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29048,
        29227
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1094": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29048,
        29227
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1095": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29048,
        29227
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1096": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29048,
        29227
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1097": {
      "op": "POP"
    },
    "1098": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29048,
        29227
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33B"
    },
    "1101": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29048,
        29227
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x457"
    },
    "1104": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29048,
        29227
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "1105": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29048,
        29227
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "1107": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29048,
        29227
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2FBD"
    },
    "1110": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        29048,
        29227
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1111": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29048,
        29227
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1112": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29048,
        29227
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1136"
    },
    "1115": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        29048,
        29227
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1116": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45444,
        45551
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1117": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45444,
        45551
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1118": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45444,
        45551
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1119": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45444,
        45551
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1120": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45444,
        45551
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x468"
    },
    "1123": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45444,
        45551
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1124": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45444,
        45551
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1126": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45444,
        45551
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1127": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45444,
        45551
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1128": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45444,
        45551
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1129": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45444,
        45551
      ],
      "op": "POP",
      "path": "52"
    },
    "1130": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45444,
        45551
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33B"
    },
    "1133": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45444,
        45551
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1151"
    },
    "1136": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "jump": "i",
      "offset": [
        45444,
        45551
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1137": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1138": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1139": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1140": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1141": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x47D"
    },
    "1144": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1145": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1147": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1148": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1149": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1150": {
      "op": "POP"
    },
    "1151": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x34E"
    },
    "1154": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x48C"
    },
    "1157": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "1158": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "1160": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2F78"
    },
    "1163": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        38829,
        39059
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1164": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1165": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x13F3"
    },
    "1168": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        38829,
        39059
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1169": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46714,
        46918
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1170": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46714,
        46918
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1171": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46714,
        46918
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1172": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46714,
        46918
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1173": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46714,
        46918
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x49D"
    },
    "1176": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46714,
        46918
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1177": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46714,
        46918
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1179": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46714,
        46918
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1180": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46714,
        46918
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1181": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46714,
        46918
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1182": {
      "op": "POP"
    },
    "1183": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46714,
        46918
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33B"
    },
    "1186": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46714,
        46918
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x4AC"
    },
    "1189": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46714,
        46918
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "1190": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46714,
        46918
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "1192": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46714,
        46918
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x30E9"
    },
    "1195": {
      "fn": "NovaNFT.addAllowList",
      "jump": "i",
      "offset": [
        46714,
        46918
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1196": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46714,
        46918
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1197": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46714,
        46918
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1486"
    },
    "1200": {
      "fn": "NovaNFT.addAllowList",
      "jump": "i",
      "offset": [
        46714,
        46918
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1201": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45557,
        45659
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1202": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45557,
        45659
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1203": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45557,
        45659
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1204": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45557,
        45659
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1205": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45557,
        45659
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x4BD"
    },
    "1208": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45557,
        45659
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1209": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45557,
        45659
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1211": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45557,
        45659
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1212": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45557,
        45659
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1213": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45557,
        45659
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1214": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45557,
        45659
      ],
      "op": "POP",
      "path": "52"
    },
    "1215": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45557,
        45659
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33B"
    },
    "1218": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45557,
        45659
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x152A"
    },
    "1221": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "jump": "i",
      "offset": [
        45557,
        45659
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1222": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1223": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1224": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1225": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1226": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x4D2"
    },
    "1229": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1230": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1232": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1233": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1234": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1235": {
      "op": "POP"
    },
    "1236": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33B"
    },
    "1239": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x4E1"
    },
    "1242": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "1243": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "1245": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x316A"
    },
    "1248": {
      "fn": "NovaNFT.setAllowList",
      "jump": "i",
      "offset": [
        46464,
        46708
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1249": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1250": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1575"
    },
    "1253": {
      "fn": "NovaNFT.setAllowList",
      "jump": "i",
      "offset": [
        46464,
        46708
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1254": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46924,
        47030
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1255": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46924,
        47030
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1256": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46924,
        47030
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1257": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46924,
        47030
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1258": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46924,
        47030
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x4F2"
    },
    "1261": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46924,
        47030
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1262": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46924,
        47030
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1264": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46924,
        47030
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1265": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46924,
        47030
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1266": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46924,
        47030
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1267": {
      "op": "POP"
    },
    "1268": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46924,
        47030
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33B"
    },
    "1271": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46924,
        47030
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x501"
    },
    "1274": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46924,
        47030
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "1275": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46924,
        47030
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "1277": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46924,
        47030
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2F78"
    },
    "1280": {
      "fn": "NovaNFT.adjustNFTSupply",
      "jump": "i",
      "offset": [
        46924,
        47030
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1281": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46924,
        47030
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1282": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46924,
        47030
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1640"
    },
    "1285": {
      "fn": "NovaNFT.adjustNFTSupply",
      "jump": "i",
      "offset": [
        46924,
        47030
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1286": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25971,
        26206
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1287": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25971,
        26206
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1288": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25971,
        26206
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1289": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25971,
        26206
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1290": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25971,
        26206
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x512"
    },
    "1293": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25971,
        26206
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1294": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25971,
        26206
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1296": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25971,
        26206
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1297": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25971,
        26206
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1298": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25971,
        26206
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1299": {
      "op": "POP"
    },
    "1300": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25971,
        26206
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x303"
    },
    "1303": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25971,
        26206
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x521"
    },
    "1306": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25971,
        26206
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "1307": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25971,
        26206
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "1309": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25971,
        26206
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2F78"
    },
    "1312": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        25971,
        26206
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1313": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25971,
        26206
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1314": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25971,
        26206
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x166F"
    },
    "1317": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        25971,
        26206
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1318": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25709,
        25914
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1319": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25709,
        25914
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1320": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25709,
        25914
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1321": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25709,
        25914
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1322": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25709,
        25914
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x532"
    },
    "1325": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25709,
        25914
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1326": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25709,
        25914
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1328": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25709,
        25914
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1329": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25709,
        25914
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1330": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25709,
        25914
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1331": {
      "op": "POP"
    },
    "1332": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25709,
        25914
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x34E"
    },
    "1335": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25709,
        25914
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x541"
    },
    "1338": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25709,
        25914
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "1339": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25709,
        25914
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "1341": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25709,
        25914
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2EF0"
    },
    "1344": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        25709,
        25914
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1345": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25709,
        25914
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1346": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25709,
        25914
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x16E6"
    },
    "1349": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        25709,
        25914
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1350": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10735,
        10827
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1351": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10735,
        10827
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1352": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10735,
        10827
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1353": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10735,
        10827
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1354": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10735,
        10827
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x552"
    },
    "1357": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10735,
        10827
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1358": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10735,
        10827
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1360": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10735,
        10827
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1361": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10735,
        10827
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1362": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10735,
        10827
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1363": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10735,
        10827
      ],
      "op": "POP",
      "path": "52"
    },
    "1364": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10735,
        10827
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33B"
    },
    "1367": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10735,
        10827
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x176D"
    },
    "1370": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        10735,
        10827
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1371": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47289,
        48227
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1372": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47289,
        48227
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33B"
    },
    "1375": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47289,
        48227
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x17A3"
    },
    "1378": {
      "fn": "NovaNFT.nftMint",
      "jump": "i",
      "offset": [
        47289,
        48227
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1379": {
      "offset": [
        44595,
        44620
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1380": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1381": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1382": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1383": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x56F"
    },
    "1386": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1387": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1389": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1390": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1391": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1392": {
      "op": "POP"
    },
    "1393": {
      "offset": [
        44595,
        44620
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x5A"
    },
    "1395": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "1396": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x28C"
    },
    "1399": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "1400": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "PUSH3",
      "path": "52",
      "value": "0x10000"
    },
    "1404": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "1405": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "DIV",
      "path": "52"
    },
    "1406": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "1408": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "AND",
      "path": "52"
    },
    "1409": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "DUP2",
      "path": "52"
    },
    "1410": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        44595,
        44620
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1411": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49860,
        50050
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1412": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49860,
        50050
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1413": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49860,
        50050
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1414": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49860,
        50050
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1415": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49860,
        50050
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x58F"
    },
    "1418": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49860,
        50050
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1419": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49860,
        50050
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1421": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49860,
        50050
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1422": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49860,
        50050
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1423": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49860,
        50050
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1424": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49860,
        50050
      ],
      "op": "POP",
      "path": "52"
    },
    "1425": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49860,
        50050
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33B"
    },
    "1428": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49860,
        50050
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1A64"
    },
    "1431": {
      "fn": "NovaNFT.withdrawAll",
      "jump": "i",
      "offset": [
        49860,
        50050
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1432": {
      "offset": [
        44007,
        44034
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1433": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        44007,
        44034
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1434": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        44007,
        44034
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1435": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        44007,
        44034
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1436": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        44007,
        44034
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x5A4"
    },
    "1439": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        44007,
        44034
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1440": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        44007,
        44034
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1442": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        44007,
        44034
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1443": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        44007,
        44034
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1444": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        44007,
        44034
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1445": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        44007,
        44034
      ],
      "op": "POP",
      "path": "52"
    },
    "1446": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        44007,
        44034
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x34E"
    },
    "1449": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        44007,
        44034
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x56"
    },
    "1451": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        44007,
        44034
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "1452": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        44007,
        44034
      ],
      "op": "DUP2",
      "path": "52"
    },
    "1453": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        44007,
        44034
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1454": {
      "fn": "Ownable.owner",
      "offset": [
        10103,
        10188
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1455": {
      "fn": "Ownable.owner",
      "offset": [
        10103,
        10188
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1456": {
      "fn": "Ownable.owner",
      "offset": [
        10103,
        10188
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1457": {
      "fn": "Ownable.owner",
      "offset": [
        10103,
        10188
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1458": {
      "fn": "Ownable.owner",
      "offset": [
        10103,
        10188
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x5BA"
    },
    "1461": {
      "fn": "Ownable.owner",
      "offset": [
        10103,
        10188
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1462": {
      "fn": "Ownable.owner",
      "offset": [
        10103,
        10188
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1464": {
      "fn": "Ownable.owner",
      "offset": [
        10103,
        10188
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1465": {
      "fn": "Ownable.owner",
      "offset": [
        10103,
        10188
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1466": {
      "fn": "Ownable.owner",
      "offset": [
        10103,
        10188
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1467": {
      "op": "POP"
    },
    "1468": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 1,
      "value": "0xA"
    },
    "1470": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1477": {
      "op": "SHL"
    },
    "1478": {
      "op": "SUB"
    },
    "1479": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "AND",
      "path": "52"
    },
    "1480": {
      "fn": "Ownable.owner",
      "offset": [
        10103,
        10188
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x303"
    },
    "1483": {
      "fn": "Ownable.owner",
      "offset": [
        10103,
        10188
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1484": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45872,
        46010
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1485": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45872,
        46010
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1486": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45872,
        46010
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1487": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45872,
        46010
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1488": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45872,
        46010
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x5D8"
    },
    "1491": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45872,
        46010
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1492": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45872,
        46010
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1494": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45872,
        46010
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1495": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45872,
        46010
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1496": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45872,
        46010
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1497": {
      "op": "POP"
    },
    "1498": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45872,
        46010
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x34E"
    },
    "1501": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45872,
        46010
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x5E7"
    },
    "1504": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45872,
        46010
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "1505": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45872,
        46010
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "1507": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45872,
        46010
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2F78"
    },
    "1510": {
      "fn": "NovaNFT.setPrice",
      "jump": "i",
      "offset": [
        45872,
        46010
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1511": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45872,
        46010
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1512": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45872,
        46010
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1AF3"
    },
    "1515": {
      "fn": "NovaNFT.setPrice",
      "jump": "i",
      "offset": [
        45872,
        46010
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1516": {
      "fn": "ERC721.symbol",
      "offset": [
        26430,
        26532
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1517": {
      "fn": "ERC721.symbol",
      "offset": [
        26430,
        26532
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1518": {
      "fn": "ERC721.symbol",
      "offset": [
        26430,
        26532
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1519": {
      "fn": "ERC721.symbol",
      "offset": [
        26430,
        26532
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1520": {
      "fn": "ERC721.symbol",
      "offset": [
        26430,
        26532
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x5F8"
    },
    "1523": {
      "fn": "ERC721.symbol",
      "offset": [
        26430,
        26532
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1524": {
      "fn": "ERC721.symbol",
      "offset": [
        26430,
        26532
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1526": {
      "fn": "ERC721.symbol",
      "offset": [
        26430,
        26532
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1527": {
      "fn": "ERC721.symbol",
      "offset": [
        26430,
        26532
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1528": {
      "fn": "ERC721.symbol",
      "offset": [
        26430,
        26532
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1529": {
      "fn": "ERC721.symbol",
      "offset": [
        26430,
        26532
      ],
      "op": "POP",
      "path": "52"
    },
    "1530": {
      "fn": "ERC721.symbol",
      "offset": [
        26430,
        26532
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2D6"
    },
    "1533": {
      "fn": "ERC721.symbol",
      "offset": [
        26430,
        26532
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1D8B"
    },
    "1536": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        26430,
        26532
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1537": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1538": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1539": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1540": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1541": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x60D"
    },
    "1544": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1545": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1547": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1548": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1549": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1550": {
      "op": "POP"
    },
    "1551": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33B"
    },
    "1554": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x61C"
    },
    "1557": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "1558": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "1560": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x31E4"
    },
    "1563": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        28072,
        28362
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1564": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1565": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1D9A"
    },
    "1568": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        28072,
        28362
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1569": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48286,
        48764
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1570": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48286,
        48764
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33B"
    },
    "1573": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48286,
        48764
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x62F"
    },
    "1576": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48286,
        48764
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "1577": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48286,
        48764
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "1579": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48286,
        48764
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2EF0"
    },
    "1582": {
      "fn": "NovaNFT.teamMint",
      "jump": "i",
      "offset": [
        48286,
        48764
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1583": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48286,
        48764
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1584": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48286,
        48764
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1E5F"
    },
    "1587": {
      "fn": "NovaNFT.teamMint",
      "jump": "i",
      "offset": [
        48286,
        48764
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1588": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1589": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1590": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1591": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1592": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x640"
    },
    "1595": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1596": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1598": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1599": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1600": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1601": {
      "op": "POP"
    },
    "1602": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33B"
    },
    "1605": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x64F"
    },
    "1608": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "1609": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "1611": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x321D"
    },
    "1614": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        29293,
        29613
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1615": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1616": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2029"
    },
    "1619": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        29293,
        29613
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1620": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45775,
        45862
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1621": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45775,
        45862
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1622": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45775,
        45862
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1623": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45775,
        45862
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1624": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45775,
        45862
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x660"
    },
    "1627": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45775,
        45862
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1628": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45775,
        45862
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1630": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45775,
        45862
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1631": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45775,
        45862
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1632": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45775,
        45862
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1633": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45775,
        45862
      ],
      "op": "POP",
      "path": "52"
    },
    "1634": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45775,
        45862
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33B"
    },
    "1637": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45775,
        45862
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2061"
    },
    "1640": {
      "fn": "NovaNFT.togglePause",
      "jump": "i",
      "offset": [
        45775,
        45862
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1641": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1642": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1643": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1644": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1645": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x675"
    },
    "1648": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1649": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1651": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1652": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1653": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1654": {
      "op": "POP"
    },
    "1655": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2D6"
    },
    "1658": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x684"
    },
    "1661": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "1662": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "1664": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2F78"
    },
    "1667": {
      "fn": "NovaNFT.tokenURI",
      "jump": "i",
      "offset": [
        50749,
        51052
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1668": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1669": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x230E"
    },
    "1672": {
      "fn": "NovaNFT.tokenURI",
      "jump": "i",
      "offset": [
        50749,
        51052
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1673": {
      "offset": [
        44518,
        44550
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1674": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44518,
        44550
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1675": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44518,
        44550
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1676": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44518,
        44550
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1677": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44518,
        44550
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x695"
    },
    "1680": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44518,
        44550
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1681": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44518,
        44550
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1683": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44518,
        44550
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1684": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44518,
        44550
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1685": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44518,
        44550
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1686": {
      "op": "POP"
    },
    "1687": {
      "offset": [
        44518,
        44550
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x5A"
    },
    "1689": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44518,
        44550
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "1690": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44518,
        44550
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x28C"
    },
    "1693": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44518,
        44550
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "1694": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44518,
        44550
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "1696": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44518,
        44550
      ],
      "op": "AND",
      "path": "52"
    },
    "1697": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44518,
        44550
      ],
      "op": "DUP2",
      "path": "52"
    },
    "1698": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44518,
        44550
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1699": {
      "offset": [
        44451,
        44482
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1700": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1701": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1702": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1703": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x6AF"
    },
    "1706": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1707": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1709": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1710": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1711": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1712": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "POP",
      "path": "52"
    },
    "1713": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2D6"
    },
    "1716": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x23E9"
    },
    "1719": {
      "fn": "NovaNFT.tokenURI",
      "jump": "i",
      "offset": [
        44451,
        44482
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1720": {
      "offset": [
        44258,
        44330
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1721": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44258,
        44330
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1722": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44258,
        44330
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1723": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44258,
        44330
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1724": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44258,
        44330
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x6C4"
    },
    "1727": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44258,
        44330
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1728": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44258,
        44330
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1730": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44258,
        44330
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1731": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44258,
        44330
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1732": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44258,
        44330
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1733": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44258,
        44330
      ],
      "op": "POP",
      "path": "52"
    },
    "1734": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44258,
        44330
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x303"
    },
    "1737": {
      "offset": [
        44288,
        44330
      ],
      "op": "PUSH20",
      "path": "52",
      "value": "0xA47C8BF37F92ABED4A126BDA807A7B7498661ACD"
    },
    "1758": {
      "offset": [
        44258,
        44330
      ],
      "op": "DUP2",
      "path": "52"
    },
    "1759": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44258,
        44330
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1760": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28428,
        28590
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1761": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28428,
        28590
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1762": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28428,
        28590
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1763": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28428,
        28590
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1764": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28428,
        28590
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x6EC"
    },
    "1767": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28428,
        28590
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1768": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28428,
        28590
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1770": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28428,
        28590
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1771": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28428,
        28590
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1772": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28428,
        28590
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1773": {
      "op": "POP"
    },
    "1774": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28428,
        28590
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x28C"
    },
    "1777": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28428,
        28590
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x6FB"
    },
    "1780": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28428,
        28590
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "1781": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28428,
        28590
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "1783": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28428,
        28590
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x329D"
    },
    "1786": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        28428,
        28590
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1787": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28428,
        28590
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1794": {
      "op": "SHL"
    },
    "1795": {
      "op": "SUB"
    },
    "1796": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "SWAP2",
      "path": "52",
      "statement": 2
    },
    "1797": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "DUP3",
      "path": "52"
    },
    "1798": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "AND",
      "path": "52"
    },
    "1799": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28525,
        28529
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1801": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "1802": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "DUP2",
      "path": "52"
    },
    "1803": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "1804": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28566
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x5"
    },
    "1806": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "1808": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "1809": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "DUP2",
      "path": "52"
    },
    "1810": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "1811": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "1813": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1814": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "DUP4",
      "path": "52"
    },
    "1815": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "1816": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "SWAP4",
      "path": "52"
    },
    "1817": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "1818": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "SWAP5",
      "path": "52"
    },
    "1819": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "AND",
      "path": "52"
    },
    "1820": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "DUP3",
      "path": "52"
    },
    "1821": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "1822": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "1823": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "1824": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "1825": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "1826": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "1827": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "1828": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "1830": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "AND",
      "path": "52"
    },
    "1831": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "1832": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28428,
        28590
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1833": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45332,
        45438
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1834": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45332,
        45438
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1835": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45332,
        45438
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1836": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45332,
        45438
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1837": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45332,
        45438
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x735"
    },
    "1840": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45332,
        45438
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1841": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45332,
        45438
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1843": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45332,
        45438
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1844": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45332,
        45438
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1845": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45332,
        45438
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1846": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45332,
        45438
      ],
      "op": "POP",
      "path": "52"
    },
    "1847": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45332,
        45438
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33B"
    },
    "1850": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45332,
        45438
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2477"
    },
    "1853": {
      "fn": "NovaNFT.setIsAllowListActive",
      "jump": "i",
      "offset": [
        45332,
        45438
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1854": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10976,
        11165
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1855": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10976,
        11165
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1856": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10976,
        11165
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1857": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10976,
        11165
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1858": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10976,
        11165
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x74A"
    },
    "1861": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10976,
        11165
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1862": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10976,
        11165
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1864": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10976,
        11165
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1865": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10976,
        11165
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1866": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10976,
        11165
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1867": {
      "op": "POP"
    },
    "1868": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10976,
        11165
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33B"
    },
    "1871": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10976,
        11165
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x759"
    },
    "1874": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10976,
        11165
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "1875": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10976,
        11165
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "1877": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10976,
        11165
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2EF0"
    },
    "1880": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        10976,
        11165
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1881": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10976,
        11165
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1882": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10976,
        11165
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x24C4"
    },
    "1885": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        10976,
        11165
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1886": {
      "offset": [
        44040,
        44074
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1887": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44040,
        44074
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1888": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44040,
        44074
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1889": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44040,
        44074
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1890": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44040,
        44074
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x76A"
    },
    "1893": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44040,
        44074
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1894": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44040,
        44074
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1896": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44040,
        44074
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1897": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44040,
        44074
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1898": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44040,
        44074
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1899": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44040,
        44074
      ],
      "op": "POP",
      "path": "52"
    },
    "1900": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44040,
        44074
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x34E"
    },
    "1903": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44040,
        44074
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x57"
    },
    "1905": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44040,
        44074
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "1906": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44040,
        44074
      ],
      "op": "DUP2",
      "path": "52"
    },
    "1907": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44040,
        44074
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1908": {
      "offset": [
        44556,
        44588
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1909": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1910": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1911": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1912": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x780"
    },
    "1915": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1916": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1918": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1919": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1920": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1921": {
      "op": "POP"
    },
    "1922": {
      "offset": [
        44556,
        44588
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x5A"
    },
    "1924": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "1925": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x28C"
    },
    "1928": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "1929": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x100"
    },
    "1932": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "1933": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "DIV",
      "path": "52"
    },
    "1934": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "1936": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "AND",
      "path": "52"
    },
    "1937": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "DUP2",
      "path": "52"
    },
    "1938": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44556,
        44588
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1939": {
      "offset": [
        44416,
        44445
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1940": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44416,
        44445
      ],
      "op": "CALLVALUE",
      "path": "52"
    },
    "1941": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44416,
        44445
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1942": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44416,
        44445
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "1943": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44416,
        44445
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x79F"
    },
    "1946": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44416,
        44445
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1947": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44416,
        44445
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1949": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44416,
        44445
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1950": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44416,
        44445
      ],
      "op": "REVERT",
      "path": "52"
    },
    "1951": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44416,
        44445
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1952": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44416,
        44445
      ],
      "op": "POP",
      "path": "52"
    },
    "1953": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44416,
        44445
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x34E"
    },
    "1956": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44416,
        44445
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x58"
    },
    "1958": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44416,
        44445
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "1959": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44416,
        44445
      ],
      "op": "DUP2",
      "path": "52"
    },
    "1960": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        44416,
        44445
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1961": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1962": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38123,
        38127
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1970": {
      "op": "SHL"
    },
    "1971": {
      "op": "SUB"
    },
    "1972": {
      "op": "NOT"
    },
    "1973": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38146,
        38196
      ],
      "op": "DUP3",
      "path": "52",
      "statement": 3
    },
    "1974": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38146,
        38196
      ],
      "op": "AND",
      "path": "52"
    },
    "1975": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1982": {
      "op": "SHL"
    },
    "1983": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38146,
        38196
      ],
      "op": "EQ",
      "path": "52"
    },
    "1984": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38146,
        38196
      ],
      "op": "DUP1",
      "path": "52"
    },
    "1985": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38146,
        38236
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x7CE"
    },
    "1988": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38146,
        38236
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "1989": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38146,
        38236
      ],
      "op": "POP",
      "path": "52"
    },
    "1990": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38200,
        38236
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x7CE"
    },
    "1993": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38224,
        38235
      ],
      "op": "DUP3",
      "path": "52"
    },
    "1994": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38200,
        38223
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x255C"
    },
    "1997": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        38200,
        38236
      ],
      "op": "JUMP",
      "path": "52"
    },
    "1998": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38200,
        38236
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "1999": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38139,
        38236
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "2000": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        38021,
        38243
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "2001": {
      "op": "POP"
    },
    "2002": {
      "op": "POP"
    },
    "2003": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "o",
      "offset": [
        38021,
        38243
      ],
      "op": "JUMP",
      "path": "52"
    },
    "2004": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46020,
        46192
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2005": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46079,
        46083
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2013": {
      "op": "SHL"
    },
    "2014": {
      "op": "SUB"
    },
    "2015": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46103,
        46122
      ],
      "op": "DUP3",
      "path": "52",
      "statement": 4
    },
    "2016": {
      "branch": 108,
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46103,
        46122
      ],
      "op": "AND",
      "path": "52"
    },
    "2017": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46095,
        46150
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x831"
    },
    "2020": {
      "branch": 108,
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46095,
        46150
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "2021": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46095,
        46150
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "2023": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46095,
        46150
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "2024": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2030": {
      "op": "SHL"
    },
    "2031": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46095,
        46150
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2032": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46095,
        46150
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2035": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46095,
        46150
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "2037": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46095,
        46150
      ],
      "op": "DUP3",
      "path": "52"
    },
    "2038": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46095,
        46150
      ],
      "op": "ADD",
      "path": "52"
    },
    "2039": {
      "op": "MSTORE"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2044": {
      "op": "DUP3"
    },
    "2045": {
      "op": "ADD"
    },
    "2046": {
      "op": "MSTORE"
    },
    "2047": {
      "op": "PUSH32",
      "value": "0x43616E6E6F7420616464206E756C6C2061646472657373000000000000000000"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2082": {
      "op": "DUP3"
    },
    "2083": {
      "op": "ADD"
    },
    "2084": {
      "op": "MSTORE"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2087": {
      "op": "ADD"
    },
    "2088": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46095,
        46150
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2089": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46095,
        46150
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "2091": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46095,
        46150
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "2092": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46095,
        46150
      ],
      "op": "DUP1",
      "path": "52"
    },
    "2093": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46095,
        46150
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "2094": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46095,
        46150
      ],
      "op": "SUB",
      "path": "52"
    },
    "2095": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46095,
        46150
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2096": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46095,
        46150
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "52"
    },
    "2097": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46095,
        46150
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2098": {
      "op": "POP"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2105": {
      "op": "SHL"
    },
    "2106": {
      "op": "SUB"
    },
    "2107": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46168,
        46185
      ],
      "op": "AND",
      "path": "52",
      "statement": 5
    },
    "2108": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46168,
        46185
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "2110": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46168,
        46185
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2111": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46168,
        46185
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2112": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46168,
        46185
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2113": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46168,
        46178
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x5C"
    },
    "2115": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46168,
        46185
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "2117": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46168,
        46185
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2118": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46168,
        46185
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "2120": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46168,
        46185
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2121": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46168,
        46185
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "2122": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46168,
        46185
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "2123": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46168,
        46185
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "2125": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46168,
        46185
      ],
      "op": "AND",
      "path": "52"
    },
    "2126": {
      "fn": "NovaNFT.isClaimedBy",
      "offset": [
        46168,
        46185
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2127": {
      "fn": "NovaNFT.isClaimedBy",
      "jump": "o",
      "offset": [
        46020,
        46192
      ],
      "op": "JUMP",
      "path": "52"
    },
    "2128": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2129": {
      "fn": "ERC721.name",
      "offset": [
        26322,
        26335
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x60"
    },
    "2131": {
      "fn": "ERC721.name",
      "offset": [
        26354,
        26359
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 6,
      "value": "0x0"
    },
    "2133": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP1",
      "path": "52"
    },
    "2134": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "2135": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x85F"
    },
    "2138": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2139": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x32CB"
    },
    "2142": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        26347,
        26359
      ],
      "op": "JUMP",
      "path": "52"
    },
    "2143": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2144": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP1",
      "path": "52"
    },
    "2145": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1F"
    },
    "2147": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "ADD",
      "path": "52"
    },
    "2148": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "2150": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP1",
      "path": "52"
    },
    "2151": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "2152": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DIV",
      "path": "52"
    },
    "2153": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "MUL",
      "path": "52"
    },
    "2154": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "2156": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "ADD",
      "path": "52"
    },
    "2157": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "2159": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "2160": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2161": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2162": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "ADD",
      "path": "52"
    },
    "2163": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "2165": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2166": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP1",
      "path": "52"
    },
    "2167": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "2168": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "2169": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2170": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2171": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2172": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2173": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "2175": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "ADD",
      "path": "52"
    },
    "2176": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP3",
      "path": "52"
    },
    "2177": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP1",
      "path": "52"
    },
    "2178": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "2179": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x88B"
    },
    "2182": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2183": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x32CB"
    },
    "2186": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        26347,
        26359
      ],
      "op": "JUMP",
      "path": "52"
    },
    "2187": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2188": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP1",
      "path": "52"
    },
    "2189": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "2190": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x8D8"
    },
    "2193": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "2194": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP1",
      "path": "52"
    },
    "2195": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1F"
    },
    "2197": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "LT",
      "path": "52"
    },
    "2198": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x8AD"
    },
    "2201": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "2202": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x100"
    },
    "2205": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP1",
      "path": "52"
    },
    "2206": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP4",
      "path": "52"
    },
    "2207": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "2208": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DIV",
      "path": "52"
    },
    "2209": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "MUL",
      "path": "52"
    },
    "2210": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP4",
      "path": "52"
    },
    "2211": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2212": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "2213": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "2215": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "ADD",
      "path": "52"
    },
    "2216": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "2217": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x8D8"
    },
    "2220": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "JUMP",
      "path": "52"
    },
    "2221": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2222": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP3",
      "path": "52"
    },
    "2223": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "ADD",
      "path": "52"
    },
    "2224": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "2225": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2226": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "2228": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2229": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "2231": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "2233": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "2234": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2235": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2236": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2237": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "2238": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2239": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2240": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2241": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1"
    },
    "2243": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "ADD",
      "path": "52"
    },
    "2244": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2245": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "2247": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "ADD",
      "path": "52"
    },
    "2248": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP1",
      "path": "52"
    },
    "2249": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP4",
      "path": "52"
    },
    "2250": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "GT",
      "path": "52"
    },
    "2251": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x8BB"
    },
    "2254": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "2255": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP3",
      "path": "52"
    },
    "2256": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2257": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SUB",
      "path": "52"
    },
    "2258": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1F"
    },
    "2260": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "AND",
      "path": "52"
    },
    "2261": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "DUP3",
      "path": "52"
    },
    "2262": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "ADD",
      "path": "52"
    },
    "2263": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "2264": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2265": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "POP",
      "path": "52"
    },
    "2266": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "POP",
      "path": "52"
    },
    "2267": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "POP",
      "path": "52"
    },
    "2268": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "POP",
      "path": "52"
    },
    "2269": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "POP",
      "path": "52"
    },
    "2270": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2271": {
      "fn": "ERC721.name",
      "offset": [
        26347,
        26359
      ],
      "op": "POP",
      "path": "52"
    },
    "2272": {
      "fn": "ERC721.name",
      "offset": [
        26268,
        26366
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2273": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        26268,
        26366
      ],
      "op": "JUMP",
      "path": "52"
    },
    "2274": {
      "fn": "ERC721.getApproved",
      "offset": [
        27788,
        28005
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2275": {
      "fn": "ERC721.getApproved",
      "offset": [
        27864,
        27871
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "2277": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "DUP2",
      "path": "52",
      "statement": 7
    },
    "2278": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2279": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2280": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31180
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x2"
    },
    "2282": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "2284": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2285": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "2287": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2288": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "2289": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2296": {
      "op": "SHL"
    },
    "2297": {
      "op": "SUB"
    },
    "2298": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "AND",
      "path": "52"
    },
    "2299": {
      "fn": "ERC721.getApproved",
      "offset": [
        27883,
        27956
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 8,
      "value": "0x95B"
    },
    "2302": {
      "fn": "ERC721.getApproved",
      "offset": [
        27883,
        27956
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "2303": {
      "fn": "ERC721.getApproved",
      "offset": [
        27883,
        27956
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "2305": {
      "fn": "ERC721.getApproved",
      "offset": [
        27883,
        27956
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "2306": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2312": {
      "op": "SHL"
    },
    "2313": {
      "fn": "ERC721.getApproved",
      "offset": [
        27883,
        27956
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2314": {
      "fn": "ERC721.getApproved",
      "offset": [
        27883,
        27956
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2317": {
      "fn": "ERC721.getApproved",
      "offset": [
        27883,
        27956
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "2319": {
      "fn": "ERC721.getApproved",
      "offset": [
        27883,
        27956
      ],
      "op": "DUP3",
      "path": "52"
    },
    "2320": {
      "fn": "ERC721.getApproved",
      "offset": [
        27883,
        27956
      ],
      "op": "ADD",
      "path": "52"
    },
    "2321": {
      "op": "MSTORE"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2326": {
      "op": "DUP3"
    },
    "2327": {
      "op": "ADD"
    },
    "2328": {
      "op": "MSTORE"
    },
    "2329": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2364": {
      "op": "DUP3"
    },
    "2365": {
      "op": "ADD"
    },
    "2366": {
      "op": "MSTORE"
    },
    "2367": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2382": {
      "op": "SHL"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2385": {
      "op": "DUP3"
    },
    "2386": {
      "op": "ADD"
    },
    "2387": {
      "op": "MSTORE"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2390": {
      "op": "ADD"
    },
    "2391": {
      "fn": "ERC721.getApproved",
      "offset": [
        27883,
        27956
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "2394": {
      "op": "JUMP"
    },
    "2395": {
      "fn": "ERC721.getApproved",
      "offset": [
        27883,
        27956
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2396": {
      "op": "POP"
    },
    "2397": {
      "fn": "ERC721.getApproved",
      "offset": [
        27974,
        27998
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 9,
      "value": "0x0"
    },
    "2399": {
      "fn": "ERC721.getApproved",
      "offset": [
        27974,
        27998
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2400": {
      "fn": "ERC721.getApproved",
      "offset": [
        27974,
        27998
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2401": {
      "fn": "ERC721.getApproved",
      "offset": [
        27974,
        27998
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2402": {
      "fn": "ERC721.getApproved",
      "offset": [
        27974,
        27989
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "2404": {
      "fn": "ERC721.getApproved",
      "offset": [
        27974,
        27998
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "2406": {
      "fn": "ERC721.getApproved",
      "offset": [
        27974,
        27998
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2407": {
      "fn": "ERC721.getApproved",
      "offset": [
        27974,
        27998
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "2409": {
      "fn": "ERC721.getApproved",
      "offset": [
        27974,
        27998
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2410": {
      "fn": "ERC721.getApproved",
      "offset": [
        27974,
        27998
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "2411": {
      "fn": "ERC721.getApproved",
      "offset": [
        27974,
        27998
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2418": {
      "op": "SHL"
    },
    "2419": {
      "op": "SUB"
    },
    "2420": {
      "fn": "ERC721.getApproved",
      "offset": [
        27974,
        27998
      ],
      "op": "AND",
      "path": "52"
    },
    "2421": {
      "fn": "ERC721.getApproved",
      "offset": [
        27974,
        27998
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2422": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        27788,
        28005
      ],
      "op": "JUMP",
      "path": "52"
    },
    "2423": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2424": {
      "fn": "ERC721.approve",
      "offset": [
        27406,
        27419
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "2426": {
      "fn": "ERC721.approve",
      "offset": [
        27422,
        27445
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x982"
    },
    "2429": {
      "fn": "ERC721.approve",
      "offset": [
        27437,
        27444
      ],
      "op": "DUP3",
      "path": "52"
    },
    "2430": {
      "fn": "ERC721.approve",
      "offset": [
        27422,
        27436
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x166F"
    },
    "2433": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        27422,
        27445
      ],
      "op": "JUMP",
      "path": "52"
    },
    "2434": {
      "fn": "ERC721.approve",
      "offset": [
        27422,
        27445
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2435": {
      "fn": "ERC721.approve",
      "offset": [
        27406,
        27445
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2436": {
      "fn": "ERC721.approve",
      "offset": [
        27406,
        27445
      ],
      "op": "POP",
      "path": "52"
    },
    "2437": {
      "fn": "ERC721.approve",
      "offset": [
        27469,
        27474
      ],
      "op": "DUP1",
      "path": "52",
      "statement": 10
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2444": {
      "op": "SHL"
    },
    "2445": {
      "op": "SUB"
    },
    "2446": {
      "fn": "ERC721.approve",
      "offset": [
        27463,
        27474
      ],
      "op": "AND",
      "path": "52"
    },
    "2447": {
      "fn": "ERC721.approve",
      "offset": [
        27463,
        27465
      ],
      "op": "DUP4",
      "path": "52"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2454": {
      "op": "SHL"
    },
    "2455": {
      "op": "SUB"
    },
    "2456": {
      "fn": "ERC721.approve",
      "offset": [
        27463,
        27474
      ],
      "op": "AND",
      "path": "52"
    },
    "2457": {
      "fn": "ERC721.approve",
      "offset": [
        27463,
        27474
      ],
      "op": "EQ",
      "path": "52"
    },
    "2458": {
      "branch": 109,
      "fn": "ERC721.approve",
      "offset": [
        27463,
        27474
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "2459": {
      "fn": "ERC721.approve",
      "offset": [
        27455,
        27512
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x9F0"
    },
    "2462": {
      "branch": 109,
      "fn": "ERC721.approve",
      "offset": [
        27455,
        27512
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "2463": {
      "fn": "ERC721.approve",
      "offset": [
        27455,
        27512
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "2465": {
      "fn": "ERC721.approve",
      "offset": [
        27455,
        27512
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "2466": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2472": {
      "op": "SHL"
    },
    "2473": {
      "fn": "ERC721.approve",
      "offset": [
        27455,
        27512
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2474": {
      "fn": "ERC721.approve",
      "offset": [
        27455,
        27512
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2477": {
      "fn": "ERC721.approve",
      "offset": [
        27455,
        27512
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "2479": {
      "fn": "ERC721.approve",
      "offset": [
        27455,
        27512
      ],
      "op": "DUP3",
      "path": "52"
    },
    "2480": {
      "fn": "ERC721.approve",
      "offset": [
        27455,
        27512
      ],
      "op": "ADD",
      "path": "52"
    },
    "2481": {
      "op": "MSTORE"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2486": {
      "op": "DUP3"
    },
    "2487": {
      "op": "ADD"
    },
    "2488": {
      "op": "MSTORE"
    },
    "2489": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2524": {
      "op": "DUP3"
    },
    "2525": {
      "op": "ADD"
    },
    "2526": {
      "op": "MSTORE"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2531": {
      "op": "SHL"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2534": {
      "op": "DUP3"
    },
    "2535": {
      "op": "ADD"
    },
    "2536": {
      "op": "MSTORE"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2539": {
      "op": "ADD"
    },
    "2540": {
      "fn": "ERC721.approve",
      "offset": [
        27455,
        27512
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "2543": {
      "op": "JUMP"
    },
    "2544": {
      "fn": "ERC721.approve",
      "offset": [
        27455,
        27512
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2545": {
      "fn": "Context._msgSender",
      "offset": [
        700,
        710
      ],
      "op": "CALLER",
      "path": "52",
      "statement": 11
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2552": {
      "op": "SHL"
    },
    "2553": {
      "op": "SUB"
    },
    "2554": {
      "fn": "ERC721.approve",
      "offset": [
        27544,
        27565
      ],
      "op": "DUP3",
      "path": "52",
      "statement": 12
    },
    "2555": {
      "fn": "ERC721.approve",
      "offset": [
        27544,
        27565
      ],
      "op": "AND",
      "path": "52"
    },
    "2556": {
      "fn": "ERC721.approve",
      "offset": [
        27544,
        27565
      ],
      "op": "EQ",
      "path": "52"
    },
    "2557": {
      "branch": 110,
      "fn": "ERC721.approve",
      "offset": [
        27544,
        27565
      ],
      "op": "DUP1",
      "path": "52"
    },
    "2558": {
      "fn": "ERC721.approve",
      "offset": [
        27544,
        27606
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0xA0C"
    },
    "2561": {
      "branch": 110,
      "fn": "ERC721.approve",
      "offset": [
        27544,
        27606
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "2562": {
      "op": "POP"
    },
    "2563": {
      "fn": "ERC721.approve",
      "offset": [
        27569,
        27606
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0xA0C"
    },
    "2566": {
      "fn": "ERC721.approve",
      "offset": [
        27586,
        27591
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2567": {
      "fn": "Context._msgSender",
      "offset": [
        700,
        710
      ],
      "op": "CALLER",
      "path": "52"
    },
    "2568": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28428,
        28590
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x6FB"
    },
    "2571": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        28428,
        28590
      ],
      "op": "JUMP",
      "path": "52"
    },
    "2572": {
      "branch": 111,
      "fn": "ERC721.approve",
      "offset": [
        27569,
        27606
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2573": {
      "fn": "ERC721.approve",
      "offset": [
        27523,
        27688
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0xA7E"
    },
    "2576": {
      "branch": 111,
      "fn": "ERC721.approve",
      "offset": [
        27523,
        27688
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "2577": {
      "fn": "ERC721.approve",
      "offset": [
        27523,
        27688
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "2579": {
      "fn": "ERC721.approve",
      "offset": [
        27523,
        27688
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "2580": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2586": {
      "op": "SHL"
    },
    "2587": {
      "fn": "ERC721.approve",
      "offset": [
        27523,
        27688
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2588": {
      "fn": "ERC721.approve",
      "offset": [
        27523,
        27688
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2591": {
      "fn": "ERC721.approve",
      "offset": [
        27523,
        27688
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "2593": {
      "fn": "ERC721.approve",
      "offset": [
        27523,
        27688
      ],
      "op": "DUP3",
      "path": "52"
    },
    "2594": {
      "fn": "ERC721.approve",
      "offset": [
        27523,
        27688
      ],
      "op": "ADD",
      "path": "52"
    },
    "2595": {
      "op": "MSTORE"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2600": {
      "op": "DUP3"
    },
    "2601": {
      "op": "ADD"
    },
    "2602": {
      "op": "MSTORE"
    },
    "2603": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2638": {
      "op": "DUP3"
    },
    "2639": {
      "op": "ADD"
    },
    "2640": {
      "op": "MSTORE"
    },
    "2641": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "2674": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2676": {
      "op": "DUP3"
    },
    "2677": {
      "op": "ADD"
    },
    "2678": {
      "op": "MSTORE"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2681": {
      "op": "ADD"
    },
    "2682": {
      "fn": "ERC721.approve",
      "offset": [
        27523,
        27688
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "2685": {
      "op": "JUMP"
    },
    "2686": {
      "fn": "ERC721.approve",
      "offset": [
        27523,
        27688
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2687": {
      "fn": "ERC721.approve",
      "offset": [
        27699,
        27720
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 13,
      "value": "0xA88"
    },
    "2690": {
      "fn": "ERC721.approve",
      "offset": [
        27708,
        27710
      ],
      "op": "DUP4",
      "path": "52"
    },
    "2691": {
      "fn": "ERC721.approve",
      "offset": [
        27712,
        27719
      ],
      "op": "DUP4",
      "path": "52"
    },
    "2692": {
      "fn": "ERC721.approve",
      "offset": [
        27699,
        27707
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x25AC"
    },
    "2695": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        27699,
        27720
      ],
      "op": "JUMP",
      "path": "52"
    },
    "2696": {
      "fn": "ERC721.approve",
      "offset": [
        27699,
        27720
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2697": {
      "fn": "ERC721.approve",
      "offset": [
        27396,
        27727
      ],
      "op": "POP",
      "path": "52"
    },
    "2698": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "POP",
      "path": "52"
    },
    "2699": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "POP",
      "path": "52"
    },
    "2700": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        27326,
        27727
      ],
      "op": "JUMP",
      "path": "52"
    },
    "2701": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28652,
        28982
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2702": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28841,
        28882
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 14,
      "value": "0xA97"
    },
    "2705": {
      "fn": "Context._msgSender",
      "offset": [
        700,
        710
      ],
      "op": "CALLER",
      "path": "52"
    },
    "2706": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28874,
        28881
      ],
      "op": "DUP3",
      "path": "52"
    },
    "2707": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28841,
        28859
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x261A"
    },
    "2710": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        28841,
        28882
      ],
      "op": "JUMP",
      "path": "52"
    },
    "2711": {
      "branch": 112,
      "fn": "ERC721.transferFrom",
      "offset": [
        28841,
        28882
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2712": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28833,
        28936
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0xAB3"
    },
    "2715": {
      "branch": 112,
      "fn": "ERC721.transferFrom",
      "offset": [
        28833,
        28936
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "2716": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28833,
        28936
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "2718": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28833,
        28936
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "2719": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2725": {
      "op": "SHL"
    },
    "2726": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28833,
        28936
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2727": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28833,
        28936
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2728": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28833,
        28936
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "2730": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28833,
        28936
      ],
      "op": "ADD",
      "path": "52"
    },
    "2731": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28833,
        28936
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "2734": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28833,
        28936
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2735": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28833,
        28936
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3300"
    },
    "2738": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        28833,
        28936
      ],
      "op": "JUMP",
      "path": "52"
    },
    "2739": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28833,
        28936
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2740": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28947,
        28975
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 15,
      "value": "0xA88"
    },
    "2743": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28957,
        28961
      ],
      "op": "DUP4",
      "path": "52"
    },
    "2744": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28963,
        28965
      ],
      "op": "DUP4",
      "path": "52"
    },
    "2745": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28967,
        28974
      ],
      "op": "DUP4",
      "path": "52"
    },
    "2746": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28947,
        28956
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2711"
    },
    "2749": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        28947,
        28975
      ],
      "op": "JUMP",
      "path": "52"
    },
    "2750": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38322,
        38575
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2751": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38419,
        38426
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "2753": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38454,
        38477
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 16,
      "value": "0xAC9"
    },
    "2756": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38471,
        38476
      ],
      "op": "DUP4",
      "path": "52"
    },
    "2757": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38454,
        38470
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x16E6"
    },
    "2760": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        38454,
        38477
      ],
      "op": "JUMP",
      "path": "52"
    },
    "2761": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38454,
        38477
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2762": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38446,
        38451
      ],
      "op": "DUP3",
      "path": "52"
    },
    "2763": {
      "branch": 113,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38446,
        38477
      ],
      "op": "LT",
      "path": "52"
    },
    "2764": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38438,
        38525
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0xB2B"
    },
    "2767": {
      "branch": 113,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38438,
        38525
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "2768": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38438,
        38525
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "2770": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38438,
        38525
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "2771": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2777": {
      "op": "SHL"
    },
    "2778": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38438,
        38525
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2779": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38438,
        38525
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2782": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38438,
        38525
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "2784": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38438,
        38525
      ],
      "op": "DUP3",
      "path": "52"
    },
    "2785": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38438,
        38525
      ],
      "op": "ADD",
      "path": "52"
    },
    "2786": {
      "op": "MSTORE"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2791": {
      "op": "DUP3"
    },
    "2792": {
      "op": "ADD"
    },
    "2793": {
      "op": "MSTORE"
    },
    "2794": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2829": {
      "op": "DUP3"
    },
    "2830": {
      "op": "ADD"
    },
    "2831": {
      "op": "MSTORE"
    },
    "2832": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2846": {
      "op": "SHL"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2849": {
      "op": "DUP3"
    },
    "2850": {
      "op": "ADD"
    },
    "2851": {
      "op": "MSTORE"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2854": {
      "op": "ADD"
    },
    "2855": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38438,
        38525
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "2858": {
      "op": "JUMP"
    },
    "2859": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38438,
        38525
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2860": {
      "op": "POP"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2867": {
      "op": "SHL"
    },
    "2868": {
      "op": "SUB"
    },
    "2869": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38561
      ],
      "op": "SWAP2",
      "path": "52",
      "statement": 17
    },
    "2870": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38561
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2871": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38561
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "2872": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38561
      ],
      "op": "AND",
      "path": "52"
    },
    "2873": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38561
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "2875": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38561
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2876": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38561
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2877": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38561
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2878": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38554
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x6"
    },
    "2880": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38561
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "2882": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38561
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2883": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38561
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2884": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38561
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2885": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38561
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "2887": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38561
      ],
      "op": "DUP1",
      "path": "52"
    },
    "2888": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38561
      ],
      "op": "DUP4",
      "path": "52"
    },
    "2889": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38561
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "2890": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38568
      ],
      "op": "SWAP4",
      "path": "52"
    },
    "2891": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38568
      ],
      "op": "DUP4",
      "path": "52"
    },
    "2892": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38568
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2893": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38568
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "2894": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38568
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2895": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38568
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2896": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38568
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "2897": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38568
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "2898": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        38542,
        38568
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2899": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        38322,
        38575
      ],
      "op": "JUMP",
      "path": "52"
    },
    "2900": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45665,
        45769
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2901": {
      "offset": [
        7939,
        7955
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "2903": {
      "offset": [
        7958,
        7974
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xB68"
    },
    "2906": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "statement": 18,
      "value": "0x54"
    },
    "2908": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2915": {
      "op": "SHL"
    },
    "2916": {
      "op": "SUB"
    },
    "2917": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "2918": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "2919": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2371,
        2493
      ],
      "op": "JUMP",
      "path": "68"
    },
    "2920": {
      "offset": [
        7958,
        7974
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2927": {
      "op": "SHL"
    },
    "2928": {
      "op": "SUB"
    },
    "2929": {
      "offset": [
        7958,
        7992
      ],
      "op": "AND",
      "path": "68"
    },
    "2930": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7992
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x1BED5241"
    },
    "2935": {
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2937": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2938": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2939": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "2944": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "2945": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "2947": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SHL",
      "path": "68"
    },
    "2948": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2949": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "2950": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "2952": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "2953": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "2955": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2957": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2958": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2959": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP4",
      "path": "68"
    },
    "2960": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SUB",
      "path": "68"
    },
    "2961": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "2962": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP7",
      "path": "68"
    },
    "2963": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "GAS",
      "path": "68"
    },
    "2964": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "2965": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "2966": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2967": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "2968": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xBA5"
    },
    "2971": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "2972": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "2973": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "2975": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "2976": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "2977": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "2978": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "2980": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "REVERT",
      "path": "68"
    },
    "2981": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "2982": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "2983": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "2984": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "2985": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "2986": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "2988": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "2989": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "2990": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "2992": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "NOT",
      "path": "68"
    },
    "2993": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "2995": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "2996": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "2997": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "2998": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "2999": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "3000": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3001": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3003": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3004": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "3005": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3006": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "3007": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3008": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xBC9"
    },
    "3011": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3012": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3013": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3351"
    },
    "3016": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3017": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3018": {
      "offset": [
        7939,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3019": {
      "op": "POP"
    },
    "3020": {
      "offset": [
        8023,
        8027
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1"
    },
    "3022": {
      "offset": [
        8008,
        8027
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3023": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3024": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3025": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "EQ",
      "path": "68"
    },
    "3026": {
      "offset": [
        8004,
        8824
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3027": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xC9A"
    },
    "3030": {
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3031": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "3033": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3040": {
      "op": "SHL"
    },
    "3041": {
      "op": "SUB"
    },
    "3042": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3049": {
      "op": "SHL"
    },
    "3050": {
      "op": "SUB"
    },
    "3051": {
      "offset": [
        8143,
        8167
      ],
      "op": "AND",
      "path": "68"
    },
    "3052": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8167
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "3057": {
      "offset": [
        8226,
        8236
      ],
      "op": "CALLER",
      "path": "68"
    },
    "3058": {
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3060": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3061": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3063": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "ADD",
      "path": "68"
    },
    "3064": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xC01"
    },
    "3067": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3068": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3069": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x336E"
    },
    "3072": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3073": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3074": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3076": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3077": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3079": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3080": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP4",
      "path": "68"
    },
    "3081": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "3082": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "3083": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3084": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3085": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3086": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3088": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3089": {
      "offset": [
        8168,
        8238
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3090": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3091": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3092": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3094": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "ADD",
      "path": "68"
    },
    "3095": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "3096": {
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3098": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3099": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3100": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "3105": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "3106": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "3108": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SHL",
      "path": "68"
    },
    "3109": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3110": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3111": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "3113": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "3114": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xC35"
    },
    "3117": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3118": {
      "op": "DUP2"
    },
    "3119": {
      "op": "MSTORE"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3122": {
      "op": "ADD"
    },
    "3123": {
      "op": "SWAP1"
    },
    "3124": {
      "op": "JUMP"
    },
    "3125": {
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3126": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3128": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3130": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3131": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3132": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP4",
      "path": "68"
    },
    "3133": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SUB",
      "path": "68"
    },
    "3134": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3135": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP7",
      "path": "68"
    },
    "3136": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "GAS",
      "path": "68"
    },
    "3137": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "3138": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3139": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3140": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3141": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xC52"
    },
    "3144": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3145": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3146": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3148": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3149": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "3150": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3151": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3153": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "REVERT",
      "path": "68"
    },
    "3154": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3155": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "3156": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "3157": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "3158": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "3159": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3161": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3162": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3163": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3165": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "NOT",
      "path": "68"
    },
    "3166": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3168": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3169": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "3170": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "3171": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3172": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "3173": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3174": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3176": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3177": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "3178": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3179": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "3180": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3181": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xC76"
    },
    "3184": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3185": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3186": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3351"
    },
    "3189": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3190": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3191": {
      "offset": [
        8138,
        8351
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xC95"
    },
    "3194": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3195": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3197": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3198": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3205": {
      "op": "SHL"
    },
    "3206": {
      "offset": [
        8266,
        8336
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3207": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3208": {
      "offset": [
        8325,
        8335
      ],
      "op": "CALLER",
      "path": "68"
    },
    "3209": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "3211": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3212": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "ADD",
      "path": "68"
    },
    "3213": {
      "op": "MSTORE"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3216": {
      "op": "ADD"
    },
    "3217": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x828"
    },
    "3220": {
      "op": "JUMP"
    },
    "3221": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3222": {
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xDE1"
    },
    "3225": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3226": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3227": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "3229": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3236": {
      "op": "SHL"
    },
    "3237": {
      "op": "SUB"
    },
    "3238": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3245": {
      "op": "SHL"
    },
    "3246": {
      "op": "SUB"
    },
    "3247": {
      "offset": [
        8525,
        8549
      ],
      "op": "AND",
      "path": "68"
    },
    "3248": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8549
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "3253": {
      "offset": [
        8608,
        8618
      ],
      "op": "CALLER",
      "path": "68"
    },
    "3254": {
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3256": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3257": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3259": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "ADD",
      "path": "68"
    },
    "3260": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xCC5"
    },
    "3263": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3264": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3265": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x336E"
    },
    "3268": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3269": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3270": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3272": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3273": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3275": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3276": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP4",
      "path": "68"
    },
    "3277": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "3278": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "3279": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3280": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3281": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3282": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3284": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3285": {
      "offset": [
        8550,
        8620
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3286": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3287": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3288": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3290": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "ADD",
      "path": "68"
    },
    "3291": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "3292": {
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3294": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3295": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3296": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "3301": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "3302": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "3304": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SHL",
      "path": "68"
    },
    "3305": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3306": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3307": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "3309": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "3310": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xCF9"
    },
    "3313": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3314": {
      "op": "DUP2"
    },
    "3315": {
      "op": "MSTORE"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3318": {
      "op": "ADD"
    },
    "3319": {
      "op": "SWAP1"
    },
    "3320": {
      "op": "JUMP"
    },
    "3321": {
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3322": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3324": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3326": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3327": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3328": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP4",
      "path": "68"
    },
    "3329": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SUB",
      "path": "68"
    },
    "3330": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3331": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP7",
      "path": "68"
    },
    "3332": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "GAS",
      "path": "68"
    },
    "3333": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "3334": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3335": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3336": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3337": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xD16"
    },
    "3340": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3341": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3342": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3344": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3345": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "3346": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3347": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3349": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "REVERT",
      "path": "68"
    },
    "3350": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3351": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "3352": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "3353": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "3354": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "3355": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3357": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3358": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3359": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3361": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "NOT",
      "path": "68"
    },
    "3362": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3364": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3365": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "3366": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "3367": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3368": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "3369": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3370": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3372": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3373": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "3374": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3375": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "3376": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3377": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xD3A"
    },
    "3380": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3381": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3382": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3351"
    },
    "3385": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3386": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3387": {
      "offset": [
        8525,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3388": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xDC2"
    },
    "3391": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3392": {
      "op": "POP"
    },
    "3393": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "3395": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3402": {
      "op": "SHL"
    },
    "3403": {
      "op": "SUB"
    },
    "3404": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3411": {
      "op": "SHL"
    },
    "3412": {
      "op": "SUB"
    },
    "3413": {
      "offset": [
        8658,
        8686
      ],
      "op": "AND",
      "path": "68"
    },
    "3414": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xA75B87D2"
    },
    "3419": {
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3421": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3422": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3423": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "3428": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "3429": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "3431": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SHL",
      "path": "68"
    },
    "3432": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3433": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3434": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "3436": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "3437": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3439": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3441": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3442": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3443": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP4",
      "path": "68"
    },
    "3444": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SUB",
      "path": "68"
    },
    "3445": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3446": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP7",
      "path": "68"
    },
    "3447": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "GAS",
      "path": "68"
    },
    "3448": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "3449": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3450": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3451": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3452": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xD89"
    },
    "3455": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3456": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3457": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3459": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3460": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "3461": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3462": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3464": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "REVERT",
      "path": "68"
    },
    "3465": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3466": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "3467": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "3468": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "3469": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "3470": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3472": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3473": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3474": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3476": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "NOT",
      "path": "68"
    },
    "3477": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3479": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3480": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "3481": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "3482": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3483": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "3484": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3485": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3487": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3488": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "3489": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3490": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "3491": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3492": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xDAD"
    },
    "3495": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3496": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3497": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x33B1"
    },
    "3500": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3501": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3508": {
      "op": "SHL"
    },
    "3509": {
      "op": "SUB"
    },
    "3510": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "3511": {
      "offset": [
        8645,
        8654
      ],
      "op": "ORIGIN",
      "path": "68"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3518": {
      "op": "SHL"
    },
    "3519": {
      "op": "SUB"
    },
    "3520": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "3521": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8645,
        8688
      ],
      "op": "EQ",
      "path": "68"
    },
    "3522": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3523": {
      "offset": [
        8502,
        8814
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xDE1"
    },
    "3526": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3527": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3529": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3530": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3537": {
      "op": "SHL"
    },
    "3538": {
      "offset": [
        8729,
        8799
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3539": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3540": {
      "offset": [
        8788,
        8798
      ],
      "op": "CALLER",
      "path": "68"
    },
    "3541": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "3543": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3544": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "ADD",
      "path": "68"
    },
    "3545": {
      "op": "MSTORE"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3548": {
      "op": "ADD"
    },
    "3549": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x828"
    },
    "3552": {
      "op": "JUMP"
    },
    "3553": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3554": {
      "op": "POP"
    },
    "3555": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45750,
        45762
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 19,
      "value": "0x5A"
    },
    "3557": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45750,
        45762
      ],
      "op": "DUP1",
      "path": "52"
    },
    "3558": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45750,
        45762
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "3559": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "3562": {
      "op": "NOT"
    },
    "3563": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45734,
        45762
      ],
      "op": "DUP2",
      "path": "52"
    },
    "3564": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45734,
        45762
      ],
      "op": "AND",
      "path": "52"
    },
    "3565": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45750,
        45762
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x100"
    },
    "3568": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45750,
        45762
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "3569": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45750,
        45762
      ],
      "op": "DUP3",
      "path": "52"
    },
    "3570": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45750,
        45762
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "3571": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45750,
        45762
      ],
      "op": "DIV",
      "path": "52"
    },
    "3572": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45750,
        45762
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "3574": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45750,
        45762
      ],
      "op": "AND",
      "path": "52"
    },
    "3575": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45749,
        45762
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "3576": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45734,
        45762
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "3577": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45734,
        45762
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "3578": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45734,
        45762
      ],
      "op": "MUL",
      "path": "52"
    },
    "3579": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45734,
        45762
      ],
      "op": "OR",
      "path": "52"
    },
    "3580": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45734,
        45762
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "3581": {
      "fn": "NovaNFT.toggleSaleBegun",
      "offset": [
        45734,
        45762
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "3582": {
      "fn": "NovaNFT.toggleSaleBegun",
      "jump": "o",
      "offset": [
        45665,
        45769
      ],
      "op": "JUMP",
      "path": "52"
    },
    "3583": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "3584": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50651,
        50664
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x60"
    },
    "3586": {
      "offset": [
        7939,
        7955
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3588": {
      "offset": [
        7958,
        7974
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xE15"
    },
    "3591": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "3593": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3600": {
      "op": "SHL"
    },
    "3601": {
      "op": "SUB"
    },
    "3602": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "3603": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3604": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2371,
        2493
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3605": {
      "offset": [
        7958,
        7974
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3612": {
      "op": "SHL"
    },
    "3613": {
      "op": "SUB"
    },
    "3614": {
      "offset": [
        7958,
        7992
      ],
      "op": "AND",
      "path": "68"
    },
    "3615": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7992
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x1BED5241"
    },
    "3620": {
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3622": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3623": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3624": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "3629": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "3630": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "3632": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SHL",
      "path": "68"
    },
    "3633": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3634": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3635": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "3637": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "3638": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3640": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3642": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3643": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3644": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP4",
      "path": "68"
    },
    "3645": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SUB",
      "path": "68"
    },
    "3646": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3647": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP7",
      "path": "68"
    },
    "3648": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "GAS",
      "path": "68"
    },
    "3649": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "3650": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3651": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3652": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3653": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xE52"
    },
    "3656": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3657": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3658": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3660": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3661": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "3662": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3663": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3665": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "REVERT",
      "path": "68"
    },
    "3666": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3667": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "3668": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "3669": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "3670": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "3671": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3673": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3674": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3675": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3677": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "NOT",
      "path": "68"
    },
    "3678": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3680": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3681": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "3682": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "3683": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3684": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "3685": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3686": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3688": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3689": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "3690": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3691": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "3692": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3693": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xE76"
    },
    "3696": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3697": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3698": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3351"
    },
    "3701": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3702": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3703": {
      "offset": [
        7939,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3704": {
      "op": "POP"
    },
    "3705": {
      "offset": [
        8023,
        8027
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1"
    },
    "3707": {
      "offset": [
        8008,
        8027
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3708": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3709": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3710": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "EQ",
      "path": "68"
    },
    "3711": {
      "offset": [
        8004,
        8824
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3712": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xF47"
    },
    "3715": {
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3716": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "3718": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3725": {
      "op": "SHL"
    },
    "3726": {
      "op": "SUB"
    },
    "3727": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3734": {
      "op": "SHL"
    },
    "3735": {
      "op": "SUB"
    },
    "3736": {
      "offset": [
        8143,
        8167
      ],
      "op": "AND",
      "path": "68"
    },
    "3737": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8167
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "3742": {
      "offset": [
        8226,
        8236
      ],
      "op": "CALLER",
      "path": "68"
    },
    "3743": {
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3745": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3746": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3748": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "ADD",
      "path": "68"
    },
    "3749": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xEAE"
    },
    "3752": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3753": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3754": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x336E"
    },
    "3757": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3758": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3759": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3761": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3762": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3764": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3765": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP4",
      "path": "68"
    },
    "3766": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "3767": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "3768": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3769": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3770": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3771": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3773": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3774": {
      "offset": [
        8168,
        8238
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3775": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3776": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3777": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3779": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "ADD",
      "path": "68"
    },
    "3780": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "3781": {
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3783": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3784": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3785": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "3790": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "3791": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "3793": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SHL",
      "path": "68"
    },
    "3794": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3795": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3796": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "3798": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "3799": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xEE2"
    },
    "3802": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3803": {
      "op": "DUP2"
    },
    "3804": {
      "op": "MSTORE"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3807": {
      "op": "ADD"
    },
    "3808": {
      "op": "SWAP1"
    },
    "3809": {
      "op": "JUMP"
    },
    "3810": {
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3811": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3813": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3815": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3816": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3817": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP4",
      "path": "68"
    },
    "3818": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SUB",
      "path": "68"
    },
    "3819": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3820": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP7",
      "path": "68"
    },
    "3821": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "GAS",
      "path": "68"
    },
    "3822": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "3823": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3824": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3825": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3826": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xEFF"
    },
    "3829": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3830": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3831": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3833": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3834": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "3835": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3836": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3838": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "REVERT",
      "path": "68"
    },
    "3839": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3840": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "3841": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "3842": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "3843": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "3844": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3846": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3847": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "3848": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3850": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "NOT",
      "path": "68"
    },
    "3851": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "3853": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3854": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "3855": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "3856": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3857": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "3858": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3859": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3861": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3862": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "3863": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3864": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "3865": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3866": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xF23"
    },
    "3869": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3870": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3871": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3351"
    },
    "3874": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3875": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3876": {
      "offset": [
        8138,
        8351
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xF42"
    },
    "3879": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "3880": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3882": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3883": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "3888": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3890": {
      "op": "SHL"
    },
    "3891": {
      "offset": [
        8266,
        8336
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3892": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3893": {
      "offset": [
        8325,
        8335
      ],
      "op": "CALLER",
      "path": "68"
    },
    "3894": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "3896": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3897": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "ADD",
      "path": "68"
    },
    "3898": {
      "op": "MSTORE"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3901": {
      "op": "ADD"
    },
    "3902": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x828"
    },
    "3905": {
      "op": "JUMP"
    },
    "3906": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3907": {
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x108E"
    },
    "3910": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3911": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3912": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "3914": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3921": {
      "op": "SHL"
    },
    "3922": {
      "op": "SUB"
    },
    "3923": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3930": {
      "op": "SHL"
    },
    "3931": {
      "op": "SUB"
    },
    "3932": {
      "offset": [
        8525,
        8549
      ],
      "op": "AND",
      "path": "68"
    },
    "3933": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8549
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "3938": {
      "offset": [
        8608,
        8618
      ],
      "op": "CALLER",
      "path": "68"
    },
    "3939": {
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3941": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3942": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3944": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "ADD",
      "path": "68"
    },
    "3945": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xF72"
    },
    "3948": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3949": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3950": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x336E"
    },
    "3953": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3954": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3955": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3957": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3958": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3960": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3961": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP4",
      "path": "68"
    },
    "3962": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "3963": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "3964": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3965": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3966": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3967": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3969": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3970": {
      "offset": [
        8550,
        8620
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3971": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3972": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3973": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "3975": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "ADD",
      "path": "68"
    },
    "3976": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "3977": {
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3979": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3980": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3981": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "3986": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "3987": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "3989": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SHL",
      "path": "68"
    },
    "3990": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3991": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3992": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "3994": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "3995": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xFA6"
    },
    "3998": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "3999": {
      "op": "DUP2"
    },
    "4000": {
      "op": "MSTORE"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4003": {
      "op": "ADD"
    },
    "4004": {
      "op": "SWAP1"
    },
    "4005": {
      "op": "JUMP"
    },
    "4006": {
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4007": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4009": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4011": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4012": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4013": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP4",
      "path": "68"
    },
    "4014": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SUB",
      "path": "68"
    },
    "4015": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4016": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP7",
      "path": "68"
    },
    "4017": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "GAS",
      "path": "68"
    },
    "4018": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "4019": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4020": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4021": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4022": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xFC3"
    },
    "4025": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "4026": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4027": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4029": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4030": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "4031": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4032": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4034": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "REVERT",
      "path": "68"
    },
    "4035": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4036": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "4037": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "4038": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "4039": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "4040": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4042": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4043": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4044": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "4046": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "NOT",
      "path": "68"
    },
    "4047": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "4049": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4050": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "4051": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "4052": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4053": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "4054": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4055": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4057": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4058": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "4059": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4060": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "4061": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4062": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0xFE7"
    },
    "4065": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "4066": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4067": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3351"
    },
    "4070": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMP",
      "path": "68"
    },
    "4071": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4072": {
      "offset": [
        8525,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4073": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x106F"
    },
    "4076": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "4077": {
      "op": "POP"
    },
    "4078": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "4080": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4087": {
      "op": "SHL"
    },
    "4088": {
      "op": "SUB"
    },
    "4089": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4096": {
      "op": "SHL"
    },
    "4097": {
      "op": "SUB"
    },
    "4098": {
      "offset": [
        8658,
        8686
      ],
      "op": "AND",
      "path": "68"
    },
    "4099": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xA75B87D2"
    },
    "4104": {
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4106": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4107": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4108": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "4113": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "4114": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "4116": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SHL",
      "path": "68"
    },
    "4117": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4118": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4119": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "4121": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "4122": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4124": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4126": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4127": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4128": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP4",
      "path": "68"
    },
    "4129": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SUB",
      "path": "68"
    },
    "4130": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4131": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP7",
      "path": "68"
    },
    "4132": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "GAS",
      "path": "68"
    },
    "4133": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "4134": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4135": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4136": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4137": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1036"
    },
    "4140": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "4141": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4142": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4144": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4145": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "4146": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4147": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4149": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "REVERT",
      "path": "68"
    },
    "4150": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4151": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "4152": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "4153": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "4154": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "4155": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4157": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4158": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4159": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "4161": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "NOT",
      "path": "68"
    },
    "4162": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "4164": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4165": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "4166": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "4167": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4168": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "4169": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4170": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4172": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4173": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "4174": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4175": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "4176": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4177": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x105A"
    },
    "4180": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "4181": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4182": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x33B1"
    },
    "4185": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMP",
      "path": "68"
    },
    "4186": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4193": {
      "op": "SHL"
    },
    "4194": {
      "op": "SUB"
    },
    "4195": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "4196": {
      "offset": [
        8645,
        8654
      ],
      "op": "ORIGIN",
      "path": "68"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4203": {
      "op": "SHL"
    },
    "4204": {
      "op": "SUB"
    },
    "4205": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "4206": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8645,
        8688
      ],
      "op": "EQ",
      "path": "68"
    },
    "4207": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4208": {
      "offset": [
        8502,
        8814
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x108E"
    },
    "4211": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "4212": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4214": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4215": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4222": {
      "op": "SHL"
    },
    "4223": {
      "offset": [
        8729,
        8799
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4224": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4225": {
      "offset": [
        8788,
        8798
      ],
      "op": "CALLER",
      "path": "68"
    },
    "4226": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "4228": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4229": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "ADD",
      "path": "68"
    },
    "4230": {
      "op": "MSTORE"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4233": {
      "op": "ADD"
    },
    "4234": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x828"
    },
    "4237": {
      "op": "JUMP"
    },
    "4238": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4239": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50676,
        50698
      ],
      "op": "DUP3",
      "path": "52",
      "statement": 20
    },
    "4240": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50676,
        50698
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "4241": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50676,
        50698
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x10A1"
    },
    "4244": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50676,
        50698
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "4245": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50676,
        50688
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x59"
    },
    "4247": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50676,
        50688
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "4248": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50676,
        50698
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "4250": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50676,
        50698
      ],
      "op": "DUP7",
      "path": "52"
    },
    "4251": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50676,
        50698
      ],
      "op": "ADD",
      "path": "52"
    },
    "4252": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50676,
        50698
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "4253": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50676,
        50698
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2E08"
    },
    "4256": {
      "fn": "NovaNFT.setbaseTokenURI",
      "jump": "i",
      "offset": [
        50676,
        50698
      ],
      "op": "JUMP",
      "path": "52"
    },
    "4257": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50676,
        50698
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "4258": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50676,
        50698
      ],
      "op": "POP",
      "path": "52"
    },
    "4259": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50715,
        50727
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 21,
      "value": "0x59"
    },
    "4261": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP1",
      "path": "52"
    },
    "4262": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "4263": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x10AF"
    },
    "4266": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "4267": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x32CB"
    },
    "4270": {
      "fn": "NovaNFT.setbaseTokenURI",
      "jump": "i",
      "offset": [
        50708,
        50727
      ],
      "op": "JUMP",
      "path": "52"
    },
    "4271": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "4272": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP1",
      "path": "52"
    },
    "4273": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1F"
    },
    "4275": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "ADD",
      "path": "52"
    },
    "4276": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "4278": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP1",
      "path": "52"
    },
    "4279": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "4280": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DIV",
      "path": "52"
    },
    "4281": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "MUL",
      "path": "52"
    },
    "4282": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "4284": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "ADD",
      "path": "52"
    },
    "4285": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "4287": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "4288": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "4289": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP2",
      "path": "52"
    },
    "4290": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "ADD",
      "path": "52"
    },
    "4291": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "4293": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "4294": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP1",
      "path": "52"
    },
    "4295": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "4296": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "4297": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "4298": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP2",
      "path": "52"
    },
    "4299": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP2",
      "path": "52"
    },
    "4300": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "4301": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "4303": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "ADD",
      "path": "52"
    },
    "4304": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP3",
      "path": "52"
    },
    "4305": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP1",
      "path": "52"
    },
    "4306": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "4307": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x10DB"
    },
    "4310": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "4311": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x32CB"
    },
    "4314": {
      "fn": "NovaNFT.setbaseTokenURI",
      "jump": "i",
      "offset": [
        50708,
        50727
      ],
      "op": "JUMP",
      "path": "52"
    },
    "4315": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "4316": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP1",
      "path": "52"
    },
    "4317": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "4318": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1128"
    },
    "4321": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "4322": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP1",
      "path": "52"
    },
    "4323": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1F"
    },
    "4325": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "LT",
      "path": "52"
    },
    "4326": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x10FD"
    },
    "4329": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "4330": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x100"
    },
    "4333": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP1",
      "path": "52"
    },
    "4334": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP4",
      "path": "52"
    },
    "4335": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "4336": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DIV",
      "path": "52"
    },
    "4337": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "MUL",
      "path": "52"
    },
    "4338": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP4",
      "path": "52"
    },
    "4339": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "4340": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "4341": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "4343": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "ADD",
      "path": "52"
    },
    "4344": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "4345": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1128"
    },
    "4348": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "JUMP",
      "path": "52"
    },
    "4349": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "4350": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP3",
      "path": "52"
    },
    "4351": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "ADD",
      "path": "52"
    },
    "4352": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "4353": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "4354": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "4356": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "4357": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "4359": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "4361": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "4362": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "4363": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "4364": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP2",
      "path": "52"
    },
    "4365": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "4366": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP2",
      "path": "52"
    },
    "4367": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "4368": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "4369": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1"
    },
    "4371": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "ADD",
      "path": "52"
    },
    "4372": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "4373": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "4375": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "ADD",
      "path": "52"
    },
    "4376": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP1",
      "path": "52"
    },
    "4377": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP4",
      "path": "52"
    },
    "4378": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "GT",
      "path": "52"
    },
    "4379": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x110B"
    },
    "4382": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "4383": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP3",
      "path": "52"
    },
    "4384": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "4385": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SUB",
      "path": "52"
    },
    "4386": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1F"
    },
    "4388": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "AND",
      "path": "52"
    },
    "4389": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "DUP3",
      "path": "52"
    },
    "4390": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "ADD",
      "path": "52"
    },
    "4391": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "4392": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "4393": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "POP",
      "path": "52"
    },
    "4394": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "POP",
      "path": "52"
    },
    "4395": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "POP",
      "path": "52"
    },
    "4396": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "POP",
      "path": "52"
    },
    "4397": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "POP",
      "path": "52"
    },
    "4398": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "4399": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50708,
        50727
      ],
      "op": "POP",
      "path": "52"
    },
    "4400": {
      "offset": [
        8833,
        8834
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4401": {
      "offset": [
        7929,
        8841
      ],
      "op": "POP",
      "path": "68"
    },
    "4402": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "4403": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "4404": {
      "fn": "NovaNFT.setbaseTokenURI",
      "offset": [
        50563,
        50734
      ],
      "op": "POP",
      "path": "52"
    },
    "4405": {
      "fn": "NovaNFT.setbaseTokenURI",
      "jump": "o",
      "offset": [
        50563,
        50734
      ],
      "op": "JUMP",
      "path": "52"
    },
    "4406": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29048,
        29227
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "4407": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29181,
        29220
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 22,
      "value": "0xA88"
    },
    "4410": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29198,
        29202
      ],
      "op": "DUP4",
      "path": "52"
    },
    "4411": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29204,
        29206
      ],
      "op": "DUP4",
      "path": "52"
    },
    "4412": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29208,
        29215
      ],
      "op": "DUP4",
      "path": "52"
    },
    "4413": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29181,
        29220
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "4415": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29181,
        29220
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "4416": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29181,
        29220
      ],
      "op": "DUP1",
      "path": "52"
    },
    "4417": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29181,
        29220
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "4419": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29181,
        29220
      ],
      "op": "ADD",
      "path": "52"
    },
    "4420": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29181,
        29220
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "4422": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29181,
        29220
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "4423": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29181,
        29220
      ],
      "op": "DUP1",
      "path": "52"
    },
    "4424": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29181,
        29220
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "4426": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29181,
        29220
      ],
      "op": "DUP2",
      "path": "52"
    },
    "4427": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29181,
        29220
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "4428": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29181,
        29220
      ],
      "op": "POP",
      "path": "52"
    },
    "4429": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29181,
        29197
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2029"
    },
    "4432": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        29181,
        29220
      ],
      "op": "JUMP",
      "path": "52"
    },
    "4433": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45444,
        45551
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "4434": {
      "offset": [
        7939,
        7955
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4436": {
      "offset": [
        7958,
        7974
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1165"
    },
    "4439": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "4441": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4448": {
      "op": "SHL"
    },
    "4449": {
      "op": "SUB"
    },
    "4450": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "4451": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4452": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2371,
        2493
      ],
      "op": "JUMP",
      "path": "68"
    },
    "4453": {
      "offset": [
        7958,
        7974
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4460": {
      "op": "SHL"
    },
    "4461": {
      "op": "SUB"
    },
    "4462": {
      "offset": [
        7958,
        7992
      ],
      "op": "AND",
      "path": "68"
    },
    "4463": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7992
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x1BED5241"
    },
    "4468": {
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4470": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4471": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4472": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "4477": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "4478": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "4480": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SHL",
      "path": "68"
    },
    "4481": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4482": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4483": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "4485": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "4486": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4488": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4490": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4491": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4492": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP4",
      "path": "68"
    },
    "4493": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SUB",
      "path": "68"
    },
    "4494": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4495": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP7",
      "path": "68"
    },
    "4496": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "GAS",
      "path": "68"
    },
    "4497": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "4498": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4499": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4500": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4501": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x11A2"
    },
    "4504": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "4505": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4506": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4508": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4509": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "4510": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4511": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4513": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "REVERT",
      "path": "68"
    },
    "4514": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4515": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "4516": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "4517": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "4518": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "4519": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4521": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4522": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4523": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "4525": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "NOT",
      "path": "68"
    },
    "4526": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "4528": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4529": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "4530": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "4531": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4532": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "4533": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4534": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4536": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4537": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "4538": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4539": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "4540": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4541": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x11C6"
    },
    "4544": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "4545": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4546": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3351"
    },
    "4549": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMP",
      "path": "68"
    },
    "4550": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4551": {
      "offset": [
        7939,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4552": {
      "op": "POP"
    },
    "4553": {
      "offset": [
        8023,
        8027
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1"
    },
    "4555": {
      "offset": [
        8008,
        8027
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4556": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4557": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4558": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "EQ",
      "path": "68"
    },
    "4559": {
      "offset": [
        8004,
        8824
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4560": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1297"
    },
    "4563": {
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "4564": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "4566": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4573": {
      "op": "SHL"
    },
    "4574": {
      "op": "SUB"
    },
    "4575": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "4576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4582": {
      "op": "SHL"
    },
    "4583": {
      "op": "SUB"
    },
    "4584": {
      "offset": [
        8143,
        8167
      ],
      "op": "AND",
      "path": "68"
    },
    "4585": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8167
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "4590": {
      "offset": [
        8226,
        8236
      ],
      "op": "CALLER",
      "path": "68"
    },
    "4591": {
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4593": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4594": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4596": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "ADD",
      "path": "68"
    },
    "4597": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x11FE"
    },
    "4600": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "4601": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4602": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x336E"
    },
    "4605": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMP",
      "path": "68"
    },
    "4606": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4607": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4609": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4610": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4612": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4613": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP4",
      "path": "68"
    },
    "4614": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "4615": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "4616": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4617": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4618": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4619": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4621": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4622": {
      "offset": [
        8168,
        8238
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4623": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4624": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4625": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4627": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "ADD",
      "path": "68"
    },
    "4628": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "4629": {
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4631": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4632": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4633": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "4638": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "4639": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "4641": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SHL",
      "path": "68"
    },
    "4642": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4643": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4644": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "4646": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "4647": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1232"
    },
    "4650": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "4651": {
      "op": "DUP2"
    },
    "4652": {
      "op": "MSTORE"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4655": {
      "op": "ADD"
    },
    "4656": {
      "op": "SWAP1"
    },
    "4657": {
      "op": "JUMP"
    },
    "4658": {
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4659": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4661": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4663": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4664": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4665": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP4",
      "path": "68"
    },
    "4666": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SUB",
      "path": "68"
    },
    "4667": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4668": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP7",
      "path": "68"
    },
    "4669": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "GAS",
      "path": "68"
    },
    "4670": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "4671": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4672": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4673": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4674": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x124F"
    },
    "4677": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "4678": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4679": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4681": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4682": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "4683": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4684": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4686": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "REVERT",
      "path": "68"
    },
    "4687": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4688": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "4689": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "4690": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "4691": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "4692": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4694": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4695": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4696": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "4698": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "NOT",
      "path": "68"
    },
    "4699": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "4701": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4702": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "4703": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "4704": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4705": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "4706": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4707": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4709": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4710": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "4711": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4712": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "4713": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4714": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1273"
    },
    "4717": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "4718": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4719": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3351"
    },
    "4722": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMP",
      "path": "68"
    },
    "4723": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4724": {
      "offset": [
        8138,
        8351
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1292"
    },
    "4727": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "4728": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4730": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4731": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "4736": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4738": {
      "op": "SHL"
    },
    "4739": {
      "offset": [
        8266,
        8336
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4740": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4741": {
      "offset": [
        8325,
        8335
      ],
      "op": "CALLER",
      "path": "68"
    },
    "4742": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "4744": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4745": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "ADD",
      "path": "68"
    },
    "4746": {
      "op": "MSTORE"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4749": {
      "op": "ADD"
    },
    "4750": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x828"
    },
    "4753": {
      "op": "JUMP"
    },
    "4754": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4755": {
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x13DE"
    },
    "4758": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMP",
      "path": "68"
    },
    "4759": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4760": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "4762": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "4763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4769": {
      "op": "SHL"
    },
    "4770": {
      "op": "SUB"
    },
    "4771": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "4772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4778": {
      "op": "SHL"
    },
    "4779": {
      "op": "SUB"
    },
    "4780": {
      "offset": [
        8525,
        8549
      ],
      "op": "AND",
      "path": "68"
    },
    "4781": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8549
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "4786": {
      "offset": [
        8608,
        8618
      ],
      "op": "CALLER",
      "path": "68"
    },
    "4787": {
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4789": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4790": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4792": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "ADD",
      "path": "68"
    },
    "4793": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x12C2"
    },
    "4796": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "4797": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4798": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x336E"
    },
    "4801": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMP",
      "path": "68"
    },
    "4802": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4803": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4805": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4806": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4808": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4809": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP4",
      "path": "68"
    },
    "4810": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "4811": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "4812": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4813": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4814": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4815": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4817": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4818": {
      "offset": [
        8550,
        8620
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4819": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4820": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4821": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4823": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "ADD",
      "path": "68"
    },
    "4824": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "4825": {
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4827": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4828": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4829": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "4834": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "4835": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "4837": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SHL",
      "path": "68"
    },
    "4838": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4839": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4840": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "4842": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "4843": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x12F6"
    },
    "4846": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "4847": {
      "op": "DUP2"
    },
    "4848": {
      "op": "MSTORE"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4851": {
      "op": "ADD"
    },
    "4852": {
      "op": "SWAP1"
    },
    "4853": {
      "op": "JUMP"
    },
    "4854": {
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4855": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4857": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4859": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4860": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4861": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP4",
      "path": "68"
    },
    "4862": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SUB",
      "path": "68"
    },
    "4863": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4864": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP7",
      "path": "68"
    },
    "4865": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "GAS",
      "path": "68"
    },
    "4866": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "4867": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4868": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4869": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4870": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1313"
    },
    "4873": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "4874": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4875": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4877": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4878": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "4879": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4880": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4882": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "REVERT",
      "path": "68"
    },
    "4883": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4884": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "4885": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "4886": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "4887": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "4888": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4890": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4891": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4892": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "4894": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "NOT",
      "path": "68"
    },
    "4895": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "4897": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4898": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "4899": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "4900": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "4901": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "4902": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4903": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4905": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4906": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "4907": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4908": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "4909": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4910": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1337"
    },
    "4913": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "4914": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "4915": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3351"
    },
    "4918": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMP",
      "path": "68"
    },
    "4919": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4920": {
      "offset": [
        8525,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4921": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x13BF"
    },
    "4924": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "4925": {
      "op": "POP"
    },
    "4926": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "4928": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "4929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4935": {
      "op": "SHL"
    },
    "4936": {
      "op": "SUB"
    },
    "4937": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "4938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4944": {
      "op": "SHL"
    },
    "4945": {
      "op": "SUB"
    },
    "4946": {
      "offset": [
        8658,
        8686
      ],
      "op": "AND",
      "path": "68"
    },
    "4947": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xA75B87D2"
    },
    "4952": {
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4954": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4955": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4956": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "4961": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "4962": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "4964": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SHL",
      "path": "68"
    },
    "4965": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4966": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "4967": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "4969": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "4970": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "4972": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "4974": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "4975": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4976": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP4",
      "path": "68"
    },
    "4977": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SUB",
      "path": "68"
    },
    "4978": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "4979": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP7",
      "path": "68"
    },
    "4980": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "GAS",
      "path": "68"
    },
    "4981": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "4982": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4983": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4984": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "4985": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1386"
    },
    "4988": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "4989": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4990": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4992": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "4993": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "4994": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "4995": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "4997": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "REVERT",
      "path": "68"
    },
    "4998": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "4999": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "5000": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "5001": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "5002": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "5003": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "5005": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "5006": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "5007": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "5009": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "NOT",
      "path": "68"
    },
    "5010": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "5012": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "5013": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "5014": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "5015": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "5016": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "5017": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "5018": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "5020": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "5021": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "5022": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "5023": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "5024": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "5025": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x13AA"
    },
    "5028": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "5029": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "5030": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x33B1"
    },
    "5033": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMP",
      "path": "68"
    },
    "5034": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5041": {
      "op": "SHL"
    },
    "5042": {
      "op": "SUB"
    },
    "5043": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "5044": {
      "offset": [
        8645,
        8654
      ],
      "op": "ORIGIN",
      "path": "68"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5051": {
      "op": "SHL"
    },
    "5052": {
      "op": "SUB"
    },
    "5053": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "5054": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8645,
        8688
      ],
      "op": "EQ",
      "path": "68"
    },
    "5055": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "5056": {
      "offset": [
        8502,
        8814
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x13DE"
    },
    "5059": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "5060": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "5062": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "5063": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5070": {
      "op": "SHL"
    },
    "5071": {
      "offset": [
        8729,
        8799
      ],
      "op": "DUP2",
      "path": "68"
    },
    "5072": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "5073": {
      "offset": [
        8788,
        8798
      ],
      "op": "CALLER",
      "path": "68"
    },
    "5074": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "5076": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "DUP3",
      "path": "68"
    },
    "5077": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "ADD",
      "path": "68"
    },
    "5078": {
      "op": "MSTORE"
    },
    "5079": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5081": {
      "op": "ADD"
    },
    "5082": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x828"
    },
    "5085": {
      "op": "JUMP"
    },
    "5086": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "5087": {
      "op": "POP"
    },
    "5088": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45532,
        45544
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 23,
      "value": "0x5A"
    },
    "5090": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45532,
        45544
      ],
      "op": "DUP1",
      "path": "52"
    },
    "5091": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45532,
        45544
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5094": {
      "op": "NOT"
    },
    "5095": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45516,
        45544
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5096": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45516,
        45544
      ],
      "op": "AND",
      "path": "52"
    },
    "5097": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45532,
        45544
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "5099": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45532,
        45544
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5100": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45532,
        45544
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5101": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45532,
        45544
      ],
      "op": "AND",
      "path": "52"
    },
    "5102": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45531,
        45544
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "5103": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45516,
        45544
      ],
      "op": "OR",
      "path": "52"
    },
    "5104": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45516,
        45544
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5105": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "offset": [
        45516,
        45544
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "5106": {
      "fn": "NovaNFT.togglefNOVAClaimed",
      "jump": "o",
      "offset": [
        45444,
        45551
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5107": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5108": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38904,
        38911
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "5110": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38939,
        38969
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 24,
      "value": "0x13FE"
    },
    "5113": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38733,
        38743
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x8"
    },
    "5115": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38733,
        38750
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "5116": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38733,
        38750
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5117": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38646,
        38757
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5118": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38939,
        38969
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5119": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38931,
        38936
      ],
      "op": "DUP3",
      "path": "52"
    },
    "5120": {
      "branch": 114,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38931,
        38969
      ],
      "op": "LT",
      "path": "52"
    },
    "5121": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38923,
        39018
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1461"
    },
    "5124": {
      "branch": 114,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38923,
        39018
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "5125": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38923,
        39018
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "5127": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38923,
        39018
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5128": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5134": {
      "op": "SHL"
    },
    "5135": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38923,
        39018
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5136": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38923,
        39018
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5139": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38923,
        39018
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "5141": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38923,
        39018
      ],
      "op": "DUP3",
      "path": "52"
    },
    "5142": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38923,
        39018
      ],
      "op": "ADD",
      "path": "52"
    },
    "5143": {
      "op": "MSTORE"
    },
    "5144": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "5146": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5148": {
      "op": "DUP3"
    },
    "5149": {
      "op": "ADD"
    },
    "5150": {
      "op": "MSTORE"
    },
    "5151": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "5184": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5186": {
      "op": "DUP3"
    },
    "5187": {
      "op": "ADD"
    },
    "5188": {
      "op": "MSTORE"
    },
    "5189": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5204": {
      "op": "SHL"
    },
    "5205": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5207": {
      "op": "DUP3"
    },
    "5208": {
      "op": "ADD"
    },
    "5209": {
      "op": "MSTORE"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5212": {
      "op": "ADD"
    },
    "5213": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38923,
        39018
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "5216": {
      "op": "JUMP"
    },
    "5217": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38923,
        39018
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5218": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39035,
        39045
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 25,
      "value": "0x8"
    },
    "5220": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39046,
        39051
      ],
      "op": "DUP3",
      "path": "52"
    },
    "5221": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39035,
        39052
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5222": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39035,
        39052
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "5223": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39035,
        39052
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5224": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39035,
        39052
      ],
      "op": "LT",
      "path": "52"
    },
    "5225": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39035,
        39052
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1474"
    },
    "5228": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39035,
        39052
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "5229": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39035,
        39052
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1474"
    },
    "5232": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39035,
        39052
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33CE"
    },
    "5235": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        39035,
        39052
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5236": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39035,
        39052
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5237": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39035,
        39052
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5238": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39035,
        39052
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "5240": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39035,
        39052
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5241": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39035,
        39052
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "5243": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39035,
        39052
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "5245": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39035,
        39052
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "5246": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39035,
        39052
      ],
      "op": "ADD",
      "path": "52"
    },
    "5247": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39035,
        39052
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "5248": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39028,
        39052
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5249": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        39028,
        39052
      ],
      "op": "POP",
      "path": "52"
    },
    "5250": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5251": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5252": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        38829,
        39059
      ],
      "op": "POP",
      "path": "52"
    },
    "5253": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        38829,
        39059
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5254": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46714,
        46918
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5255": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xA"
    },
    "5257": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "5258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5264": {
      "op": "SHL"
    },
    "5265": {
      "op": "SUB"
    },
    "5266": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "AND",
      "path": "52"
    },
    "5267": {
      "fn": "Context._msgSender",
      "offset": [
        700,
        710
      ],
      "op": "CALLER",
      "path": "52"
    },
    "5268": {
      "offset": [
        10315,
        10338
      ],
      "op": "EQ",
      "path": "52"
    },
    "5269": {
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x14B0"
    },
    "5272": {
      "offset": [
        10307,
        10375
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "5273": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "5275": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5276": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5282": {
      "op": "SHL"
    },
    "5283": {
      "offset": [
        10307,
        10375
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5284": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5285": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "5287": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "ADD",
      "path": "52"
    },
    "5288": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "5291": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5292": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33E4"
    },
    "5295": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        10307,
        10375
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5296": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5297": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46811,
        46821
      ],
      "op": "CALLER",
      "path": "52",
      "statement": 26
    },
    "5298": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46803,
        46866
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x14FD"
    },
    "5301": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46803,
        46866
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "5302": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46803,
        46866
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "5304": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46803,
        46866
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5305": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5311": {
      "op": "SHL"
    },
    "5312": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46803,
        46866
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5313": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46803,
        46866
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5316": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46803,
        46866
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "5318": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46803,
        46866
      ],
      "op": "DUP3",
      "path": "52"
    },
    "5319": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46803,
        46866
      ],
      "op": "ADD",
      "path": "52"
    },
    "5320": {
      "op": "MSTORE"
    },
    "5321": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "5323": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5325": {
      "op": "DUP3"
    },
    "5326": {
      "op": "ADD"
    },
    "5327": {
      "op": "MSTORE"
    },
    "5328": {
      "op": "PUSH32",
      "value": "0x43616E6E6F742061646420746F206E756C6C2061646472657373000000000000"
    },
    "5361": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5363": {
      "op": "DUP3"
    },
    "5364": {
      "op": "ADD"
    },
    "5365": {
      "op": "MSTORE"
    },
    "5366": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5368": {
      "op": "ADD"
    },
    "5369": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46803,
        46866
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "5372": {
      "op": "JUMP"
    },
    "5373": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46803,
        46866
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5380": {
      "op": "SHL"
    },
    "5381": {
      "op": "SUB"
    },
    "5382": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46896
      ],
      "op": "SWAP2",
      "path": "52",
      "statement": 27
    },
    "5383": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46896
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5384": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46896
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5385": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46896
      ],
      "op": "AND",
      "path": "52"
    },
    "5386": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46896
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "5388": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46896
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5389": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46896
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5390": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46896
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5391": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46886
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x5B"
    },
    "5393": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46896
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "5395": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46896
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5396": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46896
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "5398": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46896
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5399": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46896
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "5400": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46911
      ],
      "op": "DUP1",
      "path": "52"
    },
    "5401": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46911
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5404": {
      "op": "NOT"
    },
    "5405": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46911
      ],
      "op": "AND",
      "path": "52"
    },
    "5406": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46911
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "5408": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46911
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5409": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46911
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "5410": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46911
      ],
      "op": "AND",
      "path": "52"
    },
    "5411": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46911
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5412": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46911
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5413": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46911
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5414": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46911
      ],
      "op": "OR",
      "path": "52"
    },
    "5415": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46911
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5416": {
      "fn": "NovaNFT.addAllowList",
      "offset": [
        46876,
        46911
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "5417": {
      "fn": "NovaNFT.addAllowList",
      "jump": "o",
      "offset": [
        46714,
        46918
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5418": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45557,
        45659
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5419": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xA"
    },
    "5421": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "5422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5428": {
      "op": "SHL"
    },
    "5429": {
      "op": "SUB"
    },
    "5430": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "AND",
      "path": "52"
    },
    "5431": {
      "fn": "Context._msgSender",
      "offset": [
        700,
        710
      ],
      "op": "CALLER",
      "path": "52"
    },
    "5432": {
      "offset": [
        10315,
        10338
      ],
      "op": "EQ",
      "path": "52"
    },
    "5433": {
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1554"
    },
    "5436": {
      "offset": [
        10307,
        10375
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "5437": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "5439": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5440": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5444": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5446": {
      "op": "SHL"
    },
    "5447": {
      "offset": [
        10307,
        10375
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5448": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5449": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "5451": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "ADD",
      "path": "52"
    },
    "5452": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "5455": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5456": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33E4"
    },
    "5459": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        10307,
        10375
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5460": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5461": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45637,
        45652
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 28,
      "value": "0x5A"
    },
    "5463": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45637,
        45652
      ],
      "op": "DUP1",
      "path": "52"
    },
    "5464": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45637,
        45652
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "5465": {
      "op": "PUSH4",
      "value": "0xFF000000"
    },
    "5470": {
      "op": "NOT"
    },
    "5471": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45618,
        45652
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5472": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45618,
        45652
      ],
      "op": "AND",
      "path": "52"
    },
    "5473": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45637,
        45652
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x1000000"
    },
    "5478": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45637,
        45652
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5479": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45637,
        45652
      ],
      "op": "DUP3",
      "path": "52"
    },
    "5480": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45637,
        45652
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5481": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45637,
        45652
      ],
      "op": "DIV",
      "path": "52"
    },
    "5482": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45637,
        45652
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "5484": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45637,
        45652
      ],
      "op": "AND",
      "path": "52"
    },
    "5485": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45636,
        45652
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "5486": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45618,
        45652
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5487": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45618,
        45652
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5488": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45618,
        45652
      ],
      "op": "MUL",
      "path": "52"
    },
    "5489": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45618,
        45652
      ],
      "op": "OR",
      "path": "52"
    },
    "5490": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45618,
        45652
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5491": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "offset": [
        45618,
        45652
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "5492": {
      "fn": "NovaNFT.toggleTeamMintStarted",
      "jump": "o",
      "offset": [
        45557,
        45659
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5493": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5494": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xA"
    },
    "5496": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "5497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5503": {
      "op": "SHL"
    },
    "5504": {
      "op": "SUB"
    },
    "5505": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "AND",
      "path": "52"
    },
    "5506": {
      "fn": "Context._msgSender",
      "offset": [
        700,
        710
      ],
      "op": "CALLER",
      "path": "52"
    },
    "5507": {
      "offset": [
        10315,
        10338
      ],
      "op": "EQ",
      "path": "52"
    },
    "5508": {
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x159F"
    },
    "5511": {
      "offset": [
        10307,
        10375
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "5512": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "5514": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5515": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5521": {
      "op": "SHL"
    },
    "5522": {
      "offset": [
        10307,
        10375
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5523": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5524": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "5526": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "ADD",
      "path": "52"
    },
    "5527": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "5530": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5531": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33E4"
    },
    "5534": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        10307,
        10375
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5535": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5536": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46587,
        46596
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "5538": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46582,
        46702
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5539": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46602,
        46622
      ],
      "op": "DUP4",
      "path": "52"
    },
    "5540": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46602,
        46622
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5541": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46602,
        46622
      ],
      "op": "LT",
      "path": "52"
    },
    "5542": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46582,
        46702
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "5543": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46582,
        46702
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1639"
    },
    "5546": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46582,
        46702
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "5547": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46688
      ],
      "op": "DUP3",
      "path": "52",
      "statement": 29
    },
    "5548": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46688
      ],
      "op": "DUP3",
      "path": "52"
    },
    "5549": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46689,
        46690
      ],
      "op": "DUP3",
      "path": "52"
    },
    "5550": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5551": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5552": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "LT",
      "path": "52"
    },
    "5553": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x15BC"
    },
    "5556": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "5557": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x15BC"
    },
    "5560": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33CE"
    },
    "5563": {
      "fn": "NovaNFT.setAllowList",
      "jump": "i",
      "offset": [
        46670,
        46691
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5564": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5565": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5566": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "POP",
      "path": "52"
    },
    "5567": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "5569": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "MUL",
      "path": "52"
    },
    "5570": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "ADD",
      "path": "52"
    },
    "5571": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "5573": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5574": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "ADD",
      "path": "52"
    },
    "5575": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5576": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x15D1"
    },
    "5579": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5580": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5581": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3419"
    },
    "5584": {
      "fn": "NovaNFT.setAllowList",
      "jump": "i",
      "offset": [
        46670,
        46691
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5585": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46670,
        46691
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5586": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46653
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x5B"
    },
    "5588": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46667
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "5590": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46663
      ],
      "op": "DUP8",
      "path": "52"
    },
    "5591": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46663
      ],
      "op": "DUP8",
      "path": "52"
    },
    "5592": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46664,
        46665
      ],
      "op": "DUP6",
      "path": "52"
    },
    "5593": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5594": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5595": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "LT",
      "path": "52"
    },
    "5596": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x15E7"
    },
    "5599": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "5600": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x15E7"
    },
    "5603": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33CE"
    },
    "5606": {
      "fn": "NovaNFT.setAllowList",
      "jump": "i",
      "offset": [
        46654,
        46666
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5607": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5608": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5609": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "POP",
      "path": "52"
    },
    "5610": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "5612": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "MUL",
      "path": "52"
    },
    "5613": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "ADD",
      "path": "52"
    },
    "5614": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "5616": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5617": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "ADD",
      "path": "52"
    },
    "5618": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5619": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x15FC"
    },
    "5622": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5623": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5624": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2EF0"
    },
    "5627": {
      "fn": "NovaNFT.setAllowList",
      "jump": "i",
      "offset": [
        46654,
        46666
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5628": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46654,
        46666
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5635": {
      "op": "SHL"
    },
    "5636": {
      "op": "SUB"
    },
    "5637": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46667
      ],
      "op": "AND",
      "path": "52"
    },
    "5638": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46667
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5639": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46667
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5640": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46667
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "5642": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46667
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5643": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46667
      ],
      "op": "ADD",
      "path": "52"
    },
    "5644": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46667
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5645": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46667
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5646": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46667
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5647": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46667
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5648": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46667
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "5650": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46667
      ],
      "op": "ADD",
      "path": "52"
    },
    "5651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5653": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46667
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "5654": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46691
      ],
      "op": "DUP1",
      "path": "52"
    },
    "5655": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46691
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5658": {
      "op": "NOT"
    },
    "5659": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46691
      ],
      "op": "AND",
      "path": "52"
    },
    "5660": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46691
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "5662": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46691
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "5663": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46691
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5664": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46691
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "5665": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46691
      ],
      "op": "AND",
      "path": "52"
    },
    "5666": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46691
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5667": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46691
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5668": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46691
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5669": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46691
      ],
      "op": "OR",
      "path": "52"
    },
    "5670": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46691
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5671": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46643,
        46691
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "5672": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46624,
        46627
      ],
      "op": "DUP1",
      "path": "52",
      "statement": 30
    },
    "5673": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46624,
        46627
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1631"
    },
    "5676": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46624,
        46627
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5677": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46624,
        46627
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x344A"
    },
    "5680": {
      "fn": "NovaNFT.setAllowList",
      "jump": "i",
      "offset": [
        46624,
        46627
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5681": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46624,
        46627
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5682": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46624,
        46627
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5683": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46624,
        46627
      ],
      "op": "POP",
      "path": "52"
    },
    "5684": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46624,
        46627
      ],
      "op": "POP",
      "path": "52"
    },
    "5685": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46582,
        46702
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x15A2"
    },
    "5688": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46582,
        46702
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5689": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46582,
        46702
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5690": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46582,
        46702
      ],
      "op": "POP",
      "path": "52"
    },
    "5691": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "POP",
      "path": "52"
    },
    "5692": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "POP",
      "path": "52"
    },
    "5693": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "POP",
      "path": "52"
    },
    "5694": {
      "fn": "NovaNFT.setAllowList",
      "offset": [
        46464,
        46708
      ],
      "op": "POP",
      "path": "52"
    },
    "5695": {
      "fn": "NovaNFT.setAllowList",
      "jump": "o",
      "offset": [
        46464,
        46708
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5696": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46924,
        47030
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5697": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xA"
    },
    "5699": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "5700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5706": {
      "op": "SHL"
    },
    "5707": {
      "op": "SUB"
    },
    "5708": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "AND",
      "path": "52"
    },
    "5709": {
      "fn": "Context._msgSender",
      "offset": [
        700,
        710
      ],
      "op": "CALLER",
      "path": "52"
    },
    "5710": {
      "offset": [
        10315,
        10338
      ],
      "op": "EQ",
      "path": "52"
    },
    "5711": {
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x166A"
    },
    "5714": {
      "offset": [
        10307,
        10375
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "5715": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "5717": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5718": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5722": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5724": {
      "op": "SHL"
    },
    "5725": {
      "offset": [
        10307,
        10375
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5726": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5727": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "5729": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "ADD",
      "path": "52"
    },
    "5730": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "5733": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5734": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33E4"
    },
    "5737": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        10307,
        10375
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5738": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5739": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46998,
        47010
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 31,
      "value": "0x57"
    },
    "5741": {
      "fn": "NovaNFT.adjustNFTSupply",
      "offset": [
        46998,
        47023
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "5742": {
      "fn": "NovaNFT.adjustNFTSupply",
      "jump": "o",
      "offset": [
        46924,
        47030
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5743": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25971,
        26206
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5744": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26043,
        26050
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "5746": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26078,
        26094
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5747": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26078,
        26094
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5748": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26078,
        26094
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5749": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26078,
        26085
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x2"
    },
    "5751": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26078,
        26094
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "5753": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26078,
        26094
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5754": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26078,
        26094
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "5756": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26078,
        26094
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5757": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26078,
        26094
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "5758": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26078,
        26094
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5765": {
      "op": "SHL"
    },
    "5766": {
      "op": "SUB"
    },
    "5767": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26078,
        26094
      ],
      "op": "AND",
      "path": "52"
    },
    "5768": {
      "branch": 115,
      "fn": "ERC721.ownerOf",
      "offset": [
        26112,
        26131
      ],
      "op": "DUP1",
      "path": "52",
      "statement": 32
    },
    "5769": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26104,
        26177
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x7CE"
    },
    "5772": {
      "branch": 115,
      "fn": "ERC721.ownerOf",
      "offset": [
        26104,
        26177
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "5773": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26104,
        26177
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "5775": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26104,
        26177
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5776": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5782": {
      "op": "SHL"
    },
    "5783": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26104,
        26177
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5784": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26104,
        26177
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5787": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26104,
        26177
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "5789": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26104,
        26177
      ],
      "op": "DUP3",
      "path": "52"
    },
    "5790": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26104,
        26177
      ],
      "op": "ADD",
      "path": "52"
    },
    "5791": {
      "op": "MSTORE"
    },
    "5792": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "5794": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5796": {
      "op": "DUP3"
    },
    "5797": {
      "op": "ADD"
    },
    "5798": {
      "op": "MSTORE"
    },
    "5799": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "5832": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5834": {
      "op": "DUP3"
    },
    "5835": {
      "op": "ADD"
    },
    "5836": {
      "op": "MSTORE"
    },
    "5837": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "5847": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5849": {
      "op": "SHL"
    },
    "5850": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5852": {
      "op": "DUP3"
    },
    "5853": {
      "op": "ADD"
    },
    "5854": {
      "op": "MSTORE"
    },
    "5855": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5857": {
      "op": "ADD"
    },
    "5858": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26104,
        26177
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "5861": {
      "op": "JUMP"
    },
    "5862": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25709,
        25914
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5863": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25781,
        25788
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "5865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5871": {
      "op": "SHL"
    },
    "5872": {
      "op": "SUB"
    },
    "5873": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25808,
        25827
      ],
      "op": "DUP3",
      "path": "52",
      "statement": 33
    },
    "5874": {
      "branch": 116,
      "fn": "ERC721.balanceOf",
      "offset": [
        25808,
        25827
      ],
      "op": "AND",
      "path": "52"
    },
    "5875": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25800,
        25874
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1751"
    },
    "5878": {
      "branch": 116,
      "fn": "ERC721.balanceOf",
      "offset": [
        25800,
        25874
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "5879": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25800,
        25874
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "5881": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25800,
        25874
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5882": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5886": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5888": {
      "op": "SHL"
    },
    "5889": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25800,
        25874
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5890": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25800,
        25874
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5891": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5893": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25800,
        25874
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "5895": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25800,
        25874
      ],
      "op": "DUP3",
      "path": "52"
    },
    "5896": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25800,
        25874
      ],
      "op": "ADD",
      "path": "52"
    },
    "5897": {
      "op": "MSTORE"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5902": {
      "op": "DUP3"
    },
    "5903": {
      "op": "ADD"
    },
    "5904": {
      "op": "MSTORE"
    },
    "5905": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "5938": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5940": {
      "op": "DUP3"
    },
    "5941": {
      "op": "ADD"
    },
    "5942": {
      "op": "MSTORE"
    },
    "5943": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "5954": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5956": {
      "op": "SHL"
    },
    "5957": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5959": {
      "op": "DUP3"
    },
    "5960": {
      "op": "ADD"
    },
    "5961": {
      "op": "MSTORE"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5964": {
      "op": "ADD"
    },
    "5965": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25800,
        25874
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "5968": {
      "op": "JUMP"
    },
    "5969": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25800,
        25874
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5970": {
      "op": "POP"
    },
    "5971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5977": {
      "op": "SHL"
    },
    "5978": {
      "op": "SUB"
    },
    "5979": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25891,
        25907
      ],
      "op": "AND",
      "path": "52",
      "statement": 34
    },
    "5980": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25891,
        25907
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "5982": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25891,
        25907
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5983": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25891,
        25907
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5984": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25891,
        25907
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5985": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25891,
        25900
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x3"
    },
    "5987": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25891,
        25907
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "5989": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25891,
        25907
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5990": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25891,
        25907
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "5992": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25891,
        25907
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5993": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25891,
        25907
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "5994": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25891,
        25907
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "5995": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25891,
        25907
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5996": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        25709,
        25914
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5997": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10735,
        10827
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5998": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xA"
    },
    "6000": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "6001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6007": {
      "op": "SHL"
    },
    "6008": {
      "op": "SUB"
    },
    "6009": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "AND",
      "path": "52"
    },
    "6010": {
      "fn": "Context._msgSender",
      "offset": [
        700,
        710
      ],
      "op": "CALLER",
      "path": "52"
    },
    "6011": {
      "offset": [
        10315,
        10338
      ],
      "op": "EQ",
      "path": "52"
    },
    "6012": {
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1797"
    },
    "6015": {
      "offset": [
        10307,
        10375
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "6016": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "6018": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "6019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6025": {
      "op": "SHL"
    },
    "6026": {
      "offset": [
        10307,
        10375
      ],
      "op": "DUP2",
      "path": "52"
    },
    "6027": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "6028": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "6030": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "ADD",
      "path": "52"
    },
    "6031": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "6034": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "6035": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33E4"
    },
    "6038": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        10307,
        10375
      ],
      "op": "JUMP",
      "path": "52"
    },
    "6039": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "6040": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10799,
        10820
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 35,
      "value": "0x17A1"
    },
    "6043": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10817,
        10818
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "6045": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10799,
        10808
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x28BC"
    },
    "6048": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        10799,
        10820
      ],
      "op": "JUMP",
      "path": "52"
    },
    "6049": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10799,
        10820
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "6050": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        10735,
        10827
      ],
      "op": "JUMP",
      "path": "52"
    },
    "6051": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47289,
        48227
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "6052": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47343,
        47360
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 36,
      "value": "0x5A"
    },
    "6054": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47343,
        47360
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "6055": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47343,
        47360
      ],
      "op": "PUSH5",
      "path": "52",
      "value": "0x100000000"
    },
    "6061": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47343,
        47360
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "6062": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47343,
        47360
      ],
      "op": "DIV",
      "path": "52"
    },
    "6063": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47343,
        47360
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "6065": {
      "branch": 117,
      "fn": "NovaNFT.nftMint",
      "offset": [
        47343,
        47360
      ],
      "op": "AND",
      "path": "52"
    },
    "6066": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47335,
        47389
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x17FD"
    },
    "6069": {
      "branch": 117,
      "fn": "NovaNFT.nftMint",
      "offset": [
        47335,
        47389
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "6070": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47335,
        47389
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "6072": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47335,
        47389
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "6073": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6077": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6079": {
      "op": "SHL"
    },
    "6080": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47335,
        47389
      ],
      "op": "DUP2",
      "path": "52"
    },
    "6081": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47335,
        47389
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "6082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6084": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47335,
        47389
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "6086": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47335,
        47389
      ],
      "op": "DUP3",
      "path": "52"
    },
    "6087": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47335,
        47389
      ],
      "op": "ADD",
      "path": "52"
    },
    "6088": {
      "op": "MSTORE"
    },
    "6089": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6091": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6093": {
      "op": "DUP3"
    },
    "6094": {
      "op": "ADD"
    },
    "6095": {
      "op": "MSTORE"
    },
    "6096": {
      "op": "PUSH32",
      "value": "0x416C6C6F77206C697374206973206E6F74206163746976650000000000000000"
    },
    "6129": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6131": {
      "op": "DUP3"
    },
    "6132": {
      "op": "ADD"
    },
    "6133": {
      "op": "MSTORE"
    },
    "6134": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6136": {
      "op": "ADD"
    },
    "6137": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47335,
        47389
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "6140": {
      "op": "JUMP"
    },
    "6141": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47335,
        47389
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "6142": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47418,
        47428
      ],
      "op": "CALLER",
      "path": "52",
      "statement": 37
    },
    "6143": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47433,
        47434
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "6145": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47407,
        47429
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "6146": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47407,
        47417
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x5B"
    },
    "6148": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47407,
        47429
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "6150": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47407,
        47429
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "6151": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47487,
        47497
      ],
      "op": "CALLER",
      "path": "52",
      "statement": 38
    },
    "6152": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47478,
        47543
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1853"
    },
    "6155": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47478,
        47543
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "6156": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47478,
        47543
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "6158": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47478,
        47543
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "6159": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6163": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6165": {
      "op": "SHL"
    },
    "6166": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47478,
        47543
      ],
      "op": "DUP2",
      "path": "52"
    },
    "6167": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47478,
        47543
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "6168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6170": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47478,
        47543
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "6172": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47478,
        47543
      ],
      "op": "DUP3",
      "path": "52"
    },
    "6173": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47478,
        47543
      ],
      "op": "ADD",
      "path": "52"
    },
    "6174": {
      "op": "MSTORE"
    },
    "6175": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "6177": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6179": {
      "op": "DUP3"
    },
    "6180": {
      "op": "ADD"
    },
    "6181": {
      "op": "MSTORE"
    },
    "6182": {
      "op": "PUSH32",
      "value": "0x43616E6E6F74206D696E7420746F206E756C6C20616464726573730000000000"
    },
    "6215": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6217": {
      "op": "DUP3"
    },
    "6218": {
      "op": "ADD"
    },
    "6219": {
      "op": "MSTORE"
    },
    "6220": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6222": {
      "op": "ADD"
    },
    "6223": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47478,
        47543
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "6226": {
      "op": "JUMP"
    },
    "6227": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47478,
        47543
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "6228": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47561,
        47573
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 39,
      "value": "0x5A"
    },
    "6230": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47561,
        47573
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "6231": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47561,
        47573
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x100"
    },
    "6234": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47561,
        47573
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "6235": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47561,
        47573
      ],
      "op": "DIV",
      "path": "52"
    },
    "6236": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47561,
        47573
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "6238": {
      "branch": 118,
      "fn": "NovaNFT.nftMint",
      "offset": [
        47561,
        47573
      ],
      "op": "AND",
      "path": "52"
    },
    "6239": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47553,
        47622
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x18BF"
    },
    "6242": {
      "branch": 118,
      "fn": "NovaNFT.nftMint",
      "offset": [
        47553,
        47622
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "6243": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47553,
        47622
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "6245": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47553,
        47622
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "6246": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6250": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6252": {
      "op": "SHL"
    },
    "6253": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47553,
        47622
      ],
      "op": "DUP2",
      "path": "52"
    },
    "6254": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47553,
        47622
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "6255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6257": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47553,
        47622
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "6259": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47553,
        47622
      ],
      "op": "DUP3",
      "path": "52"
    },
    "6260": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47553,
        47622
      ],
      "op": "ADD",
      "path": "52"
    },
    "6261": {
      "op": "MSTORE"
    },
    "6262": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "6264": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6266": {
      "op": "DUP3"
    },
    "6267": {
      "op": "ADD"
    },
    "6268": {
      "op": "MSTORE"
    },
    "6269": {
      "op": "PUSH32",
      "value": "0x536F727279206D696E74696E6720706572696F642069736E2774206375727265"
    },
    "6302": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6304": {
      "op": "DUP3"
    },
    "6305": {
      "op": "ADD"
    },
    "6306": {
      "op": "MSTORE"
    },
    "6307": {
      "op": "PUSH12",
      "value": "0x6E746C79206F6E676F696E67"
    },
    "6320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6322": {
      "op": "SHL"
    },
    "6323": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6325": {
      "op": "DUP3"
    },
    "6326": {
      "op": "ADD"
    },
    "6327": {
      "op": "MSTORE"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6330": {
      "op": "ADD"
    },
    "6331": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47553,
        47622
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "6334": {
      "op": "JUMP"
    },
    "6335": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47553,
        47622
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "6336": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47657,
        47669
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 40,
      "value": "0x57"
    },
    "6338": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47657,
        47669
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "6339": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47640,
        47654
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x58"
    },
    "6341": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47640,
        47654
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "6342": {
      "branch": 119,
      "fn": "NovaNFT.nftMint",
      "offset": [
        47640,
        47669
      ],
      "op": "LT",
      "path": "52"
    },
    "6343": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47632,
        47702
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1912"
    },
    "6346": {
      "branch": 119,
      "fn": "NovaNFT.nftMint",
      "offset": [
        47632,
        47702
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "6347": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47632,
        47702
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "6349": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47632,
        47702
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "6350": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6354": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6356": {
      "op": "SHL"
    },
    "6357": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47632,
        47702
      ],
      "op": "DUP2",
      "path": "52"
    },
    "6358": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47632,
        47702
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "6359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6361": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47632,
        47702
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "6363": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47632,
        47702
      ],
      "op": "DUP3",
      "path": "52"
    },
    "6364": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47632,
        47702
      ],
      "op": "ADD",
      "path": "52"
    },
    "6365": {
      "op": "MSTORE"
    },
    "6366": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "6368": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6370": {
      "op": "DUP3"
    },
    "6371": {
      "op": "ADD"
    },
    "6372": {
      "op": "MSTORE"
    },
    "6373": {
      "op": "PUSH32",
      "value": "0x4D696E74696E6720776F756C642065786365656420737570706C792100000000"
    },
    "6406": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6408": {
      "op": "DUP3"
    },
    "6409": {
      "op": "ADD"
    },
    "6410": {
      "op": "MSTORE"
    },
    "6411": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6413": {
      "op": "ADD"
    },
    "6414": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47632,
        47702
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "6417": {
      "op": "JUMP"
    },
    "6418": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47632,
        47702
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "6419": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47732,
        47742
      ],
      "op": "CALLER",
      "path": "52",
      "statement": 41
    },
    "6420": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47721,
        47743
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "6422": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47721,
        47743
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "6423": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47721,
        47743
      ],
      "op": "DUP2",
      "path": "52"
    },
    "6424": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47721,
        47743
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "6425": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47721,
        47731
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x5C"
    },
    "6427": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47721,
        47743
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "6429": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47721,
        47743
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "6430": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47721,
        47743
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "6432": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47721,
        47743
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "6433": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47721,
        47743
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "6434": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47721,
        47743
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "6435": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47721,
        47743
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "6437": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47721,
        47743
      ],
      "op": "AND",
      "path": "52"
    },
    "6438": {
      "branch": 120,
      "fn": "NovaNFT.nftMint",
      "offset": [
        47720,
        47743
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "6439": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47712,
        47781
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x197C"
    },
    "6442": {
      "branch": 120,
      "fn": "NovaNFT.nftMint",
      "offset": [
        47712,
        47781
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "6443": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47712,
        47781
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "6445": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47712,
        47781
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "6446": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6450": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6452": {
      "op": "SHL"
    },
    "6453": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47712,
        47781
      ],
      "op": "DUP2",
      "path": "52"
    },
    "6454": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47712,
        47781
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "6455": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6457": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47712,
        47781
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "6459": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47712,
        47781
      ],
      "op": "DUP3",
      "path": "52"
    },
    "6460": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47712,
        47781
      ],
      "op": "ADD",
      "path": "52"
    },
    "6461": {
      "op": "MSTORE"
    },
    "6462": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "6464": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6466": {
      "op": "DUP3"
    },
    "6467": {
      "op": "ADD"
    },
    "6468": {
      "op": "MSTORE"
    },
    "6469": {
      "op": "PUSH32",
      "value": "0x596F75206861766520616C726561647920636C61696D656420796F7572204E46"
    },
    "6502": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6504": {
      "op": "DUP3"
    },
    "6505": {
      "op": "ADD"
    },
    "6506": {
      "op": "MSTORE"
    },
    "6507": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6509": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "6511": {
      "op": "SHL"
    },
    "6512": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6514": {
      "op": "DUP3"
    },
    "6515": {
      "op": "ADD"
    },
    "6516": {
      "op": "MSTORE"
    },
    "6517": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6519": {
      "op": "ADD"
    },
    "6520": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47712,
        47781
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "6523": {
      "op": "JUMP"
    },
    "6524": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47712,
        47781
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "6525": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47808,
        47817
      ],
      "op": "CALLVALUE",
      "path": "52",
      "statement": 42
    },
    "6526": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47799,
        47804
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x56"
    },
    "6528": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47799,
        47804
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "6529": {
      "branch": 121,
      "fn": "NovaNFT.nftMint",
      "offset": [
        47799,
        47817
      ],
      "op": "EQ",
      "path": "52"
    },
    "6530": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47791,
        47857
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x19D9"
    },
    "6533": {
      "branch": 121,
      "fn": "NovaNFT.nftMint",
      "offset": [
        47791,
        47857
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "6534": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47791,
        47857
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "6536": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47791,
        47857
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "6537": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6541": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6543": {
      "op": "SHL"
    },
    "6544": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47791,
        47857
      ],
      "op": "DUP2",
      "path": "52"
    },
    "6545": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47791,
        47857
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "6546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6548": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47791,
        47857
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "6550": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47791,
        47857
      ],
      "op": "DUP3",
      "path": "52"
    },
    "6551": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47791,
        47857
      ],
      "op": "ADD",
      "path": "52"
    },
    "6552": {
      "op": "MSTORE"
    },
    "6553": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "6555": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6557": {
      "op": "DUP3"
    },
    "6558": {
      "op": "ADD"
    },
    "6559": {
      "op": "MSTORE"
    },
    "6560": {
      "op": "PUSH32",
      "value": "0x54686520616D6F756E7420646573706F73697465642069736E277420636F7272"
    },
    "6593": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6595": {
      "op": "DUP3"
    },
    "6596": {
      "op": "ADD"
    },
    "6597": {
      "op": "MSTORE"
    },
    "6598": {
      "op": "PUSH3",
      "value": "0x1958DD"
    },
    "6602": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "6604": {
      "op": "SHL"
    },
    "6605": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6607": {
      "op": "DUP3"
    },
    "6608": {
      "op": "ADD"
    },
    "6609": {
      "op": "MSTORE"
    },
    "6610": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6612": {
      "op": "ADD"
    },
    "6613": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47791,
        47857
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "6616": {
      "op": "JUMP"
    },
    "6617": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47791,
        47857
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "6618": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48033,
        48048
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "6620": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48051,
        48065
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x58"
    },
    "6622": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48051,
        48065
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "6623": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48068,
        48069
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1"
    },
    "6625": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48051,
        48069
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x19EA"
    },
    "6628": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48051,
        48069
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "6629": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48051,
        48069
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "6630": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48051,
        48069
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3465"
    },
    "6633": {
      "fn": "NovaNFT.nftMint",
      "jump": "i",
      "offset": [
        48051,
        48069
      ],
      "op": "JUMP",
      "path": "52"
    },
    "6634": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48051,
        48069
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "6635": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48033,
        48069
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "6636": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48033,
        48069
      ],
      "op": "POP",
      "path": "52"
    },
    "6637": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48097,
        48098
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 43,
      "value": "0x1"
    },
    "6639": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48079,
        48093
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x58"
    },
    "6641": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48079,
        48093
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "6643": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48079,
        48098
      ],
      "op": "DUP3",
      "path": "52"
    },
    "6644": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48079,
        48098
      ],
      "op": "DUP3",
      "path": "52"
    },
    "6645": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48079,
        48098
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "6646": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48079,
        48098
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x19FF"
    },
    "6649": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48079,
        48098
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "6650": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48079,
        48098
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "6651": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48079,
        48098
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3465"
    },
    "6654": {
      "fn": "NovaNFT.nftMint",
      "jump": "i",
      "offset": [
        48079,
        48098
      ],
      "op": "JUMP",
      "path": "52"
    },
    "6655": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48079,
        48098
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "6656": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48079,
        48098
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "6657": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48079,
        48098
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "6658": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48079,
        48098
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "6659": {
      "op": "POP"
    },
    "6660": {
      "op": "POP"
    },
    "6661": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48119,
        48129
      ],
      "op": "CALLER",
      "path": "52",
      "statement": 44
    },
    "6662": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48108,
        48130
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "6664": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48108,
        48130
      ],
      "op": "DUP2",
      "path": "52"
    },
    "6665": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48108,
        48130
      ],
      "op": "DUP2",
      "path": "52"
    },
    "6666": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48108,
        48130
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "6667": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48108,
        48118
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x5C"
    },
    "6669": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48108,
        48130
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "6671": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48108,
        48130
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "6672": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48108,
        48130
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "6674": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48108,
        48130
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "6675": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48108,
        48130
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "6676": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48108,
        48137
      ],
      "op": "DUP1",
      "path": "52"
    },
    "6677": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48108,
        48137
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "6678": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6680": {
      "op": "NOT"
    },
    "6681": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48108,
        48137
      ],
      "op": "AND",
      "path": "52"
    },
    "6682": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48133,
        48137
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1"
    },
    "6684": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48108,
        48137
      ],
      "op": "OR",
      "path": "52"
    },
    "6685": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48108,
        48137
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "6686": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48108,
        48137
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "6687": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48148,
        48178
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 45,
      "value": "0x1A28"
    },
    "6690": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48148,
        48178
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "6691": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48170,
        48177
      ],
      "op": "DUP3",
      "path": "52"
    },
    "6692": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48148,
        48157
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x290E"
    },
    "6695": {
      "fn": "NovaNFT.nftMint",
      "jump": "i",
      "offset": [
        48148,
        48178
      ],
      "op": "JUMP",
      "path": "52"
    },
    "6696": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48148,
        48178
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "6697": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48194,
        48220
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 46,
      "value": "0x40"
    },
    "6699": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48194,
        48220
      ],
      "op": "DUP1",
      "path": "52"
    },
    "6700": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48194,
        48220
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "6701": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48203,
        48213
      ],
      "op": "CALLER",
      "path": "52"
    },
    "6702": {
      "op": "DUP2"
    },
    "6703": {
      "op": "MSTORE"
    },
    "6704": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48215,
        48219
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1"
    },
    "6706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6708": {
      "op": "DUP3"
    },
    "6709": {
      "op": "ADD"
    },
    "6710": {
      "op": "MSTORE"
    },
    "6711": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48194,
        48220
      ],
      "op": "PUSH32",
      "path": "52",
      "value": "0x81BB5C3B8ACB6CA9D92CCFBF1418729B81D477532BD7DB95A46CB57054D2D84D"
    },
    "6744": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48194,
        48220
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "6745": {
      "op": "ADD"
    },
    "6746": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48194,
        48220
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "6748": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48194,
        48220
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "6749": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48194,
        48220
      ],
      "op": "DUP1",
      "path": "52"
    },
    "6750": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48194,
        48220
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "6751": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48194,
        48220
      ],
      "op": "SUB",
      "path": "52"
    },
    "6752": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48194,
        48220
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "6753": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        48194,
        48220
      ],
      "op": "LOG1",
      "path": "52"
    },
    "6754": {
      "fn": "NovaNFT.nftMint",
      "offset": [
        47325,
        48227
      ],
      "op": "POP",
      "path": "52"
    },
    "6755": {
      "fn": "NovaNFT.nftMint",
      "jump": "o",
      "offset": [
        47289,
        48227
      ],
      "op": "JUMP",
      "path": "52"
    },
    "6756": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49860,
        50050
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "6757": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xA"
    },
    "6759": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "6760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6766": {
      "op": "SHL"
    },
    "6767": {
      "op": "SUB"
    },
    "6768": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "AND",
      "path": "52"
    },
    "6769": {
      "fn": "Context._msgSender",
      "offset": [
        700,
        710
      ],
      "op": "CALLER",
      "path": "52"
    },
    "6770": {
      "offset": [
        10315,
        10338
      ],
      "op": "EQ",
      "path": "52"
    },
    "6771": {
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1A8E"
    },
    "6774": {
      "offset": [
        10307,
        10375
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "6775": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "6777": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "6778": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6782": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6784": {
      "op": "SHL"
    },
    "6785": {
      "offset": [
        10307,
        10375
      ],
      "op": "DUP2",
      "path": "52"
    },
    "6786": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "6787": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "6789": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "ADD",
      "path": "52"
    },
    "6790": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "6793": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "6794": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33E4"
    },
    "6797": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        10307,
        10375
      ],
      "op": "JUMP",
      "path": "52"
    },
    "6798": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "6799": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49928,
        49949
      ],
      "op": "SELFBALANCE",
      "path": "52"
    },
    "6800": {
      "branch": 122,
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49967,
        49978
      ],
      "op": "DUP1",
      "path": "52",
      "statement": 47
    },
    "6801": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49959,
        50002
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1AD2"
    },
    "6804": {
      "branch": 122,
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49959,
        50002
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "6805": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49959,
        50002
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "6807": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49959,
        50002
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "6808": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6812": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6814": {
      "op": "SHL"
    },
    "6815": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49959,
        50002
      ],
      "op": "DUP2",
      "path": "52"
    },
    "6816": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49959,
        50002
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "6817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6819": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49959,
        50002
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "6821": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49959,
        50002
      ],
      "op": "DUP3",
      "path": "52"
    },
    "6822": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49959,
        50002
      ],
      "op": "ADD",
      "path": "52"
    },
    "6823": {
      "op": "MSTORE"
    },
    "6824": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "6826": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6828": {
      "op": "DUP3"
    },
    "6829": {
      "op": "ADD"
    },
    "6830": {
      "op": "MSTORE"
    },
    "6831": {
      "op": "PUSH19",
      "value": "0x496E737566666963656E742062616C616E6365"
    },
    "6851": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "6853": {
      "op": "SHL"
    },
    "6854": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6856": {
      "op": "DUP3"
    },
    "6857": {
      "op": "ADD"
    },
    "6858": {
      "op": "MSTORE"
    },
    "6859": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6861": {
      "op": "ADD"
    },
    "6862": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49959,
        50002
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "6865": {
      "op": "JUMP"
    },
    "6866": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49959,
        50002
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "6867": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        50012,
        50043
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 48,
      "value": "0x1AF0"
    },
    "6870": {
      "offset": [
        44168,
        44210
      ],
      "op": "PUSH20",
      "path": "52",
      "value": "0xEE9ABB3A1D3D09D2E258862F69D52AEDB2623088"
    },
    "6891": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        50035,
        50042
      ],
      "op": "DUP3",
      "path": "52"
    },
    "6892": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        50012,
        50022
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x292C"
    },
    "6895": {
      "fn": "NovaNFT.withdrawAll",
      "jump": "i",
      "offset": [
        50012,
        50043
      ],
      "op": "JUMP",
      "path": "52"
    },
    "6896": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        50012,
        50043
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "6897": {
      "fn": "NovaNFT.withdrawAll",
      "offset": [
        49900,
        50050
      ],
      "op": "POP",
      "path": "52"
    },
    "6898": {
      "fn": "NovaNFT.withdrawAll",
      "jump": "o",
      "offset": [
        49860,
        50050
      ],
      "op": "JUMP",
      "path": "52"
    },
    "6899": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45872,
        46010
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "6900": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45947,
        45954
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "6902": {
      "offset": [
        7939,
        7955
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6903": {
      "offset": [
        7958,
        7974
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1B08"
    },
    "6906": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "6908": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "6909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6915": {
      "op": "SHL"
    },
    "6916": {
      "op": "SUB"
    },
    "6917": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "6918": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "6919": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2371,
        2493
      ],
      "op": "JUMP",
      "path": "68"
    },
    "6920": {
      "offset": [
        7958,
        7974
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6927": {
      "op": "SHL"
    },
    "6928": {
      "op": "SUB"
    },
    "6929": {
      "offset": [
        7958,
        7992
      ],
      "op": "AND",
      "path": "68"
    },
    "6930": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7992
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x1BED5241"
    },
    "6935": {
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6937": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6938": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6939": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "6944": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "6945": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "6947": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SHL",
      "path": "68"
    },
    "6948": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6949": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "6950": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "6952": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "6953": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "6955": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6957": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6958": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6959": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP4",
      "path": "68"
    },
    "6960": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SUB",
      "path": "68"
    },
    "6961": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "6962": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP7",
      "path": "68"
    },
    "6963": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "GAS",
      "path": "68"
    },
    "6964": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "6965": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "6966": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6967": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "6968": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1B45"
    },
    "6971": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "6972": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "6973": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "6975": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "6976": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "6977": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "6978": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "6980": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "REVERT",
      "path": "68"
    },
    "6981": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "6982": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "6983": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "6984": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "6985": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "6986": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "6988": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "6989": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "6990": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "6992": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "NOT",
      "path": "68"
    },
    "6993": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "6995": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6996": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "6997": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "6998": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "6999": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "7000": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "7001": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7003": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "7004": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "7005": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7006": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "7007": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "7008": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1B69"
    },
    "7011": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "7012": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "7013": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3351"
    },
    "7016": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMP",
      "path": "68"
    },
    "7017": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7018": {
      "offset": [
        7939,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "7019": {
      "op": "POP"
    },
    "7020": {
      "offset": [
        8023,
        8027
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1"
    },
    "7022": {
      "offset": [
        8008,
        8027
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7023": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "7024": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "7025": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "EQ",
      "path": "68"
    },
    "7026": {
      "offset": [
        8004,
        8824
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "7027": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1C3A"
    },
    "7030": {
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "7031": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "7033": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7038": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7040": {
      "op": "SHL"
    },
    "7041": {
      "op": "SUB"
    },
    "7042": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "7043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7049": {
      "op": "SHL"
    },
    "7050": {
      "op": "SUB"
    },
    "7051": {
      "offset": [
        8143,
        8167
      ],
      "op": "AND",
      "path": "68"
    },
    "7052": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8167
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "7057": {
      "offset": [
        8226,
        8236
      ],
      "op": "CALLER",
      "path": "68"
    },
    "7058": {
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7060": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7061": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "7063": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "ADD",
      "path": "68"
    },
    "7064": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1BA1"
    },
    "7067": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "7068": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "7069": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x336E"
    },
    "7072": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMP",
      "path": "68"
    },
    "7073": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7074": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7076": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7077": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "7079": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7080": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP4",
      "path": "68"
    },
    "7081": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "7082": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "7083": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7084": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "7085": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "7086": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7088": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "7089": {
      "offset": [
        8168,
        8238
      ],
      "op": "DUP1",
      "path": "68"
    },
    "7090": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7091": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "7092": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "7094": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "ADD",
      "path": "68"
    },
    "7095": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "7096": {
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7098": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7099": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "7100": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "7105": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "7106": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "7108": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SHL",
      "path": "68"
    },
    "7109": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7110": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "7111": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "7113": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "7114": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1BD5"
    },
    "7117": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "7118": {
      "op": "DUP2"
    },
    "7119": {
      "op": "MSTORE"
    },
    "7120": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7122": {
      "op": "ADD"
    },
    "7123": {
      "op": "SWAP1"
    },
    "7124": {
      "op": "JUMP"
    },
    "7125": {
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7126": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "7128": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7130": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7131": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "7132": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP4",
      "path": "68"
    },
    "7133": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SUB",
      "path": "68"
    },
    "7134": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7135": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP7",
      "path": "68"
    },
    "7136": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "GAS",
      "path": "68"
    },
    "7137": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "7138": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "7139": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "7140": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "7141": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1BF2"
    },
    "7144": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "7145": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "7146": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "7148": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "7149": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "7150": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "7151": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "7153": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "REVERT",
      "path": "68"
    },
    "7154": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7155": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "7156": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "7157": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "7158": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "7159": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7161": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7162": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "7163": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "7165": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "NOT",
      "path": "68"
    },
    "7166": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "7168": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "7169": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "7170": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "7171": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "7172": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "7173": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "7174": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7176": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "7177": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "7178": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7179": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "7180": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "7181": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1C16"
    },
    "7184": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "7185": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "7186": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3351"
    },
    "7189": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMP",
      "path": "68"
    },
    "7190": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7191": {
      "offset": [
        8138,
        8351
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1C35"
    },
    "7194": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "7195": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7197": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7198": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "7203": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7205": {
      "op": "SHL"
    },
    "7206": {
      "offset": [
        8266,
        8336
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7207": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "7208": {
      "offset": [
        8325,
        8335
      ],
      "op": "CALLER",
      "path": "68"
    },
    "7209": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "7211": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "DUP3",
      "path": "68"
    },
    "7212": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "ADD",
      "path": "68"
    },
    "7213": {
      "op": "MSTORE"
    },
    "7214": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7216": {
      "op": "ADD"
    },
    "7217": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x828"
    },
    "7220": {
      "op": "JUMP"
    },
    "7221": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7222": {
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1D81"
    },
    "7225": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMP",
      "path": "68"
    },
    "7226": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7227": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "7229": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "7230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7236": {
      "op": "SHL"
    },
    "7237": {
      "op": "SUB"
    },
    "7238": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "7239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7245": {
      "op": "SHL"
    },
    "7246": {
      "op": "SUB"
    },
    "7247": {
      "offset": [
        8525,
        8549
      ],
      "op": "AND",
      "path": "68"
    },
    "7248": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8549
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "7253": {
      "offset": [
        8608,
        8618
      ],
      "op": "CALLER",
      "path": "68"
    },
    "7254": {
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7256": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7257": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "7259": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "ADD",
      "path": "68"
    },
    "7260": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1C65"
    },
    "7263": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "7264": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "7265": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x336E"
    },
    "7268": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMP",
      "path": "68"
    },
    "7269": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7270": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7272": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7273": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "7275": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7276": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP4",
      "path": "68"
    },
    "7277": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "7278": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "7279": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7280": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "7281": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "7282": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7284": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "7285": {
      "offset": [
        8550,
        8620
      ],
      "op": "DUP1",
      "path": "68"
    },
    "7286": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7287": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "7288": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "7290": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "ADD",
      "path": "68"
    },
    "7291": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "7292": {
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7294": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7295": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "7296": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "7301": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "7302": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "7304": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SHL",
      "path": "68"
    },
    "7305": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7306": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "7307": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "7309": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "7310": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1C99"
    },
    "7313": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "7314": {
      "op": "DUP2"
    },
    "7315": {
      "op": "MSTORE"
    },
    "7316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7318": {
      "op": "ADD"
    },
    "7319": {
      "op": "SWAP1"
    },
    "7320": {
      "op": "JUMP"
    },
    "7321": {
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7322": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "7324": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7326": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7327": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "7328": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP4",
      "path": "68"
    },
    "7329": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SUB",
      "path": "68"
    },
    "7330": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7331": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP7",
      "path": "68"
    },
    "7332": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "GAS",
      "path": "68"
    },
    "7333": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "7334": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "7335": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "7336": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "7337": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1CB6"
    },
    "7340": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "7341": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "7342": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "7344": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "7345": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "7346": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "7347": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "7349": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "REVERT",
      "path": "68"
    },
    "7350": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7351": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "7352": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "7353": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "7354": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "7355": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7357": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7358": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "7359": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "7361": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "NOT",
      "path": "68"
    },
    "7362": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "7364": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "7365": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "7366": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "7367": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "7368": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "7369": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "7370": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7372": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "7373": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "7374": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7375": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "7376": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "7377": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1CDA"
    },
    "7380": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "7381": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "7382": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3351"
    },
    "7385": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMP",
      "path": "68"
    },
    "7386": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7387": {
      "offset": [
        8525,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "7388": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1D62"
    },
    "7391": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "7392": {
      "op": "POP"
    },
    "7393": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "7395": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "7396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7402": {
      "op": "SHL"
    },
    "7403": {
      "op": "SUB"
    },
    "7404": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "7405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7411": {
      "op": "SHL"
    },
    "7412": {
      "op": "SUB"
    },
    "7413": {
      "offset": [
        8658,
        8686
      ],
      "op": "AND",
      "path": "68"
    },
    "7414": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xA75B87D2"
    },
    "7419": {
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7421": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7422": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7423": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "7428": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "7429": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "7431": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SHL",
      "path": "68"
    },
    "7432": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7433": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "7434": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "7436": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "7437": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "7439": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7441": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7442": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "7443": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP4",
      "path": "68"
    },
    "7444": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SUB",
      "path": "68"
    },
    "7445": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7446": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP7",
      "path": "68"
    },
    "7447": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "GAS",
      "path": "68"
    },
    "7448": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "7449": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "7450": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "7451": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "7452": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1D29"
    },
    "7455": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "7456": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "7457": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "7459": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "7460": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "7461": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "7462": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "7464": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "REVERT",
      "path": "68"
    },
    "7465": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7466": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "7467": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "7468": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "7469": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "7470": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7472": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7473": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "7474": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "7476": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "NOT",
      "path": "68"
    },
    "7477": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "7479": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "7480": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "7481": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "7482": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "7483": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "7484": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "7485": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7487": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "7488": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "7489": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7490": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "7491": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "7492": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1D4D"
    },
    "7495": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "7496": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "7497": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x33B1"
    },
    "7500": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMP",
      "path": "68"
    },
    "7501": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7508": {
      "op": "SHL"
    },
    "7509": {
      "op": "SUB"
    },
    "7510": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "7511": {
      "offset": [
        8645,
        8654
      ],
      "op": "ORIGIN",
      "path": "68"
    },
    "7512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7518": {
      "op": "SHL"
    },
    "7519": {
      "op": "SUB"
    },
    "7520": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "7521": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8645,
        8688
      ],
      "op": "EQ",
      "path": "68"
    },
    "7522": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7523": {
      "offset": [
        8502,
        8814
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x1D81"
    },
    "7526": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "7527": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7529": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7530": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "7535": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7537": {
      "op": "SHL"
    },
    "7538": {
      "offset": [
        8729,
        8799
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7539": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "7540": {
      "offset": [
        8788,
        8798
      ],
      "op": "CALLER",
      "path": "68"
    },
    "7541": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "7543": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "DUP3",
      "path": "68"
    },
    "7544": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "ADD",
      "path": "68"
    },
    "7545": {
      "op": "MSTORE"
    },
    "7546": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7548": {
      "op": "ADD"
    },
    "7549": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x828"
    },
    "7552": {
      "op": "JUMP"
    },
    "7553": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7554": {
      "op": "POP"
    },
    "7555": {
      "op": "POP"
    },
    "7556": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45966,
        45971
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 49,
      "value": "0x56"
    },
    "7558": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45966,
        45981
      ],
      "op": "DUP2",
      "path": "52"
    },
    "7559": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45966,
        45981
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "7560": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45966,
        45981
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "7561": {
      "fn": "NovaNFT.setPrice",
      "offset": [
        45966,
        45981
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "7562": {
      "fn": "NovaNFT.setPrice",
      "jump": "o",
      "offset": [
        45872,
        46010
      ],
      "op": "JUMP",
      "path": "52"
    },
    "7563": {
      "fn": "ERC721.symbol",
      "offset": [
        26430,
        26532
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "7564": {
      "fn": "ERC721.symbol",
      "offset": [
        26486,
        26499
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x60"
    },
    "7566": {
      "fn": "ERC721.symbol",
      "offset": [
        26518,
        26525
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 50,
      "value": "0x1"
    },
    "7568": {
      "fn": "ERC721.symbol",
      "offset": [
        26511,
        26525
      ],
      "op": "DUP1",
      "path": "52"
    },
    "7569": {
      "fn": "ERC721.symbol",
      "offset": [
        26511,
        26525
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "7570": {
      "fn": "ERC721.symbol",
      "offset": [
        26511,
        26525
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x85F"
    },
    "7573": {
      "fn": "ERC721.symbol",
      "offset": [
        26511,
        26525
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "7574": {
      "fn": "ERC721.symbol",
      "offset": [
        26511,
        26525
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x32CB"
    },
    "7577": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        26511,
        26525
      ],
      "op": "JUMP",
      "path": "52"
    },
    "7578": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "7579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7585": {
      "op": "SHL"
    },
    "7586": {
      "op": "SUB"
    },
    "7587": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28174,
        28198
      ],
      "op": "DUP3",
      "path": "52",
      "statement": 51
    },
    "7588": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28174,
        28198
      ],
      "op": "AND",
      "path": "52"
    },
    "7589": {
      "fn": "Context._msgSender",
      "offset": [
        700,
        710
      ],
      "op": "CALLER",
      "path": "52"
    },
    "7590": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28174,
        28198
      ],
      "op": "EQ",
      "path": "52"
    },
    "7591": {
      "branch": 123,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28174,
        28198
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "7592": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28166,
        28228
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1DF3"
    },
    "7595": {
      "branch": 123,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28166,
        28228
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "7596": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28166,
        28228
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "7598": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28166,
        28228
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "7599": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7603": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7605": {
      "op": "SHL"
    },
    "7606": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28166,
        28228
      ],
      "op": "DUP2",
      "path": "52"
    },
    "7607": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28166,
        28228
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "7608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7610": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28166,
        28228
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "7612": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28166,
        28228
      ],
      "op": "DUP3",
      "path": "52"
    },
    "7613": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28166,
        28228
      ],
      "op": "ADD",
      "path": "52"
    },
    "7614": {
      "op": "MSTORE"
    },
    "7615": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "7617": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7619": {
      "op": "DUP3"
    },
    "7620": {
      "op": "ADD"
    },
    "7621": {
      "op": "MSTORE"
    },
    "7622": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "7655": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7657": {
      "op": "DUP3"
    },
    "7658": {
      "op": "ADD"
    },
    "7659": {
      "op": "MSTORE"
    },
    "7660": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7662": {
      "op": "ADD"
    },
    "7663": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28166,
        28228
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "7666": {
      "op": "JUMP"
    },
    "7667": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28166,
        28228
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "7668": {
      "fn": "Context._msgSender",
      "offset": [
        700,
        710
      ],
      "op": "CALLER",
      "path": "52"
    },
    "7669": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28271
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 52,
      "value": "0x0"
    },
    "7671": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28271
      ],
      "op": "DUP2",
      "path": "52"
    },
    "7672": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28271
      ],
      "op": "DUP2",
      "path": "52"
    },
    "7673": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28271
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "7674": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28257
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x5"
    },
    "7676": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28271
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "7678": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28271
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "7679": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28271
      ],
      "op": "DUP2",
      "path": "52"
    },
    "7680": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28271
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "7681": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28271
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "7683": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28271
      ],
      "op": "DUP1",
      "path": "52"
    },
    "7684": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28271
      ],
      "op": "DUP4",
      "path": "52"
    },
    "7685": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28271
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "7686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7692": {
      "op": "SHL"
    },
    "7693": {
      "op": "SUB"
    },
    "7694": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28281
      ],
      "op": "DUP8",
      "path": "52"
    },
    "7695": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28281
      ],
      "op": "AND",
      "path": "52"
    },
    "7696": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28281
      ],
      "op": "DUP1",
      "path": "52"
    },
    "7697": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28281
      ],
      "op": "DUP6",
      "path": "52"
    },
    "7698": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28281
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "7699": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28281
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "7700": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28281
      ],
      "op": "DUP4",
      "path": "52"
    },
    "7701": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28281
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "7702": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28281
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "7703": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28281
      ],
      "op": "DUP2",
      "path": "52"
    },
    "7704": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28281
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "7705": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28281
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "7706": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28292
      ],
      "op": "DUP1",
      "path": "52"
    },
    "7707": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28292
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "7708": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7710": {
      "op": "NOT"
    },
    "7711": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28292
      ],
      "op": "AND",
      "path": "52"
    },
    "7712": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28292
      ],
      "op": "DUP7",
      "path": "52"
    },
    "7713": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28292
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "7714": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28292
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "7715": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28292
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "7716": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28292
      ],
      "op": "DUP2",
      "path": "52"
    },
    "7717": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28292
      ],
      "op": "OR",
      "path": "52"
    },
    "7718": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28292
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "7719": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28292
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "7720": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28292
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "7721": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28307,
        28355
      ],
      "op": "SWAP1",
      "path": "52",
      "statement": 53
    },
    "7722": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28307,
        28355
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "7723": {
      "op": "SWAP1"
    },
    "7724": {
      "op": "DUP2"
    },
    "7725": {
      "op": "MSTORE"
    },
    "7726": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28281
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "7727": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28239,
        28281
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "7728": {
      "fn": "Context._msgSender",
      "offset": [
        700,
        710
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "7729": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28307,
        28355
      ],
      "op": "PUSH32",
      "path": "52",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "7762": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28307,
        28355
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "7763": {
      "op": "ADD"
    },
    "7764": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28307,
        28355
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "7766": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28307,
        28355
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "7767": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28307,
        28355
      ],
      "op": "DUP1",
      "path": "52"
    },
    "7768": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28307,
        28355
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "7769": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28307,
        28355
      ],
      "op": "SUB",
      "path": "52"
    },
    "7770": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28307,
        28355
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "7771": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28307,
        28355
      ],
      "op": "LOG3",
      "path": "52"
    },
    "7772": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "POP",
      "path": "52"
    },
    "7773": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28072,
        28362
      ],
      "op": "POP",
      "path": "52"
    },
    "7774": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        28072,
        28362
      ],
      "op": "JUMP",
      "path": "52"
    },
    "7775": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48286,
        48764
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "7776": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xA"
    },
    "7778": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "7779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7785": {
      "op": "SHL"
    },
    "7786": {
      "op": "SUB"
    },
    "7787": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "AND",
      "path": "52"
    },
    "7788": {
      "fn": "Context._msgSender",
      "offset": [
        700,
        710
      ],
      "op": "CALLER",
      "path": "52"
    },
    "7789": {
      "offset": [
        10315,
        10338
      ],
      "op": "EQ",
      "path": "52"
    },
    "7790": {
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1E89"
    },
    "7793": {
      "offset": [
        10307,
        10375
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "7794": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "7796": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "7797": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7801": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7803": {
      "op": "SHL"
    },
    "7804": {
      "offset": [
        10307,
        10375
      ],
      "op": "DUP2",
      "path": "52"
    },
    "7805": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "7806": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "7808": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "ADD",
      "path": "52"
    },
    "7809": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "7812": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "7813": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33E4"
    },
    "7816": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        10307,
        10375
      ],
      "op": "JUMP",
      "path": "52"
    },
    "7817": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "7818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7824": {
      "op": "SHL"
    },
    "7825": {
      "op": "SUB"
    },
    "7826": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48366,
        48388
      ],
      "op": "DUP2",
      "path": "52",
      "statement": 54
    },
    "7827": {
      "branch": 124,
      "fn": "NovaNFT.teamMint",
      "offset": [
        48366,
        48388
      ],
      "op": "AND",
      "path": "52"
    },
    "7828": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48358,
        48420
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1EDF"
    },
    "7831": {
      "branch": 124,
      "fn": "NovaNFT.teamMint",
      "offset": [
        48358,
        48420
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "7832": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48358,
        48420
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "7834": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48358,
        48420
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "7835": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7839": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7841": {
      "op": "SHL"
    },
    "7842": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48358,
        48420
      ],
      "op": "DUP2",
      "path": "52"
    },
    "7843": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48358,
        48420
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "7844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7846": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48358,
        48420
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "7848": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48358,
        48420
      ],
      "op": "DUP3",
      "path": "52"
    },
    "7849": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48358,
        48420
      ],
      "op": "ADD",
      "path": "52"
    },
    "7850": {
      "op": "MSTORE"
    },
    "7851": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "7853": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7855": {
      "op": "DUP3"
    },
    "7856": {
      "op": "ADD"
    },
    "7857": {
      "op": "MSTORE"
    },
    "7858": {
      "op": "PUSH32",
      "value": "0x43616E6E6F74206D696E7420746F206E756C6C20616464726573730000000000"
    },
    "7891": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7893": {
      "op": "DUP3"
    },
    "7894": {
      "op": "ADD"
    },
    "7895": {
      "op": "MSTORE"
    },
    "7896": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7898": {
      "op": "ADD"
    },
    "7899": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48358,
        48420
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "7902": {
      "op": "JUMP"
    },
    "7903": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48358,
        48420
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "7904": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48438,
        48453
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 55,
      "value": "0x5A"
    },
    "7906": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48438,
        48453
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "7907": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48438,
        48453
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x1000000"
    },
    "7912": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48438,
        48453
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "7913": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48438,
        48453
      ],
      "op": "DIV",
      "path": "52"
    },
    "7914": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48438,
        48453
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "7916": {
      "branch": 125,
      "fn": "NovaNFT.teamMint",
      "offset": [
        48438,
        48453
      ],
      "op": "AND",
      "path": "52"
    },
    "7917": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48430,
        48483
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1F38"
    },
    "7920": {
      "branch": 125,
      "fn": "NovaNFT.teamMint",
      "offset": [
        48430,
        48483
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "7921": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48430,
        48483
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "7923": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48430,
        48483
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "7924": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7928": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7930": {
      "op": "SHL"
    },
    "7931": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48430,
        48483
      ],
      "op": "DUP2",
      "path": "52"
    },
    "7932": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48430,
        48483
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "7933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7935": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48430,
        48483
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "7937": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48430,
        48483
      ],
      "op": "DUP3",
      "path": "52"
    },
    "7938": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48430,
        48483
      ],
      "op": "ADD",
      "path": "52"
    },
    "7939": {
      "op": "MSTORE"
    },
    "7940": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "7942": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7944": {
      "op": "DUP3"
    },
    "7945": {
      "op": "ADD"
    },
    "7946": {
      "op": "MSTORE"
    },
    "7947": {
      "op": "PUSH32",
      "value": "0x5465616D206D696E74696E67206E6F7420737461727465642E00000000000000"
    },
    "7980": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7982": {
      "op": "DUP3"
    },
    "7983": {
      "op": "ADD"
    },
    "7984": {
      "op": "MSTORE"
    },
    "7985": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7987": {
      "op": "ADD"
    },
    "7988": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48430,
        48483
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "7991": {
      "op": "JUMP"
    },
    "7992": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48430,
        48483
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "7993": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48517,
        48529
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 56,
      "value": "0x57"
    },
    "7995": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48517,
        48529
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "7996": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38733,
        38743
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x8"
    },
    "7998": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        38733,
        38750
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "7999": {
      "branch": 126,
      "fn": "NovaNFT.teamMint",
      "offset": [
        48501,
        48529
      ],
      "op": "LT",
      "path": "52"
    },
    "8000": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48493,
        48557
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1F8B"
    },
    "8003": {
      "branch": 126,
      "fn": "NovaNFT.teamMint",
      "offset": [
        48493,
        48557
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "8004": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48493,
        48557
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "8006": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48493,
        48557
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "8007": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8011": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8013": {
      "op": "SHL"
    },
    "8014": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48493,
        48557
      ],
      "op": "DUP2",
      "path": "52"
    },
    "8015": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48493,
        48557
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "8016": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8018": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48493,
        48557
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "8020": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48493,
        48557
      ],
      "op": "DUP3",
      "path": "52"
    },
    "8021": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48493,
        48557
      ],
      "op": "ADD",
      "path": "52"
    },
    "8022": {
      "op": "MSTORE"
    },
    "8023": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "8025": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8027": {
      "op": "DUP3"
    },
    "8028": {
      "op": "ADD"
    },
    "8029": {
      "op": "MSTORE"
    },
    "8030": {
      "op": "PUSH32",
      "value": "0x416C6C207465616D20746F6B656E73206D696E7465642E000000000000000000"
    },
    "8063": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8065": {
      "op": "DUP3"
    },
    "8066": {
      "op": "ADD"
    },
    "8067": {
      "op": "MSTORE"
    },
    "8068": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8070": {
      "op": "ADD"
    },
    "8071": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48493,
        48557
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "8074": {
      "op": "JUMP"
    },
    "8075": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48493,
        48557
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "8076": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48576,
        48591
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "8078": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48594,
        48608
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x58"
    },
    "8080": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48594,
        48608
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "8081": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48611,
        48612
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1"
    },
    "8083": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48594,
        48612
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1F9C"
    },
    "8086": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48594,
        48612
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "8087": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48594,
        48612
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "8088": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48594,
        48612
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3465"
    },
    "8091": {
      "fn": "NovaNFT.teamMint",
      "jump": "i",
      "offset": [
        48594,
        48612
      ],
      "op": "JUMP",
      "path": "52"
    },
    "8092": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48594,
        48612
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "8093": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48576,
        48612
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "8094": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48576,
        48612
      ],
      "op": "POP",
      "path": "52"
    },
    "8095": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48640,
        48641
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 57,
      "value": "0x1"
    },
    "8097": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48622,
        48636
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x58"
    },
    "8099": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48622,
        48636
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "8101": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48622,
        48641
      ],
      "op": "DUP3",
      "path": "52"
    },
    "8102": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48622,
        48641
      ],
      "op": "DUP3",
      "path": "52"
    },
    "8103": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48622,
        48641
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "8104": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48622,
        48641
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1FB1"
    },
    "8107": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48622,
        48641
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "8108": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48622,
        48641
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "8109": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48622,
        48641
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3465"
    },
    "8112": {
      "fn": "NovaNFT.teamMint",
      "jump": "i",
      "offset": [
        48622,
        48641
      ],
      "op": "JUMP",
      "path": "52"
    },
    "8113": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48622,
        48641
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "8114": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48622,
        48641
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "8115": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48622,
        48641
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "8116": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48622,
        48641
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "8117": {
      "op": "POP"
    },
    "8118": {
      "op": "POP"
    },
    "8119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8125": {
      "op": "SHL"
    },
    "8126": {
      "op": "SUB"
    },
    "8127": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48651,
        48671
      ],
      "op": "DUP3",
      "path": "52",
      "statement": 58
    },
    "8128": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48651,
        48671
      ],
      "op": "AND",
      "path": "52"
    },
    "8129": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48651,
        48671
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "8131": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48651,
        48671
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "8132": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48651,
        48671
      ],
      "op": "DUP2",
      "path": "52"
    },
    "8133": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48651,
        48671
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "8134": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48651,
        48661
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x5C"
    },
    "8136": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48651,
        48671
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "8138": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48651,
        48671
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "8139": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48651,
        48671
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "8141": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48651,
        48671
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "8142": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48651,
        48671
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "8143": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48651,
        48678
      ],
      "op": "DUP1",
      "path": "52"
    },
    "8144": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48651,
        48678
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "8145": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8147": {
      "op": "NOT"
    },
    "8148": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48651,
        48678
      ],
      "op": "AND",
      "path": "52"
    },
    "8149": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48674,
        48678
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1"
    },
    "8151": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48651,
        48678
      ],
      "op": "OR",
      "path": "52"
    },
    "8152": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48651,
        48678
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "8153": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48651,
        48678
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "8154": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48689,
        48717
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 59,
      "value": "0x1FE3"
    },
    "8157": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48662,
        48670
      ],
      "op": "DUP3",
      "path": "52"
    },
    "8158": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48709,
        48716
      ],
      "op": "DUP3",
      "path": "52"
    },
    "8159": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48689,
        48698
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x290E"
    },
    "8162": {
      "fn": "NovaNFT.teamMint",
      "jump": "i",
      "offset": [
        48689,
        48717
      ],
      "op": "JUMP",
      "path": "52"
    },
    "8163": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48689,
        48717
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "8164": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48733,
        48757
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 60,
      "value": "0x40"
    },
    "8166": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48733,
        48757
      ],
      "op": "DUP1",
      "path": "52"
    },
    "8167": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48733,
        48757
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "8168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8174": {
      "op": "SHL"
    },
    "8175": {
      "op": "SUB"
    },
    "8176": {
      "op": "DUP5"
    },
    "8177": {
      "op": "AND"
    },
    "8178": {
      "op": "DUP2"
    },
    "8179": {
      "op": "MSTORE"
    },
    "8180": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48752,
        48756
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1"
    },
    "8182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8184": {
      "op": "DUP3"
    },
    "8185": {
      "op": "ADD"
    },
    "8186": {
      "op": "MSTORE"
    },
    "8187": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48733,
        48757
      ],
      "op": "PUSH32",
      "path": "52",
      "value": "0x81BB5C3B8ACB6CA9D92CCFBF1418729B81D477532BD7DB95A46CB57054D2D84D"
    },
    "8220": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48733,
        48757
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "8221": {
      "op": "ADD"
    },
    "8222": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48733,
        48757
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "8224": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48733,
        48757
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "8225": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48733,
        48757
      ],
      "op": "DUP1",
      "path": "52"
    },
    "8226": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48733,
        48757
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "8227": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48733,
        48757
      ],
      "op": "SUB",
      "path": "52"
    },
    "8228": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48733,
        48757
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "8229": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48733,
        48757
      ],
      "op": "LOG1",
      "path": "52"
    },
    "8230": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48348,
        48764
      ],
      "op": "POP",
      "path": "52"
    },
    "8231": {
      "fn": "NovaNFT.teamMint",
      "offset": [
        48286,
        48764
      ],
      "op": "POP",
      "path": "52"
    },
    "8232": {
      "fn": "NovaNFT.teamMint",
      "jump": "o",
      "offset": [
        48286,
        48764
      ],
      "op": "JUMP",
      "path": "52"
    },
    "8233": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "8234": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29462,
        29503
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 61,
      "value": "0x2033"
    },
    "8237": {
      "fn": "Context._msgSender",
      "offset": [
        700,
        710
      ],
      "op": "CALLER",
      "path": "52"
    },
    "8238": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29495,
        29502
      ],
      "op": "DUP4",
      "path": "52"
    },
    "8239": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29462,
        29480
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x261A"
    },
    "8242": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        29462,
        29503
      ],
      "op": "JUMP",
      "path": "52"
    },
    "8243": {
      "branch": 127,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29462,
        29503
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "8244": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29454,
        29557
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x204F"
    },
    "8247": {
      "branch": 127,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29454,
        29557
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "8248": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29454,
        29557
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "8250": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29454,
        29557
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "8251": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8255": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8257": {
      "op": "SHL"
    },
    "8258": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29454,
        29557
      ],
      "op": "DUP2",
      "path": "52"
    },
    "8259": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29454,
        29557
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "8260": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29454,
        29557
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "8262": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29454,
        29557
      ],
      "op": "ADD",
      "path": "52"
    },
    "8263": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29454,
        29557
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "8266": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29454,
        29557
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "8267": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29454,
        29557
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3300"
    },
    "8270": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        29454,
        29557
      ],
      "op": "JUMP",
      "path": "52"
    },
    "8271": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29454,
        29557
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "8272": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29567,
        29606
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 62,
      "value": "0x205B"
    },
    "8275": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29581,
        29585
      ],
      "op": "DUP5",
      "path": "52"
    },
    "8276": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29587,
        29589
      ],
      "op": "DUP5",
      "path": "52"
    },
    "8277": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29591,
        29598
      ],
      "op": "DUP5",
      "path": "52"
    },
    "8278": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29600,
        29605
      ],
      "op": "DUP5",
      "path": "52"
    },
    "8279": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29567,
        29580
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x29CF"
    },
    "8282": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        29567,
        29606
      ],
      "op": "JUMP",
      "path": "52"
    },
    "8283": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29567,
        29606
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "8284": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "POP",
      "path": "52"
    },
    "8285": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "POP",
      "path": "52"
    },
    "8286": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "POP",
      "path": "52"
    },
    "8287": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29293,
        29613
      ],
      "op": "POP",
      "path": "52"
    },
    "8288": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        29293,
        29613
      ],
      "op": "JUMP",
      "path": "52"
    },
    "8289": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45775,
        45862
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "8290": {
      "offset": [
        7939,
        7955
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "8292": {
      "offset": [
        7958,
        7974
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x2075"
    },
    "8295": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "8297": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8304": {
      "op": "SHL"
    },
    "8305": {
      "op": "SUB"
    },
    "8306": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "8307": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8308": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2371,
        2493
      ],
      "op": "JUMP",
      "path": "68"
    },
    "8309": {
      "offset": [
        7958,
        7974
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8316": {
      "op": "SHL"
    },
    "8317": {
      "op": "SUB"
    },
    "8318": {
      "offset": [
        7958,
        7992
      ],
      "op": "AND",
      "path": "68"
    },
    "8319": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7992
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x1BED5241"
    },
    "8324": {
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8326": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8327": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8328": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "8333": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "8334": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "8336": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SHL",
      "path": "68"
    },
    "8337": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8338": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "8339": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "8341": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "8342": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "8344": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8346": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8347": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8348": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP4",
      "path": "68"
    },
    "8349": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SUB",
      "path": "68"
    },
    "8350": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8351": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP7",
      "path": "68"
    },
    "8352": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "GAS",
      "path": "68"
    },
    "8353": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "8354": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "8355": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8356": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "8357": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x20B2"
    },
    "8360": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "8361": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "8362": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "8364": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8365": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "8366": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "8367": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "8369": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "REVERT",
      "path": "68"
    },
    "8370": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8371": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "8372": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "8373": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "8374": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "8375": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8377": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8378": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "8379": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "8381": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "NOT",
      "path": "68"
    },
    "8382": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "8384": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "8385": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "8386": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "AND",
      "path": "68"
    },
    "8387": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP3",
      "path": "68"
    },
    "8388": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "8389": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8390": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8392": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "8393": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "POP",
      "path": "68"
    },
    "8394": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8395": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "ADD",
      "path": "68"
    },
    "8396": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8397": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x20D6"
    },
    "8400": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "8401": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8402": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3351"
    },
    "8405": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMP",
      "path": "68"
    },
    "8406": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        7958,
        7994
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8407": {
      "offset": [
        7939,
        7994
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8408": {
      "op": "POP"
    },
    "8409": {
      "offset": [
        8023,
        8027
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1"
    },
    "8411": {
      "offset": [
        8008,
        8027
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8412": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "8413": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "8414": {
      "branch": 139,
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8008,
        8027
      ],
      "op": "EQ",
      "path": "68"
    },
    "8415": {
      "offset": [
        8004,
        8824
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "8416": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x21A7"
    },
    "8419": {
      "branch": 139,
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "8420": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "8422": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "8423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8427": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8429": {
      "op": "SHL"
    },
    "8430": {
      "op": "SUB"
    },
    "8431": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "8432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8438": {
      "op": "SHL"
    },
    "8439": {
      "op": "SUB"
    },
    "8440": {
      "offset": [
        8143,
        8167
      ],
      "op": "AND",
      "path": "68"
    },
    "8441": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8167
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "8446": {
      "offset": [
        8226,
        8236
      ],
      "op": "CALLER",
      "path": "68"
    },
    "8447": {
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8449": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8450": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "8452": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "ADD",
      "path": "68"
    },
    "8453": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x210E"
    },
    "8456": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "8457": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8458": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x336E"
    },
    "8461": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMP",
      "path": "68"
    },
    "8462": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8463": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8465": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8466": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "8468": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8469": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP4",
      "path": "68"
    },
    "8470": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "8471": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SUB",
      "path": "68"
    },
    "8472": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8473": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "8474": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8475": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8477": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8178,
        8237
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "8478": {
      "offset": [
        8168,
        8238
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8479": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8480": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8481": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "8483": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "ADD",
      "path": "68"
    },
    "8484": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8168,
        8238
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "8485": {
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8487": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8488": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "8489": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "8494": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "8495": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "8497": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SHL",
      "path": "68"
    },
    "8498": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8499": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "8500": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "8502": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "8503": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x2142"
    },
    "8506": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "8507": {
      "op": "DUP2"
    },
    "8508": {
      "op": "MSTORE"
    },
    "8509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8511": {
      "op": "ADD"
    },
    "8512": {
      "op": "SWAP1"
    },
    "8513": {
      "op": "JUMP"
    },
    "8514": {
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8515": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "8517": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8519": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8520": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8521": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP4",
      "path": "68"
    },
    "8522": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SUB",
      "path": "68"
    },
    "8523": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8524": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP7",
      "path": "68"
    },
    "8525": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "GAS",
      "path": "68"
    },
    "8526": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "8527": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "8528": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8529": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "8530": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x215F"
    },
    "8533": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "8534": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "8535": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "8537": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8538": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "8539": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "8540": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "8542": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "REVERT",
      "path": "68"
    },
    "8543": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8544": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "8545": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "8546": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "8547": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "8548": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8550": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8551": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "8552": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "8554": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "NOT",
      "path": "68"
    },
    "8555": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "8557": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "8558": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "8559": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "AND",
      "path": "68"
    },
    "8560": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP3",
      "path": "68"
    },
    "8561": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "8562": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8563": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8565": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "8566": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "POP",
      "path": "68"
    },
    "8567": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8568": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "ADD",
      "path": "68"
    },
    "8569": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8570": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x2183"
    },
    "8573": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "8574": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8575": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3351"
    },
    "8578": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMP",
      "path": "68"
    },
    "8579": {
      "branch": 140,
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8143,
        8239
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8580": {
      "offset": [
        8138,
        8351
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x21A2"
    },
    "8583": {
      "branch": 140,
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "8584": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8586": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8587": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "8592": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8594": {
      "op": "SHL"
    },
    "8595": {
      "offset": [
        8266,
        8336
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8596": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "8597": {
      "offset": [
        8325,
        8335
      ],
      "op": "CALLER",
      "path": "68"
    },
    "8598": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "8600": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "DUP3",
      "path": "68"
    },
    "8601": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8266,
        8336
      ],
      "op": "ADD",
      "path": "68"
    },
    "8602": {
      "op": "MSTORE"
    },
    "8603": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8605": {
      "op": "ADD"
    },
    "8606": {
      "offset": [
        8266,
        8336
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x828"
    },
    "8609": {
      "op": "JUMP"
    },
    "8610": {
      "offset": [
        8138,
        8351
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8611": {
      "offset": [
        8004,
        8824
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x22EE"
    },
    "8614": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMP",
      "path": "68"
    },
    "8615": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8004,
        8824
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8616": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "8618": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "8619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8625": {
      "op": "SHL"
    },
    "8626": {
      "op": "SUB"
    },
    "8627": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "8628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8634": {
      "op": "SHL"
    },
    "8635": {
      "op": "SUB"
    },
    "8636": {
      "offset": [
        8525,
        8549
      ],
      "op": "AND",
      "path": "68"
    },
    "8637": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8549
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0x7AE1CFCA"
    },
    "8642": {
      "offset": [
        8608,
        8618
      ],
      "op": "CALLER",
      "path": "68"
    },
    "8643": {
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8645": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8646": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "8648": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "ADD",
      "path": "68"
    },
    "8649": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x21D2"
    },
    "8652": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "8653": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8654": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x336E"
    },
    "8657": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMP",
      "path": "68"
    },
    "8658": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8659": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8661": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8662": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "8664": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8665": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP4",
      "path": "68"
    },
    "8666": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "8667": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SUB",
      "path": "68"
    },
    "8668": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8669": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "8670": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8671": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8673": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8560,
        8619
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "8674": {
      "offset": [
        8550,
        8620
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8675": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8676": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8677": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "8679": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "ADD",
      "path": "68"
    },
    "8680": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8550,
        8620
      ],
      "op": "KECCAK256",
      "path": "68"
    },
    "8681": {
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8683": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8684": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "8685": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "8690": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "8691": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "8693": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SHL",
      "path": "68"
    },
    "8694": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8695": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "8696": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "8698": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "8699": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x2206"
    },
    "8702": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "8703": {
      "op": "DUP2"
    },
    "8704": {
      "op": "MSTORE"
    },
    "8705": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8707": {
      "op": "ADD"
    },
    "8708": {
      "op": "SWAP1"
    },
    "8709": {
      "op": "JUMP"
    },
    "8710": {
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8711": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "8713": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8715": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8716": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8717": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP4",
      "path": "68"
    },
    "8718": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SUB",
      "path": "68"
    },
    "8719": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8720": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP7",
      "path": "68"
    },
    "8721": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "GAS",
      "path": "68"
    },
    "8722": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "8723": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "8724": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8725": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "8726": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x2223"
    },
    "8729": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "8730": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "8731": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "8733": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8734": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "8735": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "8736": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "8738": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "REVERT",
      "path": "68"
    },
    "8739": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8740": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "8741": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "8742": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "8743": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "8744": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8746": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8747": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "8748": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "8750": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "NOT",
      "path": "68"
    },
    "8751": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "8753": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "8754": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "8755": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "AND",
      "path": "68"
    },
    "8756": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP3",
      "path": "68"
    },
    "8757": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "8758": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8759": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8761": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "8762": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "POP",
      "path": "68"
    },
    "8763": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8764": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "ADD",
      "path": "68"
    },
    "8765": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8766": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x2247"
    },
    "8769": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "8770": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8771": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3351"
    },
    "8774": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMP",
      "path": "68"
    },
    "8775": {
      "branch": 141,
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8621
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8776": {
      "offset": [
        8525,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8777": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8525,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x22CF"
    },
    "8780": {
      "branch": 141,
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "8781": {
      "op": "POP"
    },
    "8782": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x54"
    },
    "8784": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "SLOAD",
      "path": "68"
    },
    "8785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8791": {
      "op": "SHL"
    },
    "8792": {
      "op": "SUB"
    },
    "8793": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        2470,
        2485
      ],
      "op": "AND",
      "path": "68"
    },
    "8794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8800": {
      "op": "SHL"
    },
    "8801": {
      "op": "SUB"
    },
    "8802": {
      "offset": [
        8658,
        8686
      ],
      "op": "AND",
      "path": "68"
    },
    "8803": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xA75B87D2"
    },
    "8808": {
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8810": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8811": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8812": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH4",
      "path": "68",
      "value": "0xFFFFFFFF"
    },
    "8817": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "8818": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0xE0"
    },
    "8820": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SHL",
      "path": "68"
    },
    "8821": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8822": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "8823": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "8825": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "8826": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "8828": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8830": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8831": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8832": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP4",
      "path": "68"
    },
    "8833": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SUB",
      "path": "68"
    },
    "8834": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8835": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP7",
      "path": "68"
    },
    "8836": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "GAS",
      "path": "68"
    },
    "8837": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "STATICCALL",
      "path": "68"
    },
    "8838": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "8839": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8840": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "8841": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x2296"
    },
    "8844": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "8845": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "8846": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "8848": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8849": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "8850": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "8851": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "8853": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "REVERT",
      "path": "68"
    },
    "8854": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8855": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "8856": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "8857": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "8858": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "8859": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8861": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8862": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "8863": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "8865": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "NOT",
      "path": "68"
    },
    "8866": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "8868": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "8869": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "8870": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "8871": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP3",
      "path": "68"
    },
    "8872": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "8873": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8874": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8876": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "8877": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "POP",
      "path": "68"
    },
    "8878": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8879": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "ADD",
      "path": "68"
    },
    "8880": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8881": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x22BA"
    },
    "8884": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "8885": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8886": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x33B1"
    },
    "8889": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "jump": "i",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMP",
      "path": "68"
    },
    "8890": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8658,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8897": {
      "op": "SHL"
    },
    "8898": {
      "op": "SUB"
    },
    "8899": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "8900": {
      "offset": [
        8645,
        8654
      ],
      "op": "ORIGIN",
      "path": "68"
    },
    "8901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8907": {
      "op": "SHL"
    },
    "8908": {
      "op": "SUB"
    },
    "8909": {
      "offset": [
        8645,
        8688
      ],
      "op": "AND",
      "path": "68"
    },
    "8910": {
      "branch": 142,
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8645,
        8688
      ],
      "op": "EQ",
      "path": "68"
    },
    "8911": {
      "offset": [
        8525,
        8688
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8912": {
      "offset": [
        8502,
        8814
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x22EE"
    },
    "8915": {
      "branch": 142,
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "8916": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8918": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8919": {
      "op": "PUSH4",
      "value": "0x372463E3"
    },
    "8924": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8926": {
      "op": "SHL"
    },
    "8927": {
      "offset": [
        8729,
        8799
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8928": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "8929": {
      "offset": [
        8788,
        8798
      ],
      "op": "CALLER",
      "path": "68"
    },
    "8930": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "8932": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "DUP3",
      "path": "68"
    },
    "8933": {
      "fn": "PhantomStorageMixin.PhantomStorage",
      "offset": [
        8729,
        8799
      ],
      "op": "ADD",
      "path": "68"
    },
    "8934": {
      "op": "MSTORE"
    },
    "8935": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8937": {
      "op": "ADD"
    },
    "8938": {
      "offset": [
        8729,
        8799
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x828"
    },
    "8941": {
      "op": "JUMP"
    },
    "8942": {
      "offset": [
        8502,
        8814
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8943": {
      "op": "POP"
    },
    "8944": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45850,
        45855
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 63,
      "value": "0x5A"
    },
    "8946": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45850,
        45855
      ],
      "op": "DUP1",
      "path": "52"
    },
    "8947": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45850,
        45855
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "8948": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "8952": {
      "op": "NOT"
    },
    "8953": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45841,
        45855
      ],
      "op": "DUP2",
      "path": "52"
    },
    "8954": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45841,
        45855
      ],
      "op": "AND",
      "path": "52"
    },
    "8955": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45850,
        45855
      ],
      "op": "PUSH3",
      "path": "52",
      "value": "0x10000"
    },
    "8959": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45850,
        45855
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "8960": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45850,
        45855
      ],
      "op": "DUP3",
      "path": "52"
    },
    "8961": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45850,
        45855
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "8962": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45850,
        45855
      ],
      "op": "DIV",
      "path": "52"
    },
    "8963": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45850,
        45855
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "8965": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45850,
        45855
      ],
      "op": "AND",
      "path": "52"
    },
    "8966": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45849,
        45855
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "8967": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45841,
        45855
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "8968": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45841,
        45855
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "8969": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45841,
        45855
      ],
      "op": "MUL",
      "path": "52"
    },
    "8970": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45841,
        45855
      ],
      "op": "OR",
      "path": "52"
    },
    "8971": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45841,
        45855
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "8972": {
      "fn": "NovaNFT.togglePause",
      "offset": [
        45841,
        45855
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "8973": {
      "fn": "NovaNFT.togglePause",
      "jump": "o",
      "offset": [
        45775,
        45862
      ],
      "op": "JUMP",
      "path": "52"
    },
    "8974": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "8975": {
      "fn": "ERC721._exists",
      "offset": [
        31150,
        31154
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "8977": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "DUP2",
      "path": "52"
    },
    "8978": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "DUP2",
      "path": "52"
    },
    "8979": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "8980": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31180
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x2"
    },
    "8982": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "8984": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "8985": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "8987": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "8988": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "8989": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "8990": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50822,
        50835
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x60"
    },
    "8992": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50822,
        50835
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "8993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8999": {
      "op": "SHL"
    },
    "9000": {
      "op": "SUB"
    },
    "9001": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "AND",
      "path": "52"
    },
    "9002": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50847,
        50923
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 64,
      "value": "0x238D"
    },
    "9005": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50847,
        50923
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "9006": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50847,
        50923
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "9008": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50847,
        50923
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "9009": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9013": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9015": {
      "op": "SHL"
    },
    "9016": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50847,
        50923
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9017": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50847,
        50923
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9020": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50847,
        50923
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "9022": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50847,
        50923
      ],
      "op": "DUP3",
      "path": "52"
    },
    "9023": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50847,
        50923
      ],
      "op": "ADD",
      "path": "52"
    },
    "9024": {
      "op": "MSTORE"
    },
    "9025": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "9027": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9029": {
      "op": "DUP3"
    },
    "9030": {
      "op": "ADD"
    },
    "9031": {
      "op": "MSTORE"
    },
    "9032": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "9065": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9067": {
      "op": "DUP3"
    },
    "9068": {
      "op": "ADD"
    },
    "9069": {
      "op": "MSTORE"
    },
    "9070": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "9086": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "9088": {
      "op": "SHL"
    },
    "9089": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9091": {
      "op": "DUP3"
    },
    "9092": {
      "op": "ADD"
    },
    "9093": {
      "op": "MSTORE"
    },
    "9094": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9096": {
      "op": "ADD"
    },
    "9097": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50847,
        50923
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "9100": {
      "op": "JUMP"
    },
    "9101": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50847,
        50923
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9102": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50969,
        50970
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 65,
      "value": "0x0"
    },
    "9104": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50946,
        50958
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x59"
    },
    "9106": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        50966
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9107": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        50966
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "9108": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        50966
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x239C"
    },
    "9111": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        50966
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9112": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        50966
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x32CB"
    },
    "9115": {
      "fn": "NovaNFT.tokenURI",
      "jump": "i",
      "offset": [
        50940,
        50966
      ],
      "op": "JUMP",
      "path": "52"
    },
    "9116": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        50966
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9117": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        50966
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9118": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        50966
      ],
      "op": "POP",
      "path": "52"
    },
    "9119": {
      "branch": 128,
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        50970
      ],
      "op": "GT",
      "path": "52"
    },
    "9120": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        51045
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x23B8"
    },
    "9123": {
      "branch": 128,
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        51045
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "9124": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        51045
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "9126": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        51045
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "9127": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        51045
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9128": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        51045
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "9130": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        51045
      ],
      "op": "ADD",
      "path": "52"
    },
    "9131": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        51045
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "9133": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        51045
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9134": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        51045
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9135": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        51045
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "9137": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        51045
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9138": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        51045
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9139": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        51045
      ],
      "op": "POP",
      "path": "52"
    },
    "9140": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        51045
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x7CE"
    },
    "9143": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        51045
      ],
      "op": "JUMP",
      "path": "52"
    },
    "9144": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50940,
        51045
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9145": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50997,
        51009
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x59"
    },
    "9147": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        51011,
        51029
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x23C3"
    },
    "9150": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        51011,
        51018
      ],
      "op": "DUP4",
      "path": "52"
    },
    "9151": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        51011,
        51027
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2A02"
    },
    "9154": {
      "fn": "NovaNFT.tokenURI",
      "jump": "i",
      "offset": [
        51011,
        51029
      ],
      "op": "JUMP",
      "path": "52"
    },
    "9155": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        51011,
        51029
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9156": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "9158": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "9159": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "9161": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "ADD",
      "path": "52"
    },
    "9162": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x23D4"
    },
    "9165": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "9166": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "9167": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9168": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3499"
    },
    "9171": {
      "fn": "NovaNFT.tokenURI",
      "jump": "i",
      "offset": [
        50980,
        51039
      ],
      "op": "JUMP",
      "path": "52"
    },
    "9172": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9173": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "9175": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "9176": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "9178": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9179": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "DUP4",
      "path": "52"
    },
    "9180": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "SUB",
      "path": "52"
    },
    "9181": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "SUB",
      "path": "52"
    },
    "9182": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9183": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9184": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9185": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "9187": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50980,
        51039
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9188": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50933,
        51045
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "9189": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        50749,
        51052
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "9190": {
      "op": "POP"
    },
    "9191": {
      "op": "POP"
    },
    "9192": {
      "fn": "NovaNFT.tokenURI",
      "jump": "o",
      "offset": [
        50749,
        51052
      ],
      "op": "JUMP",
      "path": "52"
    },
    "9193": {
      "offset": [
        44451,
        44482
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9194": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x59"
    },
    "9196": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9197": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "9198": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x23F6"
    },
    "9201": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9202": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x32CB"
    },
    "9205": {
      "fn": "NovaNFT.tokenURI",
      "jump": "i",
      "offset": [
        44451,
        44482
      ],
      "op": "JUMP",
      "path": "52"
    },
    "9206": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9207": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9208": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1F"
    },
    "9210": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "ADD",
      "path": "52"
    },
    "9211": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "9213": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9214": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "9215": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DIV",
      "path": "52"
    },
    "9216": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "MUL",
      "path": "52"
    },
    "9217": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "9219": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "ADD",
      "path": "52"
    },
    "9220": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "9222": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "9223": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9224": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9225": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "ADD",
      "path": "52"
    },
    "9226": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "9228": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9229": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9230": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "9231": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "9232": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9233": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9234": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9235": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9236": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "9238": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "ADD",
      "path": "52"
    },
    "9239": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP3",
      "path": "52"
    },
    "9240": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9241": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "9242": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2422"
    },
    "9245": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9246": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x32CB"
    },
    "9249": {
      "fn": "NovaNFT.tokenURI",
      "jump": "i",
      "offset": [
        44451,
        44482
      ],
      "op": "JUMP",
      "path": "52"
    },
    "9250": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9251": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9252": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "9253": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x246F"
    },
    "9256": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "9257": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9258": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1F"
    },
    "9260": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "LT",
      "path": "52"
    },
    "9261": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2444"
    },
    "9264": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "9265": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x100"
    },
    "9268": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9269": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP4",
      "path": "52"
    },
    "9270": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "9271": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DIV",
      "path": "52"
    },
    "9272": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "MUL",
      "path": "52"
    },
    "9273": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP4",
      "path": "52"
    },
    "9274": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9275": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "9276": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "9278": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "ADD",
      "path": "52"
    },
    "9279": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "9280": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x246F"
    },
    "9283": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "JUMP",
      "path": "52"
    },
    "9284": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9285": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP3",
      "path": "52"
    },
    "9286": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "ADD",
      "path": "52"
    },
    "9287": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "9288": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9289": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "9291": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9292": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "9294": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "9296": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "9297": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9298": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9299": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9300": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "9301": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9302": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9303": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9304": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1"
    },
    "9306": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "ADD",
      "path": "52"
    },
    "9307": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9308": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "9310": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "ADD",
      "path": "52"
    },
    "9311": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9312": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP4",
      "path": "52"
    },
    "9313": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "GT",
      "path": "52"
    },
    "9314": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2452"
    },
    "9317": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "9318": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP3",
      "path": "52"
    },
    "9319": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9320": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SUB",
      "path": "52"
    },
    "9321": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1F"
    },
    "9323": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "AND",
      "path": "52"
    },
    "9324": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP3",
      "path": "52"
    },
    "9325": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "ADD",
      "path": "52"
    },
    "9326": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "9327": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9328": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "POP",
      "path": "52"
    },
    "9329": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "POP",
      "path": "52"
    },
    "9330": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "POP",
      "path": "52"
    },
    "9331": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "POP",
      "path": "52"
    },
    "9332": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "POP",
      "path": "52"
    },
    "9333": {
      "fn": "NovaNFT.tokenURI",
      "offset": [
        44451,
        44482
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9334": {
      "fn": "NovaNFT.tokenURI",
      "jump": "o",
      "offset": [
        44451,
        44482
      ],
      "op": "JUMP",
      "path": "52"
    },
    "9335": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45332,
        45438
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9336": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xA"
    },
    "9338": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "9339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9345": {
      "op": "SHL"
    },
    "9346": {
      "op": "SUB"
    },
    "9347": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "AND",
      "path": "52"
    },
    "9348": {
      "fn": "Context._msgSender",
      "offset": [
        700,
        710
      ],
      "op": "CALLER",
      "path": "52"
    },
    "9349": {
      "offset": [
        10315,
        10338
      ],
      "op": "EQ",
      "path": "52"
    },
    "9350": {
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x24A1"
    },
    "9353": {
      "offset": [
        10307,
        10375
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "9354": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "9356": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "9357": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9361": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9363": {
      "op": "SHL"
    },
    "9364": {
      "offset": [
        10307,
        10375
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9365": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9366": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "9368": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "ADD",
      "path": "52"
    },
    "9369": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "9372": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9373": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33E4"
    },
    "9376": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        10307,
        10375
      ],
      "op": "JUMP",
      "path": "52"
    },
    "9377": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9378": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45414,
        45431
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 66,
      "value": "0x5A"
    },
    "9380": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45414,
        45431
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9381": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45414,
        45431
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "9382": {
      "op": "PUSH5",
      "value": "0xFF00000000"
    },
    "9388": {
      "op": "NOT"
    },
    "9389": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45393,
        45431
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9390": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45393,
        45431
      ],
      "op": "AND",
      "path": "52"
    },
    "9391": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45414,
        45431
      ],
      "op": "PUSH5",
      "path": "52",
      "value": "0x100000000"
    },
    "9397": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45414,
        45431
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "9398": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45414,
        45431
      ],
      "op": "DUP3",
      "path": "52"
    },
    "9399": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45414,
        45431
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9400": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45414,
        45431
      ],
      "op": "DIV",
      "path": "52"
    },
    "9401": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45414,
        45431
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "9403": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45414,
        45431
      ],
      "op": "AND",
      "path": "52"
    },
    "9404": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45413,
        45431
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "9405": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45393,
        45431
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9406": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45393,
        45431
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "9407": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45393,
        45431
      ],
      "op": "MUL",
      "path": "52"
    },
    "9408": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45393,
        45431
      ],
      "op": "OR",
      "path": "52"
    },
    "9409": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45393,
        45431
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9410": {
      "fn": "NovaNFT.setIsAllowListActive",
      "offset": [
        45393,
        45431
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "9411": {
      "fn": "NovaNFT.setIsAllowListActive",
      "jump": "o",
      "offset": [
        45332,
        45438
      ],
      "op": "JUMP",
      "path": "52"
    },
    "9412": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10976,
        11165
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9413": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xA"
    },
    "9415": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "9416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9422": {
      "op": "SHL"
    },
    "9423": {
      "op": "SUB"
    },
    "9424": {
      "fn": "Ownable.owner",
      "offset": [
        10175,
        10181
      ],
      "op": "AND",
      "path": "52"
    },
    "9425": {
      "fn": "Context._msgSender",
      "offset": [
        700,
        710
      ],
      "op": "CALLER",
      "path": "52"
    },
    "9426": {
      "offset": [
        10315,
        10338
      ],
      "op": "EQ",
      "path": "52"
    },
    "9427": {
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x24EE"
    },
    "9430": {
      "offset": [
        10307,
        10375
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "9431": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "9433": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "9434": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9438": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9440": {
      "op": "SHL"
    },
    "9441": {
      "offset": [
        10307,
        10375
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9442": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9443": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "9445": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "ADD",
      "path": "52"
    },
    "9446": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "9449": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9450": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33E4"
    },
    "9453": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        10307,
        10375
      ],
      "op": "JUMP",
      "path": "52"
    },
    "9454": {
      "fn": "Context._msgSender",
      "offset": [
        10307,
        10375
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9461": {
      "op": "SHL"
    },
    "9462": {
      "op": "SUB"
    },
    "9463": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        11064,
        11086
      ],
      "op": "DUP2",
      "path": "52",
      "statement": 67
    },
    "9464": {
      "branch": 129,
      "fn": "Ownable.transferOwnership",
      "offset": [
        11064,
        11086
      ],
      "op": "AND",
      "path": "52"
    },
    "9465": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        11056,
        11129
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2553"
    },
    "9468": {
      "branch": 129,
      "fn": "Ownable.transferOwnership",
      "offset": [
        11056,
        11129
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "9469": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        11056,
        11129
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "9471": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        11056,
        11129
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "9472": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9476": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9478": {
      "op": "SHL"
    },
    "9479": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        11056,
        11129
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9480": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        11056,
        11129
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9483": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        11056,
        11129
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "9485": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        11056,
        11129
      ],
      "op": "DUP3",
      "path": "52"
    },
    "9486": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        11056,
        11129
      ],
      "op": "ADD",
      "path": "52"
    },
    "9487": {
      "op": "MSTORE"
    },
    "9488": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9490": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9492": {
      "op": "DUP3"
    },
    "9493": {
      "op": "ADD"
    },
    "9494": {
      "op": "MSTORE"
    },
    "9495": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "9528": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9530": {
      "op": "DUP3"
    },
    "9531": {
      "op": "ADD"
    },
    "9532": {
      "op": "MSTORE"
    },
    "9533": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "9540": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9542": {
      "op": "SHL"
    },
    "9543": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9545": {
      "op": "DUP3"
    },
    "9546": {
      "op": "ADD"
    },
    "9547": {
      "op": "MSTORE"
    },
    "9548": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9550": {
      "op": "ADD"
    },
    "9551": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        11056,
        11129
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "9554": {
      "op": "JUMP"
    },
    "9555": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        11056,
        11129
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9556": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        11139,
        11158
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 68,
      "value": "0x1AF0"
    },
    "9559": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        11149,
        11157
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9560": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        11139,
        11148
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x28BC"
    },
    "9563": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        11139,
        11158
      ],
      "op": "JUMP",
      "path": "52"
    },
    "9564": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25350,
        25650
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25452,
        25456
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "9567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9573": {
      "op": "SHL"
    },
    "9574": {
      "op": "SUB"
    },
    "9575": {
      "op": "NOT"
    },
    "9576": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25487,
        25527
      ],
      "op": "DUP3",
      "path": "52",
      "statement": 69
    },
    "9577": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25487,
        25527
      ],
      "op": "AND",
      "path": "52"
    },
    "9578": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9585": {
      "op": "SHL"
    },
    "9586": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25487,
        25527
      ],
      "op": "EQ",
      "path": "52"
    },
    "9587": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25487,
        25527
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9588": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25487,
        25591
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x258D"
    },
    "9591": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25487,
        25591
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "9592": {
      "op": "POP"
    },
    "9593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9599": {
      "op": "SHL"
    },
    "9600": {
      "op": "SUB"
    },
    "9601": {
      "op": "NOT"
    },
    "9602": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25543,
        25591
      ],
      "op": "DUP3",
      "path": "52"
    },
    "9603": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25543,
        25591
      ],
      "op": "AND",
      "path": "52"
    },
    "9604": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "9609": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9611": {
      "op": "SHL"
    },
    "9612": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25543,
        25591
      ],
      "op": "EQ",
      "path": "52"
    },
    "9613": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25487,
        25591
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9614": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25487,
        25643
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9615": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25487,
        25643
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x7CE"
    },
    "9618": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25487,
        25643
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "9619": {
      "op": "POP"
    },
    "9620": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "9625": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9627": {
      "op": "SHL"
    },
    "9628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9632": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9634": {
      "op": "SHL"
    },
    "9635": {
      "op": "SUB"
    },
    "9636": {
      "op": "NOT"
    },
    "9637": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        13186,
        13226
      ],
      "op": "DUP4",
      "path": "52",
      "statement": 70
    },
    "9638": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        13186,
        13226
      ],
      "op": "AND",
      "path": "52"
    },
    "9639": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        13186,
        13226
      ],
      "op": "EQ",
      "path": "52"
    },
    "9640": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25607,
        25643
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x7CE"
    },
    "9643": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        13078,
        13233
      ],
      "op": "JUMP",
      "path": "52"
    },
    "9644": {
      "fn": "ERC721._approve",
      "offset": [
        34936,
        35107
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9645": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35034
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 71,
      "value": "0x0"
    },
    "9647": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35034
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9648": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35034
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9649": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35034
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9650": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35025
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "9652": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35034
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "9654": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35034
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9655": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35034
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "9657": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35034
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9658": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35034
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "9659": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35039
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9660": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35039
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "9661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9667": {
      "op": "SHL"
    },
    "9668": {
      "op": "SUB"
    },
    "9669": {
      "op": "NOT"
    },
    "9670": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35039
      ],
      "op": "AND",
      "path": "52"
    },
    "9671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9677": {
      "op": "SHL"
    },
    "9678": {
      "op": "SUB"
    },
    "9679": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35039
      ],
      "op": "DUP5",
      "path": "52"
    },
    "9680": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35039
      ],
      "op": "AND",
      "path": "52"
    },
    "9681": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35039
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9682": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35039
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9683": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35039
      ],
      "op": "OR",
      "path": "52"
    },
    "9684": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35039
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9685": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35039
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "9686": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35039
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "9687": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35034
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9688": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35034
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9689": {
      "fn": "ERC721._approve",
      "offset": [
        35063,
        35086
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 72,
      "value": "0x25E1"
    },
    "9692": {
      "fn": "ERC721._approve",
      "offset": [
        35010,
        35034
      ],
      "op": "DUP3",
      "path": "52"
    },
    "9693": {
      "fn": "ERC721._approve",
      "offset": [
        35063,
        35077
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x166F"
    },
    "9696": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        35063,
        35086
      ],
      "op": "JUMP",
      "path": "52"
    },
    "9697": {
      "fn": "ERC721._approve",
      "offset": [
        35063,
        35086
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9704": {
      "op": "SHL"
    },
    "9705": {
      "op": "SUB"
    },
    "9706": {
      "fn": "ERC721._approve",
      "offset": [
        35054,
        35100
      ],
      "op": "AND",
      "path": "52"
    },
    "9707": {
      "fn": "ERC721._approve",
      "offset": [
        35054,
        35100
      ],
      "op": "PUSH32",
      "path": "52",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "9740": {
      "fn": "ERC721._approve",
      "offset": [
        35054,
        35100
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "9742": {
      "fn": "ERC721._approve",
      "offset": [
        35054,
        35100
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "9743": {
      "fn": "ERC721._approve",
      "offset": [
        35054,
        35100
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "9745": {
      "fn": "ERC721._approve",
      "offset": [
        35054,
        35100
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "9746": {
      "fn": "ERC721._approve",
      "offset": [
        35054,
        35100
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9747": {
      "fn": "ERC721._approve",
      "offset": [
        35054,
        35100
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "9748": {
      "fn": "ERC721._approve",
      "offset": [
        35054,
        35100
      ],
      "op": "SUB",
      "path": "52"
    },
    "9749": {
      "fn": "ERC721._approve",
      "offset": [
        35054,
        35100
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9750": {
      "fn": "ERC721._approve",
      "offset": [
        35054,
        35100
      ],
      "op": "LOG4",
      "path": "52"
    },
    "9751": {
      "fn": "ERC721._approve",
      "offset": [
        34936,
        35107
      ],
      "op": "POP",
      "path": "52"
    },
    "9752": {
      "fn": "ERC721._approve",
      "offset": [
        34936,
        35107
      ],
      "op": "POP",
      "path": "52"
    },
    "9753": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        34936,
        35107
      ],
      "op": "JUMP",
      "path": "52"
    },
    "9754": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31368,
        31712
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9755": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31461,
        31465
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "9757": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9758": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9759": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9760": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31180
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x2"
    },
    "9762": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "9764": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9765": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "9767": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9768": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "9769": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "9770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9776": {
      "op": "SHL"
    },
    "9777": {
      "op": "SUB"
    },
    "9778": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "AND",
      "path": "52"
    },
    "9779": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31477,
        31550
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 73,
      "value": "0x2693"
    },
    "9782": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31477,
        31550
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "9783": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31477,
        31550
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "9785": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31477,
        31550
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "9786": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9790": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9792": {
      "op": "SHL"
    },
    "9793": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31477,
        31550
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9794": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31477,
        31550
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9797": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31477,
        31550
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "9799": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31477,
        31550
      ],
      "op": "DUP3",
      "path": "52"
    },
    "9800": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31477,
        31550
      ],
      "op": "ADD",
      "path": "52"
    },
    "9801": {
      "op": "MSTORE"
    },
    "9802": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "9804": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9806": {
      "op": "DUP3"
    },
    "9807": {
      "op": "ADD"
    },
    "9808": {
      "op": "MSTORE"
    },
    "9809": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "9842": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9844": {
      "op": "DUP3"
    },
    "9845": {
      "op": "ADD"
    },
    "9846": {
      "op": "MSTORE"
    },
    "9847": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "9860": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "9862": {
      "op": "SHL"
    },
    "9863": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9865": {
      "op": "DUP3"
    },
    "9866": {
      "op": "ADD"
    },
    "9867": {
      "op": "MSTORE"
    },
    "9868": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9870": {
      "op": "ADD"
    },
    "9871": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31477,
        31550
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "9874": {
      "op": "JUMP"
    },
    "9875": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31477,
        31550
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9876": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31560,
        31573
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "9878": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31576,
        31599
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x269E"
    },
    "9881": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31591,
        31598
      ],
      "op": "DUP4",
      "path": "52"
    },
    "9882": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31576,
        31590
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x166F"
    },
    "9885": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        31576,
        31599
      ],
      "op": "JUMP",
      "path": "52"
    },
    "9886": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31576,
        31599
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9887": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31560,
        31599
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9888": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31560,
        31599
      ],
      "op": "POP",
      "path": "52"
    },
    "9889": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31628,
        31633
      ],
      "op": "DUP1",
      "path": "52",
      "statement": 74
    },
    "9890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9896": {
      "op": "SHL"
    },
    "9897": {
      "op": "SUB"
    },
    "9898": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31633
      ],
      "op": "AND",
      "path": "52"
    },
    "9899": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31624
      ],
      "op": "DUP5",
      "path": "52"
    },
    "9900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9906": {
      "op": "SHL"
    },
    "9907": {
      "op": "SUB"
    },
    "9908": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31633
      ],
      "op": "AND",
      "path": "52"
    },
    "9909": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31633
      ],
      "op": "EQ",
      "path": "52"
    },
    "9910": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31668
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9911": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31668
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x26D9"
    },
    "9914": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31668
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "9915": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31668
      ],
      "op": "POP",
      "path": "52"
    },
    "9916": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31661,
        31668
      ],
      "op": "DUP4",
      "path": "52"
    },
    "9917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9923": {
      "op": "SHL"
    },
    "9924": {
      "op": "SUB"
    },
    "9925": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31637,
        31668
      ],
      "op": "AND",
      "path": "52"
    },
    "9926": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31637,
        31657
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x26CE"
    },
    "9929": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31649,
        31656
      ],
      "op": "DUP5",
      "path": "52"
    },
    "9930": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31637,
        31648
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x8E2"
    },
    "9933": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        31637,
        31657
      ],
      "op": "JUMP",
      "path": "52"
    },
    "9934": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31637,
        31657
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9941": {
      "op": "SHL"
    },
    "9942": {
      "op": "SUB"
    },
    "9943": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31637,
        31668
      ],
      "op": "AND",
      "path": "52"
    },
    "9944": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31637,
        31668
      ],
      "op": "EQ",
      "path": "52"
    },
    "9945": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31668
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9946": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31704
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9947": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31704
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2709"
    },
    "9950": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31704
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "9951": {
      "op": "POP"
    },
    "9952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9958": {
      "op": "SHL"
    },
    "9959": {
      "op": "SUB"
    },
    "9960": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9961": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "DUP3",
      "path": "52"
    },
    "9962": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "AND",
      "path": "52"
    },
    "9963": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28525,
        28529
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "9965": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9966": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9967": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9968": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28566
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x5"
    },
    "9970": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "9972": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9973": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "DUP2",
      "path": "52"
    },
    "9974": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9975": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "9977": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "DUP1",
      "path": "52"
    },
    "9978": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "DUP4",
      "path": "52"
    },
    "9979": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28573
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "9980": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "SWAP4",
      "path": "52"
    },
    "9981": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "DUP9",
      "path": "52"
    },
    "9982": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "AND",
      "path": "52"
    },
    "9983": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "DUP4",
      "path": "52"
    },
    "9984": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9985": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "9986": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "9987": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "9988": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "9989": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "9990": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "9992": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28548,
        28583
      ],
      "op": "AND",
      "path": "52"
    },
    "9993": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31672,
        31704
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "9994": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31609,
        31705
      ],
      "op": "SWAP5",
      "path": "52"
    },
    "9995": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31368,
        31712
      ],
      "op": "SWAP4",
      "path": "52"
    },
    "9996": {
      "op": "POP"
    },
    "9997": {
      "op": "POP"
    },
    "9998": {
      "op": "POP"
    },
    "9999": {
      "op": "POP"
    },
    "10000": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        31368,
        31712
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10001": {
      "fn": "ERC721._transfer",
      "offset": [
        34265,
        34825
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10002": {
      "fn": "ERC721._transfer",
      "offset": [
        34419,
        34423
      ],
      "op": "DUP3",
      "path": "52",
      "statement": 75
    },
    "10003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10007": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10009": {
      "op": "SHL"
    },
    "10010": {
      "op": "SUB"
    },
    "10011": {
      "fn": "ERC721._transfer",
      "offset": [
        34392,
        34423
      ],
      "op": "AND",
      "path": "52"
    },
    "10012": {
      "fn": "ERC721._transfer",
      "offset": [
        34392,
        34415
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2724"
    },
    "10015": {
      "fn": "ERC721._transfer",
      "offset": [
        34407,
        34414
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10016": {
      "fn": "ERC721._transfer",
      "offset": [
        34392,
        34406
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x166F"
    },
    "10019": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        34392,
        34415
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10020": {
      "fn": "ERC721._transfer",
      "offset": [
        34392,
        34415
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10025": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10027": {
      "op": "SHL"
    },
    "10028": {
      "op": "SUB"
    },
    "10029": {
      "fn": "ERC721._transfer",
      "offset": [
        34392,
        34423
      ],
      "op": "AND",
      "path": "52"
    },
    "10030": {
      "branch": 130,
      "fn": "ERC721._transfer",
      "offset": [
        34392,
        34423
      ],
      "op": "EQ",
      "path": "52"
    },
    "10031": {
      "fn": "ERC721._transfer",
      "offset": [
        34384,
        34469
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x278C"
    },
    "10034": {
      "branch": 130,
      "fn": "ERC721._transfer",
      "offset": [
        34384,
        34469
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "10035": {
      "fn": "ERC721._transfer",
      "offset": [
        34384,
        34469
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "10037": {
      "fn": "ERC721._transfer",
      "offset": [
        34384,
        34469
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "10038": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10042": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10044": {
      "op": "SHL"
    },
    "10045": {
      "fn": "ERC721._transfer",
      "offset": [
        34384,
        34469
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10046": {
      "fn": "ERC721._transfer",
      "offset": [
        34384,
        34469
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10049": {
      "fn": "ERC721._transfer",
      "offset": [
        34384,
        34469
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "10051": {
      "fn": "ERC721._transfer",
      "offset": [
        34384,
        34469
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10052": {
      "fn": "ERC721._transfer",
      "offset": [
        34384,
        34469
      ],
      "op": "ADD",
      "path": "52"
    },
    "10053": {
      "op": "MSTORE"
    },
    "10054": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "10056": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10058": {
      "op": "DUP3"
    },
    "10059": {
      "op": "ADD"
    },
    "10060": {
      "op": "MSTORE"
    },
    "10061": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "10094": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10096": {
      "op": "DUP3"
    },
    "10097": {
      "op": "ADD"
    },
    "10098": {
      "op": "MSTORE"
    },
    "10099": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "10109": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "10111": {
      "op": "SHL"
    },
    "10112": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10114": {
      "op": "DUP3"
    },
    "10115": {
      "op": "ADD"
    },
    "10116": {
      "op": "MSTORE"
    },
    "10117": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10119": {
      "op": "ADD"
    },
    "10120": {
      "fn": "ERC721._transfer",
      "offset": [
        34384,
        34469
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "10123": {
      "op": "JUMP"
    },
    "10124": {
      "fn": "ERC721._transfer",
      "offset": [
        34384,
        34469
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10131": {
      "op": "SHL"
    },
    "10132": {
      "op": "SUB"
    },
    "10133": {
      "fn": "ERC721._transfer",
      "offset": [
        34487,
        34503
      ],
      "op": "DUP3",
      "path": "52",
      "statement": 76
    },
    "10134": {
      "branch": 131,
      "fn": "ERC721._transfer",
      "offset": [
        34487,
        34503
      ],
      "op": "AND",
      "path": "52"
    },
    "10135": {
      "fn": "ERC721._transfer",
      "offset": [
        34479,
        34544
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x27EE"
    },
    "10138": {
      "branch": 131,
      "fn": "ERC721._transfer",
      "offset": [
        34479,
        34544
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "10139": {
      "fn": "ERC721._transfer",
      "offset": [
        34479,
        34544
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "10141": {
      "fn": "ERC721._transfer",
      "offset": [
        34479,
        34544
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "10142": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10146": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10148": {
      "op": "SHL"
    },
    "10149": {
      "fn": "ERC721._transfer",
      "offset": [
        34479,
        34544
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10150": {
      "fn": "ERC721._transfer",
      "offset": [
        34479,
        34544
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10153": {
      "fn": "ERC721._transfer",
      "offset": [
        34479,
        34544
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "10155": {
      "fn": "ERC721._transfer",
      "offset": [
        34479,
        34544
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10156": {
      "fn": "ERC721._transfer",
      "offset": [
        34479,
        34544
      ],
      "op": "ADD",
      "path": "52"
    },
    "10157": {
      "op": "MSTORE"
    },
    "10158": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10160": {
      "op": "DUP1"
    },
    "10161": {
      "op": "DUP3"
    },
    "10162": {
      "op": "ADD"
    },
    "10163": {
      "op": "MSTORE"
    },
    "10164": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "10197": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10199": {
      "op": "DUP3"
    },
    "10200": {
      "op": "ADD"
    },
    "10201": {
      "op": "MSTORE"
    },
    "10202": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "10207": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10209": {
      "op": "SHL"
    },
    "10210": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10212": {
      "op": "DUP3"
    },
    "10213": {
      "op": "ADD"
    },
    "10214": {
      "op": "MSTORE"
    },
    "10215": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10217": {
      "op": "ADD"
    },
    "10218": {
      "fn": "ERC721._transfer",
      "offset": [
        34479,
        34544
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "10221": {
      "op": "JUMP"
    },
    "10222": {
      "fn": "ERC721._transfer",
      "offset": [
        34479,
        34544
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10223": {
      "fn": "ERC721._transfer",
      "offset": [
        34555,
        34594
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 77,
      "value": "0x27F9"
    },
    "10226": {
      "fn": "ERC721._transfer",
      "offset": [
        34576,
        34580
      ],
      "op": "DUP4",
      "path": "52"
    },
    "10227": {
      "fn": "ERC721._transfer",
      "offset": [
        34582,
        34584
      ],
      "op": "DUP4",
      "path": "52"
    },
    "10228": {
      "fn": "ERC721._transfer",
      "offset": [
        34586,
        34593
      ],
      "op": "DUP4",
      "path": "52"
    },
    "10229": {
      "fn": "ERC721._transfer",
      "offset": [
        34555,
        34575
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2B00"
    },
    "10232": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        34555,
        34594
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10233": {
      "fn": "ERC721._transfer",
      "offset": [
        34555,
        34594
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10234": {
      "fn": "ERC721._transfer",
      "offset": [
        34656,
        34685
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 78,
      "value": "0x2804"
    },
    "10237": {
      "fn": "ERC721._transfer",
      "offset": [
        34673,
        34674
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "10239": {
      "fn": "ERC721._transfer",
      "offset": [
        34677,
        34684
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10240": {
      "fn": "ERC721._transfer",
      "offset": [
        34656,
        34664
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x25AC"
    },
    "10243": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        34656,
        34685
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10244": {
      "fn": "ERC721._transfer",
      "offset": [
        34656,
        34685
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10251": {
      "op": "SHL"
    },
    "10252": {
      "op": "SUB"
    },
    "10253": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34711
      ],
      "op": "DUP4",
      "path": "52",
      "statement": 79
    },
    "10254": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34711
      ],
      "op": "AND",
      "path": "52"
    },
    "10255": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34711
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "10257": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34711
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10258": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34711
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10259": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34711
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10260": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34705
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x3"
    },
    "10262": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34711
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "10264": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34711
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10265": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34711
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "10267": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34711
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10268": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34711
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "10269": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34716
      ],
      "op": "DUP1",
      "path": "52"
    },
    "10270": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34716
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "10271": {
      "fn": "ERC721._transfer",
      "offset": [
        34715,
        34716
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1"
    },
    "10273": {
      "fn": "ERC721._transfer",
      "offset": [
        34715,
        34716
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "10274": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34711
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10275": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34716
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x282D"
    },
    "10278": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34716
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10279": {
      "fn": "ERC721._transfer",
      "offset": [
        34715,
        34716
      ],
      "op": "DUP5",
      "path": "52"
    },
    "10280": {
      "fn": "ERC721._transfer",
      "offset": [
        34715,
        34716
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10281": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34716
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3554"
    },
    "10284": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        34696,
        34716
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10285": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34716
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10286": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34716
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10287": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34716
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "10288": {
      "fn": "ERC721._transfer",
      "offset": [
        34696,
        34716
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "10289": {
      "op": "POP"
    },
    "10290": {
      "op": "POP"
    },
    "10291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10297": {
      "op": "SHL"
    },
    "10298": {
      "op": "SUB"
    },
    "10299": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34739
      ],
      "op": "DUP3",
      "path": "52",
      "statement": 80
    },
    "10300": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34739
      ],
      "op": "AND",
      "path": "52"
    },
    "10301": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34739
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "10303": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34739
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10304": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34739
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10305": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34739
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10306": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34735
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x3"
    },
    "10308": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34739
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "10310": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34739
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10311": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34739
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "10313": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34739
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10314": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34739
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "10315": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34744
      ],
      "op": "DUP1",
      "path": "52"
    },
    "10316": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34744
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "10317": {
      "fn": "ERC721._transfer",
      "offset": [
        34743,
        34744
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1"
    },
    "10319": {
      "fn": "ERC721._transfer",
      "offset": [
        34743,
        34744
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "10320": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34739
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10321": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34744
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x285B"
    },
    "10324": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34744
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10325": {
      "fn": "ERC721._transfer",
      "offset": [
        34743,
        34744
      ],
      "op": "DUP5",
      "path": "52"
    },
    "10326": {
      "fn": "ERC721._transfer",
      "offset": [
        34743,
        34744
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10327": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34744
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3465"
    },
    "10330": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        34726,
        34744
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10331": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34744
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10332": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34744
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10333": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34744
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "10334": {
      "fn": "ERC721._transfer",
      "offset": [
        34726,
        34744
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "10335": {
      "op": "POP"
    },
    "10336": {
      "op": "POP"
    },
    "10337": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34770
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 81,
      "value": "0x0"
    },
    "10339": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34770
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10340": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34770
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10341": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34770
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10342": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34761
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x2"
    },
    "10344": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34770
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "10346": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34770
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10347": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34770
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "10349": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34770
      ],
      "op": "DUP1",
      "path": "52"
    },
    "10350": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34770
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10351": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34770
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "10352": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34775
      ],
      "op": "DUP1",
      "path": "52"
    },
    "10353": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34775
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "10354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10360": {
      "op": "SHL"
    },
    "10361": {
      "op": "SUB"
    },
    "10362": {
      "op": "NOT"
    },
    "10363": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34775
      ],
      "op": "AND",
      "path": "52"
    },
    "10364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10370": {
      "op": "SHL"
    },
    "10371": {
      "op": "SUB"
    },
    "10372": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34775
      ],
      "op": "DUP7",
      "path": "52"
    },
    "10373": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34775
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10374": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34775
      ],
      "op": "AND",
      "path": "52"
    },
    "10375": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34775
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "10376": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34775
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10377": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34775
      ],
      "op": "OR",
      "path": "52"
    },
    "10378": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34775
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10379": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34775
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "10380": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34775
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "10381": {
      "fn": "ERC721._transfer",
      "offset": [
        34791,
        34818
      ],
      "op": "SWAP2",
      "path": "52",
      "statement": 82
    },
    "10382": {
      "fn": "ERC721._transfer",
      "offset": [
        34791,
        34818
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "10383": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34770
      ],
      "op": "DUP5",
      "path": "52"
    },
    "10384": {
      "fn": "ERC721._transfer",
      "offset": [
        34754,
        34770
      ],
      "op": "SWAP4",
      "path": "52"
    },
    "10385": {
      "fn": "ERC721._transfer",
      "offset": [
        34791,
        34818
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "10386": {
      "fn": "ERC721._transfer",
      "offset": [
        34791,
        34818
      ],
      "op": "DUP8",
      "path": "52"
    },
    "10387": {
      "fn": "ERC721._transfer",
      "offset": [
        34791,
        34818
      ],
      "op": "AND",
      "path": "52"
    },
    "10388": {
      "fn": "ERC721._transfer",
      "offset": [
        34791,
        34818
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "10389": {
      "fn": "ERC721._transfer",
      "offset": [
        34791,
        34818
      ],
      "op": "PUSH32",
      "path": "52",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "10422": {
      "fn": "ERC721._transfer",
      "offset": [
        34791,
        34818
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "10423": {
      "fn": "ERC721._transfer",
      "offset": [
        34791,
        34818
      ],
      "op": "LOG4",
      "path": "52"
    },
    "10424": {
      "fn": "ERC721._transfer",
      "offset": [
        34265,
        34825
      ],
      "op": "POP",
      "path": "52"
    },
    "10425": {
      "fn": "ERC721._transfer",
      "offset": [
        34265,
        34825
      ],
      "op": "POP",
      "path": "52"
    },
    "10426": {
      "fn": "ERC721._transfer",
      "offset": [
        34265,
        34825
      ],
      "op": "POP",
      "path": "52"
    },
    "10427": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        34265,
        34825
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10428": {
      "fn": "Ownable._setOwner",
      "offset": [
        11171,
        11340
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10429": {
      "fn": "Ownable._setOwner",
      "offset": [
        11245,
        11251
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xA"
    },
    "10431": {
      "fn": "Ownable._setOwner",
      "offset": [
        11245,
        11251
      ],
      "op": "DUP1",
      "path": "52"
    },
    "10432": {
      "fn": "Ownable._setOwner",
      "offset": [
        11245,
        11251
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "10433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10439": {
      "op": "SHL"
    },
    "10440": {
      "op": "SUB"
    },
    "10441": {
      "fn": "Ownable._setOwner",
      "offset": [
        11261,
        11278
      ],
      "op": "DUP4",
      "path": "52",
      "statement": 83
    },
    "10442": {
      "fn": "Ownable._setOwner",
      "offset": [
        11261,
        11278
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10443": {
      "fn": "Ownable._setOwner",
      "offset": [
        11261,
        11278
      ],
      "op": "AND",
      "path": "52"
    },
    "10444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10450": {
      "op": "SHL"
    },
    "10451": {
      "op": "SUB"
    },
    "10452": {
      "op": "NOT"
    },
    "10453": {
      "fn": "Ownable._setOwner",
      "offset": [
        11261,
        11278
      ],
      "op": "DUP4",
      "path": "52"
    },
    "10454": {
      "fn": "Ownable._setOwner",
      "offset": [
        11261,
        11278
      ],
      "op": "AND",
      "path": "52"
    },
    "10455": {
      "fn": "Ownable._setOwner",
      "offset": [
        11261,
        11278
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10456": {
      "fn": "Ownable._setOwner",
      "offset": [
        11261,
        11278
      ],
      "op": "OR",
      "path": "52"
    },
    "10457": {
      "fn": "Ownable._setOwner",
      "offset": [
        11261,
        11278
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10458": {
      "fn": "Ownable._setOwner",
      "offset": [
        11261,
        11278
      ],
      "op": "SWAP4",
      "path": "52"
    },
    "10459": {
      "fn": "Ownable._setOwner",
      "offset": [
        11261,
        11278
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "10460": {
      "fn": "Ownable._setOwner",
      "offset": [
        11293,
        11333
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 84,
      "value": "0x40"
    },
    "10462": {
      "fn": "Ownable._setOwner",
      "offset": [
        11293,
        11333
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "10463": {
      "fn": "Ownable._setOwner",
      "offset": [
        11245,
        11251
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "10464": {
      "fn": "Ownable._setOwner",
      "offset": [
        11245,
        11251
      ],
      "op": "AND",
      "path": "52"
    },
    "10465": {
      "fn": "Ownable._setOwner",
      "offset": [
        11245,
        11251
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "10466": {
      "fn": "Ownable._setOwner",
      "offset": [
        11261,
        11278
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10467": {
      "fn": "Ownable._setOwner",
      "offset": [
        11245,
        11251
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10468": {
      "fn": "Ownable._setOwner",
      "offset": [
        11245,
        11251
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10469": {
      "fn": "Ownable._setOwner",
      "offset": [
        11293,
        11333
      ],
      "op": "PUSH32",
      "path": "52",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "10502": {
      "fn": "Ownable._setOwner",
      "offset": [
        11293,
        11333
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10503": {
      "fn": "Ownable._setOwner",
      "offset": [
        11226,
        11242
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "10505": {
      "fn": "Ownable._setOwner",
      "offset": [
        11226,
        11242
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10506": {
      "fn": "Ownable._setOwner",
      "offset": [
        11293,
        11333
      ],
      "op": "LOG3",
      "path": "52"
    },
    "10507": {
      "fn": "Ownable._setOwner",
      "offset": [
        11216,
        11340
      ],
      "op": "POP",
      "path": "52"
    },
    "10508": {
      "fn": "Ownable._setOwner",
      "offset": [
        11171,
        11340
      ],
      "op": "POP",
      "path": "52"
    },
    "10509": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        11171,
        11340
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10510": {
      "fn": "ERC721._safeMint",
      "offset": [
        32042,
        32150
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10511": {
      "fn": "ERC721._safeMint",
      "offset": [
        32117,
        32143
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 85,
      "value": "0x2928"
    },
    "10514": {
      "fn": "ERC721._safeMint",
      "offset": [
        32127,
        32129
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10515": {
      "fn": "ERC721._safeMint",
      "offset": [
        32131,
        32138
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10516": {
      "fn": "ERC721._safeMint",
      "offset": [
        32117,
        32143
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "10518": {
      "fn": "ERC721._safeMint",
      "offset": [
        32117,
        32143
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "10519": {
      "fn": "ERC721._safeMint",
      "offset": [
        32117,
        32143
      ],
      "op": "DUP1",
      "path": "52"
    },
    "10520": {
      "fn": "ERC721._safeMint",
      "offset": [
        32117,
        32143
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "10522": {
      "fn": "ERC721._safeMint",
      "offset": [
        32117,
        32143
      ],
      "op": "ADD",
      "path": "52"
    },
    "10523": {
      "fn": "ERC721._safeMint",
      "offset": [
        32117,
        32143
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "10525": {
      "fn": "ERC721._safeMint",
      "offset": [
        32117,
        32143
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10526": {
      "fn": "ERC721._safeMint",
      "offset": [
        32117,
        32143
      ],
      "op": "DUP1",
      "path": "52"
    },
    "10527": {
      "fn": "ERC721._safeMint",
      "offset": [
        32117,
        32143
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "10529": {
      "fn": "ERC721._safeMint",
      "offset": [
        32117,
        32143
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10530": {
      "fn": "ERC721._safeMint",
      "offset": [
        32117,
        32143
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10531": {
      "fn": "ERC721._safeMint",
      "offset": [
        32117,
        32143
      ],
      "op": "POP",
      "path": "52"
    },
    "10532": {
      "fn": "ERC721._safeMint",
      "offset": [
        32117,
        32126
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2B89"
    },
    "10535": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        32117,
        32143
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10536": {
      "fn": "ERC721._safeMint",
      "offset": [
        32117,
        32143
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10537": {
      "fn": "ERC721._safeMint",
      "offset": [
        32042,
        32150
      ],
      "op": "POP",
      "path": "52"
    },
    "10538": {
      "fn": "ERC721._safeMint",
      "offset": [
        32042,
        32150
      ],
      "op": "POP",
      "path": "52"
    },
    "10539": {
      "fn": "ERC721._safeMint",
      "jump": "o",
      "offset": [
        32042,
        32150
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10540": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50102,
        50291
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10541": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50176,
        50188
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "10543": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50202
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10550": {
      "op": "SHL"
    },
    "10551": {
      "op": "SUB"
    },
    "10552": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50207
      ],
      "op": "AND",
      "path": "52"
    },
    "10553": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50216,
        50223
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10554": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "10556": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "10557": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "10559": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "10561": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "10562": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "DUP1",
      "path": "52"
    },
    "10563": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "DUP4",
      "path": "52"
    },
    "10564": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "SUB",
      "path": "52"
    },
    "10565": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10566": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "DUP6",
      "path": "52"
    },
    "10567": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "DUP8",
      "path": "52"
    },
    "10568": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "GAS",
      "path": "52"
    },
    "10569": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "CALL",
      "path": "52"
    },
    "10570": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "10571": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "POP",
      "path": "52"
    },
    "10572": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "POP",
      "path": "52"
    },
    "10573": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "POP",
      "path": "52"
    },
    "10574": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "RETURNDATASIZE",
      "path": "52"
    },
    "10575": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "DUP1",
      "path": "52"
    },
    "10576": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "10578": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10579": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "EQ",
      "path": "52"
    },
    "10580": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2979"
    },
    "10583": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "10584": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "10586": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "10587": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "10588": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "POP",
      "path": "52"
    },
    "10589": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1F"
    },
    "10591": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "NOT",
      "path": "52"
    },
    "10592": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x3F"
    },
    "10594": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "RETURNDATASIZE",
      "path": "52"
    },
    "10595": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "ADD",
      "path": "52"
    },
    "10596": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "AND",
      "path": "52"
    },
    "10597": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10598": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "ADD",
      "path": "52"
    },
    "10599": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "10601": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10602": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "RETURNDATASIZE",
      "path": "52"
    },
    "10603": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10604": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10605": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "RETURNDATASIZE",
      "path": "52"
    },
    "10606": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "10608": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "10610": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "DUP5",
      "path": "52"
    },
    "10611": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "ADD",
      "path": "52"
    },
    "10612": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "RETURNDATACOPY",
      "path": "52"
    },
    "10613": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x297E"
    },
    "10616": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10617": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10618": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x60"
    },
    "10620": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "10621": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "POP",
      "path": "52"
    },
    "10622": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10623": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50194,
        50229
      ],
      "op": "POP",
      "path": "52"
    },
    "10624": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50175,
        50229
      ],
      "op": "POP",
      "path": "52"
    },
    "10625": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50175,
        50229
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10626": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50175,
        50229
      ],
      "op": "POP",
      "path": "52"
    },
    "10627": {
      "branch": 132,
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50247,
        50254
      ],
      "op": "DUP1",
      "path": "52",
      "statement": 86
    },
    "10628": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50239,
        50284
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0xA88"
    },
    "10631": {
      "branch": 132,
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50239,
        50284
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "10632": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50239,
        50284
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "10634": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50239,
        50284
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "10635": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10639": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10641": {
      "op": "SHL"
    },
    "10642": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50239,
        50284
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10643": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50239,
        50284
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10644": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10646": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50239,
        50284
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "10648": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50239,
        50284
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10649": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50239,
        50284
      ],
      "op": "ADD",
      "path": "52"
    },
    "10650": {
      "op": "MSTORE"
    },
    "10651": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "10653": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10655": {
      "op": "DUP3"
    },
    "10656": {
      "op": "ADD"
    },
    "10657": {
      "op": "MSTORE"
    },
    "10658": {
      "op": "PUSH32",
      "value": "0x4661696C656420746F2077696474686472617720457468657200000000000000"
    },
    "10691": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10693": {
      "op": "DUP3"
    },
    "10694": {
      "op": "ADD"
    },
    "10695": {
      "op": "MSTORE"
    },
    "10696": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10698": {
      "op": "ADD"
    },
    "10699": {
      "fn": "NovaNFT._widthdraw",
      "offset": [
        50239,
        50284
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "10702": {
      "op": "JUMP"
    },
    "10703": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30475,
        30782
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10704": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30626,
        30654
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 87,
      "value": "0x29DA"
    },
    "10707": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30636,
        30640
      ],
      "op": "DUP5",
      "path": "52"
    },
    "10708": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30642,
        30644
      ],
      "op": "DUP5",
      "path": "52"
    },
    "10709": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30646,
        30653
      ],
      "op": "DUP5",
      "path": "52"
    },
    "10710": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30626,
        30635
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2711"
    },
    "10713": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        30626,
        30654
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10714": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30626,
        30654
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10715": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30672,
        30720
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 88,
      "value": "0x29E6"
    },
    "10718": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30695,
        30699
      ],
      "op": "DUP5",
      "path": "52"
    },
    "10719": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30701,
        30703
      ],
      "op": "DUP5",
      "path": "52"
    },
    "10720": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30705,
        30712
      ],
      "op": "DUP5",
      "path": "52"
    },
    "10721": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30714,
        30719
      ],
      "op": "DUP5",
      "path": "52"
    },
    "10722": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30672,
        30694
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2BBC"
    },
    "10725": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        30672,
        30720
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10726": {
      "branch": 133,
      "fn": "ERC721._safeTransfer",
      "offset": [
        30672,
        30720
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10727": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30664,
        30775
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x205B"
    },
    "10730": {
      "branch": 133,
      "fn": "ERC721._safeTransfer",
      "offset": [
        30664,
        30775
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "10731": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30664,
        30775
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "10733": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30664,
        30775
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "10734": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10738": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10740": {
      "op": "SHL"
    },
    "10741": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30664,
        30775
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10742": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30664,
        30775
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10743": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30664,
        30775
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "10745": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30664,
        30775
      ],
      "op": "ADD",
      "path": "52"
    },
    "10746": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30664,
        30775
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "10749": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30664,
        30775
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10750": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30664,
        30775
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x356B"
    },
    "10753": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        30664,
        30775
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10754": {
      "fn": "Strings.toString",
      "offset": [
        13533,
        14236
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10755": {
      "fn": "Strings.toString",
      "offset": [
        13589,
        13602
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x60"
    },
    "10757": {
      "branch": 134,
      "fn": "Strings.toString",
      "offset": [
        13806,
        13816
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10758": {
      "fn": "Strings.toString",
      "offset": [
        13802,
        13853
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2A26"
    },
    "10761": {
      "branch": 134,
      "fn": "Strings.toString",
      "offset": [
        13802,
        13853
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "10762": {
      "op": "POP"
    },
    "10763": {
      "op": "POP"
    },
    "10764": {
      "fn": "Strings.toString",
      "offset": [
        13832,
        13842
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 89,
      "value": "0x40"
    },
    "10766": {
      "fn": "Strings.toString",
      "offset": [
        13832,
        13842
      ],
      "op": "DUP1",
      "path": "52"
    },
    "10767": {
      "fn": "Strings.toString",
      "offset": [
        13832,
        13842
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "10768": {
      "fn": "Strings.toString",
      "offset": [
        13832,
        13842
      ],
      "op": "DUP1",
      "path": "52"
    },
    "10769": {
      "fn": "Strings.toString",
      "offset": [
        13832,
        13842
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10770": {
      "fn": "Strings.toString",
      "offset": [
        13832,
        13842
      ],
      "op": "ADD",
      "path": "52"
    },
    "10771": {
      "fn": "Strings.toString",
      "offset": [
        13832,
        13842
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10772": {
      "fn": "Strings.toString",
      "offset": [
        13832,
        13842
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "10773": {
      "fn": "Strings.toString",
      "offset": [
        13832,
        13842
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10774": {
      "fn": "Strings.toString",
      "offset": [
        13832,
        13842
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1"
    },
    "10776": {
      "fn": "Strings.toString",
      "offset": [
        13832,
        13842
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10777": {
      "fn": "Strings.toString",
      "offset": [
        13832,
        13842
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10778": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10780": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "10782": {
      "op": "SHL"
    },
    "10783": {
      "fn": "Strings.toString",
      "offset": [
        13832,
        13842
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "10785": {
      "fn": "Strings.toString",
      "offset": [
        13832,
        13842
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10786": {
      "fn": "Strings.toString",
      "offset": [
        13832,
        13842
      ],
      "op": "ADD",
      "path": "52"
    },
    "10787": {
      "fn": "Strings.toString",
      "offset": [
        13832,
        13842
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10788": {
      "fn": "Strings.toString",
      "offset": [
        13832,
        13842
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10789": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        13533,
        14236
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10790": {
      "fn": "Strings.toString",
      "offset": [
        13802,
        13853
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10791": {
      "fn": "Strings.toString",
      "offset": [
        13877,
        13882
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10792": {
      "fn": "Strings.toString",
      "offset": [
        13862,
        13874
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "10794": {
      "fn": "Strings.toString",
      "offset": [
        13916,
        13991
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10795": {
      "fn": "Strings.toString",
      "offset": [
        13923,
        13932
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10796": {
      "fn": "Strings.toString",
      "offset": [
        13923,
        13932
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "10797": {
      "fn": "Strings.toString",
      "offset": [
        13916,
        13991
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2A50"
    },
    "10800": {
      "fn": "Strings.toString",
      "offset": [
        13916,
        13991
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "10801": {
      "fn": "Strings.toString",
      "offset": [
        13948,
        13956
      ],
      "op": "DUP1",
      "path": "52",
      "statement": 90
    },
    "10802": {
      "fn": "Strings.toString",
      "offset": [
        13948,
        13956
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2A3A"
    },
    "10805": {
      "fn": "Strings.toString",
      "offset": [
        13948,
        13956
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10806": {
      "fn": "Strings.toString",
      "offset": [
        13948,
        13956
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x344A"
    },
    "10809": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        13948,
        13956
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10810": {
      "fn": "Strings.toString",
      "offset": [
        13948,
        13956
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10811": {
      "fn": "Strings.toString",
      "offset": [
        13948,
        13956
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "10812": {
      "op": "POP"
    },
    "10813": {
      "fn": "Strings.toString",
      "offset": [
        13970,
        13980
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 91,
      "value": "0x2A49"
    },
    "10816": {
      "fn": "Strings.toString",
      "offset": [
        13970,
        13980
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10817": {
      "op": "POP"
    },
    "10818": {
      "fn": "Strings.toString",
      "offset": [
        13978,
        13980
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xA"
    },
    "10820": {
      "fn": "Strings.toString",
      "offset": [
        13970,
        13980
      ],
      "op": "DUP4",
      "path": "52"
    },
    "10821": {
      "fn": "Strings.toString",
      "offset": [
        13970,
        13980
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x35D3"
    },
    "10824": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        13970,
        13980
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10825": {
      "fn": "Strings.toString",
      "offset": [
        13970,
        13980
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10826": {
      "fn": "Strings.toString",
      "offset": [
        13970,
        13980
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "10827": {
      "fn": "Strings.toString",
      "offset": [
        13970,
        13980
      ],
      "op": "POP",
      "path": "52"
    },
    "10828": {
      "fn": "Strings.toString",
      "offset": [
        13916,
        13991
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2A2A"
    },
    "10831": {
      "fn": "Strings.toString",
      "offset": [
        13916,
        13991
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10832": {
      "fn": "Strings.toString",
      "offset": [
        13916,
        13991
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10833": {
      "fn": "Strings.toString",
      "offset": [
        14000,
        14019
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "10835": {
      "fn": "Strings.toString",
      "offset": [
        14032,
        14038
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10836": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "PUSH8",
      "path": "52",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10845": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10846": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "GT",
      "path": "52"
    },
    "10847": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "10848": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2A6B"
    },
    "10851": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "10852": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2A6B"
    },
    "10855": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2FFE"
    },
    "10858": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        14022,
        14039
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10859": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10860": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "10862": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "10863": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10864": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "DUP1",
      "path": "52"
    },
    "10865": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10866": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10867": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "DUP1",
      "path": "52"
    },
    "10868": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1F"
    },
    "10870": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "ADD",
      "path": "52"
    },
    "10871": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1F"
    },
    "10873": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "NOT",
      "path": "52"
    },
    "10874": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "AND",
      "path": "52"
    },
    "10875": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "10877": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "ADD",
      "path": "52"
    },
    "10878": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10879": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "ADD",
      "path": "52"
    },
    "10880": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "10882": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "10883": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "DUP1",
      "path": "52"
    },
    "10884": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "10885": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2A95"
    },
    "10888": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "10889": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "10891": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "DUP3",
      "path": "52"
    },
    "10892": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "ADD",
      "path": "52"
    },
    "10893": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10894": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "DUP1",
      "path": "52"
    },
    "10895": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "CALLDATASIZE",
      "path": "52"
    },
    "10896": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "DUP4",
      "path": "52"
    },
    "10897": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "CALLDATACOPY",
      "path": "52"
    },
    "10898": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "ADD",
      "path": "52"
    },
    "10899": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10900": {
      "op": "POP"
    },
    "10901": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10902": {
      "fn": "Strings.toString",
      "offset": [
        14022,
        14039
      ],
      "op": "POP",
      "path": "52"
    },
    "10903": {
      "fn": "Strings.toString",
      "offset": [
        14000,
        14039
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10904": {
      "fn": "Strings.toString",
      "offset": [
        14000,
        14039
      ],
      "op": "POP",
      "path": "52"
    },
    "10905": {
      "fn": "Strings.toString",
      "offset": [
        14049,
        14199
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10906": {
      "fn": "Strings.toString",
      "offset": [
        14056,
        14066
      ],
      "op": "DUP5",
      "path": "52"
    },
    "10907": {
      "fn": "Strings.toString",
      "offset": [
        14056,
        14066
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "10908": {
      "fn": "Strings.toString",
      "offset": [
        14049,
        14199
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2709"
    },
    "10911": {
      "fn": "Strings.toString",
      "offset": [
        14049,
        14199
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "10912": {
      "fn": "Strings.toString",
      "offset": [
        14082,
        14093
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 92,
      "value": "0x2AAA"
    },
    "10915": {
      "fn": "Strings.toString",
      "offset": [
        14092,
        14093
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1"
    },
    "10917": {
      "fn": "Strings.toString",
      "offset": [
        14082,
        14093
      ],
      "op": "DUP4",
      "path": "52"
    },
    "10918": {
      "fn": "Strings.toString",
      "offset": [
        14082,
        14093
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3554"
    },
    "10921": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        14082,
        14093
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10922": {
      "fn": "Strings.toString",
      "offset": [
        14082,
        14093
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10923": {
      "fn": "Strings.toString",
      "offset": [
        14082,
        14093
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "10924": {
      "op": "POP"
    },
    "10925": {
      "fn": "Strings.toString",
      "offset": [
        14150,
        14160
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 93,
      "value": "0x2AB7"
    },
    "10928": {
      "fn": "Strings.toString",
      "offset": [
        14158,
        14160
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xA"
    },
    "10930": {
      "fn": "Strings.toString",
      "offset": [
        14150,
        14155
      ],
      "op": "DUP7",
      "path": "52"
    },
    "10931": {
      "fn": "Strings.toString",
      "offset": [
        14150,
        14160
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x35E7"
    },
    "10934": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        14150,
        14160
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10935": {
      "fn": "Strings.toString",
      "offset": [
        14150,
        14160
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10936": {
      "fn": "Strings.toString",
      "offset": [
        14137,
        14161
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2AC2"
    },
    "10939": {
      "fn": "Strings.toString",
      "offset": [
        14137,
        14161
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10940": {
      "fn": "Strings.toString",
      "offset": [
        14137,
        14139
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x30"
    },
    "10942": {
      "fn": "Strings.toString",
      "offset": [
        14137,
        14161
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3465"
    },
    "10945": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        14137,
        14161
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10946": {
      "fn": "Strings.toString",
      "offset": [
        14137,
        14161
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10947": {
      "fn": "Strings.toString",
      "offset": [
        14124,
        14163
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xF8"
    },
    "10949": {
      "fn": "Strings.toString",
      "offset": [
        14124,
        14163
      ],
      "op": "SHL",
      "path": "52"
    },
    "10950": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14113
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10951": {
      "fn": "Strings.toString",
      "offset": [
        14114,
        14120
      ],
      "op": "DUP4",
      "path": "52"
    },
    "10952": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14121
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10953": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14121
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "10954": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14121
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10955": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14121
      ],
      "op": "LT",
      "path": "52"
    },
    "10956": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14121
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2AD7"
    },
    "10959": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14121
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "10960": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14121
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2AD7"
    },
    "10963": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14121
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x33CE"
    },
    "10966": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        14107,
        14121
      ],
      "op": "JUMP",
      "path": "52"
    },
    "10967": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14121
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "10968": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14121
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "10970": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14121
      ],
      "op": "ADD",
      "path": "52"
    },
    "10971": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14121
      ],
      "op": "ADD",
      "path": "52"
    },
    "10972": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14163
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10977": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10979": {
      "op": "SHL"
    },
    "10980": {
      "op": "SUB"
    },
    "10981": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14163
      ],
      "op": "NOT",
      "path": "52"
    },
    "10982": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14163
      ],
      "op": "AND",
      "path": "52"
    },
    "10983": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14163
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10984": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14163
      ],
      "op": "DUP2",
      "path": "52"
    },
    "10985": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14163
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "10987": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14163
      ],
      "op": "BYTE",
      "path": "52"
    },
    "10988": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14163
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "10989": {
      "fn": "Strings.toString",
      "offset": [
        14107,
        14163
      ],
      "op": "MSTORE8",
      "path": "52"
    },
    "10990": {
      "op": "POP"
    },
    "10991": {
      "fn": "Strings.toString",
      "offset": [
        14177,
        14188
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 94,
      "value": "0x2AF9"
    },
    "10994": {
      "fn": "Strings.toString",
      "offset": [
        14186,
        14188
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xA"
    },
    "10996": {
      "fn": "Strings.toString",
      "offset": [
        14177,
        14188
      ],
      "op": "DUP7",
      "path": "52"
    },
    "10997": {
      "fn": "Strings.toString",
      "offset": [
        14177,
        14188
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x35D3"
    },
    "11000": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        14177,
        14188
      ],
      "op": "JUMP",
      "path": "52"
    },
    "11001": {
      "fn": "Strings.toString",
      "offset": [
        14177,
        14188
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11002": {
      "fn": "Strings.toString",
      "offset": [
        14177,
        14188
      ],
      "op": "SWAP5",
      "path": "52"
    },
    "11003": {
      "fn": "Strings.toString",
      "offset": [
        14177,
        14188
      ],
      "op": "POP",
      "path": "52"
    },
    "11004": {
      "fn": "Strings.toString",
      "offset": [
        14049,
        14199
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2A99"
    },
    "11007": {
      "fn": "Strings.toString",
      "offset": [
        14049,
        14199
      ],
      "op": "JUMP",
      "path": "52"
    },
    "11008": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49043,
        49500
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11015": {
      "op": "SHL"
    },
    "11016": {
      "op": "SUB"
    },
    "11017": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49264,
        49282
      ],
      "op": "DUP4",
      "path": "52"
    },
    "11018": {
      "branch": 135,
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49264,
        49282
      ],
      "op": "AND",
      "path": "52"
    },
    "11019": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49260,
        49494
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2B13"
    },
    "11022": {
      "branch": 135,
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49260,
        49494
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "11023": {
      "fn": "ERC721.approve",
      "offset": [
        27396,
        27727
      ],
      "op": "POP",
      "path": "52"
    },
    "11024": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "POP",
      "path": "52"
    },
    "11025": {
      "fn": "ERC721.approve",
      "offset": [
        27326,
        27727
      ],
      "op": "POP",
      "path": "52"
    },
    "11026": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        27326,
        27727
      ],
      "op": "JUMP",
      "path": "52"
    },
    "11027": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49260,
        49494
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11028": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49364,
        49376
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 95,
      "value": "0x5A"
    },
    "11030": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49364,
        49376
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "11031": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49364,
        49376
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0xFF"
    },
    "11033": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49364,
        49376
      ],
      "op": "AND",
      "path": "52"
    },
    "11034": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49364,
        49384
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "11035": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49364,
        49384
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "11036": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49364,
        49376
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1"
    },
    "11038": {
      "branch": 136,
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49364,
        49384
      ],
      "op": "EQ",
      "path": "52"
    },
    "11039": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49356,
        49443
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0xA88"
    },
    "11042": {
      "branch": 136,
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49356,
        49443
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "11043": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49356,
        49443
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "11045": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49356,
        49443
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "11046": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11050": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11052": {
      "op": "SHL"
    },
    "11053": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49356,
        49443
      ],
      "op": "DUP2",
      "path": "52"
    },
    "11054": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49356,
        49443
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "11055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11057": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49356,
        49443
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "11059": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49356,
        49443
      ],
      "op": "DUP3",
      "path": "52"
    },
    "11060": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49356,
        49443
      ],
      "op": "ADD",
      "path": "52"
    },
    "11061": {
      "op": "MSTORE"
    },
    "11062": {
      "op": "PUSH1",
      "value": "0x36"
    },
    "11064": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11066": {
      "op": "DUP3"
    },
    "11067": {
      "op": "ADD"
    },
    "11068": {
      "op": "MSTORE"
    },
    "11069": {
      "op": "PUSH32",
      "value": "0x536F72727920664E6F766120436C61696D696E6720686173206E6F7420796574"
    },
    "11102": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11104": {
      "op": "DUP3"
    },
    "11105": {
      "op": "ADD"
    },
    "11106": {
      "op": "MSTORE"
    },
    "11107": {
      "op": "PUSH22",
      "value": "0x8195B991959081D1BC81D1C985B9CD9995C88139195"
    },
    "11130": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "11132": {
      "op": "SHL"
    },
    "11133": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11135": {
      "op": "DUP3"
    },
    "11136": {
      "op": "ADD"
    },
    "11137": {
      "op": "MSTORE"
    },
    "11138": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11140": {
      "op": "ADD"
    },
    "11141": {
      "fn": "NovaNFT._beforeTokenTransfer",
      "offset": [
        49356,
        49443
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "11144": {
      "op": "JUMP"
    },
    "11145": {
      "fn": "ERC721._safeMint",
      "offset": [
        32371,
        32682
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11146": {
      "fn": "ERC721._safeMint",
      "offset": [
        32496,
        32514
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 96,
      "value": "0x2B93"
    },
    "11149": {
      "fn": "ERC721._safeMint",
      "offset": [
        32502,
        32504
      ],
      "op": "DUP4",
      "path": "52"
    },
    "11150": {
      "fn": "ERC721._safeMint",
      "offset": [
        32506,
        32513
      ],
      "op": "DUP4",
      "path": "52"
    },
    "11151": {
      "fn": "ERC721._safeMint",
      "offset": [
        32496,
        32501
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2CBA"
    },
    "11154": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        32496,
        32514
      ],
      "op": "JUMP",
      "path": "52"
    },
    "11155": {
      "fn": "ERC721._safeMint",
      "offset": [
        32496,
        32514
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11156": {
      "fn": "ERC721._safeMint",
      "offset": [
        32545,
        32599
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 97,
      "value": "0x2BA0"
    },
    "11159": {
      "fn": "ERC721._safeMint",
      "offset": [
        32576,
        32577
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "11161": {
      "fn": "ERC721._safeMint",
      "offset": [
        32580,
        32582
      ],
      "op": "DUP5",
      "path": "52"
    },
    "11162": {
      "fn": "ERC721._safeMint",
      "offset": [
        32584,
        32591
      ],
      "op": "DUP5",
      "path": "52"
    },
    "11163": {
      "fn": "ERC721._safeMint",
      "offset": [
        32593,
        32598
      ],
      "op": "DUP5",
      "path": "52"
    },
    "11164": {
      "fn": "ERC721._safeMint",
      "offset": [
        32545,
        32567
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2BBC"
    },
    "11167": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        32545,
        32599
      ],
      "op": "JUMP",
      "path": "52"
    },
    "11168": {
      "branch": 137,
      "fn": "ERC721._safeMint",
      "offset": [
        32545,
        32599
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11169": {
      "fn": "ERC721._safeMint",
      "offset": [
        32524,
        32675
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0xA88"
    },
    "11172": {
      "branch": 137,
      "fn": "ERC721._safeMint",
      "offset": [
        32524,
        32675
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "11173": {
      "fn": "ERC721._safeMint",
      "offset": [
        32524,
        32675
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "11175": {
      "fn": "ERC721._safeMint",
      "offset": [
        32524,
        32675
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "11176": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11180": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11182": {
      "op": "SHL"
    },
    "11183": {
      "fn": "ERC721._safeMint",
      "offset": [
        32524,
        32675
      ],
      "op": "DUP2",
      "path": "52"
    },
    "11184": {
      "fn": "ERC721._safeMint",
      "offset": [
        32524,
        32675
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "11185": {
      "fn": "ERC721._safeMint",
      "offset": [
        32524,
        32675
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "11187": {
      "fn": "ERC721._safeMint",
      "offset": [
        32524,
        32675
      ],
      "op": "ADD",
      "path": "52"
    },
    "11188": {
      "fn": "ERC721._safeMint",
      "offset": [
        32524,
        32675
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "11191": {
      "fn": "ERC721._safeMint",
      "offset": [
        32524,
        32675
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11192": {
      "fn": "ERC721._safeMint",
      "offset": [
        32524,
        32675
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x356B"
    },
    "11195": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        32524,
        32675
      ],
      "op": "JUMP",
      "path": "52"
    },
    "11196": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35660,
        36438
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35810,
        35814
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "11199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11205": {
      "op": "SHL"
    },
    "11206": {
      "op": "SUB"
    },
    "11207": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35830,
        35843
      ],
      "op": "DUP5",
      "path": "52"
    },
    "11208": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35830,
        35843
      ],
      "op": "AND",
      "path": "52"
    },
    "11209": {
      "fn": "Address.isContract",
      "offset": [
        16346,
        16366
      ],
      "op": "EXTCODESIZE",
      "path": "52"
    },
    "11210": {
      "fn": "Address.isContract",
      "offset": [
        16392,
        16400
      ],
      "op": "ISZERO",
      "path": "52",
      "statement": 98
    },
    "11211": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35826,
        36432
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2CAF"
    },
    "11214": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35826,
        36432
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "11215": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "11217": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "11218": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "11223": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11225": {
      "op": "SHL"
    },
    "11226": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "DUP2",
      "path": "52"
    },
    "11227": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "11228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11234": {
      "op": "SHL"
    },
    "11235": {
      "op": "SUB"
    },
    "11236": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35901
      ],
      "op": "DUP6",
      "path": "52"
    },
    "11237": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35901
      ],
      "op": "AND",
      "path": "52"
    },
    "11238": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35901
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11239": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35901
      ],
      "op": "PUSH4",
      "path": "52",
      "value": "0x150B7A02"
    },
    "11244": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35901
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11245": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2C00"
    },
    "11248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11249": {
      "fn": "Context._msgSender",
      "offset": [
        700,
        710
      ],
      "op": "CALLER",
      "path": "52"
    },
    "11250": {
      "fn": "Context._msgSender",
      "offset": [
        700,
        710
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11251": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35916,
        35920
      ],
      "op": "DUP10",
      "path": "52"
    },
    "11252": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35916,
        35920
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11253": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35922,
        35929
      ],
      "op": "DUP9",
      "path": "52"
    },
    "11254": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35922,
        35929
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11255": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35931,
        35936
      ],
      "op": "DUP9",
      "path": "52"
    },
    "11256": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35931,
        35936
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11257": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "11259": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "ADD",
      "path": "52"
    },
    "11260": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x35FB"
    },
    "11263": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        35865,
        35937
      ],
      "op": "JUMP",
      "path": "52"
    },
    "11264": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11265": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "11267": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "11269": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "11270": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "DUP1",
      "path": "52"
    },
    "11271": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "DUP4",
      "path": "52"
    },
    "11272": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "SUB",
      "path": "52"
    },
    "11273": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "DUP2",
      "path": "52"
    },
    "11274": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "11276": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "DUP8",
      "path": "52"
    },
    "11277": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "GAS",
      "path": "52"
    },
    "11278": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "CALL",
      "path": "52"
    },
    "11279": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "11280": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "POP",
      "path": "52"
    },
    "11281": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "POP",
      "path": "52"
    },
    "11282": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "POP",
      "path": "52"
    },
    "11283": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "DUP1",
      "path": "52"
    },
    "11284": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "11285": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2C3B"
    },
    "11288": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "11289": {
      "op": "POP"
    },
    "11290": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "11292": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "DUP1",
      "path": "52"
    },
    "11293": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "11294": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1F"
    },
    "11296": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "RETURNDATASIZE",
      "path": "52"
    },
    "11297": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11298": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "DUP2",
      "path": "52"
    },
    "11299": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "ADD",
      "path": "52"
    },
    "11300": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11302": {
      "op": "NOT"
    },
    "11303": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "AND",
      "path": "52"
    },
    "11304": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "DUP3",
      "path": "52"
    },
    "11305": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "ADD",
      "path": "52"
    },
    "11306": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11307": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "11308": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "11309": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2C38"
    },
    "11312": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "11313": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "DUP2",
      "path": "52"
    },
    "11314": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "ADD",
      "path": "52"
    },
    "11315": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11316": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3638"
    },
    "11319": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        35865,
        35937
      ],
      "op": "JUMP",
      "path": "52"
    },
    "11320": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11321": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1"
    },
    "11323": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35865,
        35937
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11324": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2C95"
    },
    "11327": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "11328": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "RETURNDATASIZE",
      "path": "52"
    },
    "11329": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "DUP1",
      "path": "52"
    },
    "11330": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "DUP1",
      "path": "52"
    },
    "11331": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "11332": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2C69"
    },
    "11335": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "11336": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "11338": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "11339": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "11340": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "POP",
      "path": "52"
    },
    "11341": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1F"
    },
    "11343": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "NOT",
      "path": "52"
    },
    "11344": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x3F"
    },
    "11346": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "RETURNDATASIZE",
      "path": "52"
    },
    "11347": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "ADD",
      "path": "52"
    },
    "11348": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "AND",
      "path": "52"
    },
    "11349": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "DUP3",
      "path": "52"
    },
    "11350": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "ADD",
      "path": "52"
    },
    "11351": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "11353": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "11354": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "RETURNDATASIZE",
      "path": "52"
    },
    "11355": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "DUP3",
      "path": "52"
    },
    "11356": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "11357": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "RETURNDATASIZE",
      "path": "52"
    },
    "11358": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "11360": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "11362": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "DUP5",
      "path": "52"
    },
    "11363": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "ADD",
      "path": "52"
    },
    "11364": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "RETURNDATACOPY",
      "path": "52"
    },
    "11365": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2C6E"
    },
    "11368": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "JUMP",
      "path": "52"
    },
    "11369": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11370": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x60"
    },
    "11372": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "11373": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "POP",
      "path": "52"
    },
    "11374": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11375": {
      "op": "POP"
    },
    "11376": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36104,
        36117
      ],
      "op": "DUP1",
      "path": "52"
    },
    "11377": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36104,
        36117
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "11378": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36100,
        36366
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2C8D"
    },
    "11381": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36100,
        36366
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "11382": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36146,
        36206
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 99,
      "value": "0x40"
    },
    "11384": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36146,
        36206
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "11385": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11389": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11391": {
      "op": "SHL"
    },
    "11392": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36146,
        36206
      ],
      "op": "DUP2",
      "path": "52"
    },
    "11393": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36146,
        36206
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "11394": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36146,
        36206
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "11396": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36146,
        36206
      ],
      "op": "ADD",
      "path": "52"
    },
    "11397": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36146,
        36206
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "11400": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36146,
        36206
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11401": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36146,
        36206
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x356B"
    },
    "11404": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        36146,
        36206
      ],
      "op": "JUMP",
      "path": "52"
    },
    "11405": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36100,
        36366
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11406": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36318,
        36324
      ],
      "op": "DUP1",
      "path": "52"
    },
    "11407": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36312,
        36325
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "11408": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36303,
        36309
      ],
      "op": "DUP2",
      "path": "52"
    },
    "11409": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36299,
        36301
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "11411": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36295,
        36310
      ],
      "op": "ADD",
      "path": "52"
    },
    "11412": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36288,
        36326
      ],
      "op": "REVERT",
      "path": "52"
    },
    "11413": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35861,
        36380
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11418": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11420": {
      "op": "SHL"
    },
    "11421": {
      "op": "SUB"
    },
    "11422": {
      "op": "NOT"
    },
    "11423": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35987,
        36038
      ],
      "op": "AND",
      "path": "52",
      "statement": 100
    },
    "11424": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "11429": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11431": {
      "op": "SHL"
    },
    "11432": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35987,
        36038
      ],
      "op": "EQ",
      "path": "52"
    },
    "11433": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35987,
        36038
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11434": {
      "op": "POP"
    },
    "11435": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35980,
        36038
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2709"
    },
    "11438": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35980,
        36038
      ],
      "op": "JUMP",
      "path": "52"
    },
    "11439": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35826,
        36432
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11440": {
      "op": "POP"
    },
    "11441": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36417,
        36421
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 101,
      "value": "0x1"
    },
    "11443": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35660,
        36438
      ],
      "op": "SWAP5",
      "path": "52"
    },
    "11444": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35660,
        36438
      ],
      "op": "SWAP4",
      "path": "52"
    },
    "11445": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35660,
        36438
      ],
      "op": "POP",
      "path": "52"
    },
    "11446": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35660,
        36438
      ],
      "op": "POP",
      "path": "52"
    },
    "11447": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35660,
        36438
      ],
      "op": "POP",
      "path": "52"
    },
    "11448": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35660,
        36438
      ],
      "op": "POP",
      "path": "52"
    },
    "11449": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        35660,
        36438
      ],
      "op": "JUMP",
      "path": "52"
    },
    "11450": {
      "fn": "ERC721._mint",
      "offset": [
        33004,
        33376
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11457": {
      "op": "SHL"
    },
    "11458": {
      "op": "SUB"
    },
    "11459": {
      "fn": "ERC721._mint",
      "offset": [
        33083,
        33099
      ],
      "op": "DUP3",
      "path": "52",
      "statement": 102
    },
    "11460": {
      "branch": 138,
      "fn": "ERC721._mint",
      "offset": [
        33083,
        33099
      ],
      "op": "AND",
      "path": "52"
    },
    "11461": {
      "fn": "ERC721._mint",
      "offset": [
        33075,
        33136
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2D10"
    },
    "11464": {
      "branch": 138,
      "fn": "ERC721._mint",
      "offset": [
        33075,
        33136
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "11465": {
      "fn": "ERC721._mint",
      "offset": [
        33075,
        33136
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "11467": {
      "fn": "ERC721._mint",
      "offset": [
        33075,
        33136
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "11468": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11472": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11474": {
      "op": "SHL"
    },
    "11475": {
      "fn": "ERC721._mint",
      "offset": [
        33075,
        33136
      ],
      "op": "DUP2",
      "path": "52"
    },
    "11476": {
      "fn": "ERC721._mint",
      "offset": [
        33075,
        33136
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "11477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11479": {
      "fn": "ERC721._mint",
      "offset": [
        33075,
        33136
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "11481": {
      "fn": "ERC721._mint",
      "offset": [
        33075,
        33136
      ],
      "op": "DUP3",
      "path": "52"
    },
    "11482": {
      "fn": "ERC721._mint",
      "offset": [
        33075,
        33136
      ],
      "op": "ADD",
      "path": "52"
    },
    "11483": {
      "op": "DUP2"
    },
    "11484": {
      "op": "SWAP1"
    },
    "11485": {
      "op": "MSTORE"
    },
    "11486": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11488": {
      "op": "DUP3"
    },
    "11489": {
      "op": "ADD"
    },
    "11490": {
      "op": "MSTORE"
    },
    "11491": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "11524": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11526": {
      "op": "DUP3"
    },
    "11527": {
      "op": "ADD"
    },
    "11528": {
      "op": "MSTORE"
    },
    "11529": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11531": {
      "op": "ADD"
    },
    "11532": {
      "fn": "ERC721._mint",
      "offset": [
        33075,
        33136
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "11535": {
      "op": "JUMP"
    },
    "11536": {
      "fn": "ERC721._mint",
      "offset": [
        33075,
        33136
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11537": {
      "fn": "ERC721._exists",
      "offset": [
        31150,
        31154
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "11539": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "DUP2",
      "path": "52"
    },
    "11540": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "DUP2",
      "path": "52"
    },
    "11541": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "11542": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31180
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x2"
    },
    "11544": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "11546": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "11547": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "11549": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11550": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "11551": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "11552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11558": {
      "op": "SHL"
    },
    "11559": {
      "op": "SUB"
    },
    "11560": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31189
      ],
      "op": "AND",
      "path": "52"
    },
    "11561": {
      "fn": "ERC721._exists",
      "offset": [
        31173,
        31203
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "11562": {
      "fn": "ERC721._mint",
      "offset": [
        33146,
        33204
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 103,
      "value": "0x2D75"
    },
    "11565": {
      "fn": "ERC721._mint",
      "offset": [
        33146,
        33204
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "11566": {
      "fn": "ERC721._mint",
      "offset": [
        33146,
        33204
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "11568": {
      "fn": "ERC721._mint",
      "offset": [
        33146,
        33204
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "11569": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11573": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11575": {
      "op": "SHL"
    },
    "11576": {
      "fn": "ERC721._mint",
      "offset": [
        33146,
        33204
      ],
      "op": "DUP2",
      "path": "52"
    },
    "11577": {
      "fn": "ERC721._mint",
      "offset": [
        33146,
        33204
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "11578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11580": {
      "fn": "ERC721._mint",
      "offset": [
        33146,
        33204
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x4"
    },
    "11582": {
      "fn": "ERC721._mint",
      "offset": [
        33146,
        33204
      ],
      "op": "DUP3",
      "path": "52"
    },
    "11583": {
      "fn": "ERC721._mint",
      "offset": [
        33146,
        33204
      ],
      "op": "ADD",
      "path": "52"
    },
    "11584": {
      "op": "MSTORE"
    },
    "11585": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "11587": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11589": {
      "op": "DUP3"
    },
    "11590": {
      "op": "ADD"
    },
    "11591": {
      "op": "MSTORE"
    },
    "11592": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "11625": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11627": {
      "op": "DUP3"
    },
    "11628": {
      "op": "ADD"
    },
    "11629": {
      "op": "MSTORE"
    },
    "11630": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11632": {
      "op": "ADD"
    },
    "11633": {
      "fn": "ERC721._mint",
      "offset": [
        33146,
        33204
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x828"
    },
    "11636": {
      "op": "JUMP"
    },
    "11637": {
      "fn": "ERC721._mint",
      "offset": [
        33146,
        33204
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11638": {
      "fn": "ERC721._mint",
      "offset": [
        33215,
        33260
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 104,
      "value": "0x2D81"
    },
    "11641": {
      "fn": "ERC721._mint",
      "offset": [
        33244,
        33245
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "11643": {
      "fn": "ERC721._mint",
      "offset": [
        33248,
        33250
      ],
      "op": "DUP4",
      "path": "52"
    },
    "11644": {
      "fn": "ERC721._mint",
      "offset": [
        33252,
        33259
      ],
      "op": "DUP4",
      "path": "52"
    },
    "11645": {
      "fn": "ERC721._mint",
      "offset": [
        33215,
        33235
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2B00"
    },
    "11648": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        33215,
        33260
      ],
      "op": "JUMP",
      "path": "52"
    },
    "11649": {
      "fn": "ERC721._mint",
      "offset": [
        33215,
        33260
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11656": {
      "op": "SHL"
    },
    "11657": {
      "op": "SUB"
    },
    "11658": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33284
      ],
      "op": "DUP3",
      "path": "52",
      "statement": 105
    },
    "11659": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33284
      ],
      "op": "AND",
      "path": "52"
    },
    "11660": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33284
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "11662": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33284
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11663": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33284
      ],
      "op": "DUP2",
      "path": "52"
    },
    "11664": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33284
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "11665": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33280
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x3"
    },
    "11667": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33284
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "11669": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33284
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "11670": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33284
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "11672": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33284
      ],
      "op": "DUP2",
      "path": "52"
    },
    "11673": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33284
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "11674": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33289
      ],
      "op": "DUP1",
      "path": "52"
    },
    "11675": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33289
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "11676": {
      "fn": "ERC721._mint",
      "offset": [
        33288,
        33289
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x1"
    },
    "11678": {
      "fn": "ERC721._mint",
      "offset": [
        33288,
        33289
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "11679": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33284
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11680": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33289
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x2DAA"
    },
    "11683": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33289
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11684": {
      "fn": "ERC721._mint",
      "offset": [
        33288,
        33289
      ],
      "op": "DUP5",
      "path": "52"
    },
    "11685": {
      "fn": "ERC721._mint",
      "offset": [
        33288,
        33289
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11686": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33289
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x3465"
    },
    "11689": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        33271,
        33289
      ],
      "op": "JUMP",
      "path": "52"
    },
    "11690": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33289
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "11691": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33289
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11692": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33289
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "11693": {
      "fn": "ERC721._mint",
      "offset": [
        33271,
        33289
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "11694": {
      "op": "POP"
    },
    "11695": {
      "op": "POP"
    },
    "11696": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33315
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 106,
      "value": "0x0"
    },
    "11698": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33315
      ],
      "op": "DUP2",
      "path": "52"
    },
    "11699": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33315
      ],
      "op": "DUP2",
      "path": "52"
    },
    "11700": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33315
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "11701": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33306
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x2"
    },
    "11703": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33315
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "11705": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33315
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "11706": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33315
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "11708": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33315
      ],
      "op": "DUP1",
      "path": "52"
    },
    "11709": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33315
      ],
      "op": "DUP3",
      "path": "52"
    },
    "11710": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33315
      ],
      "op": "KECCAK256",
      "path": "52"
    },
    "11711": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33320
      ],
      "op": "DUP1",
      "path": "52"
    },
    "11712": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33320
      ],
      "op": "SLOAD",
      "path": "52"
    },
    "11713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11719": {
      "op": "SHL"
    },
    "11720": {
      "op": "SUB"
    },
    "11721": {
      "op": "NOT"
    },
    "11722": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33320
      ],
      "op": "AND",
      "path": "52"
    },
    "11723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11729": {
      "op": "SHL"
    },
    "11730": {
      "op": "SUB"
    },
    "11731": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33320
      ],
      "op": "DUP7",
      "path": "52"
    },
    "11732": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33320
      ],
      "op": "AND",
      "path": "52"
    },
    "11733": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33320
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11734": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33320
      ],
      "op": "DUP2",
      "path": "52"
    },
    "11735": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33320
      ],
      "op": "OR",
      "path": "52"
    },
    "11736": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33320
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11737": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33320
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "11738": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33320
      ],
      "op": "SSTORE",
      "path": "52"
    },
    "11739": {
      "fn": "ERC721._mint",
      "offset": [
        33336,
        33369
      ],
      "op": "SWAP1",
      "path": "52",
      "statement": 107
    },
    "11740": {
      "fn": "ERC721._mint",
      "offset": [
        33336,
        33369
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "11741": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33315
      ],
      "op": "DUP4",
      "path": "52"
    },
    "11742": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33315
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "11743": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33315
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11744": {
      "fn": "ERC721._mint",
      "offset": [
        33336,
        33369
      ],
      "op": "PUSH32",
      "path": "52",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "11777": {
      "fn": "ERC721._mint",
      "offset": [
        33336,
        33369
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11778": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33315
      ],
      "op": "DUP3",
      "path": "52"
    },
    "11779": {
      "fn": "ERC721._mint",
      "offset": [
        33299,
        33315
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "11780": {
      "fn": "ERC721._mint",
      "offset": [
        33336,
        33369
      ],
      "op": "LOG4",
      "path": "52"
    },
    "11781": {
      "fn": "ERC721._mint",
      "offset": [
        33004,
        33376
      ],
      "op": "POP",
      "path": "52"
    },
    "11782": {
      "fn": "ERC721._mint",
      "offset": [
        33004,
        33376
      ],
      "op": "POP",
      "path": "52"
    },
    "11783": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        33004,
        33376
      ],
      "op": "JUMP",
      "path": "52"
    },
    "11784": {
      "op": "JUMPDEST"
    },
    "11785": {
      "op": "DUP3"
    },
    "11786": {
      "op": "DUP1"
    },
    "11787": {
      "op": "SLOAD"
    },
    "11788": {
      "op": "PUSH2",
      "value": "0x2E14"
    },
    "11791": {
      "op": "SWAP1"
    },
    "11792": {
      "op": "PUSH2",
      "value": "0x32CB"
    },
    "11795": {
      "jump": "i",
      "op": "JUMP"
    },
    "11796": {
      "op": "JUMPDEST"
    },
    "11797": {
      "op": "SWAP1"
    },
    "11798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11800": {
      "op": "MSTORE"
    },
    "11801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11805": {
      "op": "KECCAK256"
    },
    "11806": {
      "op": "SWAP1"
    },
    "11807": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11809": {
      "op": "ADD"
    },
    "11810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11812": {
      "op": "SWAP1"
    },
    "11813": {
      "op": "DIV"
    },
    "11814": {
      "op": "DUP2"
    },
    "11815": {
      "op": "ADD"
    },
    "11816": {
      "op": "SWAP3"
    },
    "11817": {
      "op": "DUP3"
    },
    "11818": {
      "op": "PUSH2",
      "value": "0x2E36"
    },
    "11821": {
      "op": "JUMPI"
    },
    "11822": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11824": {
      "op": "DUP6"
    },
    "11825": {
      "op": "SSTORE"
    },
    "11826": {
      "op": "PUSH2",
      "value": "0x2E7C"
    },
    "11829": {
      "op": "JUMP"
    },
    "11830": {
      "op": "JUMPDEST"
    },
    "11831": {
      "op": "DUP3"
    },
    "11832": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11834": {
      "op": "LT"
    },
    "11835": {
      "op": "PUSH2",
      "value": "0x2E4F"
    },
    "11838": {
      "op": "JUMPI"
    },
    "11839": {
      "op": "DUP1"
    },
    "11840": {
      "op": "MLOAD"
    },
    "11841": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11843": {
      "op": "NOT"
    },
    "11844": {
      "op": "AND"
    },
    "11845": {
      "op": "DUP4"
    },
    "11846": {
      "op": "DUP1"
    },
    "11847": {
      "op": "ADD"
    },
    "11848": {
      "op": "OR"
    },
    "11849": {
      "op": "DUP6"
    },
    "11850": {
      "op": "SSTORE"
    },
    "11851": {
      "op": "PUSH2",
      "value": "0x2E7C"
    },
    "11854": {
      "op": "JUMP"
    },
    "11855": {
      "op": "JUMPDEST"
    },
    "11856": {
      "op": "DUP3"
    },
    "11857": {
      "op": "DUP1"
    },
    "11858": {
      "op": "ADD"
    },
    "11859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11861": {
      "op": "ADD"
    },
    "11862": {
      "op": "DUP6"
    },
    "11863": {
      "op": "SSTORE"
    },
    "11864": {
      "op": "DUP3"
    },
    "11865": {
      "op": "ISZERO"
    },
    "11866": {
      "op": "PUSH2",
      "value": "0x2E7C"
    },
    "11869": {
      "op": "JUMPI"
    },
    "11870": {
      "op": "SWAP2"
    },
    "11871": {
      "op": "DUP3"
    },
    "11872": {
      "op": "ADD"
    },
    "11873": {
      "op": "JUMPDEST"
    },
    "11874": {
      "op": "DUP3"
    },
    "11875": {
      "op": "DUP2"
    },
    "11876": {
      "op": "GT"
    },
    "11877": {
      "op": "ISZERO"
    },
    "11878": {
      "op": "PUSH2",
      "value": "0x2E7C"
    },
    "11881": {
      "op": "JUMPI"
    },
    "11882": {
      "op": "DUP3"
    },
    "11883": {
      "op": "MLOAD"
    },
    "11884": {
      "op": "DUP3"
    },
    "11885": {
      "op": "SSTORE"
    },
    "11886": {
      "op": "SWAP2"
    },
    "11887": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11889": {
      "op": "ADD"
    },
    "11890": {
      "op": "SWAP2"
    },
    "11891": {
      "op": "SWAP1"
    },
    "11892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11894": {
      "op": "ADD"
    },
    "11895": {
      "op": "SWAP1"
    },
    "11896": {
      "op": "PUSH2",
      "value": "0x2E61"
    },
    "11899": {
      "op": "JUMP"
    },
    "11900": {
      "op": "JUMPDEST"
    },
    "11901": {
      "op": "POP"
    },
    "11902": {
      "op": "PUSH2",
      "value": "0x2E88"
    },
    "11905": {
      "op": "SWAP3"
    },
    "11906": {
      "op": "SWAP2"
    },
    "11907": {
      "op": "POP"
    },
    "11908": {
      "op": "PUSH2",
      "value": "0x2E8C"
    },
    "11911": {
      "jump": "i",
      "op": "JUMP"
    },
    "11912": {
      "op": "JUMPDEST"
    },
    "11913": {
      "op": "POP"
    },
    "11914": {
      "op": "SWAP1"
    },
    "11915": {
      "jump": "o",
      "op": "JUMP"
    },
    "11916": {
      "op": "JUMPDEST"
    },
    "11917": {
      "op": "JUMPDEST"
    },
    "11918": {
      "op": "DUP1"
    },
    "11919": {
      "op": "DUP3"
    },
    "11920": {
      "op": "GT"
    },
    "11921": {
      "op": "ISZERO"
    },
    "11922": {
      "op": "PUSH2",
      "value": "0x2E88"
    },
    "11925": {
      "op": "JUMPI"
    },
    "11926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11928": {
      "op": "DUP2"
    },
    "11929": {
      "op": "SSTORE"
    },
    "11930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11932": {
      "op": "ADD"
    },
    "11933": {
      "op": "PUSH2",
      "value": "0x2E8D"
    },
    "11936": {
      "op": "JUMP"
    },
    "11937": {
      "op": "JUMPDEST"
    },
    "11938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11942": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11944": {
      "op": "SHL"
    },
    "11945": {
      "op": "SUB"
    },
    "11946": {
      "op": "NOT"
    },
    "11947": {
      "op": "DUP2"
    },
    "11948": {
      "op": "AND"
    },
    "11949": {
      "op": "DUP2"
    },
    "11950": {
      "op": "EQ"
    },
    "11951": {
      "op": "PUSH2",
      "value": "0x1AF0"
    },
    "11954": {
      "op": "JUMPI"
    },
    "11955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11957": {
      "op": "DUP1"
    },
    "11958": {
      "op": "REVERT"
    },
    "11959": {
      "op": "JUMPDEST"
    },
    "11960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11962": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11964": {
      "op": "DUP3"
    },
    "11965": {
      "op": "DUP5"
    },
    "11966": {
      "op": "SUB"
    },
    "11967": {
      "op": "SLT"
    },
    "11968": {
      "op": "ISZERO"
    },
    "11969": {
      "op": "PUSH2",
      "value": "0x2EC9"
    },
    "11972": {
      "op": "JUMPI"
    },
    "11973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11975": {
      "op": "DUP1"
    },
    "11976": {
      "op": "REVERT"
    },
    "11977": {
      "op": "JUMPDEST"
    },
    "11978": {
      "op": "DUP2"
    },
    "11979": {
      "op": "CALLDATALOAD"
    },
    "11980": {
      "op": "PUSH2",
      "value": "0x2ED4"
    },
    "11983": {
      "op": "DUP2"
    },
    "11984": {
      "op": "PUSH2",
      "value": "0x2EA1"
    },
    "11987": {
      "jump": "i",
      "op": "JUMP"
    },
    "11988": {
      "op": "JUMPDEST"
    },
    "11989": {
      "op": "SWAP4"
    },
    "11990": {
      "op": "SWAP3"
    },
    "11991": {
      "op": "POP"
    },
    "11992": {
      "op": "POP"
    },
    "11993": {
      "op": "POP"
    },
    "11994": {
      "jump": "o",
      "op": "JUMP"
    },
    "11995": {
      "op": "JUMPDEST"
    },
    "11996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12002": {
      "op": "SHL"
    },
    "12003": {
      "op": "SUB"
    },
    "12004": {
      "op": "DUP2"
    },
    "12005": {
      "op": "AND"
    },
    "12006": {
      "op": "DUP2"
    },
    "12007": {
      "op": "EQ"
    },
    "12008": {
      "op": "PUSH2",
      "value": "0x1AF0"
    },
    "12011": {
      "op": "JUMPI"
    },
    "12012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12014": {
      "op": "DUP1"
    },
    "12015": {
      "op": "REVERT"
    },
    "12016": {
      "op": "JUMPDEST"
    },
    "12017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12021": {
      "op": "DUP3"
    },
    "12022": {
      "op": "DUP5"
    },
    "12023": {
      "op": "SUB"
    },
    "12024": {
      "op": "SLT"
    },
    "12025": {
      "op": "ISZERO"
    },
    "12026": {
      "op": "PUSH2",
      "value": "0x2F02"
    },
    "12029": {
      "op": "JUMPI"
    },
    "12030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12032": {
      "op": "DUP1"
    },
    "12033": {
      "op": "REVERT"
    },
    "12034": {
      "op": "JUMPDEST"
    },
    "12035": {
      "op": "DUP2"
    },
    "12036": {
      "op": "CALLDATALOAD"
    },
    "12037": {
      "op": "PUSH2",
      "value": "0x2ED4"
    },
    "12040": {
      "op": "DUP2"
    },
    "12041": {
      "op": "PUSH2",
      "value": "0x2EDB"
    },
    "12044": {
      "jump": "i",
      "op": "JUMP"
    },
    "12045": {
      "op": "JUMPDEST"
    },
    "12046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12048": {
      "op": "JUMPDEST"
    },
    "12049": {
      "op": "DUP4"
    },
    "12050": {
      "op": "DUP2"
    },
    "12051": {
      "op": "LT"
    },
    "12052": {
      "op": "ISZERO"
    },
    "12053": {
      "op": "PUSH2",
      "value": "0x2F28"
    },
    "12056": {
      "op": "JUMPI"
    },
    "12057": {
      "op": "DUP2"
    },
    "12058": {
      "op": "DUP2"
    },
    "12059": {
      "op": "ADD"
    },
    "12060": {
      "op": "MLOAD"
    },
    "12061": {
      "op": "DUP4"
    },
    "12062": {
      "op": "DUP3"
    },
    "12063": {
      "op": "ADD"
    },
    "12064": {
      "op": "MSTORE"
    },
    "12065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12067": {
      "op": "ADD"
    },
    "12068": {
      "op": "PUSH2",
      "value": "0x2F10"
    },
    "12071": {
      "op": "JUMP"
    },
    "12072": {
      "op": "JUMPDEST"
    },
    "12073": {
      "op": "DUP4"
    },
    "12074": {
      "op": "DUP2"
    },
    "12075": {
      "op": "GT"
    },
    "12076": {
      "op": "ISZERO"
    },
    "12077": {
      "op": "PUSH2",
      "value": "0x205B"
    },
    "12080": {
      "op": "JUMPI"
    },
    "12081": {
      "op": "POP"
    },
    "12082": {
      "op": "POP"
    },
    "12083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12085": {
      "op": "SWAP2"
    },
    "12086": {
      "op": "ADD"
    },
    "12087": {
      "op": "MSTORE"
    },
    "12088": {
      "jump": "o",
      "op": "JUMP"
    },
    "12089": {
      "op": "JUMPDEST"
    },
    "12090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12092": {
      "op": "DUP2"
    },
    "12093": {
      "op": "MLOAD"
    },
    "12094": {
      "op": "DUP1"
    },
    "12095": {
      "op": "DUP5"
    },
    "12096": {
      "op": "MSTORE"
    },
    "12097": {
      "op": "PUSH2",
      "value": "0x2F51"
    },
    "12100": {
      "op": "DUP2"
    },
    "12101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12103": {
      "op": "DUP7"
    },
    "12104": {
      "op": "ADD"
    },
    "12105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12107": {
      "op": "DUP7"
    },
    "12108": {
      "op": "ADD"
    },
    "12109": {
      "op": "PUSH2",
      "value": "0x2F0D"
    },
    "12112": {
      "jump": "i",
      "op": "JUMP"
    },
    "12113": {
      "op": "JUMPDEST"
    },
    "12114": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12116": {
      "op": "ADD"
    },
    "12117": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12119": {
      "op": "NOT"
    },
    "12120": {
      "op": "AND"
    },
    "12121": {
      "op": "SWAP3"
    },
    "12122": {
      "op": "SWAP1"
    },
    "12123": {
      "op": "SWAP3"
    },
    "12124": {
      "op": "ADD"
    },
    "12125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12127": {
      "op": "ADD"
    },
    "12128": {
      "op": "SWAP3"
    },
    "12129": {
      "op": "SWAP2"
    },
    "12130": {
      "op": "POP"
    },
    "12131": {
      "op": "POP"
    },
    "12132": {
      "jump": "o",
      "op": "JUMP"
    },
    "12133": {
      "op": "JUMPDEST"
    },
    "12134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12136": {
      "op": "DUP2"
    },
    "12137": {
      "op": "MSTORE"
    },
    "12138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12140": {
      "op": "PUSH2",
      "value": "0x2ED4"
    },
    "12143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12145": {
      "op": "DUP4"
    },
    "12146": {
      "op": "ADD"
    },
    "12147": {
      "op": "DUP5"
    },
    "12148": {
      "op": "PUSH2",
      "value": "0x2F39"
    },
    "12151": {
      "jump": "i",
      "op": "JUMP"
    },
    "12152": {
      "op": "JUMPDEST"
    },
    "12153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12157": {
      "op": "DUP3"
    },
    "12158": {
      "op": "DUP5"
    },
    "12159": {
      "op": "SUB"
    },
    "12160": {
      "op": "SLT"
    },
    "12161": {
      "op": "ISZERO"
    },
    "12162": {
      "op": "PUSH2",
      "value": "0x2F8A"
    },
    "12165": {
      "op": "JUMPI"
    },
    "12166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12168": {
      "op": "DUP1"
    },
    "12169": {
      "op": "REVERT"
    },
    "12170": {
      "op": "JUMPDEST"
    },
    "12171": {
      "op": "POP"
    },
    "12172": {
      "op": "CALLDATALOAD"
    },
    "12173": {
      "op": "SWAP2"
    },
    "12174": {
      "op": "SWAP1"
    },
    "12175": {
      "op": "POP"
    },
    "12176": {
      "jump": "o",
      "op": "JUMP"
    },
    "12177": {
      "op": "JUMPDEST"
    },
    "12178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12180": {
      "op": "DUP1"
    },
    "12181": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12183": {
      "op": "DUP4"
    },
    "12184": {
      "op": "DUP6"
    },
    "12185": {
      "op": "SUB"
    },
    "12186": {
      "op": "SLT"
    },
    "12187": {
      "op": "ISZERO"
    },
    "12188": {
      "op": "PUSH2",
      "value": "0x2FA4"
    },
    "12191": {
      "op": "JUMPI"
    },
    "12192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12194": {
      "op": "DUP1"
    },
    "12195": {
      "op": "REVERT"
    },
    "12196": {
      "op": "JUMPDEST"
    },
    "12197": {
      "op": "DUP3"
    },
    "12198": {
      "op": "CALLDATALOAD"
    },
    "12199": {
      "op": "PUSH2",
      "value": "0x2FAF"
    },
    "12202": {
      "op": "DUP2"
    },
    "12203": {
      "op": "PUSH2",
      "value": "0x2EDB"
    },
    "12206": {
      "jump": "i",
      "op": "JUMP"
    },
    "12207": {
      "op": "JUMPDEST"
    },
    "12208": {
      "op": "SWAP5"
    },
    "12209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12211": {
      "op": "SWAP4"
    },
    "12212": {
      "op": "SWAP1"
    },
    "12213": {
      "op": "SWAP4"
    },
    "12214": {
      "op": "ADD"
    },
    "12215": {
      "op": "CALLDATALOAD"
    },
    "12216": {
      "op": "SWAP4"
    },
    "12217": {
      "op": "POP"
    },
    "12218": {
      "op": "POP"
    },
    "12219": {
      "op": "POP"
    },
    "12220": {
      "jump": "o",
      "op": "JUMP"
    },
    "12221": {
      "op": "JUMPDEST"
    },
    "12222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12224": {
      "op": "DUP1"
    },
    "12225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12227": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12229": {
      "op": "DUP5"
    },
    "12230": {
      "op": "DUP7"
    },
    "12231": {
      "op": "SUB"
    },
    "12232": {
      "op": "SLT"
    },
    "12233": {
      "op": "ISZERO"
    },
    "12234": {
      "op": "PUSH2",
      "value": "0x2FD2"
    },
    "12237": {
      "op": "JUMPI"
    },
    "12238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12240": {
      "op": "DUP1"
    },
    "12241": {
      "op": "REVERT"
    },
    "12242": {
      "op": "JUMPDEST"
    },
    "12243": {
      "op": "DUP4"
    },
    "12244": {
      "op": "CALLDATALOAD"
    },
    "12245": {
      "op": "PUSH2",
      "value": "0x2FDD"
    },
    "12248": {
      "op": "DUP2"
    },
    "12249": {
      "op": "PUSH2",
      "value": "0x2EDB"
    },
    "12252": {
      "jump": "i",
      "op": "JUMP"
    },
    "12253": {
      "op": "JUMPDEST"
    },
    "12254": {
      "op": "SWAP3"
    },
    "12255": {
      "op": "POP"
    },
    "12256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12258": {
      "op": "DUP5"
    },
    "12259": {
      "op": "ADD"
    },
    "12260": {
      "op": "CALLDATALOAD"
    },
    "12261": {
      "op": "PUSH2",
      "value": "0x2FED"
    },
    "12264": {
      "op": "DUP2"
    },
    "12265": {
      "op": "PUSH2",
      "value": "0x2EDB"
    },
    "12268": {
      "jump": "i",
      "op": "JUMP"
    },
    "12269": {
      "op": "JUMPDEST"
    },
    "12270": {
      "op": "SWAP3"
    },
    "12271": {
      "op": "SWAP6"
    },
    "12272": {
      "op": "SWAP3"
    },
    "12273": {
      "op": "SWAP5"
    },
    "12274": {
      "op": "POP"
    },
    "12275": {
      "op": "POP"
    },
    "12276": {
      "op": "POP"
    },
    "12277": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12279": {
      "op": "SWAP2"
    },
    "12280": {
      "op": "SWAP1"
    },
    "12281": {
      "op": "SWAP2"
    },
    "12282": {
      "op": "ADD"
    },
    "12283": {
      "op": "CALLDATALOAD"
    },
    "12284": {
      "op": "SWAP1"
    },
    "12285": {
      "jump": "o",
      "op": "JUMP"
    },
    "12286": {
      "op": "JUMPDEST"
    },
    "12287": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12292": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12294": {
      "op": "SHL"
    },
    "12295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12297": {
      "op": "MSTORE"
    },
    "12298": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "12300": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12302": {
      "op": "MSTORE"
    },
    "12303": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12307": {
      "op": "REVERT"
    },
    "12308": {
      "op": "JUMPDEST"
    },
    "12309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12311": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12320": {
      "op": "DUP1"
    },
    "12321": {
      "op": "DUP5"
    },
    "12322": {
      "op": "GT"
    },
    "12323": {
      "op": "ISZERO"
    },
    "12324": {
      "op": "PUSH2",
      "value": "0x302F"
    },
    "12327": {
      "op": "JUMPI"
    },
    "12328": {
      "op": "PUSH2",
      "value": "0x302F"
    },
    "12331": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "12334": {
      "jump": "i",
      "op": "JUMP"
    },
    "12335": {
      "op": "JUMPDEST"
    },
    "12336": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12338": {
      "op": "MLOAD"
    },
    "12339": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12341": {
      "op": "DUP6"
    },
    "12342": {
      "op": "ADD"
    },
    "12343": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12345": {
      "op": "NOT"
    },
    "12346": {
      "op": "SWAP1"
    },
    "12347": {
      "op": "DUP2"
    },
    "12348": {
      "op": "AND"
    },
    "12349": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "12351": {
      "op": "ADD"
    },
    "12352": {
      "op": "AND"
    },
    "12353": {
      "op": "DUP2"
    },
    "12354": {
      "op": "ADD"
    },
    "12355": {
      "op": "SWAP1"
    },
    "12356": {
      "op": "DUP3"
    },
    "12357": {
      "op": "DUP3"
    },
    "12358": {
      "op": "GT"
    },
    "12359": {
      "op": "DUP2"
    },
    "12360": {
      "op": "DUP4"
    },
    "12361": {
      "op": "LT"
    },
    "12362": {
      "op": "OR"
    },
    "12363": {
      "op": "ISZERO"
    },
    "12364": {
      "op": "PUSH2",
      "value": "0x3057"
    },
    "12367": {
      "op": "JUMPI"
    },
    "12368": {
      "op": "PUSH2",
      "value": "0x3057"
    },
    "12371": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "12374": {
      "jump": "i",
      "op": "JUMP"
    },
    "12375": {
      "op": "JUMPDEST"
    },
    "12376": {
      "op": "DUP2"
    },
    "12377": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12379": {
      "op": "MSTORE"
    },
    "12380": {
      "op": "DUP1"
    },
    "12381": {
      "op": "SWAP4"
    },
    "12382": {
      "op": "POP"
    },
    "12383": {
      "op": "DUP6"
    },
    "12384": {
      "op": "DUP2"
    },
    "12385": {
      "op": "MSTORE"
    },
    "12386": {
      "op": "DUP7"
    },
    "12387": {
      "op": "DUP7"
    },
    "12388": {
      "op": "DUP7"
    },
    "12389": {
      "op": "ADD"
    },
    "12390": {
      "op": "GT"
    },
    "12391": {
      "op": "ISZERO"
    },
    "12392": {
      "op": "PUSH2",
      "value": "0x3070"
    },
    "12395": {
      "op": "JUMPI"
    },
    "12396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12398": {
      "op": "DUP1"
    },
    "12399": {
      "op": "REVERT"
    },
    "12400": {
      "op": "JUMPDEST"
    },
    "12401": {
      "op": "DUP6"
    },
    "12402": {
      "op": "DUP6"
    },
    "12403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12405": {
      "op": "DUP4"
    },
    "12406": {
      "op": "ADD"
    },
    "12407": {
      "op": "CALLDATACOPY"
    },
    "12408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12412": {
      "op": "DUP8"
    },
    "12413": {
      "op": "DUP4"
    },
    "12414": {
      "op": "ADD"
    },
    "12415": {
      "op": "ADD"
    },
    "12416": {
      "op": "MSTORE"
    },
    "12417": {
      "op": "POP"
    },
    "12418": {
      "op": "POP"
    },
    "12419": {
      "op": "POP"
    },
    "12420": {
      "op": "SWAP4"
    },
    "12421": {
      "op": "SWAP3"
    },
    "12422": {
      "op": "POP"
    },
    "12423": {
      "op": "POP"
    },
    "12424": {
      "op": "POP"
    },
    "12425": {
      "jump": "o",
      "op": "JUMP"
    },
    "12426": {
      "op": "JUMPDEST"
    },
    "12427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12431": {
      "op": "DUP3"
    },
    "12432": {
      "op": "DUP5"
    },
    "12433": {
      "op": "SUB"
    },
    "12434": {
      "op": "SLT"
    },
    "12435": {
      "op": "ISZERO"
    },
    "12436": {
      "op": "PUSH2",
      "value": "0x309C"
    },
    "12439": {
      "op": "JUMPI"
    },
    "12440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12442": {
      "op": "DUP1"
    },
    "12443": {
      "op": "REVERT"
    },
    "12444": {
      "op": "JUMPDEST"
    },
    "12445": {
      "op": "DUP2"
    },
    "12446": {
      "op": "CALLDATALOAD"
    },
    "12447": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12456": {
      "op": "DUP2"
    },
    "12457": {
      "op": "GT"
    },
    "12458": {
      "op": "ISZERO"
    },
    "12459": {
      "op": "PUSH2",
      "value": "0x30B3"
    },
    "12462": {
      "op": "JUMPI"
    },
    "12463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12465": {
      "op": "DUP1"
    },
    "12466": {
      "op": "REVERT"
    },
    "12467": {
      "op": "JUMPDEST"
    },
    "12468": {
      "op": "DUP3"
    },
    "12469": {
      "op": "ADD"
    },
    "12470": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12472": {
      "op": "DUP2"
    },
    "12473": {
      "op": "ADD"
    },
    "12474": {
      "op": "DUP5"
    },
    "12475": {
      "op": "SGT"
    },
    "12476": {
      "op": "PUSH2",
      "value": "0x30C4"
    },
    "12479": {
      "op": "JUMPI"
    },
    "12480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12482": {
      "op": "DUP1"
    },
    "12483": {
      "op": "REVERT"
    },
    "12484": {
      "op": "JUMPDEST"
    },
    "12485": {
      "op": "PUSH2",
      "value": "0x2709"
    },
    "12488": {
      "op": "DUP5"
    },
    "12489": {
      "op": "DUP3"
    },
    "12490": {
      "op": "CALLDATALOAD"
    },
    "12491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12493": {
      "op": "DUP5"
    },
    "12494": {
      "op": "ADD"
    },
    "12495": {
      "op": "PUSH2",
      "value": "0x3014"
    },
    "12498": {
      "jump": "i",
      "op": "JUMP"
    },
    "12499": {
      "op": "JUMPDEST"
    },
    "12500": {
      "op": "DUP1"
    },
    "12501": {
      "op": "CALLDATALOAD"
    },
    "12502": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12504": {
      "op": "DUP2"
    },
    "12505": {
      "op": "AND"
    },
    "12506": {
      "op": "DUP2"
    },
    "12507": {
      "op": "EQ"
    },
    "12508": {
      "op": "PUSH2",
      "value": "0x30E4"
    },
    "12511": {
      "op": "JUMPI"
    },
    "12512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12514": {
      "op": "DUP1"
    },
    "12515": {
      "op": "REVERT"
    },
    "12516": {
      "op": "JUMPDEST"
    },
    "12517": {
      "op": "SWAP2"
    },
    "12518": {
      "op": "SWAP1"
    },
    "12519": {
      "op": "POP"
    },
    "12520": {
      "jump": "o",
      "op": "JUMP"
    },
    "12521": {
      "op": "JUMPDEST"
    },
    "12522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12524": {
      "op": "DUP1"
    },
    "12525": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12527": {
      "op": "DUP4"
    },
    "12528": {
      "op": "DUP6"
    },
    "12529": {
      "op": "SUB"
    },
    "12530": {
      "op": "SLT"
    },
    "12531": {
      "op": "ISZERO"
    },
    "12532": {
      "op": "PUSH2",
      "value": "0x30FC"
    },
    "12535": {
      "op": "JUMPI"
    },
    "12536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12538": {
      "op": "DUP1"
    },
    "12539": {
      "op": "REVERT"
    },
    "12540": {
      "op": "JUMPDEST"
    },
    "12541": {
      "op": "DUP3"
    },
    "12542": {
      "op": "CALLDATALOAD"
    },
    "12543": {
      "op": "PUSH2",
      "value": "0x3107"
    },
    "12546": {
      "op": "DUP2"
    },
    "12547": {
      "op": "PUSH2",
      "value": "0x2EDB"
    },
    "12550": {
      "jump": "i",
      "op": "JUMP"
    },
    "12551": {
      "op": "JUMPDEST"
    },
    "12552": {
      "op": "SWAP2"
    },
    "12553": {
      "op": "POP"
    },
    "12554": {
      "op": "PUSH2",
      "value": "0x3115"
    },
    "12557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12559": {
      "op": "DUP5"
    },
    "12560": {
      "op": "ADD"
    },
    "12561": {
      "op": "PUSH2",
      "value": "0x30D3"
    },
    "12564": {
      "jump": "i",
      "op": "JUMP"
    },
    "12565": {
      "op": "JUMPDEST"
    },
    "12566": {
      "op": "SWAP1"
    },
    "12567": {
      "op": "POP"
    },
    "12568": {
      "op": "SWAP3"
    },
    "12569": {
      "op": "POP"
    },
    "12570": {
      "op": "SWAP3"
    },
    "12571": {
      "op": "SWAP1"
    },
    "12572": {
      "op": "POP"
    },
    "12573": {
      "jump": "o",
      "op": "JUMP"
    },
    "12574": {
      "op": "JUMPDEST"
    },
    "12575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12577": {
      "op": "DUP1"
    },
    "12578": {
      "op": "DUP4"
    },
    "12579": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12581": {
      "op": "DUP5"
    },
    "12582": {
      "op": "ADD"
    },
    "12583": {
      "op": "SLT"
    },
    "12584": {
      "op": "PUSH2",
      "value": "0x3130"
    },
    "12587": {
      "op": "JUMPI"
    },
    "12588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12590": {
      "op": "DUP1"
    },
    "12591": {
      "op": "REVERT"
    },
    "12592": {
      "op": "JUMPDEST"
    },
    "12593": {
      "op": "POP"
    },
    "12594": {
      "op": "DUP2"
    },
    "12595": {
      "op": "CALLDATALOAD"
    },
    "12596": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12605": {
      "op": "DUP2"
    },
    "12606": {
      "op": "GT"
    },
    "12607": {
      "op": "ISZERO"
    },
    "12608": {
      "op": "PUSH2",
      "value": "0x3148"
    },
    "12611": {
      "op": "JUMPI"
    },
    "12612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12614": {
      "op": "DUP1"
    },
    "12615": {
      "op": "REVERT"
    },
    "12616": {
      "op": "JUMPDEST"
    },
    "12617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12619": {
      "op": "DUP4"
    },
    "12620": {
      "op": "ADD"
    },
    "12621": {
      "op": "SWAP2"
    },
    "12622": {
      "op": "POP"
    },
    "12623": {
      "op": "DUP4"
    },
    "12624": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12626": {
      "op": "DUP3"
    },
    "12627": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12629": {
      "op": "SHL"
    },
    "12630": {
      "op": "DUP6"
    },
    "12631": {
      "op": "ADD"
    },
    "12632": {
      "op": "ADD"
    },
    "12633": {
      "op": "GT"
    },
    "12634": {
      "op": "ISZERO"
    },
    "12635": {
      "op": "PUSH2",
      "value": "0x3163"
    },
    "12638": {
      "op": "JUMPI"
    },
    "12639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12641": {
      "op": "DUP1"
    },
    "12642": {
      "op": "REVERT"
    },
    "12643": {
      "op": "JUMPDEST"
    },
    "12644": {
      "op": "SWAP3"
    },
    "12645": {
      "op": "POP"
    },
    "12646": {
      "op": "SWAP3"
    },
    "12647": {
      "op": "SWAP1"
    },
    "12648": {
      "op": "POP"
    },
    "12649": {
      "jump": "o",
      "op": "JUMP"
    },
    "12650": {
      "op": "JUMPDEST"
    },
    "12651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12653": {
      "op": "DUP1"
    },
    "12654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12656": {
      "op": "DUP1"
    },
    "12657": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12659": {
      "op": "DUP6"
    },
    "12660": {
      "op": "DUP8"
    },
    "12661": {
      "op": "SUB"
    },
    "12662": {
      "op": "SLT"
    },
    "12663": {
      "op": "ISZERO"
    },
    "12664": {
      "op": "PUSH2",
      "value": "0x3180"
    },
    "12667": {
      "op": "JUMPI"
    },
    "12668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12670": {
      "op": "DUP1"
    },
    "12671": {
      "op": "REVERT"
    },
    "12672": {
      "op": "JUMPDEST"
    },
    "12673": {
      "op": "DUP5"
    },
    "12674": {
      "op": "CALLDATALOAD"
    },
    "12675": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12684": {
      "op": "DUP1"
    },
    "12685": {
      "op": "DUP3"
    },
    "12686": {
      "op": "GT"
    },
    "12687": {
      "op": "ISZERO"
    },
    "12688": {
      "op": "PUSH2",
      "value": "0x3198"
    },
    "12691": {
      "op": "JUMPI"
    },
    "12692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12694": {
      "op": "DUP1"
    },
    "12695": {
      "op": "REVERT"
    },
    "12696": {
      "op": "JUMPDEST"
    },
    "12697": {
      "op": "PUSH2",
      "value": "0x31A4"
    },
    "12700": {
      "op": "DUP9"
    },
    "12701": {
      "op": "DUP4"
    },
    "12702": {
      "op": "DUP10"
    },
    "12703": {
      "op": "ADD"
    },
    "12704": {
      "op": "PUSH2",
      "value": "0x311E"
    },
    "12707": {
      "jump": "i",
      "op": "JUMP"
    },
    "12708": {
      "op": "JUMPDEST"
    },
    "12709": {
      "op": "SWAP1"
    },
    "12710": {
      "op": "SWAP7"
    },
    "12711": {
      "op": "POP"
    },
    "12712": {
      "op": "SWAP5"
    },
    "12713": {
      "op": "POP"
    },
    "12714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12716": {
      "op": "DUP8"
    },
    "12717": {
      "op": "ADD"
    },
    "12718": {
      "op": "CALLDATALOAD"
    },
    "12719": {
      "op": "SWAP2"
    },
    "12720": {
      "op": "POP"
    },
    "12721": {
      "op": "DUP1"
    },
    "12722": {
      "op": "DUP3"
    },
    "12723": {
      "op": "GT"
    },
    "12724": {
      "op": "ISZERO"
    },
    "12725": {
      "op": "PUSH2",
      "value": "0x31BD"
    },
    "12728": {
      "op": "JUMPI"
    },
    "12729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12731": {
      "op": "DUP1"
    },
    "12732": {
      "op": "REVERT"
    },
    "12733": {
      "op": "JUMPDEST"
    },
    "12734": {
      "op": "POP"
    },
    "12735": {
      "op": "PUSH2",
      "value": "0x31CA"
    },
    "12738": {
      "op": "DUP8"
    },
    "12739": {
      "op": "DUP3"
    },
    "12740": {
      "op": "DUP9"
    },
    "12741": {
      "op": "ADD"
    },
    "12742": {
      "op": "PUSH2",
      "value": "0x311E"
    },
    "12745": {
      "jump": "i",
      "op": "JUMP"
    },
    "12746": {
      "op": "JUMPDEST"
    },
    "12747": {
      "op": "SWAP6"
    },
    "12748": {
      "op": "SWAP9"
    },
    "12749": {
      "op": "SWAP5"
    },
    "12750": {
      "op": "SWAP8"
    },
    "12751": {
      "op": "POP"
    },
    "12752": {
      "op": "SWAP6"
    },
    "12753": {
      "op": "POP"
    },
    "12754": {
      "op": "POP"
    },
    "12755": {
      "op": "POP"
    },
    "12756": {
      "op": "POP"
    },
    "12757": {
      "jump": "o",
      "op": "JUMP"
    },
    "12758": {
      "op": "JUMPDEST"
    },
    "12759": {
      "op": "DUP1"
    },
    "12760": {
      "op": "ISZERO"
    },
    "12761": {
      "op": "ISZERO"
    },
    "12762": {
      "op": "DUP2"
    },
    "12763": {
      "op": "EQ"
    },
    "12764": {
      "op": "PUSH2",
      "value": "0x1AF0"
    },
    "12767": {
      "op": "JUMPI"
    },
    "12768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12770": {
      "op": "DUP1"
    },
    "12771": {
      "op": "REVERT"
    },
    "12772": {
      "op": "JUMPDEST"
    },
    "12773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12775": {
      "op": "DUP1"
    },
    "12776": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12778": {
      "op": "DUP4"
    },
    "12779": {
      "op": "DUP6"
    },
    "12780": {
      "op": "SUB"
    },
    "12781": {
      "op": "SLT"
    },
    "12782": {
      "op": "ISZERO"
    },
    "12783": {
      "op": "PUSH2",
      "value": "0x31F7"
    },
    "12786": {
      "op": "JUMPI"
    },
    "12787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12789": {
      "op": "DUP1"
    },
    "12790": {
      "op": "REVERT"
    },
    "12791": {
      "op": "JUMPDEST"
    },
    "12792": {
      "op": "DUP3"
    },
    "12793": {
      "op": "CALLDATALOAD"
    },
    "12794": {
      "op": "PUSH2",
      "value": "0x3202"
    },
    "12797": {
      "op": "DUP2"
    },
    "12798": {
      "op": "PUSH2",
      "value": "0x2EDB"
    },
    "12801": {
      "jump": "i",
      "op": "JUMP"
    },
    "12802": {
      "op": "JUMPDEST"
    },
    "12803": {
      "op": "SWAP2"
    },
    "12804": {
      "op": "POP"
    },
    "12805": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12807": {
      "op": "DUP4"
    },
    "12808": {
      "op": "ADD"
    },
    "12809": {
      "op": "CALLDATALOAD"
    },
    "12810": {
      "op": "PUSH2",
      "value": "0x3212"
    },
    "12813": {
      "op": "DUP2"
    },
    "12814": {
      "op": "PUSH2",
      "value": "0x31D6"
    },
    "12817": {
      "jump": "i",
      "op": "JUMP"
    },
    "12818": {
      "op": "JUMPDEST"
    },
    "12819": {
      "op": "DUP1"
    },
    "12820": {
      "op": "SWAP2"
    },
    "12821": {
      "op": "POP"
    },
    "12822": {
      "op": "POP"
    },
    "12823": {
      "op": "SWAP3"
    },
    "12824": {
      "op": "POP"
    },
    "12825": {
      "op": "SWAP3"
    },
    "12826": {
      "op": "SWAP1"
    },
    "12827": {
      "op": "POP"
    },
    "12828": {
      "jump": "o",
      "op": "JUMP"
    },
    "12829": {
      "op": "JUMPDEST"
    },
    "12830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12832": {
      "op": "DUP1"
    },
    "12833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12835": {
      "op": "DUP1"
    },
    "12836": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12838": {
      "op": "DUP6"
    },
    "12839": {
      "op": "DUP8"
    },
    "12840": {
      "op": "SUB"
    },
    "12841": {
      "op": "SLT"
    },
    "12842": {
      "op": "ISZERO"
    },
    "12843": {
      "op": "PUSH2",
      "value": "0x3233"
    },
    "12846": {
      "op": "JUMPI"
    },
    "12847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12849": {
      "op": "DUP1"
    },
    "12850": {
      "op": "REVERT"
    },
    "12851": {
      "op": "JUMPDEST"
    },
    "12852": {
      "op": "DUP5"
    },
    "12853": {
      "op": "CALLDATALOAD"
    },
    "12854": {
      "op": "PUSH2",
      "value": "0x323E"
    },
    "12857": {
      "op": "DUP2"
    },
    "12858": {
      "op": "PUSH2",
      "value": "0x2EDB"
    },
    "12861": {
      "jump": "i",
      "op": "JUMP"
    },
    "12862": {
      "op": "JUMPDEST"
    },
    "12863": {
      "op": "SWAP4"
    },
    "12864": {
      "op": "POP"
    },
    "12865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12867": {
      "op": "DUP6"
    },
    "12868": {
      "op": "ADD"
    },
    "12869": {
      "op": "CALLDATALOAD"
    },
    "12870": {
      "op": "PUSH2",
      "value": "0x324E"
    },
    "12873": {
      "op": "DUP2"
    },
    "12874": {
      "op": "PUSH2",
      "value": "0x2EDB"
    },
    "12877": {
      "jump": "i",
      "op": "JUMP"
    },
    "12878": {
      "op": "JUMPDEST"
    },
    "12879": {
      "op": "SWAP3"
    },
    "12880": {
      "op": "POP"
    },
    "12881": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12883": {
      "op": "DUP6"
    },
    "12884": {
      "op": "ADD"
    },
    "12885": {
      "op": "CALLDATALOAD"
    },
    "12886": {
      "op": "SWAP2"
    },
    "12887": {
      "op": "POP"
    },
    "12888": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12890": {
      "op": "DUP6"
    },
    "12891": {
      "op": "ADD"
    },
    "12892": {
      "op": "CALLDATALOAD"
    },
    "12893": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12902": {
      "op": "DUP2"
    },
    "12903": {
      "op": "GT"
    },
    "12904": {
      "op": "ISZERO"
    },
    "12905": {
      "op": "PUSH2",
      "value": "0x3271"
    },
    "12908": {
      "op": "JUMPI"
    },
    "12909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12911": {
      "op": "DUP1"
    },
    "12912": {
      "op": "REVERT"
    },
    "12913": {
      "op": "JUMPDEST"
    },
    "12914": {
      "op": "DUP6"
    },
    "12915": {
      "op": "ADD"
    },
    "12916": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12918": {
      "op": "DUP2"
    },
    "12919": {
      "op": "ADD"
    },
    "12920": {
      "op": "DUP8"
    },
    "12921": {
      "op": "SGT"
    },
    "12922": {
      "op": "PUSH2",
      "value": "0x3282"
    },
    "12925": {
      "op": "JUMPI"
    },
    "12926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12928": {
      "op": "DUP1"
    },
    "12929": {
      "op": "REVERT"
    },
    "12930": {
      "op": "JUMPDEST"
    },
    "12931": {
      "op": "PUSH2",
      "value": "0x3291"
    },
    "12934": {
      "op": "DUP8"
    },
    "12935": {
      "op": "DUP3"
    },
    "12936": {
      "op": "CALLDATALOAD"
    },
    "12937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12939": {
      "op": "DUP5"
    },
    "12940": {
      "op": "ADD"
    },
    "12941": {
      "op": "PUSH2",
      "value": "0x3014"
    },
    "12944": {
      "jump": "i",
      "op": "JUMP"
    },
    "12945": {
      "op": "JUMPDEST"
    },
    "12946": {
      "op": "SWAP2"
    },
    "12947": {
      "op": "POP"
    },
    "12948": {
      "op": "POP"
    },
    "12949": {
      "op": "SWAP3"
    },
    "12950": {
      "op": "SWAP6"
    },
    "12951": {
      "op": "SWAP2"
    },
    "12952": {
      "op": "SWAP5"
    },
    "12953": {
      "op": "POP"
    },
    "12954": {
      "op": "SWAP3"
    },
    "12955": {
      "op": "POP"
    },
    "12956": {
      "jump": "o",
      "op": "JUMP"
    },
    "12957": {
      "op": "JUMPDEST"
    },
    "12958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12960": {
      "op": "DUP1"
    },
    "12961": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12963": {
      "op": "DUP4"
    },
    "12964": {
      "op": "DUP6"
    },
    "12965": {
      "op": "SUB"
    },
    "12966": {
      "op": "SLT"
    },
    "12967": {
      "op": "ISZERO"
    },
    "12968": {
      "op": "PUSH2",
      "value": "0x32B0"
    },
    "12971": {
      "op": "JUMPI"
    },
    "12972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12974": {
      "op": "DUP1"
    },
    "12975": {
      "op": "REVERT"
    },
    "12976": {
      "op": "JUMPDEST"
    },
    "12977": {
      "op": "DUP3"
    },
    "12978": {
      "op": "CALLDATALOAD"
    },
    "12979": {
      "op": "PUSH2",
      "value": "0x32BB"
    },
    "12982": {
      "op": "DUP2"
    },
    "12983": {
      "op": "PUSH2",
      "value": "0x2EDB"
    },
    "12986": {
      "jump": "i",
      "op": "JUMP"
    },
    "12987": {
      "op": "JUMPDEST"
    },
    "12988": {
      "op": "SWAP2"
    },
    "12989": {
      "op": "POP"
    },
    "12990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12992": {
      "op": "DUP4"
    },
    "12993": {
      "op": "ADD"
    },
    "12994": {
      "op": "CALLDATALOAD"
    },
    "12995": {
      "op": "PUSH2",
      "value": "0x3212"
    },
    "12998": {
      "op": "DUP2"
    },
    "12999": {
      "op": "PUSH2",
      "value": "0x2EDB"
    },
    "13002": {
      "jump": "i",
      "op": "JUMP"
    },
    "13003": {
      "op": "JUMPDEST"
    },
    "13004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13006": {
      "op": "DUP2"
    },
    "13007": {
      "op": "DUP2"
    },
    "13008": {
      "op": "SHR"
    },
    "13009": {
      "op": "SWAP1"
    },
    "13010": {
      "op": "DUP3"
    },
    "13011": {
      "op": "AND"
    },
    "13012": {
      "op": "DUP1"
    },
    "13013": {
      "op": "PUSH2",
      "value": "0x32DF"
    },
    "13016": {
      "op": "JUMPI"
    },
    "13017": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13019": {
      "op": "DUP3"
    },
    "13020": {
      "op": "AND"
    },
    "13021": {
      "op": "SWAP2"
    },
    "13022": {
      "op": "POP"
    },
    "13023": {
      "op": "JUMPDEST"
    },
    "13024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13026": {
      "op": "DUP3"
    },
    "13027": {
      "op": "LT"
    },
    "13028": {
      "op": "DUP2"
    },
    "13029": {
      "op": "EQ"
    },
    "13030": {
      "op": "ISZERO"
    },
    "13031": {
      "op": "PUSH2",
      "value": "0x1130"
    },
    "13034": {
      "op": "JUMPI"
    },
    "13035": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13040": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13042": {
      "op": "SHL"
    },
    "13043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13045": {
      "op": "MSTORE"
    },
    "13046": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13048": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13050": {
      "op": "MSTORE"
    },
    "13051": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13055": {
      "op": "REVERT"
    },
    "13056": {
      "op": "JUMPDEST"
    },
    "13057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13059": {
      "op": "DUP1"
    },
    "13060": {
      "op": "DUP3"
    },
    "13061": {
      "op": "MSTORE"
    },
    "13062": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "13064": {
      "op": "SWAP1"
    },
    "13065": {
      "op": "DUP3"
    },
    "13066": {
      "op": "ADD"
    },
    "13067": {
      "op": "MSTORE"
    },
    "13068": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "13101": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13103": {
      "op": "DUP3"
    },
    "13104": {
      "op": "ADD"
    },
    "13105": {
      "op": "MSTORE"
    },
    "13106": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "13124": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "13126": {
      "op": "SHL"
    },
    "13127": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13129": {
      "op": "DUP3"
    },
    "13130": {
      "op": "ADD"
    },
    "13131": {
      "op": "MSTORE"
    },
    "13132": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13134": {
      "op": "ADD"
    },
    "13135": {
      "op": "SWAP1"
    },
    "13136": {
      "jump": "o",
      "op": "JUMP"
    },
    "13137": {
      "op": "JUMPDEST"
    },
    "13138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13142": {
      "op": "DUP3"
    },
    "13143": {
      "op": "DUP5"
    },
    "13144": {
      "op": "SUB"
    },
    "13145": {
      "op": "SLT"
    },
    "13146": {
      "op": "ISZERO"
    },
    "13147": {
      "op": "PUSH2",
      "value": "0x3363"
    },
    "13150": {
      "op": "JUMPI"
    },
    "13151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13153": {
      "op": "DUP1"
    },
    "13154": {
      "op": "REVERT"
    },
    "13155": {
      "op": "JUMPDEST"
    },
    "13156": {
      "op": "DUP2"
    },
    "13157": {
      "op": "MLOAD"
    },
    "13158": {
      "op": "PUSH2",
      "value": "0x2ED4"
    },
    "13161": {
      "op": "DUP2"
    },
    "13162": {
      "op": "PUSH2",
      "value": "0x31D6"
    },
    "13165": {
      "jump": "i",
      "op": "JUMP"
    },
    "13166": {
      "op": "JUMPDEST"
    },
    "13167": {
      "op": "PUSH32",
      "value": "0x7068616E746F6D2E636F6E74726163742E726567697374657265640000000000"
    },
    "13200": {
      "op": "DUP2"
    },
    "13201": {
      "op": "MSTORE"
    },
    "13202": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13204": {
      "op": "SWAP2"
    },
    "13205": {
      "op": "SWAP1"
    },
    "13206": {
      "op": "SWAP2"
    },
    "13207": {
      "op": "SHL"
    },
    "13208": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "13221": {
      "op": "NOT"
    },
    "13222": {
      "op": "AND"
    },
    "13223": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "13225": {
      "op": "DUP3"
    },
    "13226": {
      "op": "ADD"
    },
    "13227": {
      "op": "MSTORE"
    },
    "13228": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "13230": {
      "op": "ADD"
    },
    "13231": {
      "op": "SWAP1"
    },
    "13232": {
      "jump": "o",
      "op": "JUMP"
    },
    "13233": {
      "op": "JUMPDEST"
    },
    "13234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13238": {
      "op": "DUP3"
    },
    "13239": {
      "op": "DUP5"
    },
    "13240": {
      "op": "SUB"
    },
    "13241": {
      "op": "SLT"
    },
    "13242": {
      "op": "ISZERO"
    },
    "13243": {
      "op": "PUSH2",
      "value": "0x33C3"
    },
    "13246": {
      "op": "JUMPI"
    },
    "13247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13249": {
      "op": "DUP1"
    },
    "13250": {
      "op": "REVERT"
    },
    "13251": {
      "op": "JUMPDEST"
    },
    "13252": {
      "op": "DUP2"
    },
    "13253": {
      "op": "MLOAD"
    },
    "13254": {
      "op": "PUSH2",
      "value": "0x2ED4"
    },
    "13257": {
      "op": "DUP2"
    },
    "13258": {
      "op": "PUSH2",
      "value": "0x2EDB"
    },
    "13261": {
      "jump": "i",
      "op": "JUMP"
    },
    "13262": {
      "op": "JUMPDEST"
    },
    "13263": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13268": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13270": {
      "op": "SHL"
    },
    "13271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13273": {
      "op": "MSTORE"
    },
    "13274": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "13276": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13278": {
      "op": "MSTORE"
    },
    "13279": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13283": {
      "op": "REVERT"
    },
    "13284": {
      "op": "JUMPDEST"
    },
    "13285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13287": {
      "op": "DUP1"
    },
    "13288": {
      "op": "DUP3"
    },
    "13289": {
      "op": "MSTORE"
    },
    "13290": {
      "op": "DUP2"
    },
    "13291": {
      "op": "DUP2"
    },
    "13292": {
      "op": "ADD"
    },
    "13293": {
      "op": "MSTORE"
    },
    "13294": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "13327": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13329": {
      "op": "DUP3"
    },
    "13330": {
      "op": "ADD"
    },
    "13331": {
      "op": "MSTORE"
    },
    "13332": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13334": {
      "op": "ADD"
    },
    "13335": {
      "op": "SWAP1"
    },
    "13336": {
      "jump": "o",
      "op": "JUMP"
    },
    "13337": {
      "op": "JUMPDEST"
    },
    "13338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13342": {
      "op": "DUP3"
    },
    "13343": {
      "op": "DUP5"
    },
    "13344": {
      "op": "SUB"
    },
    "13345": {
      "op": "SLT"
    },
    "13346": {
      "op": "ISZERO"
    },
    "13347": {
      "op": "PUSH2",
      "value": "0x342B"
    },
    "13350": {
      "op": "JUMPI"
    },
    "13351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13353": {
      "op": "DUP1"
    },
    "13354": {
      "op": "REVERT"
    },
    "13355": {
      "op": "JUMPDEST"
    },
    "13356": {
      "op": "PUSH2",
      "value": "0x2ED4"
    },
    "13359": {
      "op": "DUP3"
    },
    "13360": {
      "op": "PUSH2",
      "value": "0x30D3"
    },
    "13363": {
      "jump": "i",
      "op": "JUMP"
    },
    "13364": {
      "op": "JUMPDEST"
    },
    "13365": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13370": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13372": {
      "op": "SHL"
    },
    "13373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13375": {
      "op": "MSTORE"
    },
    "13376": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13378": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13380": {
      "op": "MSTORE"
    },
    "13381": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13385": {
      "op": "REVERT"
    },
    "13386": {
      "op": "JUMPDEST"
    },
    "13387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13391": {
      "op": "NOT"
    },
    "13392": {
      "op": "DUP3"
    },
    "13393": {
      "op": "EQ"
    },
    "13394": {
      "op": "ISZERO"
    },
    "13395": {
      "op": "PUSH2",
      "value": "0x345E"
    },
    "13398": {
      "op": "JUMPI"
    },
    "13399": {
      "op": "PUSH2",
      "value": "0x345E"
    },
    "13402": {
      "op": "PUSH2",
      "value": "0x3434"
    },
    "13405": {
      "jump": "i",
      "op": "JUMP"
    },
    "13406": {
      "op": "JUMPDEST"
    },
    "13407": {
      "op": "POP"
    },
    "13408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13410": {
      "op": "ADD"
    },
    "13411": {
      "op": "SWAP1"
    },
    "13412": {
      "jump": "o",
      "op": "JUMP"
    },
    "13413": {
      "op": "JUMPDEST"
    },
    "13414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13416": {
      "op": "DUP3"
    },
    "13417": {
      "op": "NOT"
    },
    "13418": {
      "op": "DUP3"
    },
    "13419": {
      "op": "GT"
    },
    "13420": {
      "op": "ISZERO"
    },
    "13421": {
      "op": "PUSH2",
      "value": "0x3478"
    },
    "13424": {
      "op": "JUMPI"
    },
    "13425": {
      "op": "PUSH2",
      "value": "0x3478"
    },
    "13428": {
      "op": "PUSH2",
      "value": "0x3434"
    },
    "13431": {
      "jump": "i",
      "op": "JUMP"
    },
    "13432": {
      "op": "JUMPDEST"
    },
    "13433": {
      "op": "POP"
    },
    "13434": {
      "op": "ADD"
    },
    "13435": {
      "op": "SWAP1"
    },
    "13436": {
      "jump": "o",
      "op": "JUMP"
    },
    "13437": {
      "op": "JUMPDEST"
    },
    "13438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13440": {
      "op": "DUP2"
    },
    "13441": {
      "op": "MLOAD"
    },
    "13442": {
      "op": "PUSH2",
      "value": "0x348F"
    },
    "13445": {
      "op": "DUP2"
    },
    "13446": {
      "op": "DUP6"
    },
    "13447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13449": {
      "op": "DUP7"
    },
    "13450": {
      "op": "ADD"
    },
    "13451": {
      "op": "PUSH2",
      "value": "0x2F0D"
    },
    "13454": {
      "jump": "i",
      "op": "JUMP"
    },
    "13455": {
      "op": "JUMPDEST"
    },
    "13456": {
      "op": "SWAP3"
    },
    "13457": {
      "op": "SWAP1"
    },
    "13458": {
      "op": "SWAP3"
    },
    "13459": {
      "op": "ADD"
    },
    "13460": {
      "op": "SWAP3"
    },
    "13461": {
      "op": "SWAP2"
    },
    "13462": {
      "op": "POP"
    },
    "13463": {
      "op": "POP"
    },
    "13464": {
      "jump": "o",
      "op": "JUMP"
    },
    "13465": {
      "op": "JUMPDEST"
    },
    "13466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13468": {
      "op": "DUP1"
    },
    "13469": {
      "op": "DUP5"
    },
    "13470": {
      "op": "SLOAD"
    },
    "13471": {
      "op": "DUP2"
    },
    "13472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13474": {
      "op": "DUP3"
    },
    "13475": {
      "op": "DUP2"
    },
    "13476": {
      "op": "SHR"
    },
    "13477": {
      "op": "SWAP2"
    },
    "13478": {
      "op": "POP"
    },
    "13479": {
      "op": "DUP1"
    },
    "13480": {
      "op": "DUP4"
    },
    "13481": {
      "op": "AND"
    },
    "13482": {
      "op": "DUP1"
    },
    "13483": {
      "op": "PUSH2",
      "value": "0x34B5"
    },
    "13486": {
      "op": "JUMPI"
    },
    "13487": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13489": {
      "op": "DUP4"
    },
    "13490": {
      "op": "AND"
    },
    "13491": {
      "op": "SWAP3"
    },
    "13492": {
      "op": "POP"
    },
    "13493": {
      "op": "JUMPDEST"
    },
    "13494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13496": {
      "op": "DUP1"
    },
    "13497": {
      "op": "DUP5"
    },
    "13498": {
      "op": "LT"
    },
    "13499": {
      "op": "DUP3"
    },
    "13500": {
      "op": "EQ"
    },
    "13501": {
      "op": "ISZERO"
    },
    "13502": {
      "op": "PUSH2",
      "value": "0x34D5"
    },
    "13505": {
      "op": "JUMPI"
    },
    "13506": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13511": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13513": {
      "op": "SHL"
    },
    "13514": {
      "op": "DUP7"
    },
    "13515": {
      "op": "MSTORE"
    },
    "13516": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13518": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13520": {
      "op": "MSTORE"
    },
    "13521": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13523": {
      "op": "DUP7"
    },
    "13524": {
      "op": "REVERT"
    },
    "13525": {
      "op": "JUMPDEST"
    },
    "13526": {
      "op": "DUP2"
    },
    "13527": {
      "op": "DUP1"
    },
    "13528": {
      "op": "ISZERO"
    },
    "13529": {
      "op": "PUSH2",
      "value": "0x34E9"
    },
    "13532": {
      "op": "JUMPI"
    },
    "13533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13535": {
      "op": "DUP2"
    },
    "13536": {
      "op": "EQ"
    },
    "13537": {
      "op": "PUSH2",
      "value": "0x34FA"
    },
    "13540": {
      "op": "JUMPI"
    },
    "13541": {
      "op": "PUSH2",
      "value": "0x3527"
    },
    "13544": {
      "op": "JUMP"
    },
    "13545": {
      "op": "JUMPDEST"
    },
    "13546": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13548": {
      "op": "NOT"
    },
    "13549": {
      "op": "DUP7"
    },
    "13550": {
      "op": "AND"
    },
    "13551": {
      "op": "DUP10"
    },
    "13552": {
      "op": "MSTORE"
    },
    "13553": {
      "op": "DUP5"
    },
    "13554": {
      "op": "DUP10"
    },
    "13555": {
      "op": "ADD"
    },
    "13556": {
      "op": "SWAP7"
    },
    "13557": {
      "op": "POP"
    },
    "13558": {
      "op": "PUSH2",
      "value": "0x3527"
    },
    "13561": {
      "op": "JUMP"
    },
    "13562": {
      "op": "JUMPDEST"
    },
    "13563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13565": {
      "op": "DUP12"
    },
    "13566": {
      "op": "DUP2"
    },
    "13567": {
      "op": "MSTORE"
    },
    "13568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13570": {
      "op": "SWAP1"
    },
    "13571": {
      "op": "KECCAK256"
    },
    "13572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13574": {
      "op": "JUMPDEST"
    },
    "13575": {
      "op": "DUP7"
    },
    "13576": {
      "op": "DUP2"
    },
    "13577": {
      "op": "LT"
    },
    "13578": {
      "op": "ISZERO"
    },
    "13579": {
      "op": "PUSH2",
      "value": "0x351F"
    },
    "13582": {
      "op": "JUMPI"
    },
    "13583": {
      "op": "DUP2"
    },
    "13584": {
      "op": "SLOAD"
    },
    "13585": {
      "op": "DUP12"
    },
    "13586": {
      "op": "DUP3"
    },
    "13587": {
      "op": "ADD"
    },
    "13588": {
      "op": "MSTORE"
    },
    "13589": {
      "op": "SWAP1"
    },
    "13590": {
      "op": "DUP6"
    },
    "13591": {
      "op": "ADD"
    },
    "13592": {
      "op": "SWAP1"
    },
    "13593": {
      "op": "DUP4"
    },
    "13594": {
      "op": "ADD"
    },
    "13595": {
      "op": "PUSH2",
      "value": "0x3506"
    },
    "13598": {
      "op": "JUMP"
    },
    "13599": {
      "op": "JUMPDEST"
    },
    "13600": {
      "op": "POP"
    },
    "13601": {
      "op": "POP"
    },
    "13602": {
      "op": "DUP5"
    },
    "13603": {
      "op": "DUP10"
    },
    "13604": {
      "op": "ADD"
    },
    "13605": {
      "op": "SWAP7"
    },
    "13606": {
      "op": "POP"
    },
    "13607": {
      "op": "JUMPDEST"
    },
    "13608": {
      "op": "POP"
    },
    "13609": {
      "op": "POP"
    },
    "13610": {
      "op": "POP"
    },
    "13611": {
      "op": "POP"
    },
    "13612": {
      "op": "POP"
    },
    "13613": {
      "op": "POP"
    },
    "13614": {
      "op": "PUSH2",
      "value": "0x354B"
    },
    "13617": {
      "op": "PUSH2",
      "value": "0x353A"
    },
    "13620": {
      "op": "DUP3"
    },
    "13621": {
      "op": "DUP7"
    },
    "13622": {
      "op": "PUSH2",
      "value": "0x347D"
    },
    "13625": {
      "jump": "i",
      "op": "JUMP"
    },
    "13626": {
      "op": "JUMPDEST"
    },
    "13627": {
      "op": "PUSH5",
      "value": "0x173539B7B7"
    },
    "13633": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "13635": {
      "op": "SHL"
    },
    "13636": {
      "op": "DUP2"
    },
    "13637": {
      "op": "MSTORE"
    },
    "13638": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13640": {
      "op": "ADD"
    },
    "13641": {
      "op": "SWAP1"
    },
    "13642": {
      "op": "JUMP"
    },
    "13643": {
      "op": "JUMPDEST"
    },
    "13644": {
      "op": "SWAP6"
    },
    "13645": {
      "op": "SWAP5"
    },
    "13646": {
      "op": "POP"
    },
    "13647": {
      "op": "POP"
    },
    "13648": {
      "op": "POP"
    },
    "13649": {
      "op": "POP"
    },
    "13650": {
      "op": "POP"
    },
    "13651": {
      "jump": "o",
      "op": "JUMP"
    },
    "13652": {
      "op": "JUMPDEST"
    },
    "13653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13655": {
      "op": "DUP3"
    },
    "13656": {
      "op": "DUP3"
    },
    "13657": {
      "op": "LT"
    },
    "13658": {
      "op": "ISZERO"
    },
    "13659": {
      "op": "PUSH2",
      "value": "0x3566"
    },
    "13662": {
      "op": "JUMPI"
    },
    "13663": {
      "op": "PUSH2",
      "value": "0x3566"
    },
    "13666": {
      "op": "PUSH2",
      "value": "0x3434"
    },
    "13669": {
      "jump": "i",
      "op": "JUMP"
    },
    "13670": {
      "op": "JUMPDEST"
    },
    "13671": {
      "op": "POP"
    },
    "13672": {
      "op": "SUB"
    },
    "13673": {
      "op": "SWAP1"
    },
    "13674": {
      "jump": "o",
      "op": "JUMP"
    },
    "13675": {
      "op": "JUMPDEST"
    },
    "13676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13678": {
      "op": "DUP1"
    },
    "13679": {
      "op": "DUP3"
    },
    "13680": {
      "op": "MSTORE"
    },
    "13681": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "13683": {
      "op": "SWAP1"
    },
    "13684": {
      "op": "DUP3"
    },
    "13685": {
      "op": "ADD"
    },
    "13686": {
      "op": "MSTORE"
    },
    "13687": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "13720": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13722": {
      "op": "DUP3"
    },
    "13723": {
      "op": "ADD"
    },
    "13724": {
      "op": "MSTORE"
    },
    "13725": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "13744": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "13746": {
      "op": "SHL"
    },
    "13747": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13749": {
      "op": "DUP3"
    },
    "13750": {
      "op": "ADD"
    },
    "13751": {
      "op": "MSTORE"
    },
    "13752": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13754": {
      "op": "ADD"
    },
    "13755": {
      "op": "SWAP1"
    },
    "13756": {
      "jump": "o",
      "op": "JUMP"
    },
    "13757": {
      "op": "JUMPDEST"
    },
    "13758": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13763": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13765": {
      "op": "SHL"
    },
    "13766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13768": {
      "op": "MSTORE"
    },
    "13769": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "13771": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13773": {
      "op": "MSTORE"
    },
    "13774": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13778": {
      "op": "REVERT"
    },
    "13779": {
      "op": "JUMPDEST"
    },
    "13780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13782": {
      "op": "DUP3"
    },
    "13783": {
      "op": "PUSH2",
      "value": "0x35E2"
    },
    "13786": {
      "op": "JUMPI"
    },
    "13787": {
      "op": "PUSH2",
      "value": "0x35E2"
    },
    "13790": {
      "op": "PUSH2",
      "value": "0x35BD"
    },
    "13793": {
      "jump": "i",
      "op": "JUMP"
    },
    "13794": {
      "op": "JUMPDEST"
    },
    "13795": {
      "op": "POP"
    },
    "13796": {
      "op": "DIV"
    },
    "13797": {
      "op": "SWAP1"
    },
    "13798": {
      "jump": "o",
      "op": "JUMP"
    },
    "13799": {
      "op": "JUMPDEST"
    },
    "13800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13802": {
      "op": "DUP3"
    },
    "13803": {
      "op": "PUSH2",
      "value": "0x35F6"
    },
    "13806": {
      "op": "JUMPI"
    },
    "13807": {
      "op": "PUSH2",
      "value": "0x35F6"
    },
    "13810": {
      "op": "PUSH2",
      "value": "0x35BD"
    },
    "13813": {
      "jump": "i",
      "op": "JUMP"
    },
    "13814": {
      "op": "JUMPDEST"
    },
    "13815": {
      "op": "POP"
    },
    "13816": {
      "op": "MOD"
    },
    "13817": {
      "op": "SWAP1"
    },
    "13818": {
      "jump": "o",
      "op": "JUMP"
    },
    "13819": {
      "op": "JUMPDEST"
    },
    "13820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13826": {
      "op": "SHL"
    },
    "13827": {
      "op": "SUB"
    },
    "13828": {
      "op": "DUP6"
    },
    "13829": {
      "op": "DUP2"
    },
    "13830": {
      "op": "AND"
    },
    "13831": {
      "op": "DUP3"
    },
    "13832": {
      "op": "MSTORE"
    },
    "13833": {
      "op": "DUP5"
    },
    "13834": {
      "op": "AND"
    },
    "13835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13837": {
      "op": "DUP3"
    },
    "13838": {
      "op": "ADD"
    },
    "13839": {
      "op": "MSTORE"
    },
    "13840": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13842": {
      "op": "DUP2"
    },
    "13843": {
      "op": "ADD"
    },
    "13844": {
      "op": "DUP4"
    },
    "13845": {
      "op": "SWAP1"
    },
    "13846": {
      "op": "MSTORE"
    },
    "13847": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13849": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13851": {
      "op": "DUP3"
    },
    "13852": {
      "op": "ADD"
    },
    "13853": {
      "op": "DUP2"
    },
    "13854": {
      "op": "SWAP1"
    },
    "13855": {
      "op": "MSTORE"
    },
    "13856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13858": {
      "op": "SWAP1"
    },
    "13859": {
      "op": "PUSH2",
      "value": "0x362E"
    },
    "13862": {
      "op": "SWAP1"
    },
    "13863": {
      "op": "DUP4"
    },
    "13864": {
      "op": "ADD"
    },
    "13865": {
      "op": "DUP5"
    },
    "13866": {
      "op": "PUSH2",
      "value": "0x2F39"
    },
    "13869": {
      "jump": "i",
      "op": "JUMP"
    },
    "13870": {
      "op": "JUMPDEST"
    },
    "13871": {
      "op": "SWAP7"
    },
    "13872": {
      "op": "SWAP6"
    },
    "13873": {
      "op": "POP"
    },
    "13874": {
      "op": "POP"
    },
    "13875": {
      "op": "POP"
    },
    "13876": {
      "op": "POP"
    },
    "13877": {
      "op": "POP"
    },
    "13878": {
      "op": "POP"
    },
    "13879": {
      "jump": "o",
      "op": "JUMP"
    },
    "13880": {
      "op": "JUMPDEST"
    },
    "13881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13885": {
      "op": "DUP3"
    },
    "13886": {
      "op": "DUP5"
    },
    "13887": {
      "op": "SUB"
    },
    "13888": {
      "op": "SLT"
    },
    "13889": {
      "op": "ISZERO"
    },
    "13890": {
      "op": "PUSH2",
      "value": "0x364A"
    },
    "13893": {
      "op": "JUMPI"
    },
    "13894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13896": {
      "op": "DUP1"
    },
    "13897": {
      "op": "REVERT"
    },
    "13898": {
      "op": "JUMPDEST"
    },
    "13899": {
      "op": "DUP2"
    },
    "13900": {
      "op": "MLOAD"
    },
    "13901": {
      "op": "PUSH2",
      "value": "0x2ED4"
    },
    "13904": {
      "op": "DUP2"
    },
    "13905": {
      "op": "PUSH2",
      "value": "0x2EA1"
    },
    "13908": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "5fb91a1fd2231203a58ce626505a510f5e92870a",
  "source": "/**\n *Submitted for verification at Etherscan.io on 2022-02-06\n*/\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *dsadasdasdassa\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n\n\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _setOwner(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _setOwner(newOwner);\n    }\n\n    function _setOwner(address newOwner) private {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\n\n\n\npragma solidity ^0.8.0;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\n\n\n\npragma solidity ^0.8.0;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\n\n\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n\n\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\n\n\n\n\n\n// File: @openzeppelin/contracts/token/ERC721/ERC721.sol\n\n\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString(), \".json\")) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\n\n\n\npragma solidity ^0.8.0;\n\n\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n * enumerability of all the token ids in the contract as well as all token ids owned by each\n * account.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    // Mapping from owner to list of owned token IDs\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\n\n    // Mapping from token ID to index of the owner tokens list\n    mapping(uint256 => uint256) private _ownedTokensIndex;\n\n    // Array with all token ids, used for enumeration\n    uint256[] private _allTokens;\n\n    // Mapping from token id to position in the allTokens array\n    mapping(uint256 => uint256) private _allTokensIndex;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\");\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\");\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, tokenId);\n\n        if (from == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (from != to) {\n            _removeTokenFromOwnerEnumeration(from, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (to != from) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = ERC721.balanceOf(to);\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n}\n\npragma solidity ^0.8.0;\n\n/* Internal Imports */\nimport {PhantomStorageMixin} from \"../../mixins/PhantomStorageMixin.sol\";\n\ncontract NovaNFT is ERC721Enumerable, Ownable, PhantomStorageMixin {\n    using Strings for uint256;\n\n    //Predetermined values\n    uint256 public PRICE = 1e21;\n    uint256 public MAX_NovaNFTs = 2015; //1000 WL, 15 launch team members, 1000 validators\n    address public constant payoutAddr = 0xee9Abb3A1D3D09D2E258862f69D52AEdb2623088; //Update with proper IBC Treasury Module \n    address public constant UST = 0xa47c8bf37f92aBed4A126BDA807A7b7498661acD; //TBD on address as Token doesnt yet exist on their chain\n\n    //Updated Values\n    uint256 public numNovasMinted;\n    string public baseTokenURI = \"\";\n\n    //Configuration Settings\n    bool public fNOVAClaimed = false;\n    bool public nftSaleBegun = false; \n    bool public pause = false;\n    bool public teamMintStarted = false;\n    bool public isAllowListActive = false;\n    \n    //Private mappings\n    mapping(address => uint8) private _allowList; \n    mapping(address => bool) private _isClaimed;\n\n     //Event Emitted after each mint\n    event NovaMint(address minter, bool status);\n    \n    \n    constructor( address storageFactoryAddress) PhantomStorageMixin(storageFactoryAddress) ERC721(\"NovaDao Finance\", \"NovaNFT\") {}\n\n    //=================================================================================================================\n    // Toggle Functions\n    //=================================================================================================================\n\n    function setIsAllowListActive() external onlyOwner {\n        isAllowListActive = !isAllowListActive;\n    }\n\n    function togglefNOVAClaimed() external onlyRegisteredContracts {\n       fNOVAClaimed = !fNOVAClaimed;\n    }\n\n    function toggleTeamMintStarted() external onlyOwner {\n       teamMintStarted = !teamMintStarted;\n    }\n\n    function toggleSaleBegun() external onlyRegisteredContracts {\n       nftSaleBegun = !nftSaleBegun;\n    }\n\n    function togglePause() external onlyRegisteredContracts {\n        pause = !pause;\n    }\n    \n    function setPrice(uint256 inPrice) public onlyRegisteredContracts returns (uint256) {\n        PRICE = inPrice;\n        return PRICE;\n    }\n    \n    function isClaimedBy(address owner) external view returns (bool) {\n        require(owner != address(0), \"Cannot add null address\");\n\n        return _isClaimed[owner];\n    }\n\n    //=================================================================================================================\n    // WL List Setup\n    //=================================================================================================================\n    \n    function setAllowList(address[] calldata addresses, uint8[] calldata fNovaPredetermined) external onlyOwner {\n        for (uint256 i = 0; i < addresses.length; i++) {\n            _allowList[addresses[i]] = fNovaPredetermined[i];\n        }\n    }\n\n    function addAllowList(address _address, uint8 _fNovaAmount) external onlyOwner {\n        require(msg.sender != address(0), \"Cannot add to null address\");\n        _allowList[_address] = _fNovaAmount;\n    }\n\n    function adjustNFTSupply(uint256 _newSupply) external onlyOwner {\n        MAX_NovaNFTs = _newSupply;\n    }\n\n    //=================================================================================================================\n    // Mint\n    //=================================================================================================================\n\n    function nftMint() external payable {\n        require(isAllowListActive, \"Allow list is not active\");\n        require(_allowList[msg.sender] >= 0, \"Sorry you are not WL approved\");\n        require( msg.sender != address(0), \"Cannot mint to null address\");\n        require(nftSaleBegun, \"Sorry minting period isn't currently ongoing\");\n        require(numNovasMinted < MAX_NovaNFTs, \"Minting would exceed supply!\");\n        require(!_isClaimed[msg.sender], \"You have already claimed your NFT\");\n        require(PRICE == msg.value, \"The amount desposited isn't correct\"); //How to check if 1000 deposited and UST is deposited \n        //Is there anyway to check WL onchain??? as a require statement as well without taking too much gas? \n\n        uint256 tokenId = numNovasMinted + 1;\n        numNovasMinted += 1;\n        _isClaimed[msg.sender] = true;\n         _safeMint(msg.sender, tokenId);\n\n        emit NovaMint(msg.sender, true);\n    }\n\n    //Add fNova balance for each team member as well\n    function teamMint(address _address) external payable onlyOwner{\n        require(_address != address(0), \"Cannot mint to null address\");\n        require(teamMintStarted, \"Team minting not started.\");\n        require(totalSupply() < MAX_NovaNFTs, \"All team tokens minted.\");\n        \n        uint256 tokenId = numNovasMinted + 1;\n        numNovasMinted += 1;\n        _isClaimed[_address] = true;\n         _safeMint(_address, tokenId);\n\n        emit NovaMint(_address, true);\n    }\n\n\n    //=================================================================================================================\n    // Transfer Capability\n    //=================================================================================================================\n    \n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal override {\n        //this allows minting, and allows burning and transfer post fNova allocations\n        if( from == address(0) ) {\n            super._beforeTokenTransfer;\n        } else {\n            require(fNOVAClaimed == true, \"Sorry fNova Claiming has not yet ended to transfer NFT\");\n            super._beforeTokenTransfer;\n        }\n    }\n\n    //=================================================================================================================\n    // Mint\n    //=================================================================================================================\n    \n\n    /**\n     * @notice Allow contract owner to withdraw funds directly to the treasury \n     */\n    function withdrawAll() public onlyOwner {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"Insufficent balance\");\n        _widthdraw(payoutAddr, balance);\n    }\n\n    //need to understand these functions more\n    function _widthdraw(address _address, uint256 _amount) private {\n        (bool success, ) = _address.call{ value: _amount }(\"\");\n        require(success, \"Failed to widthdraw Ether\");\n    }\n\n    \n    //=================================================================================================================\n    // TpkenURI\n    //=================================================================================================================\n    \n    function setbaseTokenURI(string memory baseURI) public onlyRegisteredContracts returns (string memory) {\n        baseTokenURI = baseURI;\n        return baseTokenURI;\n    }\n    \n    \n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n        return bytes(baseTokenURI).length > 0 ? string(abi.encodePacked(baseTokenURI, tokenId.toString(), \".json\")) : \"\";\n    }\n\n}",
  "sourceMap": "533:71:75:-:0;;;;;-1:-1:-1;;;533:71:75;;;;43875:7180:52;533:71:75;;;;;;;;-1:-1:-1;;;533:71:75;;;;;43875:7180:52;533:71:75;;;;;;;;;-1:-1:-1;533:71:75;43875:7180:52;;503:101:75;;;;;;533:71;503:101;:::i;:::-;-1:-1:-1;503:101:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;503:101:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;647:4181:75;;;669:930;;;;;;;;;;;;;;;;;647:4181;;;669:930;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;669:930:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;669:930:75;;;;;;;;;;;;;;;;-1:-1:-1;;;669:930:75;647:4181;;;1613:367;;-1:-1:-1;1613:367:75;;;;;;;;;;;;647:4181;;-1:-1:-1;647:4181:75;;;;1613:367;;;;;;;;;;;;1702:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:367;;;;;;;;;;;;;;;;;;;;;;;;;;647:4181;;;1994:687;;2051:366;;;;;;;;;;;;;647:4181;;;;1994:687;;;;;;;2022:645;;;;;;2051:366;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2022:645;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1994:687;;;647:4181;;;;2695:848;;;;;;;;2721:237;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2695:848;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:4181;;;;3557:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:4181;;3650:434;;;3676:268;;;;;;;;;;;;;647:4181;;;;;3650:434;;;;;;;;3676:268;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3650:434;;;3962:59;;;;;;;;;;;;;;;;;;;;3650:434;;;;;;;;;;;;;;;;;;;;;;;;;;647:4181;;;4098:479;;;;;;;;;;;;;;;647:4181;;;;;4098:479;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:4181;;;;4591:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:4181;;611:4217;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;611:4217:75;;;;;;;;;;;;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:4217:75;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:4217:75;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2283:41:68;;-1:-1:-1;;44030:4:52;44007:27;;-1:-1:-1;44070:4:52;44040:34;;44451:31;;;;;;;;;;-1:-1:-1;44451:31:52;;;;;;;;;:::i;:::-;-1:-1:-1;44518:32:52;;;-1:-1:-1;;44667:37:52;;;44935:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25170:113;;;;;;;;;;;-1:-1:-1;;;25170:113:52;;;;;;;;;;;;;;;;;;-1:-1:-1;;;25170:113:52;;;;25236:13;;44999:21;;25170:113;25236:13;;-1:-1:-1;;25170:113:52;25236:13;:::i;:::-;-1:-1:-1;25259:17:52;;;;:7;;:17;;;;;:::i;:::-;;25170:113;;9997:23;10007:12;:10;;;:12;;:::i;:::-;9997:9;:23::i;:::-;1637:1:11;1742:7;:22;2845:15:68;:32;;-1:-1:-1;;;;;;2845:32:68;-1:-1:-1;;;;;2845:32:68;;;;;;;;;;-1:-1:-1;43875:7180:52;;621:96;700:10;;621:96::o;11171:169::-;11245:6;;;-1:-1:-1;;;;;11261:17:52;;;-1:-1:-1;;;;;;11261:17:52;;;;;;;11293:40;;11245:6;;;11261:17;11245:6;;11293:40;;11226:16;;11293:40;11216:124;11171:169;:::o;43875:7180::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;43875:7180:52;;;-1:-1:-1;43875:7180:52;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:290:104;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:104;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:104:o;309:380::-;388:1;384:12;;;;431;;;452:61;;506:4;498:6;494:17;484:27;;452:61;559:2;551:6;548:14;528:18;525:38;522:161;;;605:10;600:3;596:20;593:1;586:31;640:4;637:1;630:15;668:4;665:1;658:15;522:161;;309:380;;;:::o;:::-;43875:7180:52;;;;;;",
  "sourcePath": "contracts/level0/launch/NovaNFT.sol",
  "type": "contract"
}