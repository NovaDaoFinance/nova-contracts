{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "storageFactoryAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prod1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        }
      ],
      "name": "PRBMath__MulDivOverflow",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "PhantomStorageMixin__ContractNotFoundByAddressOrIsOutdated",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "contractName",
          "type": "bytes32"
        }
      ],
      "name": "PhantomStorageMixin__ContractNotFoundByNameOrIsOutdated",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "PhantomStorageMixin__UserIsNotGuardian",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dexRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dexFactory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "inAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "inToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "outToken",
          "type": "address"
        }
      ],
      "name": "getQuote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "13": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/security/ReentrancyGuard.sol",
    "32": "/Users/admin/.brownie/packages/hifi-finance/prb-math@2.4.1/contracts/PRBMath.sol",
    "34": "/Users/admin/.brownie/packages/hifi-finance/prb-math@2.4.1/contracts/PRBMathUD60x18.sol",
    "61": "contracts/mixins/PhantomStorageMixin.sol",
    "62": "contracts/mocks/DexRouterMock.sol",
    "66": "contracts/storage/PhantomStorageKeys.sol",
    "88": "interfaces/mixins/IPhantomStorageMixin.sol"
  },
  "ast": {
    "absolutePath": "contracts/mocks/DexRouterMock.sol",
    "exportedSymbols": {
      "DexRouterMock": [
        9024
      ],
      "PRBMathUD60x18": [
        11082
      ],
      "PhantomStorageMixin": [
        8981
      ]
    },
    "id": 9025,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8983,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:24:62"
      },
      {
        "absolutePath": "/Users/admin/.brownie/packages/hifi-finance/prb-math@2.4.1/contracts/PRBMathUD60x18.sol",
        "file": "@hifi-finance/prb-math/contracts/PRBMathUD60x18.sol",
        "id": 8985,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9025,
        "sourceUnit": 11083,
        "src": "83:83:62",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8984,
              "name": "PRBMathUD60x18",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "91:14:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/mixins/PhantomStorageMixin.sol",
        "file": "../mixins/PhantomStorageMixin.sol",
        "id": 8987,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9025,
        "sourceUnit": 8982,
        "src": "191:70:62",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8986,
              "name": "PhantomStorageMixin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "199:19:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8988,
              "name": "PhantomStorageMixin",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8981,
              "src": "289:19:62"
            },
            "id": 8989,
            "nodeType": "InheritanceSpecifier",
            "src": "289:19:62"
          }
        ],
        "canonicalName": "DexRouterMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 9024,
        "linearizedBaseContracts": [
          9024,
          8981,
          17394,
          17378,
          10472
        ],
        "name": "DexRouterMock",
        "nameLocation": "272:13:62",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8992,
            "libraryName": {
              "id": 8990,
              "name": "PRBMathUD60x18",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11082,
              "src": "321:14:62"
            },
            "nodeType": "UsingForDirective",
            "src": "315:33:62",
            "typeName": {
              "id": 8991,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "340:7:62",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 9001,
              "nodeType": "Block",
              "src": "440:23:62",
              "statements": [
                {
                  "functionReturnParameters": 8999,
                  "id": 9000,
                  "nodeType": "Return",
                  "src": "450:7:62"
                }
              ]
            },
            "id": 9002,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8997,
                    "name": "storageFactoryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8994,
                    "src": "417:21:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 8998,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8996,
                  "name": "PhantomStorageMixin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8981,
                  "src": "397:19:62"
                },
                "nodeType": "ModifierInvocation",
                "src": "397:42:62"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8994,
                  "mutability": "mutable",
                  "name": "storageFactoryAddress",
                  "nameLocation": "374:21:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 9002,
                  "src": "366:29:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "365:31:62"
            },
            "returnParameters": {
              "id": 8999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "440:0:62"
            },
            "scope": 9024,
            "src": "354:109:62",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9022,
              "nodeType": "Block",
              "src": "665:39:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "35",
                        "id": 9019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "695:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "expression": {
                        "id": 9017,
                        "name": "inAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9008,
                        "src": "682:8:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 9018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10566,
                      "src": "682:12:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 9020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "682:15:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9016,
                  "id": 9021,
                  "nodeType": "Return",
                  "src": "675:22:62"
                }
              ]
            },
            "functionSelector": "2a0bbedf",
            "id": 9023,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getQuote",
            "nameLocation": "478:8:62",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9004,
                  "mutability": "mutable",
                  "name": "dexRouter",
                  "nameLocation": "504:9:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 9023,
                  "src": "496:17:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9006,
                  "mutability": "mutable",
                  "name": "dexFactory",
                  "nameLocation": "531:10:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 9023,
                  "src": "523:18:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9008,
                  "mutability": "mutable",
                  "name": "inAmount",
                  "nameLocation": "559:8:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 9023,
                  "src": "551:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "551:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9010,
                  "mutability": "mutable",
                  "name": "inToken",
                  "nameLocation": "585:7:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 9023,
                  "src": "577:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9012,
                  "mutability": "mutable",
                  "name": "outToken",
                  "nameLocation": "610:8:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 9023,
                  "src": "602:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "602:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "486:138:62"
            },
            "returnParameters": {
              "id": 9016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9015,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9023,
                  "src": "656:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "655:9:62"
            },
            "scope": 9024,
            "src": "469:235:62",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 9025,
        "src": "263:443:62",
        "usedErrors": [
          17385,
          17389,
          17393,
          18341
        ]
      }
    ],
    "src": "35:672:62"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "DexRouterMock",
  "coverageMap": {
    "branches": {
      "13": {},
      "32": {
        "PRBMath.mulDiv": {
          "13": [
            15860,
            15870,
            false
          ],
          "14": [
            16092,
            16112,
            false
          ]
        }
      },
      "34": {},
      "61": {},
      "62": {},
      "66": {},
      "88": {}
    },
    "statements": {
      "13": {},
      "32": {
        "PRBMath.mulDiv": {
          "2": [
            15914,
            15942
          ],
          "3": [
            15970,
            15983
          ],
          "4": [
            16088,
            16189
          ],
          "5": [
            18174,
            18210
          ],
          "6": [
            18243,
            18279
          ],
          "7": [
            18313,
            18349
          ],
          "8": [
            18383,
            18419
          ],
          "9": [
            18453,
            18489
          ],
          "10": [
            18524,
            18560
          ],
          "11": [
            17576,
            17600
          ],
          "12": [
            18994,
            19018
          ]
        }
      },
      "34": {
        "PRBMathUD60x18.div": {
          "1": [
            3923,
            3959
          ]
        }
      },
      "61": {},
      "62": {
        "DexRouterMock.getQuote": {
          "0": [
            675,
            697
          ]
        }
      },
      "66": {},
      "88": {}
    }
  },
  "dependencies": [
    "IPhantomStorageMixin",
    "hifi-finance/prb-math@2.4.1/PRBMath",
    "hifi-finance/prb-math@2.4.1/PRBMathUD60x18",
    "PhantomStorageKeys",
    "PhantomStorageMixin",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/ReentrancyGuard"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80632a0bbedf14610030575b600080fd5b61004361003e366004610175565b610055565b60405190815260200160405180910390f35b600061006284600561006c565b9695505050505050565b600061008183670de0b6b3a764000084610088565b9392505050565b6000808060001985870985870292508281108382030391505080600014156100c3578382816100b9576100b96101d3565b0492505050610081565b8381106100f157604051631dcf306360e21b8152600481018290526024810185905260440160405180910390fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b80356001600160a01b038116811461017057600080fd5b919050565b600080600080600060a0868803121561018d57600080fd5b61019686610159565b94506101a460208701610159565b9350604086013592506101b960608701610159565b91506101c760808701610159565b90509295509295909350565b634e487b7160e01b600052601260045260246000fdfea26469706673582212202453cc88d80c29c4aca98854147029652640097ba0cf978c8984472556ebed0b64736f6c634300080a0033",
  "deployedSourceMap": "263:443:62:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;469:235;;;;;;:::i;:::-;;:::i;:::-;;;821:25:91;;;809:2;794:18;469:235:62;;;;;;;;656:7;682:15;:8;695:1;682:12;:15::i;:::-;675:22;469:235;-1:-1:-1;;;;;;469:235:62:o;3839:127:34:-;3897:14;3932:27;3947:1;1359:4;3957:1;3932:14;:27::i;:::-;3923:36;3839:127;-1:-1:-1;;;3839:127:34:o;15079:3983:32:-;15191:14;;;-1:-1:-1;;15680:1:32;15677;15670:20;15719:1;15716;15712:9;15703:18;;15770:5;15766:2;15763:13;15755:5;15751:2;15747:14;15743:34;15734:43;;;15860:5;15869:1;15860:10;15856:138;;;15931:11;15923:5;:19;;;;;:::i;:::-;;15914:28;;15970:13;;;;15856:138;16101:11;16092:5;:20;16088:101;;16135:43;;-1:-1:-1;;;16135:43:32;;;;;1163:25:91;;;1204:18;;;1197:34;;;1136:18;;16135:43:32;;;;;;;16088:101;16424:17;16547:11;16544:1;16541;16534:25;17956:1;17937;17093;17078:12;;:16;;17063:32;;17201:25;;;;17937:15;;;17936:21;;18189;;;18185:25;;18174:36;18258:21;;;18254:25;;18243:36;18328:21;;;18324:25;;18313:36;18398:21;;;18394:25;;18383:36;18468:21;;;18464:25;;18453:36;18539:21;;;18535:25;;;18524:36;17045:15;17467;;;17463:29;;;17459:37;;;16653:20;;;16642:32;;;17585:15;;;;16696:21;;17305:19;;;;17576:24;;;;19003:15;;15079:3983;-1:-1:-1;;;;15079:3983:32:o;14:173:91:-;82:20;;-1:-1:-1;;;;;131:31:91;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:478::-;287:6;295;303;311;319;372:3;360:9;351:7;347:23;343:33;340:53;;;389:1;386;379:12;340:53;412:29;431:9;412:29;:::i;:::-;402:39;;460:38;494:2;483:9;479:18;460:38;:::i;:::-;450:48;;545:2;534:9;530:18;517:32;507:42;;568:38;602:2;591:9;587:18;568:38;:::i;:::-;558:48;;625:39;659:3;648:9;644:19;625:39;:::i;:::-;615:49;;192:478;;;;;;;;:::o;857:127::-;918:10;913:3;909:20;906:1;899:31;949:4;946:1;939:15;973:4;970:1;963:15",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "PRBMath__MulDivOverflow(uint256,uint256)": [
        {
          "notice": "Emitted when the result overflows uint256."
        }
      ]
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    263,
    706
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A0BBEDF EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x175 JUMP JUMPDEST PUSH2 0x55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x62 DUP5 PUSH1 0x5 PUSH2 0x6C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81 DUP4 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x88 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 PUSH1 0x0 EQ ISZERO PUSH2 0xC3 JUMPI DUP4 DUP3 DUP2 PUSH2 0xB9 JUMPI PUSH2 0xB9 PUSH2 0x1D3 JUMP JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x81 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0xF1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1DCF3063 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x2 PUSH1 0x3 PUSH1 0x1 DUP9 NOT DUP2 ADD DUP10 AND SWAP9 DUP10 SWAP1 DIV SWAP2 DUP3 MUL DUP4 XOR DUP1 DUP4 MUL DUP5 SUB MUL DUP1 DUP4 MUL DUP5 SUB MUL DUP1 DUP4 MUL DUP5 SUB MUL DUP1 DUP4 MUL DUP5 SUB MUL DUP1 DUP4 MUL DUP5 SUB MUL SWAP2 DUP3 MUL SWAP1 SWAP3 SUB MUL PUSH1 0x0 DUP9 SWAP1 SUB DUP9 SWAP1 DIV SWAP1 SWAP2 ADD DUP6 DUP4 GT SWAP1 SWAP5 SUB SWAP4 SWAP1 SWAP4 MUL SWAP4 SUB SWAP5 SWAP1 SWAP5 DIV SWAP2 SWAP1 SWAP2 OR MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x196 DUP7 PUSH2 0x159 JUMP JUMPDEST SWAP5 POP PUSH2 0x1A4 PUSH1 0x20 DUP8 ADD PUSH2 0x159 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH2 0x1B9 PUSH1 0x60 DUP8 ADD PUSH2 0x159 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C7 PUSH1 0x80 DUP8 ADD PUSH2 0x159 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 MSTORE8 0xCC DUP9 0xD8 0xC 0x29 0xC4 0xAC 0xA9 DUP9 SLOAD EQ PUSH17 0x29652640097BA0CF978C8984472556EBED SIGNEXTEND PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        263,
        706
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "MSTORE",
      "path": "62"
    },
    "5": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "CALLVALUE",
      "path": "62"
    },
    "6": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "DUP1",
      "path": "62"
    },
    "7": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "ISZERO",
      "path": "62"
    },
    "8": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "JUMPI",
      "path": "62"
    },
    "12": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "DUP1",
      "path": "62"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "REVERT",
      "path": "62"
    },
    "16": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "17": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "POP",
      "path": "62"
    },
    "18": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "CALLDATASIZE",
      "path": "62"
    },
    "21": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "LT",
      "path": "62"
    },
    "22": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x2B"
    },
    "25": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "JUMPI",
      "path": "62"
    },
    "26": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "CALLDATALOAD",
      "path": "62"
    },
    "29": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "SHR",
      "path": "62"
    },
    "32": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "DUP1",
      "path": "62"
    },
    "33": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "PUSH4",
      "path": "62",
      "value": "0x2A0BBEDF"
    },
    "38": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "EQ",
      "path": "62"
    },
    "39": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x30"
    },
    "42": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "JUMPI",
      "path": "62"
    },
    "43": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "44": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x0"
    },
    "46": {
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "DUP1",
      "path": "62"
    },
    "47": {
      "first_revert": true,
      "fn": null,
      "offset": [
        263,
        706
      ],
      "op": "REVERT",
      "path": "62"
    },
    "48": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "49": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x43"
    },
    "52": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x3E"
    },
    "55": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "CALLDATASIZE",
      "path": "62"
    },
    "56": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x4"
    },
    "58": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x175"
    },
    "61": {
      "fn": "DexRouterMock.getQuote",
      "jump": "i",
      "offset": [
        469,
        704
      ],
      "op": "JUMP",
      "path": "62"
    },
    "62": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "63": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x55"
    },
    "66": {
      "fn": "DexRouterMock.getQuote",
      "jump": "i",
      "offset": [
        469,
        704
      ],
      "op": "JUMP",
      "path": "62"
    },
    "67": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "68": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x40"
    },
    "70": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "71": {
      "op": "SWAP1"
    },
    "72": {
      "op": "DUP2"
    },
    "73": {
      "op": "MSTORE"
    },
    "74": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "76": {
      "op": "ADD"
    },
    "77": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x40"
    },
    "79": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "80": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "DUP1",
      "path": "62"
    },
    "81": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "SWAP2",
      "path": "62"
    },
    "82": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "SUB",
      "path": "62"
    },
    "83": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "84": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "RETURN",
      "path": "62"
    },
    "85": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "86": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        656,
        663
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x0"
    },
    "88": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        682,
        697
      ],
      "op": "PUSH2",
      "path": "62",
      "statement": 0,
      "value": "0x62"
    },
    "91": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        682,
        690
      ],
      "op": "DUP5",
      "path": "62"
    },
    "92": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        695,
        696
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x5"
    },
    "94": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        682,
        694
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x6C"
    },
    "97": {
      "fn": "DexRouterMock.getQuote",
      "jump": "i",
      "offset": [
        682,
        697
      ],
      "op": "JUMP",
      "path": "62"
    },
    "98": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        682,
        697
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "99": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        675,
        697
      ],
      "op": "SWAP7",
      "path": "62"
    },
    "100": {
      "fn": "DexRouterMock.getQuote",
      "offset": [
        469,
        704
      ],
      "op": "SWAP6",
      "path": "62"
    },
    "101": {
      "op": "POP"
    },
    "102": {
      "op": "POP"
    },
    "103": {
      "op": "POP"
    },
    "104": {
      "op": "POP"
    },
    "105": {
      "op": "POP"
    },
    "106": {
      "op": "POP"
    },
    "107": {
      "fn": "DexRouterMock.getQuote",
      "jump": "o",
      "offset": [
        469,
        704
      ],
      "op": "JUMP",
      "path": "62"
    },
    "108": {
      "fn": "PRBMathUD60x18.div",
      "offset": [
        3839,
        3966
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "109": {
      "fn": "PRBMathUD60x18.div",
      "offset": [
        3897,
        3911
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "111": {
      "fn": "PRBMathUD60x18.div",
      "offset": [
        3932,
        3959
      ],
      "op": "PUSH2",
      "path": "34",
      "statement": 1,
      "value": "0x81"
    },
    "114": {
      "fn": "PRBMathUD60x18.div",
      "offset": [
        3947,
        3948
      ],
      "op": "DUP4",
      "path": "34"
    },
    "115": {
      "offset": [
        1359,
        1363
      ],
      "op": "PUSH8",
      "path": "34",
      "value": "0xDE0B6B3A7640000"
    },
    "124": {
      "fn": "PRBMathUD60x18.div",
      "offset": [
        3957,
        3958
      ],
      "op": "DUP5",
      "path": "34"
    },
    "125": {
      "fn": "PRBMathUD60x18.div",
      "offset": [
        3932,
        3946
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x88"
    },
    "128": {
      "fn": "PRBMathUD60x18.div",
      "jump": "i",
      "offset": [
        3932,
        3959
      ],
      "op": "JUMP",
      "path": "34"
    },
    "129": {
      "fn": "PRBMathUD60x18.div",
      "offset": [
        3932,
        3959
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "130": {
      "fn": "PRBMathUD60x18.div",
      "offset": [
        3923,
        3959
      ],
      "op": "SWAP4",
      "path": "34"
    },
    "131": {
      "fn": "PRBMathUD60x18.div",
      "offset": [
        3839,
        3966
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "132": {
      "op": "POP"
    },
    "133": {
      "op": "POP"
    },
    "134": {
      "op": "POP"
    },
    "135": {
      "fn": "PRBMathUD60x18.div",
      "jump": "o",
      "offset": [
        3839,
        3966
      ],
      "op": "JUMP",
      "path": "34"
    },
    "136": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15079,
        19062
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "137": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15191,
        15205
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "139": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15191,
        15205
      ],
      "op": "DUP1",
      "path": "32"
    },
    "140": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15191,
        15205
      ],
      "op": "DUP1",
      "path": "32"
    },
    "141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "143": {
      "op": "NOT"
    },
    "144": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15680,
        15681
      ],
      "op": "DUP6",
      "path": "32"
    },
    "145": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15677,
        15678
      ],
      "op": "DUP8",
      "path": "32"
    },
    "146": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15670,
        15690
      ],
      "op": "MULMOD",
      "path": "32"
    },
    "147": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15719,
        15720
      ],
      "op": "DUP6",
      "path": "32"
    },
    "148": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15716,
        15717
      ],
      "op": "DUP8",
      "path": "32"
    },
    "149": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15712,
        15721
      ],
      "op": "MUL",
      "path": "32"
    },
    "150": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15703,
        15721
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "151": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15703,
        15721
      ],
      "op": "POP",
      "path": "32"
    },
    "152": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15770,
        15775
      ],
      "op": "DUP3",
      "path": "32"
    },
    "153": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15766,
        15768
      ],
      "op": "DUP2",
      "path": "32"
    },
    "154": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15763,
        15776
      ],
      "op": "LT",
      "path": "32"
    },
    "155": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15755,
        15760
      ],
      "op": "DUP4",
      "path": "32"
    },
    "156": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15751,
        15753
      ],
      "op": "DUP3",
      "path": "32"
    },
    "157": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15747,
        15761
      ],
      "op": "SUB",
      "path": "32"
    },
    "158": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15743,
        15777
      ],
      "op": "SUB",
      "path": "32"
    },
    "159": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15734,
        15777
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "160": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15734,
        15777
      ],
      "op": "POP",
      "path": "32"
    },
    "161": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15734,
        15777
      ],
      "op": "POP",
      "path": "32"
    },
    "162": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15860,
        15865
      ],
      "op": "DUP1",
      "path": "32"
    },
    "163": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15869,
        15870
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "165": {
      "branch": 13,
      "fn": "PRBMath.mulDiv",
      "offset": [
        15860,
        15870
      ],
      "op": "EQ",
      "path": "32"
    },
    "166": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15856,
        15994
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "167": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15856,
        15994
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xC3"
    },
    "170": {
      "branch": 13,
      "fn": "PRBMath.mulDiv",
      "offset": [
        15856,
        15994
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "171": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15931,
        15942
      ],
      "op": "DUP4",
      "path": "32",
      "statement": 2
    },
    "172": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15928
      ],
      "op": "DUP3",
      "path": "32"
    },
    "173": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "DUP2",
      "path": "32"
    },
    "174": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xB9"
    },
    "177": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "178": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xB9"
    },
    "181": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1D3"
    },
    "184": {
      "fn": "PRBMath.mulDiv",
      "jump": "i",
      "offset": [
        15923,
        15942
      ],
      "op": "JUMP",
      "path": "32"
    },
    "185": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "186": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "DIV",
      "path": "32"
    },
    "187": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15914,
        15942
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "188": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15914,
        15942
      ],
      "op": "POP",
      "path": "32"
    },
    "189": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15970,
        15983
      ],
      "op": "POP",
      "path": "32",
      "statement": 3
    },
    "190": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15970,
        15983
      ],
      "op": "POP",
      "path": "32"
    },
    "191": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15970,
        15983
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x81"
    },
    "194": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15970,
        15983
      ],
      "op": "JUMP",
      "path": "32"
    },
    "195": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15856,
        15994
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "196": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16101,
        16112
      ],
      "op": "DUP4",
      "path": "32",
      "statement": 4
    },
    "197": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16092,
        16097
      ],
      "op": "DUP2",
      "path": "32"
    },
    "198": {
      "branch": 14,
      "fn": "PRBMath.mulDiv",
      "offset": [
        16092,
        16112
      ],
      "op": "LT",
      "path": "32"
    },
    "199": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16088,
        16189
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xF1"
    },
    "202": {
      "branch": 14,
      "fn": "PRBMath.mulDiv",
      "offset": [
        16088,
        16189
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "203": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "205": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "206": {
      "op": "PUSH4",
      "value": "0x1DCF3063"
    },
    "211": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "213": {
      "op": "SHL"
    },
    "214": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "DUP2",
      "path": "32"
    },
    "215": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "216": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "218": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "DUP2",
      "path": "32"
    },
    "219": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "ADD",
      "path": "32"
    },
    "220": {
      "op": "DUP3"
    },
    "221": {
      "op": "SWAP1"
    },
    "222": {
      "op": "MSTORE"
    },
    "223": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "225": {
      "op": "DUP2"
    },
    "226": {
      "op": "ADD"
    },
    "227": {
      "op": "DUP6"
    },
    "228": {
      "op": "SWAP1"
    },
    "229": {
      "op": "MSTORE"
    },
    "230": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "232": {
      "op": "ADD"
    },
    "233": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "235": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "236": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "DUP1",
      "path": "32"
    },
    "237": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "238": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "SUB",
      "path": "32"
    },
    "239": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "240": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "REVERT",
      "path": "32"
    },
    "241": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16088,
        16189
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "242": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16424,
        16441
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "244": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16547,
        16558
      ],
      "op": "DUP5",
      "path": "32"
    },
    "245": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16544,
        16545
      ],
      "op": "DUP7",
      "path": "32"
    },
    "246": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16541,
        16542
      ],
      "op": "DUP9",
      "path": "32"
    },
    "247": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16534,
        16559
      ],
      "op": "MULMOD",
      "path": "32"
    },
    "248": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17956,
        17957
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x2"
    },
    "250": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17937,
        17938
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x3"
    },
    "252": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17093,
        17094
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "254": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17078,
        17090
      ],
      "op": "DUP9",
      "path": "32"
    },
    "255": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17078,
        17090
      ],
      "op": "NOT",
      "path": "32"
    },
    "256": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17078,
        17094
      ],
      "op": "DUP2",
      "path": "32"
    },
    "257": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17078,
        17094
      ],
      "op": "ADD",
      "path": "32"
    },
    "258": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17063,
        17095
      ],
      "op": "DUP10",
      "path": "32"
    },
    "259": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17063,
        17095
      ],
      "op": "AND",
      "path": "32"
    },
    "260": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17201,
        17226
      ],
      "op": "SWAP9",
      "path": "32"
    },
    "261": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17201,
        17226
      ],
      "op": "DUP10",
      "path": "32"
    },
    "262": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17201,
        17226
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "263": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17201,
        17226
      ],
      "op": "DIV",
      "path": "32"
    },
    "264": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17937,
        17952
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "265": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17937,
        17952
      ],
      "op": "DUP3",
      "path": "32"
    },
    "266": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17937,
        17952
      ],
      "op": "MUL",
      "path": "32"
    },
    "267": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17936,
        17957
      ],
      "op": "DUP4",
      "path": "32"
    },
    "268": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17936,
        17957
      ],
      "op": "XOR",
      "path": "32"
    },
    "269": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18189,
        18210
      ],
      "op": "DUP1",
      "path": "32",
      "statement": 5
    },
    "270": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18189,
        18210
      ],
      "op": "DUP4",
      "path": "32"
    },
    "271": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18189,
        18210
      ],
      "op": "MUL",
      "path": "32"
    },
    "272": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18185,
        18210
      ],
      "op": "DUP5",
      "path": "32"
    },
    "273": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18185,
        18210
      ],
      "op": "SUB",
      "path": "32"
    },
    "274": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18174,
        18210
      ],
      "op": "MUL",
      "path": "32"
    },
    "275": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18258,
        18279
      ],
      "op": "DUP1",
      "path": "32",
      "statement": 6
    },
    "276": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18258,
        18279
      ],
      "op": "DUP4",
      "path": "32"
    },
    "277": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18258,
        18279
      ],
      "op": "MUL",
      "path": "32"
    },
    "278": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18254,
        18279
      ],
      "op": "DUP5",
      "path": "32"
    },
    "279": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18254,
        18279
      ],
      "op": "SUB",
      "path": "32"
    },
    "280": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18243,
        18279
      ],
      "op": "MUL",
      "path": "32"
    },
    "281": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18328,
        18349
      ],
      "op": "DUP1",
      "path": "32",
      "statement": 7
    },
    "282": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18328,
        18349
      ],
      "op": "DUP4",
      "path": "32"
    },
    "283": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18328,
        18349
      ],
      "op": "MUL",
      "path": "32"
    },
    "284": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18324,
        18349
      ],
      "op": "DUP5",
      "path": "32"
    },
    "285": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18324,
        18349
      ],
      "op": "SUB",
      "path": "32"
    },
    "286": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18313,
        18349
      ],
      "op": "MUL",
      "path": "32"
    },
    "287": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18398,
        18419
      ],
      "op": "DUP1",
      "path": "32",
      "statement": 8
    },
    "288": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18398,
        18419
      ],
      "op": "DUP4",
      "path": "32"
    },
    "289": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18398,
        18419
      ],
      "op": "MUL",
      "path": "32"
    },
    "290": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18394,
        18419
      ],
      "op": "DUP5",
      "path": "32"
    },
    "291": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18394,
        18419
      ],
      "op": "SUB",
      "path": "32"
    },
    "292": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18383,
        18419
      ],
      "op": "MUL",
      "path": "32"
    },
    "293": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18468,
        18489
      ],
      "op": "DUP1",
      "path": "32",
      "statement": 9
    },
    "294": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18468,
        18489
      ],
      "op": "DUP4",
      "path": "32"
    },
    "295": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18468,
        18489
      ],
      "op": "MUL",
      "path": "32"
    },
    "296": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18464,
        18489
      ],
      "op": "DUP5",
      "path": "32"
    },
    "297": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18464,
        18489
      ],
      "op": "SUB",
      "path": "32"
    },
    "298": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18453,
        18489
      ],
      "op": "MUL",
      "path": "32"
    },
    "299": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18539,
        18560
      ],
      "op": "SWAP2",
      "path": "32",
      "statement": 10
    },
    "300": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18539,
        18560
      ],
      "op": "DUP3",
      "path": "32"
    },
    "301": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18539,
        18560
      ],
      "op": "MUL",
      "path": "32"
    },
    "302": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18535,
        18560
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "303": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18535,
        18560
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "304": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18535,
        18560
      ],
      "op": "SUB",
      "path": "32"
    },
    "305": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18524,
        18560
      ],
      "op": "MUL",
      "path": "32"
    },
    "306": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17045,
        17060
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "308": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17467,
        17482
      ],
      "op": "DUP9",
      "path": "32"
    },
    "309": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17467,
        17482
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "310": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17467,
        17482
      ],
      "op": "SUB",
      "path": "32"
    },
    "311": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17463,
        17492
      ],
      "op": "DUP9",
      "path": "32"
    },
    "312": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17463,
        17492
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "313": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17463,
        17492
      ],
      "op": "DIV",
      "path": "32"
    },
    "314": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17459,
        17496
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "315": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17459,
        17496
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "316": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17459,
        17496
      ],
      "op": "ADD",
      "path": "32"
    },
    "317": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16653,
        16673
      ],
      "op": "DUP6",
      "path": "32"
    },
    "318": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16653,
        16673
      ],
      "op": "DUP4",
      "path": "32"
    },
    "319": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16653,
        16673
      ],
      "op": "GT",
      "path": "32"
    },
    "320": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16642,
        16674
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "321": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16642,
        16674
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "322": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16642,
        16674
      ],
      "op": "SUB",
      "path": "32"
    },
    "323": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17585,
        17600
      ],
      "op": "SWAP4",
      "path": "32",
      "statement": 11
    },
    "324": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17585,
        17600
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "325": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17585,
        17600
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "326": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17585,
        17600
      ],
      "op": "MUL",
      "path": "32"
    },
    "327": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16696,
        16717
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "328": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16696,
        16717
      ],
      "op": "SUB",
      "path": "32"
    },
    "329": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17305,
        17324
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "330": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17305,
        17324
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "331": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17305,
        17324
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "332": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17305,
        17324
      ],
      "op": "DIV",
      "path": "32"
    },
    "333": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17576,
        17600
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "334": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17576,
        17600
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "335": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17576,
        17600
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "336": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17576,
        17600
      ],
      "op": "OR",
      "path": "32"
    },
    "337": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        19003,
        19018
      ],
      "op": "MUL",
      "path": "32",
      "statement": 12
    },
    "338": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        19003,
        19018
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "339": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15079,
        19062
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "340": {
      "op": "POP"
    },
    "341": {
      "op": "POP"
    },
    "342": {
      "op": "POP"
    },
    "343": {
      "op": "POP"
    },
    "344": {
      "fn": "PRBMath.mulDiv",
      "jump": "o",
      "offset": [
        15079,
        19062
      ],
      "op": "JUMP",
      "path": "32"
    },
    "345": {
      "op": "JUMPDEST"
    },
    "346": {
      "op": "DUP1"
    },
    "347": {
      "op": "CALLDATALOAD"
    },
    "348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "354": {
      "op": "SHL"
    },
    "355": {
      "op": "SUB"
    },
    "356": {
      "op": "DUP2"
    },
    "357": {
      "op": "AND"
    },
    "358": {
      "op": "DUP2"
    },
    "359": {
      "op": "EQ"
    },
    "360": {
      "op": "PUSH2",
      "value": "0x170"
    },
    "363": {
      "op": "JUMPI"
    },
    "364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "366": {
      "op": "DUP1"
    },
    "367": {
      "op": "REVERT"
    },
    "368": {
      "op": "JUMPDEST"
    },
    "369": {
      "op": "SWAP2"
    },
    "370": {
      "op": "SWAP1"
    },
    "371": {
      "op": "POP"
    },
    "372": {
      "jump": "o",
      "op": "JUMP"
    },
    "373": {
      "op": "JUMPDEST"
    },
    "374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "376": {
      "op": "DUP1"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "379": {
      "op": "DUP1"
    },
    "380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "384": {
      "op": "DUP7"
    },
    "385": {
      "op": "DUP9"
    },
    "386": {
      "op": "SUB"
    },
    "387": {
      "op": "SLT"
    },
    "388": {
      "op": "ISZERO"
    },
    "389": {
      "op": "PUSH2",
      "value": "0x18D"
    },
    "392": {
      "op": "JUMPI"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "395": {
      "op": "DUP1"
    },
    "396": {
      "op": "REVERT"
    },
    "397": {
      "op": "JUMPDEST"
    },
    "398": {
      "op": "PUSH2",
      "value": "0x196"
    },
    "401": {
      "op": "DUP7"
    },
    "402": {
      "op": "PUSH2",
      "value": "0x159"
    },
    "405": {
      "jump": "i",
      "op": "JUMP"
    },
    "406": {
      "op": "JUMPDEST"
    },
    "407": {
      "op": "SWAP5"
    },
    "408": {
      "op": "POP"
    },
    "409": {
      "op": "PUSH2",
      "value": "0x1A4"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "414": {
      "op": "DUP8"
    },
    "415": {
      "op": "ADD"
    },
    "416": {
      "op": "PUSH2",
      "value": "0x159"
    },
    "419": {
      "jump": "i",
      "op": "JUMP"
    },
    "420": {
      "op": "JUMPDEST"
    },
    "421": {
      "op": "SWAP4"
    },
    "422": {
      "op": "POP"
    },
    "423": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "425": {
      "op": "DUP7"
    },
    "426": {
      "op": "ADD"
    },
    "427": {
      "op": "CALLDATALOAD"
    },
    "428": {
      "op": "SWAP3"
    },
    "429": {
      "op": "POP"
    },
    "430": {
      "op": "PUSH2",
      "value": "0x1B9"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "435": {
      "op": "DUP8"
    },
    "436": {
      "op": "ADD"
    },
    "437": {
      "op": "PUSH2",
      "value": "0x159"
    },
    "440": {
      "jump": "i",
      "op": "JUMP"
    },
    "441": {
      "op": "JUMPDEST"
    },
    "442": {
      "op": "SWAP2"
    },
    "443": {
      "op": "POP"
    },
    "444": {
      "op": "PUSH2",
      "value": "0x1C7"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "449": {
      "op": "DUP8"
    },
    "450": {
      "op": "ADD"
    },
    "451": {
      "op": "PUSH2",
      "value": "0x159"
    },
    "454": {
      "jump": "i",
      "op": "JUMP"
    },
    "455": {
      "op": "JUMPDEST"
    },
    "456": {
      "op": "SWAP1"
    },
    "457": {
      "op": "POP"
    },
    "458": {
      "op": "SWAP3"
    },
    "459": {
      "op": "SWAP6"
    },
    "460": {
      "op": "POP"
    },
    "461": {
      "op": "SWAP3"
    },
    "462": {
      "op": "SWAP6"
    },
    "463": {
      "op": "SWAP1"
    },
    "464": {
      "op": "SWAP4"
    },
    "465": {
      "op": "POP"
    },
    "466": {
      "jump": "o",
      "op": "JUMP"
    },
    "467": {
      "op": "JUMPDEST"
    },
    "468": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "473": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "475": {
      "op": "SHL"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "478": {
      "op": "MSTORE"
    },
    "479": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "483": {
      "op": "MSTORE"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "488": {
      "op": "REVERT"
    }
  },
  "sha1": "300450930a6b62530ede1db39f29f2fa8a2a2201",
  "source": "/* SPDX-License-Identifier: MIT */\npragma solidity =0.8.10;\n\n/* Package Imports */\nimport {PRBMathUD60x18} from \"@hifi-finance/prb-math/contracts/PRBMathUD60x18.sol\";\n\n/* Internal Imports */\nimport {PhantomStorageMixin} from \"../mixins/PhantomStorageMixin.sol\";\n\ncontract DexRouterMock is PhantomStorageMixin {\n    using PRBMathUD60x18 for uint256;\n\n    constructor(address storageFactoryAddress) PhantomStorageMixin(storageFactoryAddress) {\n        return;\n    }\n\n    function getQuote(\n        address dexRouter,\n        address dexFactory,\n        uint256 inAmount,\n        address inToken,\n        address outToken\n    ) external view virtual returns (uint256) {\n        return inAmount.div(5);\n    }\n}\n",
  "sourceMap": "533:71:66:-:0;;;;;-1:-1:-1;;;533:71:66;;;;263:443:62;533:71:66;;;;;;;;-1:-1:-1;;;533:71:66;;;;;263:443:62;533:71:66;;;;;;;;;-1:-1:-1;533:71:66;263:443:62;;-1:-1:-1;;503:101:66;;-1:-1:-1;;533:71:66;503:101;:::i;:::-;-1:-1:-1;503:101:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;503:101:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;647:3557:66;;;669:700;;;;;;;;;;;;;;;;;647:3557;;;669:700;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;669:700:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;669:700:66;;;;;;;;;;;;;;;;-1:-1:-1;;;669:700:66;647:3557;;;1383:367;;-1:-1:-1;1383:367:66;;;;;;;;;;;;647:3557;;-1:-1:-1;647:3557:66;;;;1383:367;;;;;;;;;;;;1472:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1383:367;;;;;;;;;;;;;;;;;;;;;;;;;;647:3557;;;1764:687;;1821:366;;;;;;;;;;;;;647:3557;;;;1764:687;;;;;;;1792:645;;;;;;1821:366;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1792:645;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1764:687;;;647:3557;;;;2465:454;;;;;;;;2491:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2465:454;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:3557;;;;2933:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:3557;;3026:434;;;3052:268;;;;;;;;;;;;;647:3557;;;;;3026:434;;;;;;;;3052:268;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3026:434;;;3338:59;;;;;;;;;;;;;;;;;;;;3026:434;;;;;;;;;;;;;;;;;;;;;;;;;;647:3557;;;3474:479;;;;;;;;;;;;;;;647:3557;;;;;3474:479;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:3557;;;;3967:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:3557;;611:3593;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;611:3593:66;;;;;;;;;;;;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;611:3593:66;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:3593:66;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;2005:41:61;;354:109:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:13;1806:7;:22;2567:15:61;:32;;-1:-1:-1;;;;;2567:32:61;;-1:-1:-1;;;;;;2567:32:61;;;;;;354:109:62;263:443;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;263:443:62;;;-1:-1:-1;263:443:62;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:290:91;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:91;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:91:o;309:380::-;388:1;384:12;;;;431;;;452:61;;506:4;498:6;494:17;484:27;;452:61;559:2;551:6;548:14;528:18;525:38;522:161;;;605:10;600:3;596:20;593:1;586:31;640:4;637:1;630:15;668:4;665:1;658:15;522:161;;309:380;;;:::o;:::-;263:443:62;;;;;;",
  "sourcePath": "contracts/mocks/DexRouterMock.sol",
  "type": "contract"
}