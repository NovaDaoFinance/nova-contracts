{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "addApprovedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "sellers",
          "type": "address[]"
        }
      ],
      "name": "addApprovedAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fromUser",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "inAmount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "removeApprovedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "sellers",
          "type": "address[]"
        }
      ],
      "name": "removeApprovedAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "ast": {
    "absolutePath": "interfaces/core/erc20/IfPHM.sol",
    "exportedSymbols": {
      "IERC20": [
        2026
      ],
      "IERC20Permit": [
        2062
      ],
      "IfPHM": [
        467
      ]
    },
    "id": 468,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 427,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:24:13"
      },
      {
        "absolutePath": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 429,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 2027,
        "src": "94:70:13",
        "symbolAliases": [
          {
            "foreign": {
              "id": 428,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "102:6:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/admin/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
        "id": 431,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 2063,
        "src": "165:99:13",
        "symbolAliases": [
          {
            "foreign": {
              "id": 430,
              "name": "IERC20Permit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "173:12:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 433,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2026,
              "src": "369:6:13"
            },
            "id": 434,
            "nodeType": "InheritanceSpecifier",
            "src": "369:6:13"
          },
          {
            "baseName": {
              "id": 435,
              "name": "IERC20Permit",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2062,
              "src": "377:12:13"
            },
            "id": 436,
            "nodeType": "InheritanceSpecifier",
            "src": "377:12:13"
          }
        ],
        "canonicalName": "IfPHM",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 432,
          "nodeType": "StructuredDocumentation",
          "src": "266:83:13",
          "text": " @title IPHM\n @author PhantomDao Team\n @notice The Interface for IPHM"
        },
        "fullyImplemented": false,
        "id": 467,
        "linearizedBaseContracts": [
          467,
          2062,
          2026
        ],
        "name": "IfPHM",
        "nameLocation": "360:5:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 437,
              "nodeType": "StructuredDocumentation",
              "src": "397:157:13",
              "text": " @dev burn a user's tokens\n @param fromUser the user whos tokens are to be burned\n @param inAmount the number of tokens to burn"
            },
            "functionSelector": "9dc29fac",
            "id": 444,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "568:4:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "fromUser",
                  "nameLocation": "581:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "573:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "inAmount",
                  "nameLocation": "599:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "591:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "591:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "572:36:13"
            },
            "returnParameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "617:0:13"
            },
            "scope": 467,
            "src": "559:59:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "d2ac1c8e",
            "id": 449,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addApprovedAddress",
            "nameLocation": "633:18:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "660:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "652:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "651:16:13"
            },
            "returnParameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "676:0:13"
            },
            "scope": 467,
            "src": "624:53:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "ae643ed1",
            "id": 455,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addApprovedAddresses",
            "nameLocation": "691:20:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "sellers",
                  "nameLocation": "731:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "712:26:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 450,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "712:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 451,
                    "nodeType": "ArrayTypeName",
                    "src": "712:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "711:28:13"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:0:13"
            },
            "scope": 467,
            "src": "682:67:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "20f1d85b",
            "id": 460,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeApprovedAddress",
            "nameLocation": "763:21:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "793:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "785:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "784:16:13"
            },
            "returnParameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "809:0:13"
            },
            "scope": 467,
            "src": "754:56:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "49a8d785",
            "id": 466,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeApprovedAddresses",
            "nameLocation": "824:23:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "sellers",
                  "nameLocation": "867:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "848:26:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 461,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "848:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 462,
                    "nodeType": "ArrayTypeName",
                    "src": "848:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "847:28:13"
            },
            "returnParameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "884:0:13"
            },
            "scope": 467,
            "src": "815:70:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 468,
        "src": "350:538:13",
        "usedErrors": []
      }
    ],
    "src": "35:854:13"
  },
  "contractName": "IfPHM",
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20Permit"
  ],
  "offset": [
    350,
    888
  ],
  "sha1": "7593c903ac6e686157983b1348c80342947d31bb",
  "source": "/* SPDX-License-Identifier: MIT */\npragma solidity =0.8.10;\n\n/* External Interface Imports */\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Permit} from \"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\";\n\n/**\n * @title IPHM\n * @author PhantomDao Team\n * @notice The Interface for IPHM\n */\ninterface IfPHM is IERC20, IERC20Permit {\n\n    /**\n     * @dev burn a user's tokens\n     * @param fromUser the user whos tokens are to be burned\n     * @param inAmount the number of tokens to burn\n     */\n    function burn(address fromUser, uint256 inAmount) external;\n\n    function addApprovedAddress(address seller) external;\n    function addApprovedAddresses(address[] calldata sellers) external;\n    function removeApprovedAddress(address seller) external;\n    function removeApprovedAddresses(address[] calldata sellers) external;\n\n} ",
  "type": "interface"
}